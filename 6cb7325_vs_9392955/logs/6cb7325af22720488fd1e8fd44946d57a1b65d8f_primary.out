cset: moving following pidspec: 31945
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.321604413 seconds)
loading group "string"... done (took 0.611383986 seconds)
loading group "linalg"... done (took 7.190361276 seconds)
loading group "parallel"... done (took 0.159892381 seconds)
loading group "find"... done (took 1.122878113 seconds)
loading group "tuple"... done (took 1.788670504 seconds)
loading group "dates"... done (took 1.207495336 seconds)
loading group "micro"... done (took 0.295260083 seconds)
loading group "io"... done (took 0.914855695 seconds)
loading group "scalar"... done (took 36.709301384 seconds)
loading group "sparse"... done (took 11.063208573 seconds)
loading group "broadcast"... done (took 0.915554616 seconds)
loading group "union"... done (took 11.855188156 seconds)
loading group "simd"... done (took 4.145475178 seconds)
loading group "random"... done (took 8.515359822 seconds)
loading group "problem"... done (took 1.865349713 seconds)
loading group "array"... done (took 19.81272125 seconds)
loading group "misc"... done (took 1.64185265 seconds)
loading group "sort"... done (took 3.14389878 seconds)
loading group "collection"... done (took 16.434502105 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.482886554 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123178641 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114797307 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119163181 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.139799023 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11448756 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12276476 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083610257 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.783528838 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.144286616 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118668277 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.413043678 seconds)
done (took 4.931487184 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173241808 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082292543 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081292535 seconds)
  done (took 1.295690685 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06472702 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121343599 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066185682 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066681572 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066432548 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065999478 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06569824 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06581409 seconds)
  done (took 1.650574887 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072522137 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069055335 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068142416 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067869866 seconds)
  done (took 1.409643262 seconds)
done (took 5.735860042 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.764911338 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201466003 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187188024 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.396842866 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131979158 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.157469617 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.636966419 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.298663798 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187269942 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081323946 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103524417 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.319205625 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106834509 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.6447832 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075578098 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090003444 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137450646 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.401468129 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067089116 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082117539 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088712786 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127088954 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084950831 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074459693 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14493143 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067449601 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129971833 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080029122 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066516893 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.208197425 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172250327 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660047003 seconds)
  done (took 10.145717589 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096020448 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09730432 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068892787 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136339354 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09618076 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069358693 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070680647 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067036823 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08684542 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128036973 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088833274 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.1012252 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067291812 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070597797 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086593178 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.206731977 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08249654 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083723831 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071965441 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077469102 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.119335634 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080671741 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08049494 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080010037 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131454493 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180539966 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099242405 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098918045 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066699955 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080929379 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114813687 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125848921 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065651643 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066020292 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124994568 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094135064 seconds)
  done (took 4.627193648 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.286164826 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140707355 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089956753 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131201996 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064932518 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106862218 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06523483 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080506666 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.200285582 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.288044464 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.109913245 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.579280274 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11063001 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103786757 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07001382 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068018878 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066952268 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.34578662 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107457053 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101899822 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080334673 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069470739 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06832773 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340660098 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067104452 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063327998 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067593111 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057788222 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121974313 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06731705 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.920946134 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125342648 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066890282 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100492623 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.170197754 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087152017 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.195668227 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135823404 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068718645 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064550019 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.148631576 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070201553 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065744221 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083203018 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102859356 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112339503 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065712657 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066258888 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165422578 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064811737 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079382564 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.99902531 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152940067 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076247181 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064245454 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.243736185 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085635262 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069339743 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06446256 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.195936989 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137024997 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067013502 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066060844 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06781193 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068548405 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.34901863 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066237207 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.008130657 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070248231 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077853174 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06896449 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069853907 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072438611 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071955584 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085046798 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065773702 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075146032 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065795465 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065617254 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066774811 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083888567 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.359424298 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066031044 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068144762 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064388035 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085788768 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.0963096 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070667295 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064691338 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10000577 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063820186 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063764063 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.171290466 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06686854 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.102774218 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066965856 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084371382 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.06901253 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113037713 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068093706 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.084214746 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068492391 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099876054 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069869003 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101297332 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081067887 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068352392 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.397303982 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064748268 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065294689 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067702747 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065309979 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067820231 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066822602 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07979373 seconds)
  done (took 21.114974758 seconds)
done (took 38.306002157 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.271864902 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075180185 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075610244 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075387517 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075434296 seconds)
  done (took 1.794160712 seconds)
done (took 2.997816753 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119581225 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098951865 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063815956 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095365741 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064124577 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099243438 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098924933 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080501443 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099029518 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064259009 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096203117 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064282879 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064036547 seconds)
  done (took 2.333196415 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082162035 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082747159 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070967409 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084447573 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065551975 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083709354 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082623518 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090457901 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082676211 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073529932 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065041762 seconds)
  done (took 2.063339691 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081710643 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083449533 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06930026 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080630372 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062844179 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081033755 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080792001 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085201177 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080748104 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072758783 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063802841 seconds)
  done (took 2.037635955 seconds)
done (took 7.629143351 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077741445 seconds)
  done (took 1.264468161 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.590922648 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.101230453 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081181471 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112324 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183850256 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123322562 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.283328622 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08663272 seconds)
  done (took 8.929872461 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101866522 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071631491 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067999337 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069855135 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068430215 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068514328 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06980986 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072155508 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068910426 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068290586 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070789417 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069488217 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071461833 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070938827 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070821729 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071475637 seconds)
  done (took 2.409491139 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092435986 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09031053 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073556912 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07467346 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072158805 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072063586 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074189603 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073724021 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071001142 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071814112 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074437158 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073506526 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071508495 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065371258 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074069047 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075816885 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071214754 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074678045 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075126504 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074320932 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074893412 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064461293 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071568103 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074567332 seconds)
  done (took 3.072901108 seconds)
done (took 16.871031945 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111555149 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071553919 seconds)
  done (took 1.376223357 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081174679 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082017564 seconds)
  done (took 1.363597643 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082725614 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065251079 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090543113 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077734614 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066253101 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065804502 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087388409 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066207851 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066125102 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065931925 seconds)
  done (took 1.934728908 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068338444 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077848321 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070284586 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08087981 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074535869 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064115836 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073302926 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06865711 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077697287 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062727718 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070694508 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082378158 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071213534 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08397412 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072375564 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068391501 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070616052 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067156355 seconds)
  done (took 2.506950224 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065557237 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067137831 seconds)
  done (took 1.338757195 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066758378 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063059262 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066699791 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06697359 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063342974 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06268232 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063564994 seconds)
  done (took 1.655259907 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.39142452 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113418818 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.304098461 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072555398 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082891936 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250745732 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065454988 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070605665 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070174089 seconds)
  done (took 2.666927078 seconds)
done (took 14.049606822 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.0785275 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085020258 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096572856 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.363747962 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091616553 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065930333 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114249612 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190083513 seconds)
done (took 2.302738511 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209938349 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.60426701 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.38183451 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.19573287 seconds)
  done (took 2.390715604 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325930301 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.0867302 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060459798 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068596062 seconds)
  done (took 1.757190614 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066233989 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06934468 seconds)
  done (took 1.352413344 seconds)
done (took 6.926797889 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066082389 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085288685 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065521509 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064687905 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063705955 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065498871 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063470264 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063153304 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065896621 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067487117 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070232523 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066118715 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.066519659 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066285954 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06349901 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0649732 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067640812 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065511764 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065213788 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06535769 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067722368 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065129236 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.068764119 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064973225 seconds)
  done (took 2.849058052 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083575333 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065971884 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072130532 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07106974 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070520016 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07138184 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071286803 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067758995 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073340692 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070567172 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071736146 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071609724 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069554825 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072073567 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069806076 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072206262 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072633576 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067898691 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070609408 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072368932 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073349781 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068117803 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072035778 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072939613 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070728154 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069511598 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067892893 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066168874 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070717795 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069752298 seconds)
  done (took 3.355526069 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069550412 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06323291 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063958381 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070071479 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063951908 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064303537 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063418568 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064165327 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064621207 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06336168 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065091276 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063038868 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063970936 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064653978 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064272804 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066893891 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079385083 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064035548 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063949576 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06415702 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067004923 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063630048 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063659032 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063457168 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064339891 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063450275 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064292709 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06354329 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064408235 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063947456 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066383732 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066898375 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063672987 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.182278685 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066795252 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063445829 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067646282 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063050022 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.0640911 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062868764 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063062393 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063103842 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063546777 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07022528 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063194143 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064792703 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063770294 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064625958 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063919347 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.0664528 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.0627893 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062830634 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064710055 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064502646 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066939183 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062583897 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064227152 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063315554 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064713952 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064094807 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064608105 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064429795 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067314534 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065377895 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079410943 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071475675 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065170636 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.0664829 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065868747 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067452049 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066817789 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078340219 seconds)
  done (took 6.056006362 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091234991 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086584474 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065217777 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065556568 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061673856 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064050797 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06736364 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064072315 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065454005 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069803322 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064360377 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065454872 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065156103 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076478662 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064301604 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065282595 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069941127 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062243805 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065377419 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069359803 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065726343 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069555162 seconds)
  done (took 2.74253386 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153564088 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07020386 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105870605 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074870398 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069732431 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073635105 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071912475 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072002716 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072246703 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070544898 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070111685 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072506049 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069504088 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069929311 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070025727 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070159083 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071594247 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07000549 seconds)
  done (took 2.631009954 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076960466 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065484531 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086581348 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068130689 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067555413 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06989732 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072777173 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076334881 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.070437991 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067683922 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.076486253 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070080365 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070233859 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067678242 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070105514 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067505573 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069913871 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06767057 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075902691 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07251408 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072427614 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076695373 seconds)
  done (took 2.810634059 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079339386 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067541896 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082101604 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070394589 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063608868 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066100669 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071958688 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067806005 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.0720009 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069531133 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067781521 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066096832 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071504344 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067603733 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071491276 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067587421 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069667857 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067610666 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06924778 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063684937 seconds)
  done (took 2.625866571 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086686981 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067982832 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068804065 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0777659 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069374955 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069392326 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07700853 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069255807 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069351695 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091786714 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069054612 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069069354 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077786125 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074260606 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069816025 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07698165 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077231555 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076735947 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068911668 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068956972 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088976071 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068864967 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076935402 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06878804 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068991887 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068983292 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068731062 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073858527 seconds)
  done (took 3.295263051 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065889918 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0656436 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062867321 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063119941 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063369704 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063212493 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063478226 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063253056 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065859727 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06448846 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067594258 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06736652 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067688708 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067789077 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067549678 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067748776 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067697539 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066132682 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065374252 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065714724 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067349451 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067586772 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067536949 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065381813 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065171576 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06766843 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065098474 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06515197 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067209294 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064886426 seconds)
  done (took 3.212873418 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074959527 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073403206 seconds)
  done (took 1.387550728 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.0626097 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078959867 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063021146 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070193222 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070618057 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066269084 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073407969 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069725514 seconds)
  done (took 1.78947977 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080937462 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078545666 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069271671 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082023195 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078248206 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084822095 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134888479 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069536547 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074783208 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063941802 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079583225 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066049887 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073252465 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066487578 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071644288 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072200156 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063924771 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071935897 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068508604 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064919908 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06774003 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074787136 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068491844 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06226922 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069036206 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09041601 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07995702 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067426217 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069560052 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073870713 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072357372 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060762888 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065585176 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066639437 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064511623 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077282896 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083483649 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070418311 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076409187 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06906981 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07806834 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061716228 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07090619 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073904182 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077696435 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068242775 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06902622 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062712393 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065427827 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070083072 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062768713 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068108308 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062706516 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077284251 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071305433 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078484438 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06676622 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069329987 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070425436 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070919623 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074753093 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068761768 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068805291 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066093917 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07317719 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070229333 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075407576 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061427525 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060238466 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063991339 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075339902 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088206521 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07223211 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06765112 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069087965 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065780927 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07096997 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069220432 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07351815 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074283681 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068277532 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073558506 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07449279 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066997083 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070161778 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07616318 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066131924 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070551241 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065814234 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084839138 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066773686 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066004791 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065636516 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078504248 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071328177 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067507201 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066101451 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074912568 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061956613 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067920952 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068026044 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066767637 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075634929 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069337761 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070192629 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073243396 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072376364 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064860887 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067723693 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061812376 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065856619 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064684948 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073503224 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061068269 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069499356 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068116571 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06773435 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.202156132 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06547855 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067605614 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073833489 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072333384 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065599131 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063626506 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069425448 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068029867 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071426595 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074264372 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064850989 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061989069 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061907392 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070103642 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066012245 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069856454 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071175998 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069352319 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061286735 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064816816 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071596821 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07454823 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066831106 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066813497 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072939724 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067631471 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065584692 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072782088 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068519652 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065727746 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072262755 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067588595 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061917544 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06934897 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069086537 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065534527 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070397932 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069466433 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069009902 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067279557 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06522486 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073611733 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067561247 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065693625 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066728224 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065091477 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076749238 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06820716 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061823202 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063013816 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075459425 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064394008 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065904395 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065522762 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068284577 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066786016 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064496481 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065737451 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068245722 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076098964 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070807083 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067335698 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071699624 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079378456 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067547349 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07041821 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067502546 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069628162 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069060643 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076960764 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073984585 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073315717 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070823652 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065242878 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073857858 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075885879 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067812859 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066100753 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067228827 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072593016 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074316878 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072481869 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068982065 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06622779 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068864007 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070269237 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069440838 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065676086 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065490832 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07321074 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064758577 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07336885 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067421033 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076267968 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069444753 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061254629 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069272939 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064520794 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071912807 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061259414 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065352681 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066160039 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068330295 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066297532 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069744102 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06104412 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073726024 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074186128 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067408465 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066398151 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066492918 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074008817 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068624801 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069803602 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068609042 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07122026 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074938544 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064317094 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068305517 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075004887 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.0650721 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.188425417 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072668375 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066142924 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065667737 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065345073 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064527233 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071061274 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0759682 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072871215 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06121014 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071023859 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067026805 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067466332 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062855128 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072551444 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069917111 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068056787 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073509513 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067411433 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067187749 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070487875 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06583717 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066930362 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069702214 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071875337 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069091259 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070383171 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068105361 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071920031 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067335562 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066018211 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070550688 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06882743 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.0683844 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073245819 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066085598 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0670492 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069280121 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067354215 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068881505 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069159912 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067609897 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072071455 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069247843 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068737617 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070749589 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064071244 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075340462 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067665957 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07611435 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068334787 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064409039 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074685615 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068615879 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072028744 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066654433 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067001962 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068034065 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067277626 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071145258 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075180769 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066171118 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079350711 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076059761 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068928029 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070981614 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067885595 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069854617 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067245579 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069169238 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069192432 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06826317 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067622216 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072691262 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070661015 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067877069 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069456862 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068645019 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067949429 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068823922 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062249055 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06678956 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067138297 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06793656 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077773525 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068340145 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067205297 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066783201 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068811663 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066899124 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064697957 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075189641 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075513141 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066615951 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073515799 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065580979 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067346844 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077072045 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060317055 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064233696 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064171025 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064330157 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073773387 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068040105 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077463972 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067315753 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066686415 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06481173 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06798277 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065965295 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061280064 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064642103 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070475603 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065983799 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065956514 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06541343 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068401625 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067311232 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074984373 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064215469 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065681978 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06503408 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062066784 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064326584 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064348922 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.200121876 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068371574 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067045197 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065865095 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068144876 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069107987 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069690302 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068292315 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070268424 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078482134 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068126374 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070544931 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070105881 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062216439 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070046757 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066666183 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066141535 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065765908 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070118381 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070694258 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067511069 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074756114 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066359327 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066891963 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066651639 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064586329 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065627929 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066488969 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066178967 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066653386 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069573753 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076283081 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066075685 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071407459 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068206403 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069807358 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075258458 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069754267 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071266325 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074984531 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068686856 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069652517 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076867305 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072505345 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070445301 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067220392 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067788436 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07194449 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065537752 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073094818 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066715833 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067923241 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068180628 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064171056 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066325498 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065899403 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065290244 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072199053 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066854571 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065576126 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065084316 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064816101 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069155151 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071798249 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075551289 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070272038 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070622719 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062712295 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065058223 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069486176 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066105054 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069656996 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071088258 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073678508 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069993216 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068196072 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066605639 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076840551 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072566723 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070972794 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065781349 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071404712 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068636467 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069917068 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069077498 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067814729 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069060358 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071855823 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069538941 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067395991 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075420225 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071734163 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068974603 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068869148 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067574299 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066730361 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061638365 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067198048 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068741682 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071386499 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068595193 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066435682 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076820921 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06391005 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066547779 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069382396 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065661961 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070139598 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061051099 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067178941 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066563057 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066312369 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060443173 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06465528 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06325165 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067657245 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064276892 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060416597 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075064213 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073708813 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068045945 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064008704 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063893114 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060653962 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060342266 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.196544925 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067788734 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069271327 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076843318 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066224755 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065935601 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062253615 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066594272 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069708526 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069471431 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063764645 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061763558 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065612207 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069415026 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071853613 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064683644 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066513502 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070091378 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068443173 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064453563 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070832414 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063466757 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069936085 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079160631 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067584976 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067240142 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072895304 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074661602 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067806167 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061699091 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067440371 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069144297 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067021726 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06723111 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067165978 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08162746 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069578894 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066043862 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065235495 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068356335 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065975844 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074766846 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067721837 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067675742 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070992664 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068386753 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075394793 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069499567 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074323766 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069888271 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069498046 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06510127 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06664205 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06454196 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065583951 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.0674272 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067221286 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071918731 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074821063 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066044788 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076229967 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075078742 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067999827 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06364851 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066552973 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06694325 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063476023 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068908272 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066420274 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066441154 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066013259 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066913956 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068806297 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072236825 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06690204 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066961637 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06570005 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060330948 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068071922 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068147946 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067734748 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064853046 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067788076 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069040181 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072107074 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070776369 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06473318 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069120984 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069632511 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068637854 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.0633345 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075285652 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0665155 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067972356 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065344056 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066425712 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066880342 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069683771 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071005204 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067257023 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06832529 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069678189 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068120123 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064011477 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063634259 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071461228 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063685041 seconds)
  done (took 42.913805464 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100382464 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063000725 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061758 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061692467 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07408963 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063083926 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062007592 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064301419 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065077157 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067269264 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064195587 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063422138 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073153461 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078233747 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074060706 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066765526 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061787966 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063000995 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061751124 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062708748 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070512248 seconds)
  done (took 2.758235095 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074094636 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070482996 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072494015 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075470379 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066974058 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07064402 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072446618 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070227573 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076058578 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06672014 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075827424 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070782499 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075311737 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066923172 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066847303 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070957129 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076001001 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067042588 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070526465 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072971747 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070681108 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07223404 seconds)
  done (took 2.885750865 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065819418 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065120561 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068082566 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063145186 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06769888 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06352743 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070931385 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065122569 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070857728 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066894793 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066552615 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066739396 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069216866 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062699371 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067618782 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065206792 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111491311 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071131541 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067366607 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067382038 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061412234 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067399216 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061482813 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061855091 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064989663 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068969324 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067745744 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066128207 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067052793 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066638775 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067479213 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065247219 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068824094 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06798628 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066501085 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066613964 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066961603 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067033682 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063173162 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065647494 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068359676 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063426601 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067939866 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06888874 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065286029 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065463896 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068714703 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067124442 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062370014 seconds)
  done (took 4.616397612 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07906616 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110000208 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068909727 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090422768 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082110266 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.077685426 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071147063 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091335457 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065169273 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065906673 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082633931 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080191965 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067538106 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070479441 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072885655 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065789553 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06766067 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064525451 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071372384 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067171315 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071669153 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074156787 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082096389 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081334054 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071397058 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066526906 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066701651 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07181269 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080134507 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071287383 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071520593 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072976958 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082852591 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072376001 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06631818 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069135552 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082983503 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067909989 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068875387 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063462204 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067482718 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069462563 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071896554 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081662449 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065667855 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070909281 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066037785 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064391107 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080367861 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069283112 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075624021 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081087551 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070901546 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067255798 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071784647 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081249688 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065402473 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06352614 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068070177 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077534091 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063311902 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.0687298 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078841289 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067056847 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072754045 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079095616 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070282509 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068880668 seconds)
  done (took 6.426396913 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074729126 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072240311 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079309089 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07951583 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071948817 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072243354 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072030591 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072287084 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071950786 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076686084 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072630607 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092803248 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067135394 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074882827 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07235803 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072203971 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072371677 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072041716 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07231355 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072035684 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07219617 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07985288 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071889577 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079866814 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097892884 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067342177 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072042549 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072357678 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08026303 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.0718641 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079883091 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072533162 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072429905 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080297578 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079364181 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071494795 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065261141 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07252052 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072011944 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071993051 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067408186 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080176108 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072232317 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068972402 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074384628 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073925036 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082433434 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08027109 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075932504 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078688572 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07272989 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080538731 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072549955 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071894171 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079910955 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104433512 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080217638 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080534662 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072123297 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079772664 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080141004 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085771822 seconds)
  done (took 6.037434726 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084223246 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074237292 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076018378 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060894975 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063763544 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069615442 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063928217 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063960996 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074406417 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074364504 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077328787 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069882533 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072625044 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076502527 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069770799 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072533397 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069763568 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069611503 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074218128 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069900249 seconds)
  done (took 2.763419989 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074234019 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082263072 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066127143 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073183077 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069933341 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073330063 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069777924 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070689106 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068763922 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070796971 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078183975 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077956711 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068511498 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073731549 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07784744 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073476248 seconds)
  done (took 2.497120738 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074629504 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072263391 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079392421 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066170803 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063950771 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063734406 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067121385 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063312799 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064318287 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079586759 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067850667 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070036074 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067646635 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065922155 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064636633 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070282364 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064221495 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065538648 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067728598 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080350793 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078937938 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066283119 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068359902 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067492061 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068105911 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072816636 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.0670915 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065707394 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064880545 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067812996 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068222164 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071150183 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064618719 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06525966 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066280266 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065086129 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066935733 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067957042 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070189478 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067610568 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065189999 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067089588 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067783169 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068745614 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063738054 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067655863 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063698739 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070175821 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065292925 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067074785 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066264037 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069052967 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066872708 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073909489 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070310615 seconds)
  done (took 5.082982254 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078837415 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069092712 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061756539 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063276421 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068303904 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067353384 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069077426 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067492234 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067422219 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063812705 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067258987 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067999202 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068405946 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071817916 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068869877 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070895507 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063423997 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069386789 seconds)
  done (took 2.565458915 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070605208 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066098459 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072626147 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065544896 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065533366 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067903774 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061588104 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06405486 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064973155 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067553518 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067444114 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068864797 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066090598 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070301108 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067711975 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067839236 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069677151 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066398315 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067559672 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063836928 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068985902 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064591064 seconds)
  done (took 2.809711903 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09178141 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080833421 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137734078 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078163664 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082750269 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071681491 seconds)
  done (took 1.878224161 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089071753 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078939531 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066281892 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087259077 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073614255 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067127129 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067113062 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067728857 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076190763 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076235416 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067362794 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076042826 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0759086 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076139242 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073832019 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07381466 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067720569 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067745242 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066350607 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084935976 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06822289 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076466571 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067854385 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067483539 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067536395 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07572662 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076290206 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076048798 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067242685 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076215131 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072958063 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067355933 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076476629 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076590883 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069218769 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076359875 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067921337 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084509115 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073401683 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07589145 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069088077 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073858738 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07616776 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072333442 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075836007 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067592256 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072345328 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067447603 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067503299 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08592501 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073145895 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074923191 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073164802 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076154103 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07566436 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085451903 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075773956 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075549972 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07323582 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078410482 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075213955 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072949964 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075057695 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076090705 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073330686 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075339182 seconds)
  done (took 6.218763036 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081256517 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085748591 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067910271 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077030698 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076130599 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067642315 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067787254 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067486803 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067454158 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06744277 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107476449 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068161723 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075882217 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075869895 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06802041 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067669701 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0680442 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075719628 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067301429 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086324918 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067821993 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075735819 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07587158 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075362639 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076157318 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073046678 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068029723 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067724047 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067475717 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067439359 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073225313 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068078103 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075771049 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067229777 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07564291 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069036935 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068057363 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072557822 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06757117 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073403848 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075803586 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08403354 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067445354 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067269032 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076801234 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069340064 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069391891 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068976733 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069513102 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069270839 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078221907 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078117906 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07829773 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077570501 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069547819 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068615157 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067470843 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068005797 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068319708 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074120899 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076889026 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069190625 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086785416 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067194276 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067277984 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07531689 seconds)
  done (took 6.158436472 seconds)
done (took 129.582478271 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184351281 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169098062 seconds)
  done (took 1.689782995 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067509474 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095656987 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076914479 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127239632 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066370581 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099333483 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098462753 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077873943 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066190117 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065794875 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065978669 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067579966 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130219652 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066406795 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066237052 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068196637 seconds)
  done (took 2.654787781 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096631311 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157336221 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099182211 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064668656 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096473604 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07269349 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064607246 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074705022 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071108043 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065406431 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072719866 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070647702 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065061332 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07045257 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071157528 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072954884 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065141445 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072860802 seconds)
  done (took 2.778694597 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099101053 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090019601 seconds)
  done (took 1.542181923 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159883314 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104950102 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149620899 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346078988 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167923255 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229561744 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127347072 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.12886024 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11644345 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124064584 seconds)
  done (took 3.004379448 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098137511 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151037969 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255213058 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115583845 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071954705 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094447129 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116448802 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077343689 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080835733 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080544139 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080518923 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076358447 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099250502 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073669926 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073422802 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075771146 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104192628 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074434459 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075996119 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079522621 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.102870502 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067667043 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075871901 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074769018 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080042678 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080134471 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067648568 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067285086 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079354666 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076012516 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07917257 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.095306302 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079336671 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108231022 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069991028 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10802726 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07622929 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074414834 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073525884 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07469059 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079903655 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081208576 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073818346 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078332329 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066950551 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078711801 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067202833 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067954049 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080833025 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069002322 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080763846 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079449613 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.110643627 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06894731 seconds)
  done (took 6.027821684 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10035259 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104120833 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073115006 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108171113 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097189709 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071465374 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10063808 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090409149 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102124657 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092573223 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088531798 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070869852 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081719333 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082732486 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109615397 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10149868 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095440589 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070729033 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100940325 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102226226 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068747712 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094628773 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090725135 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100906742 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067433833 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070283293 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067994502 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070870954 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076321085 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077981454 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070246567 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.101387142 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084201549 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078304206 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067288875 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06831827 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068666993 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079898388 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097106988 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078417788 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077943945 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067474684 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068202484 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070008748 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090298982 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067389844 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078571034 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080780246 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081674665 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071772342 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072522421 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070203919 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071683652 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08184309 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079408264 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083556217 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082437272 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070533605 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070729966 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073492559 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082543648 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078774253 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078630357 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092603436 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079973121 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070709779 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083377804 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087803523 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071045691 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072208338 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070432747 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071641703 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071683645 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080220474 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080254195 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071822952 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072004349 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070617331 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081897598 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080029527 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070588872 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078037072 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067081979 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068807402 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070065725 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070014865 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077513854 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079284998 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070229799 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067968607 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068969749 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067696084 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066299747 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075002013 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078358783 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077172973 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077024121 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068882553 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077444218 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076629759 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069010576 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077379007 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.196937399 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070879062 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070307785 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078663944 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079301245 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079950377 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069511567 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069449321 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.080742803 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08268008 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071965197 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078962281 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080712062 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079564371 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068462103 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08106104 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069148858 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079911722 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069948461 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080498813 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069134174 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078802158 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068838044 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06770236 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068478204 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.08166076 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0714871 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07051273 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072569429 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072116754 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081673252 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083578846 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070996463 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080360431 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078858766 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070189026 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078415428 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069109881 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079044386 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070394905 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070808385 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06748125 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081898688 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069606509 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068514088 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070396249 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080634361 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068886326 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079269841 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078447723 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068061866 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081289628 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079282635 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077348806 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079377774 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070289443 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070964034 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069888886 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071754855 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080155604 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082640095 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07263221 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070446279 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079593337 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082883889 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067395928 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077896376 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077986295 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078001618 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068871298 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071404885 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080887658 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080370404 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077548181 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077621318 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07806637 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068468921 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077170109 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07783892 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068174043 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084062519 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068888602 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081931504 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079078484 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076044631 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078770426 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081001339 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080699107 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079980452 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083382121 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067708163 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068141658 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079275119 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068785846 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068910447 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076270403 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06909594 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069446771 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081181348 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067415557 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077736136 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066275023 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07677538 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065985107 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069086813 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080719647 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067371081 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.201199467 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081228252 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072330686 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.080218268 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084251968 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078638375 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06905653 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072085805 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083347433 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.08209193 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069757225 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069624579 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071760654 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079435929 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077056991 seconds)
  done (took 18.872087883 seconds)
done (took 37.930001455 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.212078438 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152304939 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.181267542 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.1194163 seconds)
  done (took 2.119681564 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123987662 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104934262 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.099294291 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067655293 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.106728548 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06781636 seconds)
  done (took 1.965666161 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.314725635 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213200445 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183318103 seconds)
  done (took 2.105845357 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.204574582 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.194105603 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.405133785 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.259685352 seconds)
  done (took 2.564310309 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.150139556 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093126336 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069808668 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086669298 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.139935293 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.16525803 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10326378 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126990612 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078179853 seconds)
  done (took 2.458150184 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148336419 seconds)
done (took 12.760288419 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.180677849 seconds)
    (2/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.254035988 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.127161155 seconds)
    (4/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096285115 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.194015826 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.106676445 seconds)
    (7/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.240927774 seconds)
    (8/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.084552044 seconds)
    (9/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.179087539 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084832962 seconds)
    (11/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.212476284 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080172873 seconds)
    (13/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.14157812 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075933292 seconds)
    (15/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11315278 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171890215 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.141834348 seconds)
    (18/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.101791848 seconds)
    (19/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076311458 seconds)
    (20/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.200158012 seconds)
    (21/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.180629585 seconds)
    (22/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.169926047 seconds)
    (23/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.101233231 seconds)
    (24/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.081558986 seconds)
    (25/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.16107735 seconds)
    (26/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.089493183 seconds)
    (27/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.171250562 seconds)
    (28/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.159218843 seconds)
    (29/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.103826138 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075192577 seconds)
    (31/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174273141 seconds)
    (32/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.199927318 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073268342 seconds)
    (34/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082419794 seconds)
    (35/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.153115629 seconds)
    (36/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052928314 seconds)
    (37/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069041382 seconds)
    (38/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069282377 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098072729 seconds)
    (40/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.166625488 seconds)
    (41/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082131308 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065807743 seconds)
    (43/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.175390343 seconds)
    (44/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.108590173 seconds)
    (45/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.205673383 seconds)
    (46/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.166981614 seconds)
    (47/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.15104028 seconds)
    (48/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052200764 seconds)
    (49/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.154219554 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166043045 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073003036 seconds)
    (52/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.1766123 seconds)
    (53/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.082713289 seconds)
    (54/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075084321 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.091174539 seconds)
    (56/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.134746026 seconds)
    (57/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.166243434 seconds)
    (58/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075175626 seconds)
    (59/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074905184 seconds)
    (60/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.134420598 seconds)
    (61/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.19652375 seconds)
    (62/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076900321 seconds)
    (63/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074102453 seconds)
    (64/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051086458 seconds)
    (65/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.099065334 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090865662 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068118603 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066596825 seconds)
    (69/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072452448 seconds)
    (70/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.061933565 seconds)
    (71/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.183206038 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.174128191 seconds)
    (73/309) benchmarking ("sort", Int8, false)...
    done (took 0.13914091 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.1396215 seconds)
    (75/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078745322 seconds)
    (76/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.163651356 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.237143212 seconds)
    (78/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075570308 seconds)
    (79/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051680754 seconds)
    (80/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.152343748 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.114454267 seconds)
    (82/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091076547 seconds)
    (83/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.097224537 seconds)
    (84/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076360211 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090303857 seconds)
    (86/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071224166 seconds)
    (87/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.150911007 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.122492728 seconds)
    (89/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.187652612 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.067125521 seconds)
    (91/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073195378 seconds)
    (92/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.196703793 seconds)
    (93/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.05116628 seconds)
    (94/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051603991 seconds)
    (95/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.149473949 seconds)
    (96/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07625068 seconds)
    (97/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071413949 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090360714 seconds)
    (99/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.297400231 seconds)
    (100/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06605543 seconds)
    (101/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.195855327 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141353071 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053581741 seconds)
    (104/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078292751 seconds)
    (105/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054427339 seconds)
    (106/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.054795712 seconds)
    (107/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.155156949 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074673214 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134525437 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097394734 seconds)
    (111/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051169899 seconds)
    (112/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05230818 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.095987112 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072741829 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085959654 seconds)
    (116/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.098996905 seconds)
    (117/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.150288572 seconds)
    (118/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071047271 seconds)
    (119/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065468327 seconds)
    (120/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081009249 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136381046 seconds)
    (122/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.177465039 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128094162 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.137738993 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087093375 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.075594319 seconds)
    (127/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.0603646 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093357619 seconds)
    (129/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072406467 seconds)
    (130/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077429535 seconds)
    (131/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071562701 seconds)
    (132/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052226752 seconds)
    (133/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.109728948 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 0.133378713 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073180345 seconds)
    (136/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073155559 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073797779 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.14584978 seconds)
    (139/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066848203 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070116098 seconds)
    (141/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074155574 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.090415096 seconds)
    (143/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068361728 seconds)
    (144/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.15495209 seconds)
    (145/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084838177 seconds)
    (146/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064701196 seconds)
    (147/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072431726 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.105040994 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088643396 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071917977 seconds)
    (151/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050867151 seconds)
    (152/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052271672 seconds)
    (153/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090035619 seconds)
    (154/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052816559 seconds)
    (155/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066888029 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064980889 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064856366 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072498998 seconds)
    (159/309) benchmarking ("sort", Float64, false)...
    done (took 0.124648712 seconds)
    (160/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.05238835 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065088867 seconds)
    (162/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072920271 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.075494281 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073365926 seconds)
    (165/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065863484 seconds)
    (166/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052440307 seconds)
    (167/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.05183998 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065176381 seconds)
    (169/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066815082 seconds)
    (170/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053204198 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.097274877 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113181279 seconds)
    (173/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.172508071 seconds)
    (174/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068479979 seconds)
    (175/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065619479 seconds)
    (176/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.106359345 seconds)
    (177/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07734333 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.194592883 seconds)
    (179/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066167932 seconds)
    (180/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051114565 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064622279 seconds)
    (182/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052636596 seconds)
    (183/309) benchmarking ("sort", Float32, false)...
    done (took 0.126238156 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.087519197 seconds)
    (185/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050658841 seconds)
    (186/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051792733 seconds)
    (187/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050239289 seconds)
    (188/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061060711 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.228323269 seconds)
    (190/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173870269 seconds)
    (191/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052022827 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054117261 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066156074 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074485079 seconds)
    (195/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072422287 seconds)
    (196/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.149473858 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093138032 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051679338 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090093525 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065355094 seconds)
    (201/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071873507 seconds)
    (202/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051972285 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064651384 seconds)
    (204/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05138404 seconds)
    (205/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061948315 seconds)
    (206/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060993906 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090673264 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075508388 seconds)
    (209/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072703779 seconds)
    (210/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07242545 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074574765 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072923086 seconds)
    (213/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064680683 seconds)
    (214/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070455516 seconds)
    (215/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069192535 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067132604 seconds)
    (217/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051355173 seconds)
    (218/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095498816 seconds)
    (219/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061137853 seconds)
    (220/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106902597 seconds)
    (221/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081502984 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070684343 seconds)
    (223/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066870529 seconds)
    (224/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052484229 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064130102 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089003793 seconds)
    (227/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073116658 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065767328 seconds)
    (229/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054956376 seconds)
    (230/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067812902 seconds)
    (231/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066232532 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.134157209 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.131883524 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.107711053 seconds)
    (235/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077906634 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072815673 seconds)
    (237/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.05270058 seconds)
    (238/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089069999 seconds)
    (239/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06786213 seconds)
    (240/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068216022 seconds)
    (241/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052551951 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133726598 seconds)
    (243/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065163708 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065376329 seconds)
    (245/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067999683 seconds)
    (246/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053131934 seconds)
    (247/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053333818 seconds)
    (248/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065801892 seconds)
    (249/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064999086 seconds)
    (250/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080238489 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.108705934 seconds)
    (252/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051596194 seconds)
    (253/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071581632 seconds)
    (254/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052259325 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065269072 seconds)
    (256/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052706467 seconds)
    (257/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051145613 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064819746 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072601168 seconds)
    (260/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051928077 seconds)
    (261/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064281523 seconds)
    (262/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.156627617 seconds)
    (263/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054330648 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064566951 seconds)
    (265/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066929261 seconds)
    (266/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.0639749 seconds)
    (267/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067280319 seconds)
    (268/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051205998 seconds)
    (269/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051227419 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085940118 seconds)
    (271/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065711108 seconds)
    (272/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051416981 seconds)
    (273/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.0525607 seconds)
    (274/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065289274 seconds)
    (275/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087247075 seconds)
    (276/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.0724667 seconds)
    (277/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064113414 seconds)
    (278/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108114371 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.098461126 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063809145 seconds)
    (281/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052357018 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086382334 seconds)
    (283/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071577457 seconds)
    (284/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072388558 seconds)
    (285/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.0513422 seconds)
    (286/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051248655 seconds)
    (287/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051055254 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065131063 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065409352 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.10797926 seconds)
    (291/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051910343 seconds)
    (292/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183128757 seconds)
    (293/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072004511 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070460956 seconds)
    (295/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051468345 seconds)
    (296/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079011971 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088817977 seconds)
    (298/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072210142 seconds)
    (299/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051408055 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.106844329 seconds)
    (301/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073094981 seconds)
    (302/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053494013 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070743779 seconds)
    (304/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060507333 seconds)
    (305/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051196364 seconds)
    (306/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067367806 seconds)
    (307/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069105915 seconds)
    (308/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.0706887 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086045263 seconds)
  done (took 30.65563738 seconds)
done (took 32.060881125 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084325302 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092131908 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074077361 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092182459 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080878441 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076507844 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072438383 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078305306 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080080413 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081693079 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078366476 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054986986 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073768367 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074068958 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074595353 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091489651 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077767801 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072972597 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072688244 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064675208 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072722207 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065315453 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066910249 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054855386 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077473016 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071244793 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072076696 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07354214 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065600486 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065600538 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068365271 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07291258 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065750349 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077572898 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071338599 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072402129 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073961168 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075746497 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067233844 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065467662 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073318857 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065782234 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072380326 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073050119 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071692529 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070704004 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07273096 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077768743 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090952659 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06761705 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073847452 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075346969 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07652994 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072244406 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069060087 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072772954 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070568991 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090849922 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073263009 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067946749 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073757138 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073397571 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070861689 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072496766 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072788671 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07527828 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075203387 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070872676 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073856191 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070407424 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065363327 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072545163 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069047299 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065357691 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075188897 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076075727 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064169788 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07092872 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072013867 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071520681 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064420716 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06753427 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067084661 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071079878 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067134778 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054328533 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068826626 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.0712893 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064466197 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072986456 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071540706 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071904511 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06695187 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074984618 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064422565 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07007646 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065055728 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065047261 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066673165 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069265807 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064681621 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067486774 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07358944 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066462065 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070773091 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078984441 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064919402 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071188014 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064237038 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064624809 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078902899 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074095279 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06486521 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06764205 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064043745 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071317205 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064242659 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065027406 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064581832 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06492252 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070005844 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064127341 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066347357 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071094574 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075656306 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06378761 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067888491 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066069859 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064448626 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069368257 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064404828 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064669717 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.201480897 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06192392 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068493509 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065772758 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072975827 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06746476 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072570496 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066854482 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073998362 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069612815 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071170561 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070404323 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064412903 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058595159 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067753236 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067830294 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067049442 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065790731 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067031619 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065424807 seconds)
done (took 12.401485988 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065976155 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142764989 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098158686 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095018675 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.0859768 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066078223 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075974995 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101610968 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067499383 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102449672 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087059264 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084886362 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112485438 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064787228 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065659058 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069320269 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067217429 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081179254 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100565286 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086503735 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.109255836 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064830174 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094813848 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090309622 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087174792 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092147735 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066576537 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069928166 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069812613 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101713137 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087467514 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070535927 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067418736 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102606929 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09218018 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083656909 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066290178 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082235416 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06699134 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065876131 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.081417665 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097921789 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080228033 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079993898 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069607567 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068807634 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066771176 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.0836594 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088881741 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078718323 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086548716 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103247393 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068532355 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065421039 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064516908 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08625674 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065534462 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068521004 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065931455 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067700767 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065922016 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069263707 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080999258 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.086522649 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069635894 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080406449 seconds)
  done (took 6.809104067 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083888366 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088880664 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082548179 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083348579 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065075953 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066664196 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066589913 seconds)
  done (took 2.034479902 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067218551 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088812549 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088847114 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088625232 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084370928 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088818929 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078365119 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068654868 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.083611906 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069423147 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090367777 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105486701 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.07028859 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075838694 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094032118 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.0691683 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092911734 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067379352 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070520917 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089751907 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068291881 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081759674 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069811175 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066848312 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080563135 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068574337 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116166387 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071898422 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070152632 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071546401 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066645764 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.110190618 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08299766 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078136463 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068699729 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083227233 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083645653 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067173101 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085172671 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074240025 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083016387 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068961548 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068957965 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065271214 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071150672 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076875777 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067880755 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067087198 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069325325 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086412883 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067358706 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080037004 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070033684 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069057618 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067551653 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070033909 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076126863 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066970675 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085936031 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067702214 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082834655 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082392877 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080092464 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082372452 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068951923 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079441769 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079781023 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068968036 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068150076 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069368076 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08223403 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064850519 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067992476 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077198869 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068074774 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089739078 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089237738 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067930826 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075951253 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067140781 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066743858 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066736827 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088732701 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068683321 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066092734 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070592843 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069125444 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064934902 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065528828 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070093877 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064609047 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067879762 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069168957 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069387607 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069227118 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082415827 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068436283 seconds)
  done (took 8.832206035 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068216343 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067233739 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069019539 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06739925 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067218578 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067850465 seconds)
  done (took 1.930801046 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093356402 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069859137 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079937451 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072000349 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104097737 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086993984 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087341219 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078962023 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083732384 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079068635 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086663979 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088201452 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09271609 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072890822 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086433989 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072051602 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086992261 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075679345 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078473049 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073292376 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087047023 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07292366 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073187977 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081399968 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076354161 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072320289 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067557022 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07905336 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078475071 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079015076 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072533186 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076231079 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070654577 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07887219 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086779986 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070446384 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072145675 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077364782 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072656669 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07550919 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088072395 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073317539 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074781522 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077058997 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078473925 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071170564 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07708433 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076121307 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08635737 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077100001 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077292222 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071704192 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.0757643 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077025928 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070334813 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07877432 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077714696 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086547966 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072380706 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070316489 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06905785 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075220414 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078098128 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075151291 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079311071 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077033756 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070074909 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072295568 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072570716 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071183916 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076844198 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068910551 seconds)
  done (took 7.094491687 seconds)
done (took 28.186756579 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542179872 seconds)
  done (took 2.033833921 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.601004783 seconds)
  done (took 2.115691063 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.612227023 seconds)
  done (took 8.122624723 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.39215018 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.473405119 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.689419983 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132438695 seconds)
  done (took 3.245499098 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.675803018 seconds)
  done (took 2.197258933 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208229988 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196005832 seconds)
  done (took 1.937867771 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376384508 seconds)
  done (took 1.891222552 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.10277064 seconds)
  done (took 2.61906258 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.262401093 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162824519 seconds)
  done (took 1.943045518 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.456958533 seconds)
  done (took 1.972481586 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.839296069 seconds)
  done (took 6.356221237 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204854761 seconds)
  done (took 1.768704937 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238176985 seconds)
  done (took 1.754828491 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.676503414 seconds)
  done (took 3.194314807 seconds)
done (took 42.673813555 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080917011 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08125202 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081181028 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079233653 seconds)
  done (took 1.827990573 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076622458 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072735802 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077275251 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072791506 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07605634 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072244258 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074304089 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077011561 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072022999 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073431824 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072815331 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072463143 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075072813 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074861311 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07172505 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074832708 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076059933 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072557278 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075841832 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072524717 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071516367 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074989275 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075144188 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072232038 seconds)
  done (took 3.298631434 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077961367 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073405307 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07472441 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072195939 seconds)
  done (took 1.824859087 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078257798 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09208941 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089170709 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077380214 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09240526 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08627817 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069178521 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069336943 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073524801 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077069022 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067981635 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096228607 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087735445 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076983337 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079178076 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066279246 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068688567 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087045216 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077371374 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077823217 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070915871 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077375725 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068526239 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088371105 seconds)
  done (took 3.4184843 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077975603 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103207953 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078622753 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087934728 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09023874 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065671744 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074440089 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089369482 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123853441 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065608039 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070253796 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06577806 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072647023 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065543876 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076644116 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105268457 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108422231 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068648218 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096299408 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065862908 seconds)
  done (took 3.18486633 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074346674 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.06962903 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065575787 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069171758 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077684431 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.0733193 seconds)
  done (took 1.963980859 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069218471 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067698207 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067508301 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066820002 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072708136 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067073423 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066167854 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067738609 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067941871 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067173595 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066987121 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066120237 seconds)
  done (took 2.343122097 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.429786497 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068718194 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070373085 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06622164 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071395353 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066620544 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080163122 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067974066 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090940333 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066963367 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066989403 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068812831 seconds)
  done (took 2.746793664 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207464807 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076380253 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237595705 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137700136 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111916363 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116652537 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104606738 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113916842 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14400153 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103335048 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168526656 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167063424 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107478499 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138573594 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089578086 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098181459 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156155633 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163227799 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103971398 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166532182 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144195949 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125841777 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147739393 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101310321 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106280286 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12215506 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071121945 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080310394 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171410117 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132653481 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14708403 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112118839 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09441011 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177198172 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172158053 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14265101 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134629752 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084138403 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103256792 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133012766 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201914287 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088220223 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162669624 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247372329 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082173017 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13425708 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121319983 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120266438 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10759032 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090643605 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145954735 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185605082 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140170422 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086727189 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112743026 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116356582 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116019437 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103843186 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182322498 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161671199 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128772872 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071546475 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099245341 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154041883 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131672156 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109163404 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127702276 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094570437 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133818984 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154914492 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119178257 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144601801 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128681974 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088840865 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11951794 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1402821 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12961638 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171380796 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125413958 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073355857 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125518282 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10399173 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081955124 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143090653 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075743035 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177224275 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102282377 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107785187 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113453645 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109254857 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109312508 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161826694 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142660721 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245235637 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066687828 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104364467 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120759276 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149150863 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087618099 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108854094 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116947353 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078678259 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140632794 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075498134 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123737786 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075303616 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125697411 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132892781 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075766732 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122464005 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102385248 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100704281 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134367318 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159896274 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089351885 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082092902 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167115869 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122362004 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104542494 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144650983 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15590355 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099863319 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102427122 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150460639 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179494286 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089484613 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163543471 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108159275 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084201352 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088114513 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124927038 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113187031 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122971212 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082350116 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120078171 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169655265 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075334865 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09594715 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134188476 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079058156 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080886618 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103498726 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100622962 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095333423 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.1006096 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105156829 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137387509 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123665579 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103919402 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27150742 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099350792 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171482959 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089587802 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101018615 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105257344 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070362836 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138194528 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158102252 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079750733 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166642864 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123704574 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105812958 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118956447 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083274203 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140532136 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079135616 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07106817 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144686317 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110873524 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109783714 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152719227 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104832105 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127767866 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121311584 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135152942 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132452557 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129448567 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105812752 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087974616 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111539615 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125759988 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073128759 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09201454 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080541348 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104188651 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095878906 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083944916 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143360266 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125790363 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100796847 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112224642 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096833404 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148368072 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077161965 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129668974 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119342558 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093961415 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152328371 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152651686 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131820126 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099432549 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145307668 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07024713 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07362608 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088209077 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121467642 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081909012 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082345376 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114901228 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143957427 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12634836 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133774944 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109408837 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118151953 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151626506 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068704418 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.113905307 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143836888 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11790524 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102978572 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086671661 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095472372 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135167708 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102683116 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170087521 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108867372 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120696145 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144295843 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.096133955 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076944322 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098479238 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12792571 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098549461 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136309019 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100646028 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084821239 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104426097 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.071566948 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09490996 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119892302 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112966845 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128142345 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.109109195 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124239763 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074227825 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110646035 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114752824 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115216781 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.062269286 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113219446 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152106636 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089372622 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112746172 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144450584 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07662413 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.119783922 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.432375619 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149449257 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087766906 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112428517 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122722737 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129969412 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122896848 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142477769 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110226832 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138439265 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11064955 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08669032 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089120659 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099379884 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107322905 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096267894 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109641821 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.117015128 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096302865 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133657521 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104383471 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110059189 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119257017 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097810377 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090820303 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098029444 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177065948 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120630098 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173096867 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099641456 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146807464 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165637593 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075362098 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080252263 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078826728 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140612467 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084461631 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131756839 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098059872 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106207564 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125147492 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14271271 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095113795 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068709156 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109481427 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135004896 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112357868 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099566462 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106864826 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162486989 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100848634 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07928258 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113624896 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104760421 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102106121 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324191556 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062526579 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098929946 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076529632 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081087521 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129362553 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153638392 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080757754 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103055976 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119384737 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111580062 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127863386 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102268799 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099762083 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115315153 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151874486 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130955397 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090494349 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112899019 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130713326 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157819013 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106106808 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09641475 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173002179 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17051589 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.16188485 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089266743 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115124758 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114636863 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109215066 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140340567 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083888189 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165076156 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082072433 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137136193 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104735184 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090800832 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130948275 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099271291 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08890435 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148643756 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118638682 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083039433 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078418461 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118956915 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121282256 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107292556 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075364221 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138809503 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073381256 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132601578 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1691626 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081570433 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104663233 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245897306 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080941906 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109695326 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10324117 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089996701 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098737678 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173945366 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089941172 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150042743 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142824379 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113809849 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138080251 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100555504 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636502868 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079054897 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152401506 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116960886 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173549745 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097881629 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11800582 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109727252 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124940052 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145359812 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105940662 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178503704 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133134205 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116886735 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080407399 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103224871 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10356483 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089447413 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105872079 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114448868 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116722872 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094531073 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117173799 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124533573 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082164098 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09592208 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157571821 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117539075 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145749919 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141194931 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085207378 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118092002 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138193552 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080272394 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122454504 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152883487 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106834965 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097894181 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080578545 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.251062187 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173608339 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073950743 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163816353 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120337073 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110251865 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114464808 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114963144 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132311412 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108024695 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12253129 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095050007 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111479956 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113338406 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082228092 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077448913 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105006064 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112854893 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098354664 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099089432 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098496341 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152459952 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071667682 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095981749 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103865617 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146634079 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175223184 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088854762 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083543894 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119658201 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113542324 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114344585 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122020652 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080075933 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083081301 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082422307 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077693917 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109355322 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113083428 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105244877 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112027448 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164593327 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083236776 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227513203 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096075476 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105092456 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069865886 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078944819 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096671394 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097960544 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108807883 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100997048 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169853574 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094703032 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090393397 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092767918 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073433419 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083128621 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.27740273 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111713612 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119899818 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098362225 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062882307 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109388848 seconds)
  done (took 58.938146702 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.118925381 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083528852 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097291032 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150456619 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122484337 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.21270157 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157918113 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200600456 seconds)
  done (took 2.819753374 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068630198 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09491957 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099574232 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082390375 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067172261 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068468616 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22668605 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080575884 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067242219 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088871582 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078897287 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068713641 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.424774993 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066563071 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067355409 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06219249 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067725723 seconds)
  done (took 3.447759236 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.367709629 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.60257346 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.374300836 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07374989 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.910724436 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089928408 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.084747874 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.12761923 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07419887 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.541908576 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.707535137 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127591701 seconds)
  done (took 18.758612696 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076398478 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070504698 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084935007 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084803074 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072814108 seconds)
  done (took 2.063815919 seconds)
done (took 108.21674374 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081074107 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.393039032 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05401481 seconds)
  done (took 2.151068199 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083539882 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085013193 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084995083 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082932631 seconds)
  done (took 2.020207827 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075004471 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076483617 seconds)
  done (took 1.828536137 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.224352812 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139849923 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086944321 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081642401 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078490258 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078925692 seconds)
  done (took 1.921768446 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071922429 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075252596 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072674367 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076141574 seconds)
  done (took 1.973969852 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076637193 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052384178 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055226277 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056114743 seconds)
  done (took 1.919825289 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086279464 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079406467 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079028604 seconds)
  done (took 1.923908813 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10727879 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.08524167 seconds)
  done (took 1.870563868 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081439669 seconds)
  done (took 1.762063427 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098238515 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113885923 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129128411 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109883578 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137131633 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109440722 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086644492 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08701163 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077773709 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08805031 seconds)
  done (took 2.71829672 seconds)
done (took 22.297230776 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078868827 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36987616 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361047049 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091392165 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669816977 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356522132 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.991161678 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092745681 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114212974 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068113872 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085161738 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648199174 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.979661249 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.331221391 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.967124156 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.413875759 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649749212 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.0690756 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067878013 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068690174 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.978618425 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068334442 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06811921 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069278394 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649676804 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371596718 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068803072 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.419650085 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06800665 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069866684 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356039463 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068686724 seconds)
  done (took 16.399658308 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070778054 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118386974 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073718963 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085286415 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071143776 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070318883 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072152844 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069541422 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120433523 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068132901 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084767261 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068205861 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072426341 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069006368 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08754874 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068745485 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069037961 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069235734 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069109983 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068901687 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086826402 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068317481 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068911198 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069354214 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068114278 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07999371 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068645877 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06831258 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068977284 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070119116 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071179558 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069140017 seconds)
  done (took 4.099452457 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116731159 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125128338 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074737196 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103813256 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113292843 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070396319 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144766526 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093636177 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128344221 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06833949 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085170648 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06856237 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10163247 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069393345 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08821034 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069072635 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069688869 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068834375 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068891591 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069108403 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087577573 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06854647 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068847838 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069563944 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069129283 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082001728 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068956081 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069114614 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069044622 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070534829 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072018565 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069581266 seconds)
  done (took 4.359664663 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073230172 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075165699 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083138038 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084486034 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070485608 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072118463 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073418781 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070093457 seconds)
  done (took 2.301277261 seconds)
done (took 28.84971541 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079184072 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.0694863 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072842532 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081409437 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074242007 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079234364 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067662876 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074969308 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072762639 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073242746 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075431293 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068043848 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071694115 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06750947 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07420309 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068738413 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079764786 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072381824 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079612381 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079793571 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071105617 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073809619 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07458729 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079592324 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079624656 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079469695 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077699425 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073704008 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069835883 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071075432 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077017546 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084358597 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069193214 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079749888 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068430598 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068580483 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071787434 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068206866 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079507863 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076974457 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070213608 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076561364 seconds)
  done (took 4.802606869 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087665852 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090971691 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085163992 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061773365 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066644746 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065221246 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088955057 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059856593 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060082396 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088814791 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056258866 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059435861 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062925136 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054563958 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059896554 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057451205 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06200115 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056801166 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059919199 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059749517 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058803363 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054979431 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060446797 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062938396 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059409238 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062105791 seconds)
  done (took 3.413998699 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07536336 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084455855 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088925125 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127487066 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105432732 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.0774874 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078576586 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093321458 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.086075099 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067457935 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071815671 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095342866 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088973659 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075111931 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068169273 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085906574 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082796788 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069652264 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074403118 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091880358 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085128202 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084905501 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093613493 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081598636 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06806789 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070285168 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071905799 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082209728 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073065559 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076911968 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071872657 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071438926 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069910951 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079462203 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071724967 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069423063 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091267172 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077916314 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078529719 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06866707 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07185404 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069285994 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090236114 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123549697 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06768847 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074830081 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075731135 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077348559 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068005649 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086531856 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078703046 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067542651 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071274696 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067353725 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.079513839 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080948132 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069685325 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070372886 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077211317 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071042652 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085809201 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071522496 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083017818 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067693078 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075854677 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066779147 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068687039 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067046054 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092692948 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069398884 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108425917 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069500744 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068938658 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076569519 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075338784 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073842534 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068114872 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082835174 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077627366 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071294775 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076445325 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071034938 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070892549 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088330786 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070556833 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069221041 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068908201 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074145418 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070376717 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069007243 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08087255 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068155873 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071201606 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08495101 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067560968 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069284056 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074327857 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072977304 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067978341 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078831923 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072985452 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068867721 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077290596 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068503596 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070872553 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078430106 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074157076 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067072309 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072720906 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074272215 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068567551 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069053918 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07057265 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069299157 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076914951 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074113515 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072176025 seconds)
  done (took 10.691892686 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161620744 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155574323 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070529478 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145466697 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.0768807 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079653388 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148595649 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094929159 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068200321 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069284536 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069206484 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112827571 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106305579 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116567712 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079054658 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068557177 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084222074 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114984315 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150446689 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144026071 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084239911 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077401252 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070610805 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069470063 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071184832 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078691227 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08592317 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077261514 seconds)
  done (took 4.472956782 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081264488 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.0978788 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074219223 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089867474 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091636733 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068619974 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070722575 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069845726 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080835732 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079540413 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067964171 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073659315 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075034477 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072035005 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069461216 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075196964 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075416363 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069611653 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071880556 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073454386 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077846933 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.08144289 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071951413 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06759248 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074792966 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067763985 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065048191 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085728436 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068795029 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090771597 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066085499 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075708853 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082005588 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069098583 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068064817 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068256001 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06831744 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068016725 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070490264 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067062607 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066850989 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05802298 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067615594 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080742764 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074196729 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056924185 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073095984 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073281818 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073471287 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065894008 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071090035 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07055654 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071207056 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07530991 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072814778 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073266322 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069116852 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065986972 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07588133 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067756577 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065081344 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06645875 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072356868 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066680284 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075601581 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07227474 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067006656 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067735409 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069931136 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074294418 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067552479 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071133943 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065308097 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.0696681 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072518718 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069767975 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069564486 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066605876 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067519699 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068097746 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.05579379 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067714995 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054193382 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071545226 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066113853 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066329971 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067770029 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07304281 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080360397 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069596264 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073669809 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068751836 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066902012 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071016382 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060541454 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070804036 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083211894 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083126365 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067782902 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065984718 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082401128 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072199626 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067122345 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056634748 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075319894 seconds)
  done (took 9.241437473 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089155936 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070615033 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083471445 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091413952 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087204737 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075210555 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077517079 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069688924 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082912833 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074340543 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076904131 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068822331 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078281318 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077280801 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070583885 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077666694 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072569722 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083312015 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082771192 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068892353 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07651453 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080339847 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08960596 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080592407 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078795316 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080502763 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089605237 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072707294 seconds)
  done (took 3.956489182 seconds)
done (took 38.273911201 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.79272411 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.95820823 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.780795867 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.151624924 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.098753031 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.797823142 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.947897962 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.772415025 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.947551604 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.817434725 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.037492176 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.824302532 seconds)
done (took 65.646522658 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.824298165 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.921400653 seconds)
    (2/2) benchmarking "String"...
    done (took 2.046655337 seconds)
  done (took 5.683802931 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.072759086 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.313797161 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.021185356 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.772174382 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.779326404 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.083079153 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.576862199 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.296971481 seconds)
  done (took 30.560733596 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.965998219 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.008845767 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.479525735 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.510455343 seconds)
  done (took 15.732360564 seconds)
done (took 63.675941985 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.782010624 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.788735573 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.776606379 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.758611054 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.832114122 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.785612164 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.117786838 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.846920314 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.77303922 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.768231309 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.776145798 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.208944571 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.78138572 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.322014683 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.772541223 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.782040969 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.831679218 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.352108641 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.930574563 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.786490617 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.775553811 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.79496518 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.779480738 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.782472349 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.819248331 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.777179782 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.212156216 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.784467401 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.405517003 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.776149054 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.81377359 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.284810819 seconds)
  done (took 204.495185182 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.774616981 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.036544152 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.955211278 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.815885789 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.302117023 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.960891758 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.865743435 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.351801312 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.779343624 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.792367619 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.951335923 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.777347189 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.978432738 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.725176248 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.804049071 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.861794056 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.979530153 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.994963463 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.809977976 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.942249207 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.78629551 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.768864666 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.731519386 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.950229454 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.79444512 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.859131385 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.957100209 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.80359052 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.971770925 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.962676377 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.807608532 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.786545662 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.00180003 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.654889817 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.783074417 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.800081844 seconds)
  done (took 170.597822156 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.940352408 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.777102842 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.776864294 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.776884682 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.789631513 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.77721523 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.898570574 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.903643528 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.23651552 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.113031999 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.780906781 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.828496132 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.61083876 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.778151412 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.844898711 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.791741359 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.779536044 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.794042421 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.804957986 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.781455309 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.778709055 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.908632017 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.790200364 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.824245895 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.785824749 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.779681273 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.785035495 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.149236777 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.779498396 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.784496443 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.039387354 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.779453989 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.77903832 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.666780483 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.182131065 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.869467315 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.777888231 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.780425412 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.784966125 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.779266711 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.999069598 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.779323911 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.779105407 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.782669646 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.954664956 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.779759204 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.904368045 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.7796307 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.276610771 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.779659268 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.780575003 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.545036062 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.44984146 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.782850086 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.779455298 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.783896398 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.779733286 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.779506872 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.786952455 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.573916189 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.855973222 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.780162106 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.783405543 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.78450065 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.781794531 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.000771344 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.775660743 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.765708702 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.832924599 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.89223299 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.90748112 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.77734612 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.845865654 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.872138515 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.781740153 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.779040754 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.780656833 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.778998225 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.86112527 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.779605774 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.904173208 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.787596502 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.77877376 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.831062997 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.849806661 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.782976113 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.677964943 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.777577739 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.781050838 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.094233235 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.776128702 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.781739929 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.849723776 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.782533592 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.781712276 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.781794963 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.943283651 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.90213022 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.555928455 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.780745238 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.588452447 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.783275311 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.933011909 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.778606039 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.963072876 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.773283013 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.858327092 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.776289724 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.77364089 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.768191503 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.800884901 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.769923394 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.832474666 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.769412084 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.140891585 seconds)
  done (took 403.167987976 seconds)
done (took 781.977199462 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.457835107 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.419133059 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.533452311 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.448568044 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.427793015 seconds)
  done (took 13.995501951 seconds)
done (took 15.708823188 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.85566554 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.863508299 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.798704252 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.859629344 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.792337612 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.85981174 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.840942121 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.796683819 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.826772712 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.798027502 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.828635455 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.797002713 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.78208328 seconds)
  done (took 25.412962042 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.010692241 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.008271975 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.845634485 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.002707546 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.823056608 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.01276778 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.936869864 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.925861375 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.929568407 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.789840614 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.787367173 seconds)
  done (took 22.786073361 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.012762396 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.014733181 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.849805047 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.011260389 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.821996695 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.015974975 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.937539646 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.929629991 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.933266202 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.793247077 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.788285833 seconds)
  done (took 22.825243209 seconds)
done (took 72.738496481 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.782391878 seconds)
  done (took 3.496165442 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.805779673 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.946013433 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.789446416 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.788137565 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.782137221 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.785224126 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.787954143 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.786311247 seconds)
  done (took 16.189057835 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.783658733 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.786474647 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.781886384 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.783860796 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.780520905 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.782291497 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.782045494 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.784391224 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.782398455 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.783156804 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.783617487 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.781701738 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.783999692 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.783309687 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.785478683 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.787920557 seconds)
  done (took 30.253737274 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.781921195 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.780831848 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.782714588 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.785659362 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.781943007 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.782853768 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.785298949 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.782763395 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.782316918 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.783811526 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.782651748 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.780435036 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.781472675 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.781201038 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.78261388 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.783566777 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.780431913 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.781356901 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.786330054 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.780674535 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.784416025 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.781559654 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.779775079 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.780180159 seconds)
  done (took 44.498411836 seconds)
done (took 96.159967708 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.696070607 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.185386657 seconds)
  done (took 8.597190078 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.783304933 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.781574532 seconds)
  done (took 5.320953432 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.782452663 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.781626204 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.782697787 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.781553414 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.7801789 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.782338206 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.78337686 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.78536734 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.781320211 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.785218893 seconds)
  done (took 19.541424956 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.782055872 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.781710092 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.781178433 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.784000692 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.785778412 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.780615095 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.783655494 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.783574228 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.786529211 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.783264979 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.783101523 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.782163605 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.788107697 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.781440341 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.785040082 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.781609568 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.782230432 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.782544368 seconds)
  done (took 33.816055826 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.785418436 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.786313605 seconds)
  done (took 5.289498563 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.783071896 seconds)
    (2/7) benchmarking "second"...
    done (took 1.782906369 seconds)
    (3/7) benchmarking "month"...
    done (took 1.781714054 seconds)
    (4/7) benchmarking "year"...
    done (took 1.783296279 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.784304488 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.783749549 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.782791222 seconds)
  done (took 14.199517908 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.785220215 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.941143893 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.013723228 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.478122182 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.785419479 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.791345815 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.707878766 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.792101684 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.789269054 seconds)
  done (took 19.803586114 seconds)
done (took 108.283883927 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.609631031 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.777992108 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.166642618 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.83031524 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.838834843 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.072142527 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.802068074 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.988311307 seconds)
done (took 42.804633398 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.860883673 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.235018772 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.247280466 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.388409973 seconds)
  done (took 11.581335403 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.754534974 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.300364392 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.808180218 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.360759935 seconds)
  done (took 19.946814407 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.138683372 seconds)
    (2/2) benchmarking "read"...
    done (took 2.123898854 seconds)
  done (took 5.974085071 seconds)
done (took 46.075386235 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.769649574 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.770009315 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.768924601 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.767522283 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.766885485 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.772405418 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.76711137 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.766557562 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.770485608 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.769638878 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.770530942 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.769960713 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.771523294 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769096124 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.76781526 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768868627 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770109206 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.768378161 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767671928 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.769866343 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.769432851 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.767866465 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.76799062 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.768453707 seconds)
  done (took 44.161973926 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.771145629 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.770995239 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.771381416 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.771803001 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.769495835 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.775717724 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.772385439 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.769394539 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.770856404 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.772139404 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.769064189 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.770384903 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.771972833 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.769845466 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771845656 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.770371671 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.772292023 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76945372 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773212401 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.7700881 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.772021335 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770512634 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.769173949 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766771633 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.764208465 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.763090366 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.767826585 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.768275558 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.765658812 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.763885989 seconds)
  done (took 54.802621431 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.770084861 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.772782102 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.766445199 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.765300528 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.765624929 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.765920912 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.76534758 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.766220063 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.76737346 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.765575662 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.765530485 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.766096085 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.765982453 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.766068425 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.766758112 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.766257344 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.765724236 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.765794225 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.766483866 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.766570869 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.765364741 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.766228145 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.766007566 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.765658135 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.766539356 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.767755526 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.766655534 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.767616712 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.766772399 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.767128837 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.767207418 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.765525383 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.766494183 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.765381857 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.764859042 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.765616209 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.771389499 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.772086334 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.765704206 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.765696171 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.766295099 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.765383189 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.767618951 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.763537945 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.764473429 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.764449225 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.765258207 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.767156885 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.767635853 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.768301224 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.768790376 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.769312429 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.768257899 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.770169147 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.767881112 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.768448779 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.769334952 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.767405198 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.768537881 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.770474897 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.768747805 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.76752004 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.767446137 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.768790777 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.770281844 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.768225267 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.766865456 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.76893809 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.768775838 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.769957559 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.770866621 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.770740517 seconds)
  done (took 128.94704706 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.768602289 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.767176946 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.768504455 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.767546182 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.767561005 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.771479694 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.767321942 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771228992 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766839086 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.770113424 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770804392 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.77018187 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769287376 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.768740785 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768186371 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.767368657 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.77231252 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.768505096 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.770114061 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.770055827 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.770850596 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.768377751 seconds)
  done (took 40.625417031 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.771217076 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.772484278 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.769634769 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.771297318 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.769352669 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.771074581 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.771248025 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.770756641 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77141478 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.770197478 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77001306 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7720274 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.768666245 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76922681 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.769319651 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.769329785 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.771409327 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.768564512 seconds)
  done (took 33.572782615 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.770631264 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.769071944 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.771788289 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.770366231 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.771161162 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.772025374 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.774183479 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.772769171 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.773206206 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.76937288 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.773121296 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773272556 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.774742543 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771826554 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77184995 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.771342747 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.773489495 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771045438 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.773193423 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.769656323 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.768754751 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.771543926 seconds)
  done (took 40.686865527 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77442553 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.774124357 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.772395809 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.773555772 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.771757812 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.774539956 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.775235955 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.772574537 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.774160769 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.7748796 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.772648129 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.778038494 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.772377634 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.773241436 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.77194722 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.773320785 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.77504549 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.776306625 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.776664448 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.772994848 seconds)
  done (took 37.187816005 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.775804852 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.775628366 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.776821887 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.776241316 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.777869304 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.776240857 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.776883636 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.777826355 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.777051163 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.778593226 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.775468633 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.777077835 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.77757784 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.778965365 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.776178147 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.774488779 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.777175345 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.776701597 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.776138759 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.778040887 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.776739533 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.778079576 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.777256727 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.77596959 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.777806614 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.775447524 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.77488603 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.775446719 seconds)
  done (took 51.460394838 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77540312 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.778509159 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.772103594 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.771964279 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.771502904 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.771681213 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.774964287 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.774436001 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.776029668 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.773294912 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.776062618 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.776103379 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.776294519 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.774459816 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.775121224 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.773912683 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775181468 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.773173444 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.773541048 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772922825 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.775469474 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77706992 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.775114179 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.774947112 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773813524 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.776784425 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.77304083 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.77375701 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.775726539 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.774122513 seconds)
  done (took 54.948418615 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.79458872 seconds)
    (2/2) benchmarking "in"...
    done (took 1.794971132 seconds)
  done (took 5.3003498 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.774001196 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.778990719 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.777448415 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.775714438 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.775947346 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.780439991 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.780910148 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.775542775 seconds)
  done (took 15.931963834 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.777595962 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.777958279 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.777965798 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.778929455 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.777140557 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.776728502 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.782487148 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.778977673 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.77820478 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.779024662 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.782757856 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.781862234 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.780614183 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.776869207 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.778868697 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.777630237 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.777545569 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.777378528 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.776832346 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.778179387 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.780450478 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.779214985 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.778626015 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.777322919 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.779907307 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.786936448 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.780330966 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.779102616 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.777320667 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.781042236 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.777702152 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.777412042 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.779450717 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.780517707 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.778495963 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.77791375 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.786647663 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.779989294 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.783621003 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.779163653 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.778829883 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.777106866 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.780389978 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.778576297 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.779136433 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.778959707 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.78023508 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.7776082 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.781315429 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.781141539 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.782616185 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.779010397 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.776694607 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.782315542 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.783198617 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.784913862 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.780745386 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.782573771 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.786569089 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.788810384 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.790761134 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.785999404 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.78173035 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.77847462 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.788629646 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.803031414 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.785505178 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.778052099 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.77710655 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.780686971 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.786179251 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.792409724 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.786489141 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.780769195 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.779796173 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.780733062 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.781095312 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.781618605 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.787177689 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.783509704 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.780737293 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.781071609 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.790842988 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.799674746 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.780248665 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.779838446 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.779952606 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.781978799 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.780790956 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.789462226 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.781493829 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.782657888 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.780139045 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.781011635 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.784339239 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.780967648 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.781143001 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.781815676 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.7806622 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.782850091 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.781036491 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.784035226 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.789442508 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.781223719 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.782946332 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.787028874 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.783121748 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.781806315 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.786552527 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.782670761 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.78269148 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.782170327 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.785935188 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.778360698 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.784432378 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.788378092 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.781846326 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.781550876 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.781151035 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.783283395 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.790715336 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.805649581 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.782701362 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.782375478 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.78732763 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.791474787 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.784560779 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.785912782 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.782705809 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.780839924 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.782303487 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.783703962 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.785212331 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.782904258 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.78417981 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.784065749 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.78126098 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.783259246 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.783701083 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.784394788 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.784598183 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.783188312 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.784937353 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.785898195 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.783968589 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.784959946 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.788331508 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.784631004 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.785197245 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.786323563 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.782342153 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.785188228 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.783541288 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.783488539 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.785431966 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.783144491 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.783139124 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.78294611 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.784334349 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.784152089 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.787438259 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.782710953 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.786411532 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.784853007 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.787151985 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.78244532 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.783399522 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.784721608 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.785354466 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.783447675 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.786826938 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.784652047 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.78649866 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.789455545 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.785239385 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.784583511 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.787162041 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.786755415 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.784168291 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.784286953 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.785644726 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.789773029 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.783932323 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.789975025 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.784250211 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.78478967 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.784646698 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.783720287 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.784792668 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.78564368 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.786260969 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.790743726 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.795694519 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.790822389 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.786768404 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.787794757 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.786847416 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.788795345 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.788311732 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.786610236 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.785263478 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.784960677 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.784384358 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.785742862 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.786831437 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.786763806 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.784869124 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.785762937 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.787239259 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.78649002 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.788020401 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.786351399 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.788755225 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.783818871 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.787213404 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.785597031 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.786532148 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.784096036 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.785743479 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.786619049 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.786512121 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.78619853 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.795424149 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.784564722 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.787314999 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.787169817 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.787244861 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.787814112 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.788024611 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.788685408 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.786690087 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792403523 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.787340125 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.78890566 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.792650437 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.787581439 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.786608367 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.789157664 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.788864571 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.785346731 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.78913307 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.794436529 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.78789884 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.788075073 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.788897706 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.787346696 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.78784943 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.793356332 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.785590597 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.786588958 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.790232888 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.789538413 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.785431618 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.789043037 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.788686671 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.789243463 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.789630869 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.78928786 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.789271536 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.789586368 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.78935595 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.791084459 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.787935289 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.790575975 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.793979569 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.792270936 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.789625081 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.791081775 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.789765559 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.792096431 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.788960726 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.789771502 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.788181671 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.801299132 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.795717077 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.795027986 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.790471296 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.789593444 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.795115108 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.789212653 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.792174771 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.789103975 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.789252426 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.789806262 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.784137429 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.785797111 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.78792357 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.788749984 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.788929949 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.788707125 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.79058677 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.788307556 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.78609933 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.787339689 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.787934966 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.786929498 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.786034619 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.786371002 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.788760407 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.787933681 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.788477916 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.786361843 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.791355759 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.787264978 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.789886252 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.787221176 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.788521776 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.786935075 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.787529181 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.787754688 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.790975732 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.793760581 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.787611575 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.794502005 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.78771889 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.793105428 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.786075359 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.790647225 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.791913438 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.785714057 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.785762847 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.786856987 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.789900036 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.793007069 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.788687922 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.788188586 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.792308813 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.787999552 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.790797591 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.787307015 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.786721467 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.787610024 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.787403496 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.793529303 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.78873166 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.790238183 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.78792473 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.785361507 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.786794528 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.788838628 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.786135985 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.792295431 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.786971402 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.787880542 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.787763799 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.790086339 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.788012738 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.787880201 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.787768369 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.786558215 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.788563801 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.794524373 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.787987392 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.791000651 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.787352965 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.796809127 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.788601037 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.794008151 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.788011527 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.788678028 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.789598757 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.788833639 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.791967608 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.7888259 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.789527684 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.788987666 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.791418691 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.79519108 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.790073934 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.791066908 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.791090347 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.791709503 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.790209134 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.799360225 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.809165754 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.790425646 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.795205164 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.78991792 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.792599625 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.793906 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.791698878 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.790711113 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.791847706 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.798090198 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.799007601 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.790141267 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.792361763 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.790802679 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.790233527 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.793556482 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.792992058 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.791838527 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.791808987 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.792406176 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.791181564 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.798426347 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.791020746 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.792520765 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.791768581 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.791990813 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.7988977 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.795052009 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.794120881 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.793526687 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.793912944 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.7932272 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.796983766 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.793909373 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.794556528 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.794007501 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.794716526 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.798498147 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.800040429 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.796031819 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.79260977 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.793465895 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.793147058 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.796528579 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.795409385 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.795433469 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.794673757 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.795984933 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.794554769 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.797375778 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.794243037 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.796868643 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.795342169 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.796986504 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.798892275 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.800988744 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.795179634 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.793223103 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.796703067 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.79486282 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.796515741 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.79443238 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.80244545 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.796575979 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.803466632 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.802826851 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.797203948 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.795546833 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.79848029 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.802721008 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.796226759 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.798501327 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.796961294 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.798672963 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.798151903 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.800610773 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.798176964 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.804679488 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.797507817 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.797766521 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.80545707 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.799035047 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.799287997 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.799173772 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.800832138 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.79681545 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.796743405 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.799556718 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.798543199 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.804305424 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.800530526 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.798262445 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.798264159 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.79708893 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.798947783 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.801185924 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.798892228 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.798884889 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.796799186 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.798981456 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.79899153 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.798858556 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.796117441 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.797835469 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.799153743 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.799607806 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.802171376 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.795505241 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.798225559 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.797688768 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.80156262 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.798071578 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.799062477 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.797275661 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.795437338 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.800604749 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.800765035 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.799498471 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.801053796 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.798659976 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.799980906 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.802664669 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.796979554 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.800165486 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.805193842 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.80452135 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.795865965 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.798409698 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.795963565 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.799075527 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.796297642 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.796503279 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.798218993 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.801127726 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.79853192 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.800285995 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.80114765 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.801622409 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.812444462 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.79895634 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.799090432 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.798679912 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.801646959 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.799738207 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.797506085 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.800737723 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.800866079 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.801551218 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.804296354 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.800423779 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.804295948 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.800148806 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.799205143 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.801482565 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.803457177 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.804262734 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.801178661 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.80032611 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.797877661 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.80134315 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.812938128 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.800989764 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.808892677 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.826029692 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.800190724 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.802088489 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.803152277 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.801494585 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.802251127 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.804031074 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.802415467 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.805683947 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.802319826 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.801591593 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.8020088 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.807948155 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.803705129 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.805421273 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.80315528 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.803154647 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.805112813 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.801788223 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.802958691 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.804076792 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.803023623 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.804414296 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.804052089 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.804209401 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.814462427 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.810764182 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.803480307 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.802451962 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.802084562 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.807130732 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.806249348 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.81183326 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.811029575 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.80365155 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.804965058 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.805749845 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.803285953 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.801417875 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.803654 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.80349248 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.804759181 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.801602157 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.815698694 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.809448362 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.808509464 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.803875621 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.804268189 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.805019995 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.805821197 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.80465314 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.805112359 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.80622796 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.804335017 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.808125718 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.806036067 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.805290993 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.807370768 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.811571898 seconds)
  done (took 1069.266538753 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.803735274 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.803173682 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.803517609 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.803470758 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.803799958 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804265518 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.802057279 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.802962897 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.802583775 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.804388643 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.804339113 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.803254035 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.80134412 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.805040798 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.803673618 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.803509497 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.80315371 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.80439777 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.803236164 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804103612 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.80500813 seconds)
  done (took 39.61505627 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.806846414 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.804592363 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.80321139 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.804972527 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.804518975 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.807195288 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.804403944 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80559211 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.806604128 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804512404 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.804479347 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806704032 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.804787023 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.802665589 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803587143 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.808483971 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.807697631 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.806377816 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.808137873 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.804388428 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.809937792 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.805087965 seconds)
  done (took 41.464836895 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.805516776 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.806463512 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.806366212 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.807160689 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.80815903 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.805043927 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.806359686 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.808361884 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.808771625 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.808273623 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.80732975 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.808408725 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.813841398 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.812471778 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.809678545 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.808894376 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.953382679 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.808095004 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.809006248 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.808040766 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.806459268 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.813758168 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.807276068 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.806905575 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.808178289 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.810742557 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.810302173 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.810012369 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.809754059 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.81116865 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.813049778 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.810522944 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.809608211 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.810090449 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.809099817 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.80996313 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.814905004 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.810153436 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.808183376 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.810221933 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.817465037 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.826329731 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.810458496 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.814430775 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.811100895 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.810992852 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.813319338 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.815743986 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.807996954 seconds)
  done (took 90.581325014 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.809334446 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.810578939 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.808733873 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.811312003 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.811363848 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.811821938 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.812088094 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.810824344 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.810387655 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.808120468 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.811224187 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.808105372 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.806249892 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.808841989 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.810321231 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.806406698 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.806429263 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.804715562 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.806349475 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.806466785 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.805794934 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.808760077 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.808696459 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.806507165 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.808788457 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.808823323 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.806338401 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.809362206 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.805686005 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.805508744 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.809305423 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.808913421 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.808560467 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.805534435 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.805740517 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.808605676 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.811034986 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.805022152 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.808238477 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.806880271 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.807484922 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.811572141 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.810719341 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.811018586 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.807648056 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.809847161 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.806921354 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.806981237 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.806703778 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.810188245 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.810402846 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.808168308 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.811786004 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.809123016 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.811152623 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.811015387 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.808858707 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.809246736 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.812102533 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.808951468 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.807298797 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.810889445 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.809316522 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.812018965 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.813182585 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.813130483 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.811876034 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.813336763 seconds)
  done (took 124.759155069 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.813323696 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.813754148 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.813817189 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.811954917 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.814352142 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.814507324 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.812669968 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.813511262 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.814785995 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.813812513 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.814583468 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.81924568 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.816251029 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.820429822 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.817034271 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.816580232 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.819139131 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.81752194 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.815892481 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813837082 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.817331169 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.817671795 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.818304318 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.818597406 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.817405222 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.815136011 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.819065693 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.819054565 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.816992823 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.814917965 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.818846659 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.816397378 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.817958146 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.814911729 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.813857083 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.817582905 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.817009165 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816829286 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.819296184 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.817340531 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.817275424 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.819159202 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.820065964 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.819541598 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.81815782 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.815594356 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.818148938 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.816761569 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.821104282 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.818350034 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.818047168 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.818623156 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.818475688 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.818781187 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.819402072 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.821589642 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.819172977 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.819578052 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.819523461 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.817382853 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.817384365 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.822501845 seconds)
  done (took 114.416175622 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.821217892 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.822745774 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.816109671 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.819463642 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.819199722 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.818192453 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.820603839 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.822013023 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.821784962 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.820486185 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822261266 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.818587921 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818213386 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.823029851 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.819347403 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.820266555 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.819098036 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.81764525 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.82160648 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.818917075 seconds)
  done (took 38.154852863 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.819352718 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.821172347 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.818695428 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.820460245 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.821643279 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.820073015 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.820757229 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.821368712 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818851686 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82111462 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.822406749 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.821856501 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815328774 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.820311381 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.823201391 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.819179534 seconds)
  done (took 30.881503058 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.821011244 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.823090626 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.82042905 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.820005101 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.820523315 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.815381788 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.823182775 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.820675768 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.820513793 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.82410914 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.821779064 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.823768736 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.823487005 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.821695652 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.820896613 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.822595651 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.820886949 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.819936808 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.82170538 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.824282597 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.820636817 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.819146662 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.823017006 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.821637608 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.82057688 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.821964675 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.818159762 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.822230593 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.820225873 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.824800867 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.819019519 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.820927081 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.82283298 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.821530084 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.823644431 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.823416213 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.82377658 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.824230029 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.824638824 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.825060229 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.823429079 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.821246692 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.825128635 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.823446399 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.821157711 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.82506279 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.823325841 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.82222904 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.821374506 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.820133124 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.82358697 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.824831804 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.822272504 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.825610997 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.82502725 seconds)
  done (took 101.976169864 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.823509433 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.824215338 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.822220581 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.824808066 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.826471147 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.822329013 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.824142109 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.823334012 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.825009139 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.826934216 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.820944638 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.822672908 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.820932203 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.824512785 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.821713641 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.823263453 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.820665568 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.821071524 seconds)
  done (took 34.574969316 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.821913055 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.821699552 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.823093457 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.820933034 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.822172479 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.82426087 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.822005698 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.824464302 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.824194655 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.821845 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.820815155 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.824326896 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.823183153 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.824694685 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.821054458 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823193012 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.825267729 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.824932426 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.823017142 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.821978551 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.82488265 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.824242431 seconds)
  done (took 41.866743671 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.823388371 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.823598634 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.838239697 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.839679923 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.843742629 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.851328608 seconds)
  done (took 12.778603424 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823896992 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824824909 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.824383045 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826554173 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827121782 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823370709 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823912298 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824939424 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826013339 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825258633 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823203847 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827159975 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82694069 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823349904 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825941401 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826940147 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82449594 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824107863 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824350147 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827544891 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825874658 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827832069 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824333263 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824316653 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824141698 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82416446 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827701961 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824935076 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825401834 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826522532 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827404905 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82490297 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827315479 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824762898 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828485679 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828108044 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82604947 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827771631 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827942137 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825275622 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.828109473 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827350203 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826849118 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82505753 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82795354 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826007948 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825660468 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826697104 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825826299 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828870237 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827501503 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825784399 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828146926 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828621843 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82861495 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828673621 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827833668 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826495631 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828107448 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826399055 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82649584 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828525625 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826836814 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826983808 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829636791 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828176735 seconds)
  done (took 122.299949902 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826342795 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.827090626 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825498202 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82863226 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825240732 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826715831 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825748916 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826947442 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826393095 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826572063 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82832603 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826510012 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826975484 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826303905 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827281792 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827780052 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826606222 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825811812 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828186214 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829430905 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827558515 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827341153 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827344881 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826941958 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827938025 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829498277 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827632375 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82739171 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827985187 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827056117 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827523162 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827004846 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829120647 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.829271022 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828295452 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827623364 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828969893 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827631539 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8294118 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830973358 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827377986 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831433783 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827289032 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828908194 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829166914 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830121185 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827689355 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828272243 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828099892 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829989489 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827507713 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829059819 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828727223 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829388065 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829541585 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827899285 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829251601 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829967568 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828555736 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82964783 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828472206 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829529533 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832688503 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828256793 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830653301 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830264319 seconds)
  done (took 122.422711068 seconds)
done (took 2494.38853513 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.865450062 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.029791021 seconds)
  done (took 15.65994906 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.002591683 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.950126628 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.835549309 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.832857362 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.835662762 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.830068903 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.84978797 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.836317349 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.83559011 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.836027818 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.836229175 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.021990598 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.889771335 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.834688511 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.836394064 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.929107698 seconds)
  done (took 51.765631192 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.837487834 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.840859831 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.850941532 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.840534077 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.838141257 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.858558563 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.874444943 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.842082011 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.900596149 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.851803983 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.967476801 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.850710414 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.840197294 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.897237396 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.852645747 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.853735057 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.926262243 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.915653903 seconds)
  done (took 35.411490296 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.917215504 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.844745954 seconds)
  done (took 10.541685553 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.863818305 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.84630208 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.868518779 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.848971985 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.835675667 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.891307367 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.864960615 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.871865004 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.842161153 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.844019978 seconds)
  done (took 70.352441004 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.844573704 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.842046027 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.841152657 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.838805411 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.831712131 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.838321404 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.839074071 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.831202405 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.537416676 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.877503694 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.848594549 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.844282255 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.839784766 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.840908767 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.838018521 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.863206309 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.977171624 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.838405026 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.840045134 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.845023162 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.840334417 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.906193974 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.855610447 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.844066412 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.870662801 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.534150092 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.850582805 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.845574896 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.95756971 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.840123299 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.841072777 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.841437209 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.843399665 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.238867972 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.13115297 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.844965016 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.849777098 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.848950592 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.84059135 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.971350431 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.841580868 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.848244288 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.835065005 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.112021107 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.925591875 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.885165381 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.177304437 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.845681668 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.844218417 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.873890364 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.846610608 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.843131868 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.854205826 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.365578617 seconds)
  done (took 131.168576884 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.836776015 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.425398732 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.004233304 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.836939371 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.12113285 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.08204673 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.83966835 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.887685764 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.844485109 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.089486397 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.017241043 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.959160573 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.839262812 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.837528256 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.837594981 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.836685939 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.991191165 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.910528356 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.839027958 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.834855773 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.873566366 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.104536022 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.96695855 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.838767367 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.863055752 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.067719099 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.966943539 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.956750654 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.285478297 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.837884605 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.904935516 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.842548308 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.839911315 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.837304805 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.003130049 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.946535062 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938422938 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.840703463 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.837530328 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.837979962 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.499416798 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.063148729 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.951182848 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.977472452 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.08751865 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.070312925 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.487468877 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.836632556 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.48169865 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.036672049 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.050817903 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.094631794 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.968618285 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.841282766 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.091355201 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.838454059 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.838581179 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.104738352 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.068281712 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.954972727 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.840242354 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.839190212 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.839153248 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.155585337 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.839880811 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.94946376 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.841732294 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.840825773 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.952530415 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.959782376 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.068779436 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.084250161 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.873663483 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.743882447 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.35233046 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.125457101 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.91488278 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.108263719 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.842748988 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.840612241 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.934473418 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.589048525 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.015812629 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.158604615 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.108761863 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.885774241 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.47581035 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.840744413 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.088698276 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.09377555 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.073511799 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.086718874 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.008894852 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.169222055 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.840843902 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.841017374 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.036185901 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.974716451 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.844406522 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.203135252 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.089649752 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.574919611 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.873581665 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.149258878 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.98128645 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.840921272 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.46956899 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.841458842 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.045186057 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.887589356 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.844901033 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.842184468 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.088971073 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.712476437 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.842471715 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.616350552 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.91043579 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.842251846 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.108367641 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.845864483 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.086840977 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.845851388 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.154316956 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.331807948 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.887037904 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.037847123 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.087328915 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.638926443 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.110449141 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.159021535 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.970303587 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.102426647 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.663346025 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.844046593 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.12691345 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.845308638 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.842374919 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.015415626 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.845514271 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.998478952 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.848090586 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.104686774 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872191521 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.016976683 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.845859125 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.119468182 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.893410144 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.898659725 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.846814742 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.96162414 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.84428065 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.886710952 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.029320258 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.846057239 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.843372476 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.427809481 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.845901125 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.99350004 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.14398509 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872592994 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.91951081 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.369771499 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.845839914 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.939591064 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.875428415 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.446686732 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.84590199 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.016273675 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.848888116 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.804385208 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.843745598 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.158616221 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.069115576 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.849376766 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.843521819 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.647992714 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.554053131 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.844818351 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.024015422 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.308269067 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.493377337 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068995234 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.850993387 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.980693239 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.849166711 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.922872394 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.197427134 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.845031973 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.84590741 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.845949568 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.846112669 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.845233434 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.074744431 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.875716958 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.543199136 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.984194377 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.091579355 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.159903475 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.110733184 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.897648733 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.851453831 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.118122471 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.851034345 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.916685924 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.84904375 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.871561586 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.09931046 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.852687487 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.080564297 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.136795978 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.89398327 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.898412831 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.851049562 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.848210746 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.845846714 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.99252205 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.951723272 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.849689573 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.84626687 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.965603331 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.976039086 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.038940112 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.445730144 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.021726974 seconds)
  done (took 898.458289244 seconds)
done (took 1215.124758101 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.849173156 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.847322655 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.838039854 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.852163335 seconds)
  done (took 29.173288811 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.855840311 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.852131171 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.856833054 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.853703047 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.855863628 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.855674544 seconds)
  done (took 12.917715544 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.925611474 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.849001302 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.852591869 seconds)
  done (took 21.414133195 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.923730147 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.265145571 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.958982545 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.300155055 seconds)
  done (took 10.2364539 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.855678474 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.855376595 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.856681705 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.857784342 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.858146033 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.860546093 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.857209612 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.857688767 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.858850812 seconds)
  done (took 18.506755456 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.225555111 seconds)
done (took 98.26173745 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.876818263 seconds)
    (2/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.835313197 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.281859748 seconds)
    (4/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.879162069 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.847998883 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.499044557 seconds)
    (7/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.44222842 seconds)
    (8/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.853321126 seconds)
    (9/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.110727714 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.993338073 seconds)
    (11/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.154059153 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.89971007 seconds)
    (13/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.851282062 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.878173247 seconds)
    (15/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.878083579 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.808583073 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.189384382 seconds)
    (18/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.519413262 seconds)
    (19/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.533353816 seconds)
    (20/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.113699433 seconds)
    (21/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.957987589 seconds)
    (22/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.074420803 seconds)
    (23/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.986680797 seconds)
    (24/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.959064235 seconds)
    (25/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.202702803 seconds)
    (26/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.867876539 seconds)
    (27/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.927350989 seconds)
    (28/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.072081945 seconds)
    (29/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.850121391 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.184589396 seconds)
    (31/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.851842112 seconds)
    (32/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.050000547 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.9824787 seconds)
    (34/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.522833768 seconds)
    (35/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.939191227 seconds)
    (36/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.445010137 seconds)
    (37/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.916938323 seconds)
    (38/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.870115916 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.850475434 seconds)
    (40/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 3.762033822 seconds)
    (41/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.760785089 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.130757817 seconds)
    (43/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.721134332 seconds)
    (44/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.127202197 seconds)
    (45/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.879775465 seconds)
    (46/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.879623886 seconds)
    (47/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.929824224 seconds)
    (48/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.995801966 seconds)
    (49/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.05462472 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.851812665 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.968950095 seconds)
    (52/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.851127431 seconds)
    (53/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.071238052 seconds)
    (54/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.952253523 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.132076914 seconds)
    (56/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.931306552 seconds)
    (57/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.134396296 seconds)
    (58/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.410910591 seconds)
    (59/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.947217325 seconds)
    (60/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.023419927 seconds)
    (61/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.434545957 seconds)
    (62/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.853079111 seconds)
    (63/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.999410701 seconds)
    (64/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.909613716 seconds)
    (65/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.020682323 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.768350673 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.924004559 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.851810939 seconds)
    (69/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.3247485 seconds)
    (70/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.489142304 seconds)
    (71/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.45324382 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.22396497 seconds)
    (73/309) benchmarking ("sort", Int8, false)...
    done (took 4.817353226 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.854637452 seconds)
    (75/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.003758067 seconds)
    (76/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.738281903 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.239711186 seconds)
    (78/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.854984289 seconds)
    (79/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.174415696 seconds)
    (80/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.958663789 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.929207016 seconds)
    (82/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.906327104 seconds)
    (83/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.069697873 seconds)
    (84/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.866092819 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.117419064 seconds)
    (86/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.872409639 seconds)
    (87/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.148808844 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.879595531 seconds)
    (89/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.153264652 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.572380558 seconds)
    (91/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.885169869 seconds)
    (92/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.450080997 seconds)
    (93/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.040566137 seconds)
    (94/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.293453787 seconds)
    (95/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.229799581 seconds)
    (96/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.229203843 seconds)
    (97/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.151245201 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.658014185 seconds)
    (99/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.953328708 seconds)
    (100/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.853807824 seconds)
    (101/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.895648365 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 8.365729112 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.147928953 seconds)
    (104/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.892880691 seconds)
    (105/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.217174642 seconds)
    (106/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.09135826 seconds)
    (107/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.950632822 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.12376694 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.85568227 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.910072476 seconds)
    (111/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.949404726 seconds)
    (112/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.842489835 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.283936195 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.05658141 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.862506276 seconds)
    (116/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.219190724 seconds)
    (117/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.083738975 seconds)
    (118/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.892471154 seconds)
    (119/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.102329629 seconds)
    (120/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.365348879 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.861816776 seconds)
    (122/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.858358175 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.964611171 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.962138225 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.77474232 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.108370417 seconds)
    (127/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.02990605 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.913248729 seconds)
    (129/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.881983852 seconds)
    (130/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.881726798 seconds)
    (131/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.260388483 seconds)
    (132/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.990846913 seconds)
    (133/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.188085162 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 2.310938572 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.882979798 seconds)
    (136/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.938298119 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.11250531 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.955473173 seconds)
    (139/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.978819262 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.070456335 seconds)
    (141/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.98483964 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.117791521 seconds)
    (143/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.552785531 seconds)
    (144/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.491332361 seconds)
    (145/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.881966282 seconds)
    (146/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.093459319 seconds)
    (147/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.86939408 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.842676358 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.153981674 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.962394062 seconds)
    (151/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.006875226 seconds)
    (152/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.848319421 seconds)
    (153/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.866684994 seconds)
    (154/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.434812689 seconds)
    (155/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.889818292 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.187352353 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.082106047 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.887425783 seconds)
    (159/309) benchmarking ("sort", Float64, false)...
    done (took 5.674476395 seconds)
    (160/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.116436566 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.155629074 seconds)
    (162/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.960460667 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.153064756 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.885961278 seconds)
    (165/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.85750268 seconds)
    (166/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.248409471 seconds)
    (167/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.00729281 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.106868913 seconds)
    (169/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.966728297 seconds)
    (170/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.372960962 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.52625947 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.956218303 seconds)
    (173/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.233453556 seconds)
    (174/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.948607033 seconds)
    (175/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.858044359 seconds)
    (176/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.444599709 seconds)
    (177/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.373948734 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.808567401 seconds)
    (179/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.919966759 seconds)
    (180/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.238808601 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.204671106 seconds)
    (182/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.752221273 seconds)
    (183/309) benchmarking ("sort", Float32, false)...
    done (took 5.627926256 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.911255713 seconds)
    (185/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.158083915 seconds)
    (186/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.26625557 seconds)
    (187/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.959800667 seconds)
    (188/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.179040535 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.888137453 seconds)
    (190/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.858973457 seconds)
    (191/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.208933467 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.847292557 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 3.694436537 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.910031723 seconds)
    (195/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.886257091 seconds)
    (196/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.763369199 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.98008156 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.236024645 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.554078318 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.179096529 seconds)
    (201/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.972723191 seconds)
    (202/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.844904269 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.952197251 seconds)
    (204/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.74530663 seconds)
    (205/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.068108224 seconds)
    (206/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.042114505 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.023003533 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.968642031 seconds)
    (209/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.870257279 seconds)
    (210/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.887402713 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.642640155 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.07714293 seconds)
    (213/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.984049107 seconds)
    (214/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.977153469 seconds)
    (215/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.924775237 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.859229193 seconds)
    (217/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 3.516122921 seconds)
    (218/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.834485887 seconds)
    (219/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.376682808 seconds)
    (220/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.097858971 seconds)
    (221/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.717359749 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.896216128 seconds)
    (223/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.899279691 seconds)
    (224/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.28545775 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.906382016 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.665030859 seconds)
    (227/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.899134434 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.184246466 seconds)
    (229/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.851947348 seconds)
    (230/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 8.061390532 seconds)
    (231/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.919440379 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.878733294 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.867573837 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.009441061 seconds)
    (235/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.037539716 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.959163292 seconds)
    (237/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.485743784 seconds)
    (238/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.881223601 seconds)
    (239/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.922549636 seconds)
    (240/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.926775874 seconds)
    (241/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.291662251 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.864451901 seconds)
    (243/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.967570574 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.459483407 seconds)
    (245/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.927624869 seconds)
    (246/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.847710487 seconds)
    (247/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.854493258 seconds)
    (248/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 3.372622739 seconds)
    (249/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.263906555 seconds)
    (250/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.712163681 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.590880691 seconds)
    (252/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.947922592 seconds)
    (253/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.897049178 seconds)
    (254/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.274345131 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.164861981 seconds)
    (256/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.44883149 seconds)
    (257/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.052034207 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.190310515 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.258481685 seconds)
    (260/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.015106603 seconds)
    (261/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.805152851 seconds)
    (262/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.057330067 seconds)
    (263/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.853577435 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 3.928801902 seconds)
    (265/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.95133802 seconds)
    (266/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.946866831 seconds)
    (267/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.946452041 seconds)
    (268/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.225153035 seconds)
    (269/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.059985985 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.802414397 seconds)
    (271/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.872233299 seconds)
    (272/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.975832369 seconds)
    (273/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.239450761 seconds)
    (274/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.011496512 seconds)
    (275/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.953507278 seconds)
    (276/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.947729768 seconds)
    (277/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.94789739 seconds)
    (278/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.155431422 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.939630395 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.975837123 seconds)
    (281/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.220463916 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.898230389 seconds)
    (283/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.902606696 seconds)
    (284/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.660358142 seconds)
    (285/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.151949358 seconds)
    (286/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.165850147 seconds)
    (287/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.074490004 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.251897032 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.52243023 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.941081146 seconds)
    (291/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.009439661 seconds)
    (292/309) benchmarking ("sort", BigInt, false)...
    done (took 6.868389317 seconds)
    (293/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.897698942 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.907312008 seconds)
    (295/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.037490499 seconds)
    (296/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.440237562 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.534529761 seconds)
    (298/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.983332442 seconds)
    (299/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.172621309 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.85806555 seconds)
    (301/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.923707356 seconds)
    (302/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.852447051 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 3.602235093 seconds)
    (304/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.047683871 seconds)
    (305/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.085064774 seconds)
    (306/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.871718965 seconds)
    (307/309) benchmarking ("perf_sum", Float32, false)...
    done (took 3.3541768 seconds)
    (308/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.985105 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.853940834 seconds)
  done (took 1013.507873252 seconds)
done (took 1015.370061869 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.904062303 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.893214045 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.877382595 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.899943102 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.989297334 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.906452849 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.888210976 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.87926515 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.925696788 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.927681129 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.876867088 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.905619178 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.879120645 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.877825592 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.876823688 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.891854105 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.187697929 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.907160709 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.894539039 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.887935849 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.895457662 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.877088715 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.926539876 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.904672355 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.882095975 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.880007078 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.880875575 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.899202566 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.989498363 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.882130922 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.881007677 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.889447226 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.188254595 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.904595106 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.873335812 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.89727908 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.890733003 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.88729471 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.882338882 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.911402422 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.332751162 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.886072607 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.879884822 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.878967921 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.87923548 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.882580523 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.880243149 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.886150205 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.891463602 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.895407091 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.328744115 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.902649739 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.883178283 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.880995791 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.890870664 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.881161505 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.883496471 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.895758673 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.900102886 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.896080285 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.178486199 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.912581263 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.88134612 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.896381765 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.888548596 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.365860137 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.882824416 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.884960093 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.33540638 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.893289378 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.365459968 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.896671585 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.881772323 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.89462753 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.912558354 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.190722906 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.904511292 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.879977804 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.888613383 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.880311295 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.890686072 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.894143466 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.886414024 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.881388596 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.89529332 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.909159387 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.89230333 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.881660023 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.890894681 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.901576966 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.88902615 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.893363672 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.884861072 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.877147805 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.890839485 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.884764115 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.884524173 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.885871227 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.886943354 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.89337468 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.333604761 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.905656682 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.87922002 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.878393955 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.882049404 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.897905115 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.333157418 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.890439195 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.904761638 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.929828335 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.883929092 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.181092989 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.91497008 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.899532806 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.893537399 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.887469992 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.877975358 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.18145024 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.357862599 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.905946122 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.885713448 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.881872559 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.898777808 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.885323126 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.879408522 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.192982123 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.912430131 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.897258944 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.004614479 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.894017217 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.91599068 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.881882193 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.88705809 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.912461256 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.900420173 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.917285385 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.8868842 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.899473723 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.900642917 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.881689266 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.897467266 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.894361091 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.886081135 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.891269532 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.878689878 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.921745319 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.898489741 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.897648461 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.906486519 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.007789211 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.882379005 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.185068251 seconds)
done (took 295.849101777 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.952088614 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.87733422 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.987019106 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.88380696 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.966379592 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.97012227 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.880635455 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.880978057 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.88092152 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.306052269 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.881662369 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.881491143 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.881472663 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.880838163 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.965927857 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.884165988 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.881008741 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.224982451 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.881962814 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.954397267 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.878548032 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.882045972 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.883150376 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.267537817 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.87764756 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.880083887 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.95608457 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.884019668 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.230699168 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.883272614 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.878536527 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.230854729 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.974224492 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.902035761 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.893865941 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.892259327 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.968677227 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.889542601 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.965410493 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.966174937 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.990871455 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.923498442 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.883806685 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.879826978 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.888033564 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.885223025 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.882197125 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.913601468 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.88046385 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.881843697 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.226323074 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.895216296 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.883660053 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.884205312 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.882807566 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.915305288 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.883920274 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.884964143 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.974896704 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.885626257 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.947827075 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.268106415 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.264667135 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.88583723 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.883928571 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.884355595 seconds)
  done (took 185.364253071 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.950624605 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.95956677 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.953630754 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.890079052 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.935802147 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.95909197 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.891004628 seconds)
  done (took 15.355447854 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.891095197 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.886633264 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.934884891 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.936106528 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.886849964 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.036243019 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.887219601 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.897086185 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.885306307 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.938496321 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.887736009 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.886869996 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.894430105 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.879288362 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.935059199 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.89821692 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.002518824 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.88750583 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.886788797 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.03809234 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.885241586 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.894673198 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.94038271 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.898449 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.888162734 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.893103963 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.468746734 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.887230653 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.885501809 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.886802666 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.88529325 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.930809051 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.88818069 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.880605092 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.884953653 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.003750758 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.887228551 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.887158866 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.888031179 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.885056529 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.887776308 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.88817899 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.888281035 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.885560242 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.88843001 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.911358152 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.888079842 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.888015201 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.888840806 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.888784525 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.937558982 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.888978302 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.886146503 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.8869393 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.945017289 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.89632276 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.88850148 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.887298021 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.889046109 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.887394681 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.040308458 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.936678152 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.889117713 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.936704648 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.889540172 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.890708676 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.890394709 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.889893154 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.943477539 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.889866107 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.936834813 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.88710847 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.047697759 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.912547174 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.891243666 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.891632915 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.892299478 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.891262242 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.883945507 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.895906408 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.887283238 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.890336561 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.894851843 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.329783631 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.887409643 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.00196784 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.997151732 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.887305271 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.901049349 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.896094924 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.888087487 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.942648661 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.889129288 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.887599113 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.940654925 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.004146707 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.945295937 seconds)
  done (took 208.040823742 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.893691957 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.897269402 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.889715961 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.903928654 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.888012222 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.888215784 seconds)
  done (took 13.18105638 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.889744126 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.890668065 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.887554645 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.888645681 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.887910056 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.888484689 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.889303766 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.887648424 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.889777611 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.886581118 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.887125788 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.88719229 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.886590769 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.886000423 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.886791255 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.887200718 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.886667219 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.885006788 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.886609871 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.885903527 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.039255684 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.886507219 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.886934533 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.88664756 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.890788383 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.886955293 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.894060234 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.887132729 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.887845277 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.894270297 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.889981112 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.887384739 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.888052413 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.891870858 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.890682238 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.886531365 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.892111915 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.887881237 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.884848091 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.887810064 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.886512711 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.886773043 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.88808427 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.887597442 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.887792967 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.890291321 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.892463851 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.894519874 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.887608544 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.888285144 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.888955356 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.888401613 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.888292798 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.887588492 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.88742769 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.891247154 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.891830959 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.886754294 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.886990193 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.887939948 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.887364616 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.887237609 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.888062456 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.890347101 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.885337192 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.886330603 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.886891711 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.889721667 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.885951617 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.885883494 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.886670049 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.883487431 seconds)
  done (took 138.919210971 seconds)
done (took 562.691839155 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.093814 seconds)
  done (took 8.910314117 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.969970272 seconds)
  done (took 8.888015589 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.599345813 seconds)
  done (took 10.424613997 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.892066994 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.894458584 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.901658241 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.89874014 seconds)
  done (took 29.423640432 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.901595707 seconds)
  done (took 8.7291282 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.905921482 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.890805361 seconds)
  done (took 15.658552227 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.974234752 seconds)
  done (took 8.803120228 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.991945395 seconds)
  done (took 8.82418751 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.909104956 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.897904217 seconds)
  done (took 15.649115608 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.875676716 seconds)
  done (took 8.70127707 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.637255764 seconds)
  done (took 11.474775869 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.903232789 seconds)
  done (took 8.744524212 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.954475415 seconds)
  done (took 8.780443989 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.140551774 seconds)
  done (took 9.96701012 seconds)
done (took 164.796495185 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.891424388 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.89335896 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.891135176 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.888595719 seconds)
  done (took 29.387809187 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.927945253 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.929222191 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.929732596 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.940136038 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.935273351 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.928918854 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.920795186 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.919662419 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.938989328 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.93259816 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.931000858 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.930027236 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.935725269 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.925115261 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.937107624 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.932244638 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.940599783 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.929194956 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.920994854 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.933511467 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.89561289 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.938163967 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.934109873 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.893315752 seconds)
  done (took 48.104253669 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.089882168 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.968220772 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.04780004 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.947055124 seconds)
  done (took 9.874170421 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.949416217 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.953687674 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.957625501 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.000403551 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.027272217 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.959361152 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.922173572 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.917026669 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.903766383 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.947609029 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.023826083 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.962377448 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.033214434 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.895147372 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.077471892 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.893289286 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.896717712 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.946048587 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.000048058 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.020842146 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.898260217 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.946881368 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.952347223 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.965364365 seconds)
  done (took 48.873266929 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.897801994 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.903278409 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.900412901 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.895664916 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.893674453 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.894285857 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.901149596 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.896948679 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.912536056 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.896654442 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.894044709 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.898088034 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.893073109 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.89666576 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.894595822 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.907975219 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.912540384 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.895617473 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.898601003 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.89850576 seconds)
  done (took 39.807988139 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.887118746 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.744288339 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.243957286 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.141528105 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.88964144 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.889023755 seconds)
  done (took 31.617604024 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.906782644 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.895681376 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.890469243 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.947758438 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.029191383 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.898037418 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.890993076 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.899932918 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.938103844 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.953668382 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.908251147 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.918671547 seconds)
  done (took 24.907571767 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.883214805 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.879781814 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.886528319 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.892988811 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.895932405 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.894196663 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.890775973 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.876467778 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.896626604 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.900169826 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.887656182 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.893214333 seconds)
  done (took 44.497795047 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969545203 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.920552934 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.893053989 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.563072672 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.255954276 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083645131 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.48154152 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.20450335 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.87627664 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149691781 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.84902929 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984187268 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.139652193 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.443026358 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.9137329 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.341377832 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.183839948 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089914641 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916615619 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.581989528 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948317053 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.115050312 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.649706692 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.939074763 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.092260259 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.0156278 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.143495841 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.880701069 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019296159 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917968369 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891641241 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.878480855 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153996536 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263817765 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981333731 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893048387 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.498953776 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.600343273 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.86834044 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.710158655 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.635228746 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.007472149 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891923746 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881863515 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.818124664 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.083057084 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267540237 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.886648217 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.59261311 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.882726209 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.897465885 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975748691 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.885555554 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.700624917 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794652242 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.88269858 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.879156721 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888328551 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.453443039 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.009067509 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.122683637 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.860526095 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.977451894 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.671316254 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269804462 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.036438267 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.886475899 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.885103154 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821195805 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.679604107 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944737435 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212153542 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.903736109 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.535002587 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183548994 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.000706744 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.824397467 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156444962 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.478091071 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.862299305 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113102749 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.884354105 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.82130178 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.831772085 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.82029166 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143576266 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926141423 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.645647176 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926666777 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.212883382 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.894692624 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905875608 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910198972 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.106910572 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.771751626 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888383216 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.720185233 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.028935841 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905531013 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.215751248 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822645638 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.886593737 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143379395 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.098045275 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.009712378 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.392133367 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054213145 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.51099903 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.943733543 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.088346253 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.936952959 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.157578445 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946880815 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.031987596 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944487765 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.887080235 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181146945 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.532286385 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.030075504 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.986224643 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.012821317 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.214313774 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916101028 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968845833 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.889905294 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.887038637 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.701484109 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.444363509 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.888623385 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.890779152 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.011233356 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.937699703 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.890010948 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838592084 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.513162595 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.933472282 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.900951314 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.114291841 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.521953103 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201099677 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.823082279 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237747641 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.979636619 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.110727888 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.535183833 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.965250799 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151549011 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.014000766 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.06097869 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941754631 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903805791 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986810528 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909276276 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.082802759 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.187149941 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.8904522 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.893332489 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.695378458 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.927984461 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89696223 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.893374499 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.639867813 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.155906885 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.914366608 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.89518832 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.776646855 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.903718786 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956542216 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.894737485 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.894947278 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.428113575 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.601004561 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.898397825 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.470126767 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11151538 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895984502 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.618732699 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008919579 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.977954747 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.16045372 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951997725 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.823477694 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.598873499 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.581040929 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886879116 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.817946807 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.881939383 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888820695 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889817316 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.079562523 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.159915388 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924900951 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.597784801 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.935106947 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899787429 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.892870308 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888396135 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.408253293 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.035459883 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.134224449 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.937263368 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032678605 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.902691017 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.823257777 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.892838779 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.894418464 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.889473239 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.891381533 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92213308 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.615101686 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.287293499 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147723633 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.498306519 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9018929 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.638447554 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.951189516 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.884768229 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.751051492 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.112824215 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.978598535 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901695974 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.899994553 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.616679676 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.586061542 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.454403184 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206039272 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.193556336 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329006324 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.158787289 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.918227423 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.2260471 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824096327 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.447844878 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.950219121 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.231380203 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83717449 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975989568 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.541137039 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238100271 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904427769 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116239194 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273479205 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.673485288 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067538412 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101687527 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924546153 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.09420624 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.854617621 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.175623968 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034277147 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.636551941 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.101388633 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22306956 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.617924199 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.023492792 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.889101979 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.571234023 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976131877 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.605675571 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.065173737 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.120042689 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.854337271 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380780053 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.902358229 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.116491497 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238578968 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.116660921 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.018142119 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829059738 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.902508835 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.903481378 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.892078583 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.907101249 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.773898754 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.145436477 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901414522 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824051691 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.056628684 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183252548 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.793412196 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.889952894 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887211379 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171724626 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.486740305 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05299467 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.030275333 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.404916896 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876543734 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.809261307 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809076432 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.569885072 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.880546357 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.855050324 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07952029 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.972958262 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.82381039 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.018401658 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.959110103 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.128052706 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.887030325 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.144323373 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151768008 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.572363876 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898905618 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.971952074 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.585175252 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.008942932 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.890053388 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.12638515 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.646416049 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.117654471 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.921730862 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.852004138 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.891804288 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.09840845 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.887882737 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.871833914 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130284347 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.612363808 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.895043682 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339038121 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96309611 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.837661792 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.950788101 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.97939794 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899006434 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967860114 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900378801 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.902003817 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.897329948 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932643931 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.837017355 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.02537415 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.901789337 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981402407 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.063666583 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.419324064 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.893899839 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167332546 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261592628 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.220696215 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954768227 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.89042779 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891074244 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825210065 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037065469 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.117374905 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163824804 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.022031677 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.004043845 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916158879 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.618689849 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.171130764 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132983571 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166053086 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.787264651 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.464612099 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.933980451 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.888177657 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89936185 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.095938554 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092119929 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184545741 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.021806014 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.017278511 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.245992595 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156819352 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.882516943 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.885604282 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.472981039 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.884427606 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.696500528 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.937727612 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.83990572 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179624258 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904980869 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.279153674 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.916699687 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.05463747 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.667009857 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.631347059 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.187214667 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.885339235 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.959941263 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164398621 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.280351962 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212152169 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963150383 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903734281 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.999075117 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040506544 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.773204525 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.892797772 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.894626314 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.114041421 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.607174041 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.904721949 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171808135 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215743416 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.892971484 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.77708811 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916265304 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.904276284 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.12132234 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163990218 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.151319216 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907849792 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.906289414 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.714598943 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.171375634 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.960376011 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831000307 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.898526094 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997071064 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.144576157 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919518755 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.348561085 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.608778703 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169179794 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.896768133 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916815656 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.100951747 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.264683157 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.227153582 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.438051775 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110371254 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.487221579 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.525565107 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203345203 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.900634942 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.109700409 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203345181 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.898160168 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.021664605 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932456293 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.16411346 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205036561 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.037343398 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.641815772 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.86999717 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.240617323 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.451227616 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838697069 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.906042832 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.959777022 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.896776106 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.031814787 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908829867 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.781697849 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.112785046 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.661818244 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.171063586 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.90000369 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.891834436 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.705752128 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.246006753 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932823118 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04390766 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904956063 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.572250016 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.247461406 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.152553696 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.038146704 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.906619077 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.901727672 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900538089 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.8901938 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.098643729 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.093569813 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170697171 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.068973463 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.936151104 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.900861474 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.116413278 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109989578 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.923321142 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.049977403 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.026960951 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942655239 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.802984246 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.409159069 seconds)
  done (took 1687.363093058 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.912961836 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.929640719 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.926684233 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.936894237 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.910836167 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.955562727 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.913992185 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.995824743 seconds)
  done (took 57.312996012 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.901789728 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.095689721 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.907045674 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.899120973 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.903735269 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.897048204 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.060765857 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.901816712 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.909099216 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.905174432 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.8941598 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.885990004 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.202176312 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.914478678 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.890269345 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.875125417 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.891720397 seconds)
  done (took 74.776324453 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.894868071 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.979293609 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.91083791 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.905407768 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.839028253 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.88258745 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.655465943 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.912265713 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.879346721 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.107816091 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.512196833 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.89089284 seconds)
  done (took 90.189760534 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.877920411 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.871486539 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.874190714 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.873389375 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.872922533 seconds)
  done (took 11.176358416 seconds)
done (took 2199.744411228 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.221116817 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.094226645 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.103600649 seconds)
  done (took 5.993430969 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.01515919 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.059394999 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.179389326 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.199208986 seconds)
  done (took 10.250924255 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.150279361 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.241817254 seconds)
  done (took 6.184759836 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.264825101 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.863097431 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.246104033 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.857931283 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.85935475 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.855733122 seconds)
  done (took 22.369960215 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.860003446 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.862031739 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.859752216 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.862469151 seconds)
  done (took 9.23097659 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.840666146 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.560894914 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.841988391 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.860154399 seconds)
  done (took 20.889811479 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.605142102 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.619123434 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.599955167 seconds)
  done (took 9.609846078 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.447896472 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.796733189 seconds)
  done (took 9.031618053 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.145769349 seconds)
  done (took 3.965359046 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.02056141 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.20069264 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.358765243 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.405397563 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.489003145 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.602177327 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.213145667 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.136828058 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.286963265 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.339872678 seconds)
  done (took 24.873050108 seconds)
done (took 137.793310797 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.266695489 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.123822585 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.088071349 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.26438938 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.105381185 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.088731426 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.109666056 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.244258104 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.726123019 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.725379511 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.218010282 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.104711877 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.051555774 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.123038251 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.051000835 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.24898316 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.109410176 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.283980118 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.916436692 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.11425049 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.10647346 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.857826611 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.064087501 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.870208404 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.109440022 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.03916261 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.435261357 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.253358849 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.071890408 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.445911751 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.036760794 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.26883552 seconds)
  done (took 171.342192371 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.801244195 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.885301349 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.887169233 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.885780522 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.372974006 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.884112665 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.883861905 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.884298456 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.137859073 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.099125221 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.885197849 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.333321232 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.885735841 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.884182819 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.887547385 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.885487363 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.227223672 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.826585507 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.884302159 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.892364956 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.895263143 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.249027643 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.901389223 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.339298118 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.278715638 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.916943693 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.887091928 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.922929609 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.895556317 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.897472166 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.903117072 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.886718195 seconds)
  done (took 209.109013629 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.889908014 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.887977254 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.886287158 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.888027688 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.900960514 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.89323723 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.884519326 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.886247408 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.464771914 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.455602265 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.901508397 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.895677908 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.921043286 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.887189797 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.899785124 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.885877531 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.891549421 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.892741228 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.891873163 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.896491135 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.902636515 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.714093089 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.905778315 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.683011572 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.890744246 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.8890621 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.8830717 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.892851485 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.881577009 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.888665311 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.890662035 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.879425471 seconds)
  done (took 221.149453398 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.087583032 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.891515957 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.890688097 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.85193044 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.891515758 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.889239996 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.884415663 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.087747603 seconds)
  done (took 19.309243786 seconds)
done (took 622.742803626 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.314255979 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.154025207 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.072595829 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.914313736 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.17534224 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.942723308 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.909280132 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.975109626 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.640312029 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.976058436 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.54375156 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.925440414 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.636735304 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.931836563 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.040020279 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.96487954 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.472290701 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.565577108 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.086157355 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.983153764 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.08683162 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.876277531 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.984211151 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.66602515 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.654716218 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.917386241 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.096999355 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.480137512 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.927525275 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.085051414 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.669445876 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.285687859 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.919476569 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.907948739 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.963091618 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.944467472 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.269787826 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.916576505 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.039990183 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.674687482 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.998360312 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.515339996 seconds)
  done (took 103.921007312 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.881520515 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.877860844 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.878323863 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.878352988 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.878586464 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.879955588 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.879518023 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.881858362 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.878051932 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.879638999 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.87887687 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.880187528 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.879322244 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.879953117 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.877786524 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.87745366 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.879908065 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.88074873 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.878985788 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.878301367 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.879978689 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.879595004 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.881896296 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.878567483 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.882087208 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.879915677 seconds)
  done (took 50.696044719 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.893666915 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.035787589 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.11421943 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.908212663 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.890658884 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.89525234 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.91188323 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.898997386 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.895896269 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.894773612 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.985016572 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.899372952 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.911569713 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.117428761 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.90767489 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.892730152 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.893622466 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.892081753 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.043164387 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.906811898 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.912933138 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.897175351 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.911463697 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.905461984 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.895426882 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.893315106 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.897134987 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.363154428 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.898959812 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.983476356 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.932174986 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.910034246 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.330565395 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.126177911 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.942900466 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.898154345 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.89594645 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.991425411 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.896738574 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.894527065 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.912493334 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.897255482 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.117368632 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.394038831 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.904961659 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.894500977 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.373056312 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.99528622 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.931394303 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.903070682 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.122402329 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.909259842 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.897386772 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.895540729 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.940343362 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.901858464 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.893183416 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.257699007 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.903097563 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.91246193 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.896145332 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.895483703 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.051639286 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.901341951 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.041215263 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.899925325 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.903297075 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.895721575 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.119145204 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.908051081 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.399959699 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.905591662 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.895351956 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.987949733 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.043463341 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.395099025 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.906577466 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.052009292 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.346616943 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.916685485 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.89925785 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.355314474 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.920982763 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.899044108 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.900808699 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.898267422 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.896758502 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.940485367 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.911815419 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.329265069 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.398728843 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.268761679 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.919963533 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.908660733 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.897869316 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.260483951 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.902243054 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.89807642 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.113382055 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.409607185 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.908599465 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.904794178 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.381900729 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.909793217 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.916250417 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.902937175 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.124938984 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.910804284 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.942176545 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.899616562 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.90522 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.901267146 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.917409115 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.901332999 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.899453431 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.372061612 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.004138873 seconds)
  done (took 234.938125135 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.892152604 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.900291952 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.892918886 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.8911881 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.891114351 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.896897385 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.889878541 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.891059097 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.897393024 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.891302763 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.892216328 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.894857013 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.892516621 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.896892169 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.411952825 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.899661215 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.504062119 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.89389795 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.894533316 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.891693331 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.577239807 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.899928606 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.894413568 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.898238539 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.895498089 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.893340491 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.896018685 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.928365361 seconds)
  done (took 168.716396456 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.901577173 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.083092115 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.917972273 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.936487976 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.910937662 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.900435136 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.924689232 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.920879168 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.906909471 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.899730404 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.89935413 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.962136737 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.910005422 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.035329138 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.930114501 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.935123502 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.007692368 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.90776466 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.899554839 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.90012952 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.928402727 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.897440175 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.961335745 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.023416313 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.917148237 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.01573139 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.906741895 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.902207384 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.90104782 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.018895358 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.916766663 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.962204656 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.927514752 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.919924169 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.021530556 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.016806153 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.00691494 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.930754252 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.905272637 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.901262071 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.900338612 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.890132241 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.017202041 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.919200435 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.902132566 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.01088512 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.920099365 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.904236444 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.91180094 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.901316946 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.914568292 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.920286082 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.970186908 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.031136723 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.934886292 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.928265002 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.92724102 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.19068924 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.911329932 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.005294389 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.894491102 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.021939631 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.922923725 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.890926563 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.902071091 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.908528079 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.931881974 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.935955212 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.009060905 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.909892883 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.004965022 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.938427032 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.910303676 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.902822476 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.904793309 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.02177632 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.019876037 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.937181907 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.939516524 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.934430759 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.900238313 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.903561629 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.893821183 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.920077494 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.908019459 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.020528593 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.020619165 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.911961024 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.905440088 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.906865855 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.905768731 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.929785556 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.02903445 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.938275781 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.003909675 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.970867609 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.976733636 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.917520143 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.917323668 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.907651501 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.968576063 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.917816938 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.916141674 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.238163019 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.97678605 seconds)
  done (took 206.160882097 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.356386804 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.95846217 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.959284107 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.195470571 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.327069954 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.685395961 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.949425418 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.954710022 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.978046723 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.116553926 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.010112093 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.967324249 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.93828139 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.928590308 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.956089044 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.974584679 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.959243266 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.24116099 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.067514655 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.088258086 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.936522614 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.232528568 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.27229099 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.33635904 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.988659557 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.290685135 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.631792969 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.198813987 seconds)
  done (took 62.339046255 seconds)
done (took 828.587219429 seconds)
SAVING RESULT...
DONE!
