cset: moving following pidspec: 3908
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.241839235 seconds)
loading group "string"... done (took 0.60197651 seconds)
loading group "linalg"... done (took 7.238707622 seconds)
loading group "parallel"... done (took 0.169046718 seconds)
loading group "find"... done (took 1.131337972 seconds)
loading group "tuple"... done (took 2.020467748 seconds)
loading group "dates"... done (took 1.299997192 seconds)
loading group "micro"... done (took 0.230621031 seconds)
loading group "io"... done (took 0.973105481 seconds)
loading group "scalar"... done (took 39.46979079 seconds)
loading group "sparse"... done (took 12.37559844 seconds)
loading group "broadcast"... done (took 0.970182583 seconds)
loading group "union"... done (took 13.45314178 seconds)
loading group "simd"... done (took 4.573524308 seconds)
loading group "random"... done (took 9.309665281 seconds)
loading group "problem"... done (took 1.98868614 seconds)
loading group "array"... done (took 22.188365653 seconds)
loading group "misc"... done (took 1.937699134 seconds)
loading group "sort"... done (took 3.266115716 seconds)
loading group "collection"... done (took 18.145051459 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.533084877 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141673164 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116879595 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.138545803 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.185236232 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131531596 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.141933033 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084478732 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.034199353 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.160821896 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138773822 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.480635475 seconds)
done (took 5.046754037 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.203526645 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087132992 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095860261 seconds)
  done (took 0.886440794 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065535464 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126497352 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.080126247 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067998681 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066191408 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080979821 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06614959 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066289492 seconds)
  done (took 1.266034288 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074312154 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068166639 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.087300772 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067866648 seconds)
  done (took 1.008705128 seconds)
done (took 4.152412374 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.900618636 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.236007632 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190227402 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.454520871 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.148124913 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.187882256 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.66636111 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.337716219 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.211286369 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099631775 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104887034 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.380021483 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106671567 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.6688066 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076899626 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105609599 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.157490887 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.419432093 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080688688 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082775566 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103629542 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140996787 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.100641817 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076638129 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.168871596 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.0691876 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148114607 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.094718196 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068140222 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.24413752 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189295833 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.676970393 seconds)
  done (took 10.442882484 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097176967 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.117584603 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068330575 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139124797 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104071139 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086520952 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070219395 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083001914 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090436888 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.157451105 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113588018 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105459243 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082011976 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06875328 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.100961523 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210251167 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106487471 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084786968 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088483028 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075642741 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121371998 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08228753 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094145 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077915822 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151980278 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195025313 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110414671 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.110926239 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068606453 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08090732 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131191323 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143039327 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06787678 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082210454 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.139214535 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111316021 seconds)
  done (took 4.542615461 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.036595752 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.159713798 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091300393 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151593154 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084869219 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109391844 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.081787816 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099124354 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.246389213 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.079301764 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.460650551 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128917556 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10143692 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067285318 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083884552 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067599951 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.519981297 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.144734399 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102598784 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101929781 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074723642 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086366029 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.371656335 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068292563 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065715478 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084478474 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059457415 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.101551852 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145682655 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069005199 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.201219383 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.109436874 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067281327 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120360761 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.185824122 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109190619 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122082653 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067064561 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065117213 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168626028 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09046885 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065795877 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105608682 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103700413 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119299317 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083549258 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067844491 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.185024358 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066306537 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099088162 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.893337447 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064752171 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.164366202 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079089495 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.082438325 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.266095992 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.1017108 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065505018 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080755917 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.262440994 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.16556737 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067292451 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065416517 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082147077 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.06775401 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.370572286 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082400017 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.979928481 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068208309 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075922824 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085005669 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069350444 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088140167 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071972405 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100257503 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066632177 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.107743436 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068325149 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065323579 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.08252679 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067836067 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.100443739 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.204692367 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066361455 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083545337 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065529751 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.084470077 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11219386 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087613988 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066185591 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113194023 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068872314 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067656655 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119023443 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06676288 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.101511467 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084122028 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113718947 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081801138 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.135512687 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068295426 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065026761 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114436556 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.086165721 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099830607 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093788277 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067360171 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152970339 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063831873 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081285103 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066543297 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081244558 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068185533 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067661684 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097969778 seconds)
  done (took 21.140815775 seconds)
done (took 37.874145385 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.294076778 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.090617615 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.091259483 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074721037 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.091793471 seconds)
  done (took 1.432466133 seconds)
done (took 2.19917203 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120546317 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116712925 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064075609 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113224926 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063661529 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116999499 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114079099 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081275189 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116851792 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06409996 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112672282 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065157288 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063840076 seconds)
  done (took 2.003712125 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083062619 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085122967 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085789243 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082574761 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07854522 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08251926 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079824688 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104706949 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080221626 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087556772 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064222933 seconds)
  done (took 1.672615703 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082246822 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084773579 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088034588 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08122272 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078577863 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082322058 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07999128 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102453735 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08085191 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090010896 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063904842 seconds)
  done (took 1.675678001 seconds)
done (took 6.107658357 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078565909 seconds)
  done (took 0.832101451 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.700334992 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.592644678 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083483042 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133694661 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.223395889 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.153171988 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.43978777 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.110553334 seconds)
  done (took 10.366017342 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.091165591 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085026032 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.082571223 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087859472 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068514876 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087926118 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071064184 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069425522 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084415627 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072621752 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087009022 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072171705 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084486745 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069263503 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069568743 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087199203 seconds)
  done (took 2.09400421 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093585751 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093215314 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.090588522 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075709013 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089093773 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072875349 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.091814708 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074452364 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087055319 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073211554 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091588726 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074173366 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088353167 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065707465 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.09066497 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077024639 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087259497 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075589789 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090925131 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075931005 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090754207 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065982562 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087563654 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074842306 seconds)
  done (took 2.841873366 seconds)
done (took 16.895078108 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.132016531 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075694397 seconds)
  done (took 0.969541571 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081495517 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.097618893 seconds)
  done (took 0.94831605 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08318042 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080839866 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088655915 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093370358 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081436395 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066398963 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.102596532 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06649476 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081252221 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066669473 seconds)
  done (took 1.579543692 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06875344 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092979552 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070889735 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096522776 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074816125 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080518374 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072760361 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083581616 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078366042 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078576839 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071987224 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099159763 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071690497 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099892814 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073328103 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08371673 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087208868 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068014079 seconds)
  done (took 2.224860121 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065939405 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066877815 seconds)
  done (took 0.905259205 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066710754 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063904604 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081856609 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067229871 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.07887855 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06273184 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078969601 seconds)
  done (took 1.272216929 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400568863 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108592434 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.243746608 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087937868 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102907378 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.263759668 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082389664 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071261116 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088100433 seconds)
  done (took 2.257708209 seconds)
done (took 10.927322776 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079368074 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086466374 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110121878 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.419870761 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105442868 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066242387 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132245635 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.221625985 seconds)
done (took 1.995281445 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125296191 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.611475813 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.399834902 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212796262 seconds)
  done (took 2.000616438 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.3732711 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092175155 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073645081 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067061917 seconds)
  done (took 1.384443538 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065738266 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069431816 seconds)
  done (took 0.913553696 seconds)
done (took 5.201316477 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066271718 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.10062729 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063898252 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066448139 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.080696051 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065913383 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066767701 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.08070461 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063871992 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066675622 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.081142844 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.069411549 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082114446 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.067899477 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066761043 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079025488 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063537511 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066826769 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079341848 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063861149 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064239818 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08183131 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064535931 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063667334 seconds)
  done (took 2.527380366 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086024933 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082546424 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072570957 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087444919 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071061222 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088182668 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072055717 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067410088 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087800531 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06939488 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085551261 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071340543 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084135537 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073995069 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084900599 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071085969 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088508225 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066916529 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069118236 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086787525 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072388299 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082778034 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071139307 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087394261 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070952741 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08586985 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068355499 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082474136 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072002447 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086654491 seconds)
  done (took 3.128129258 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070739243 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064079862 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.07996989 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070597131 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064143607 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080686127 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063923261 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079922825 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064880414 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063723491 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081404374 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.0637981 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064255415 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080315581 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065230671 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067551275 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096357121 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06448702 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079804384 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065127763 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067938814 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080468472 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064261457 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080451064 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063533726 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06431807 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08069564 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06443717 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065500756 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080763133 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067387949 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067760361 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.080357974 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071636449 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084298628 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06422693 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067981869 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080022911 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065014448 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064532496 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07948467 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.0645285 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06369188 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.086379368 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065102857 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.08092578 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064071579 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065560023 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080343044 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067359462 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062974886 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.080579089 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066427714 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081257828 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067648071 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06421596 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081631979 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063664699 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080886473 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06447177 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064229367 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079455765 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066566919 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064908329 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095398785 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071387984 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06364907 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081510728 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064680429 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081968191 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066116934 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078473648 seconds)
  done (took 5.948921059 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.117340032 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090777129 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082622361 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06582807 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079381031 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064091612 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068610658 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079701235 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066735426 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085825119 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064420952 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065237344 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082268022 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077146107 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080615985 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066743069 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086201872 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062200723 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064480862 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084517555 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065220679 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083429309 seconds)
  done (took 2.47259324 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.185728931 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087691613 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109538851 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09018429 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084388886 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073893707 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07045037 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086127775 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070704752 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084554264 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069176374 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085714346 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068645856 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08411392 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068796735 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086065861 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071169848 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084733699 seconds)
  done (took 2.348543502 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078125136 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066163608 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105309714 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067071485 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082988912 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069286615 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088262494 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075149356 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084865462 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067366501 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090999894 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069733105 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085368915 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066366515 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068899173 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082441845 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069191669 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082582482 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075258036 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08761913 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07218132 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090897026 seconds)
  done (took 2.515229015 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081527677 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067983755 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100910539 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085688985 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061909331 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065473471 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088364005 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06695647 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089209549 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068185573 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066744904 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080536588 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070929602 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082511066 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07165514 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08320157 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068601889 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065768907 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083984934 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06309272 seconds)
  done (took 2.304001929 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087052794 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084421734 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.178948736 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092042558 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067633356 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083848704 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07582588 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.084060741 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067463338 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107949519 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06863593 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084041223 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076216097 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088849019 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068839551 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091961022 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075656653 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091840478 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068035531 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084048093 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108826749 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068447146 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092381026 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067688168 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08426466 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067895428 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068686027 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088548293 seconds)
  done (took 3.169197772 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067301379 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06752819 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080704264 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064051544 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064502433 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080711556 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063862226 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064272791 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083351767 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064683014 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06663833 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.082562685 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067353424 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082643131 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066273748 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066544329 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082949878 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064490949 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06496818 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080248383 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066985001 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066239352 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082580804 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064976548 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080322219 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066178278 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064316915 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080482743 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066384984 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064566087 seconds)
  done (took 2.923498036 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075858681 seconds)
    (2/2) benchmarking "in"...
    done (took 0.090268789 seconds)
  done (took 0.965154978 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064634845 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080519542 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080939063 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070690953 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086719531 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067590457 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090740419 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070764002 seconds)
  done (took 1.408493606 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081684178 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077461869 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084865255 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077906396 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093840534 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083757315 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15135101 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084969802 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073641473 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082287695 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081098883 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066705345 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089919816 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067373665 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089138488 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073280123 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065161598 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088976699 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069816966 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.08170943 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069749911 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092301181 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069525278 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063172038 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084857833 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076019309 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094304616 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067927753 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086031857 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074270608 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072383526 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077859842 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067317126 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084226996 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06454106 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.092304572 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081964778 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085562851 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075339683 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068090449 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092813706 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063051192 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088178778 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073214312 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092678341 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067804919 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067693301 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07842123 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065375852 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085637085 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062491902 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067146526 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078410417 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074517322 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088888508 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077534251 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065926481 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085136788 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069549518 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08643589 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073809116 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085142374 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069692566 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066932005 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092512362 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071579267 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092028974 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.0625163 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061243242 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081551115 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077298773 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106222799 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073117159 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084200897 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068622741 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081051337 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069952746 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068423529 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088638734 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074208863 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08321664 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072343742 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090515803 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067110914 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069802383 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09099787 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06580892 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086156435 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065107831 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09913003 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066551121 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065012075 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081320345 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077218853 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086743203 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067061216 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06477176 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090852084 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061897651 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084074743 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068092551 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084689502 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07764986 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088249017 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072263028 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092257695 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075319282 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067071918 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086931639 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064129042 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084244523 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065599274 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073867336 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077627796 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069851143 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083973653 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067476329 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07557141 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081050418 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067145063 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090880207 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073522342 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082415699 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063554273 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069587772 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083369912 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069986701 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091281636 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065858217 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062522863 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079056962 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070301362 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083344702 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070066623 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087947547 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070185511 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061845308 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081211535 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071265856 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092168908 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067878312 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067487413 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089504026 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068307126 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082937045 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07333831 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086301534 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065726434 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072873716 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084431957 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.0626483 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08753299 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070490645 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066227926 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087203113 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071005404 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085905567 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067886272 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065616443 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089461896 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068052096 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082817517 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067842488 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082959152 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077056942 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068913452 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.079097098 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06475912 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091029819 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064959681 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066328316 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082865252 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069764763 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083954686 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065990078 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066324728 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085613363 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077879682 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088057735 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068449168 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089281347 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077973874 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08346545 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068889501 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066021542 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08401562 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068877243 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092206811 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07246998 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089081524 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06946 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062962003 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088842959 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074030741 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082921596 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064802347 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065712733 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087485218 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072573208 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087158283 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068296294 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0815597 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067110732 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070797618 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085696638 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067175481 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082675205 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072179959 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065625597 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091255867 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068612583 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09291671 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069927642 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078982448 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070439996 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082121963 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072675938 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06209356 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081948537 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06670787 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067627691 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083303868 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070146262 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078656979 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074186396 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091002847 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066991538 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066593658 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083809286 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07383635 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084749775 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070435502 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07068026 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089666851 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078370346 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08313242 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069758241 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09436135 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067522446 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061553007 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089213432 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065424581 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083207498 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065714331 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065011713 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086606126 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075148681 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090426813 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061975287 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086160507 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065910967 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065695777 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079261069 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072124453 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086343966 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067953457 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073154847 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08472414 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068541579 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087375868 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066573618 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068300917 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084909815 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070468123 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083741071 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069441215 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06618609 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086396348 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066938687 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082222593 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068804451 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066282399 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083889742 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072166492 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083614078 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066936212 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068814254 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085243822 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067413212 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084871969 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067502048 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069825073 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085387453 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067461513 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086176877 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062813915 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07350506 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083942235 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07432478 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084644333 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064263885 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089113955 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070057141 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071965529 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084881255 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068348844 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08587669 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066951924 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069088222 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0920584 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065633089 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095376782 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075299265 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084706475 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069882191 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067552964 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086009636 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06707253 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.0847612 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067787392 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067253298 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084517897 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07168008 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086030997 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067373693 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068613099 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084765004 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067734938 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085253858 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062085353 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066168134 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084463867 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067908014 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093436146 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06836471 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.083509096 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065930058 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068603102 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083083 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064748971 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09174095 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076193373 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085055929 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074027745 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065203329 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085536987 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077787134 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078258937 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065557895 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064561288 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082448883 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073713065 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084877395 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075894506 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08393347 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066570146 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064658714 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084448151 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065697532 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061442749 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081555304 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070715526 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082647893 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066992172 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067096028 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087828681 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068566652 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093288765 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066903521 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084412485 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067037237 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064705555 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083205846 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066330682 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086046581 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068262475 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06498624 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081727022 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066650559 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067319705 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085576073 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066702368 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085209203 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074226886 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068999965 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087008729 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07089902 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078901016 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070444651 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083819122 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066772048 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066393973 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.0876589 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070842863 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085741058 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076029639 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066090412 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085261741 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067520154 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082416328 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067439091 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066034959 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084443142 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066731969 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085937159 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074419022 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064839056 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087523923 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067708927 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085059172 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074221517 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085173111 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070065295 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091216705 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067465616 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069171327 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091726813 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070754778 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086717213 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06810354 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06831498 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089440991 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066705901 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090505612 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067638121 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067138331 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086761137 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065123086 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08410028 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067323249 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065612943 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089616326 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068013597 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083718789 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066841568 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064369685 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085321298 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070130404 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092655434 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069935423 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087568934 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062916074 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064233322 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085678789 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06556319 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086050459 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07053328 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073151404 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087615167 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068585732 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083556179 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076557382 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072341764 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088523247 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064876563 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087745024 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068188991 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086390794 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067946126 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067318052 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086340448 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070592355 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086187119 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066278961 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074048909 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087613255 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068371064 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085712231 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067575671 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067481957 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079806883 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067727526 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086679111 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072218521 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069357724 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084858872 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077189232 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082321709 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067349377 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08765175 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06659954 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071122415 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080196647 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068616737 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085603247 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068197093 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062207129 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083939702 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065103162 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069106846 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084509882 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063360299 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095270074 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075606205 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087297038 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066064062 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065875198 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079694596 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063338342 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083944108 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067953137 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068067882 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095099719 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06760454 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08344789 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062828504 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067107323 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087601037 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07078496 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082145371 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063034273 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065897467 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087958005 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073015948 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083566809 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066742866 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070201413 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086523422 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065564732 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087990233 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064574341 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070411036 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096911649 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06723509 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085212593 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072752643 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092026309 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067960228 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079369666 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067821613 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069840554 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084813851 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06840996 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085765651 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08184178 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087558745 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065896362 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066087527 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087301285 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06698267 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092118706 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068968238 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067155568 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089541453 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069307271 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092691063 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070431161 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091970248 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070431234 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087532313 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065905197 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06791096 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082979861 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06622309 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067125146 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085867602 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071602244 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091935554 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.0663824 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09497788 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076350486 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086630655 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064540994 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06626485 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084114422 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062592412 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085800626 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065798387 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065443297 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083456354 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066774438 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067488788 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089866955 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06827968 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085574323 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067515485 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061574169 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087066522 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069483184 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085986235 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064539545 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067368414 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085578253 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071362086 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088427092 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065299309 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068754836 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087041292 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068733405 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080594786 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074202516 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065529324 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087844511 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067128205 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085115458 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068517086 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070530724 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091304655 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068597105 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.087401741 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076566575 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087388584 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065085588 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064511767 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090609019 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065644603 seconds)
  done (took 46.209191151 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108383956 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082102245 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063286001 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080584028 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074883412 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082263024 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062791793 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064244312 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081924898 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066513829 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08035215 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063173427 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090135377 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086705794 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093784184 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067300561 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081256575 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064293461 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080610492 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064576637 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089436973 seconds)
  done (took 2.474990692 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076126098 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.089902566 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074475334 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095866638 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06888142 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090301733 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073732014 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090036661 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095879348 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068054669 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094878971 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072742157 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.094327553 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068869054 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085913115 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071915018 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09536735 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069167593 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.089498055 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073703451 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090693843 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074458959 seconds)
  done (took 2.647479381 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067435469 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066681469 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086231844 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062687449 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06658679 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.079704622 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070563584 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083096341 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070074224 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065985172 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083459219 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065951908 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085433422 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061817445 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066952827 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082755718 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.132980206 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070880925 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066101338 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.086181596 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062853839 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087090836 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063217798 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062426212 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.084064459 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071444205 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.085601574 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065307 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066716996 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084026306 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06683312 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083038582 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06846375 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067218561 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083505967 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066405182 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066301325 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.084467865 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063168101 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.082822611 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067655914 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062929479 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085789984 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068870361 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064770778 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083035251 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06885415 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.084334015 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062164619 seconds)
  done (took 4.483257889 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085019188 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130715125 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087510614 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091198617 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.101932486 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093215064 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073868377 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112359144 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064161139 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084351928 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082747588 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.101224958 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085794233 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072424836 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092036037 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067598932 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067731556 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084543308 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070660352 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084707217 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071377728 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091433531 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100542662 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082273465 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088586075 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066964212 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084351938 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071395853 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098805525 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072665739 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.090064501 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072957977 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.101324943 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07191591 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085981628 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068600623 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.101839136 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085378466 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069759378 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064355353 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087886467 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071556192 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.091863235 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083591326 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08570871 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072268238 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085606577 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06420295 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.098898196 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069407823 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.093667882 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100955229 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071254317 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086004757 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071692565 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100789387 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067721641 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083469371 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.07098811 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097476503 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064985422 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08914365 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081618964 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.086737248 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074583859 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100583377 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072847398 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089439989 seconds)
  done (took 6.662380783 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076239446 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092451813 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082075736 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100650518 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092721919 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074066599 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091928757 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073409118 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092445882 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079566299 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09244883 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11293199 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069455594 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094991187 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074121829 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09223856 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074150848 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092781547 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073386559 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09289868 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092324477 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082586926 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09177081 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100923396 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104295949 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087607505 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074883906 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09174406 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082633212 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.092639436 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103441965 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074726881 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092304337 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100820634 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086651863 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092693825 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067194392 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091937242 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074397972 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091610664 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068867089 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101249998 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073408689 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.087347847 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074098942 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092929103 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.100658753 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086343173 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094831712 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09733259 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073682266 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100165607 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07303152 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092506686 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100295588 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107287157 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10081583 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100164878 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074724776 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100677906 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100302903 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108094898 seconds)
  done (took 6.36824441 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088509816 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094737778 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097838245 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063110014 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06515457 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090814756 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065601136 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083612484 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075496271 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094585941 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079199641 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090231366 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074513874 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097093588 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08959806 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075141496 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088843916 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071840139 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09436943 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071712331 seconds)
  done (took 2.50842433 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076317885 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104111305 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068576849 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072750572 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08987272 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07233657 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089046139 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06988125 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086368812 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070723461 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095930524 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078650685 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086195562 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074421688 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095448133 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073161295 seconds)
  done (took 2.165228863 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.079319335 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.096681372 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082031038 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086625722 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065635678 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.082852352 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068066304 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062992395 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082611872 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082565679 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087171041 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069902952 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086636479 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065975864 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063572122 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089137257 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063826651 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083887067 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067557941 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.100748139 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07879134 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085125569 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069009993 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068575087 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.087711772 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07255956 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.086336229 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065376238 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084241532 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068684794 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087165901 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074900688 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083547703 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066311413 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065379743 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083071403 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067730982 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08618725 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070771365 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06682969 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084497575 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066694414 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085645639 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069015756 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082319924 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068528058 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063381899 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091822251 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065969363 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085932491 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067488926 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.08827893 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068340636 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077163022 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.09007785 seconds)
  done (took 5.105130255 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081115147 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069945635 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082083568 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065293119 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089131526 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069143229 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070141016 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088347387 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068734909 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083516138 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069260226 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088628698 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069350913 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07076225 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088172968 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070973038 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081341466 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070265805 seconds)
  done (took 2.242139727 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072696282 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067169564 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093512618 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067915418 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085791707 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069938606 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062738471 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085136401 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066180882 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085454132 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068148388 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069617872 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084432681 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069880031 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085573074 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067765596 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069230441 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084415701 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067796514 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08145994 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070670665 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065381535 seconds)
  done (took 2.508338476 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095199388 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082114683 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.163762542 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.100048891 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087839863 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.093200967 seconds)
  done (took 1.490264405 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091245189 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099679531 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068153397 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108276406 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075021898 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088127577 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069509197 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088184507 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077860251 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102269265 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068857514 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097306745 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097071802 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077806835 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093852777 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07437917 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088352594 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06899886 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086239096 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107251241 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069742745 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096448791 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069821587 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08877774 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069172241 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096424483 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078043802 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101972149 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088364233 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077853428 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094511177 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070635522 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097514411 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100791143 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071562159 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096608209 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06997957 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105873226 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075149535 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096507726 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069761605 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094569529 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097275456 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075196004 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096157754 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069790342 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093344831 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068965789 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088803214 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11215571 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075222011 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096484194 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09405276 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078468651 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097639717 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11448431 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083175799 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09655513 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094583688 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082761876 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099379976 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074539139 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097462826 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101163474 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07537425 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096567355 seconds)
  done (took 6.636505209 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083992919 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105918507 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070070619 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101889022 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097496593 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06968566 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088439072 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070263845 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088493297 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069263932 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130506216 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070286568 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096717792 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096613665 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069597435 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087757691 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070500874 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096428912 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069514468 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113376227 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087840664 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07848332 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097049362 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09642874 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084121304 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09414228 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069354429 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088146499 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069235922 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088121008 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074651673 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088699697 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096669186 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069400466 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096789327 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069998521 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088809414 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074925417 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088360608 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07475233 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096998186 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106396408 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070519138 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087803338 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082903379 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088942605 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068973342 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088641264 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069018408 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087815163 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083222287 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103524503 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102847343 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096528233 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070004336 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08877717 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069931349 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08867535 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070136345 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09370157 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078475873 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087886465 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113820564 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069225219 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088513063 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078679226 seconds)
  done (took 6.527063434 seconds)
done (took 128.518324595 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201284505 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184808544 seconds)
  done (took 1.254956745 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069090996 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096443524 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098246866 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128393799 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086623591 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101296922 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.11879728 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079845207 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066840631 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086446901 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067950367 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088077201 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131761988 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067257411 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086720767 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069441318 seconds)
  done (took 2.318475128 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102991688 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.197007396 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109870605 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06625211 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099231796 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078808929 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085448673 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077650083 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095351785 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066475114 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078654666 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.0959642 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065290486 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095988283 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075122278 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.097986171 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065956379 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098247295 seconds)
  done (took 2.531984852 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104558588 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142089589 seconds)
  done (took 1.126041244 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.200497614 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123120858 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203600768 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.420019063 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.206707872 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.280584012 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.173307754 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.171767951 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.156146365 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.168935809 seconds)
  done (took 2.978456632 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099369058 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171883908 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.312660726 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.1378273 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086426888 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.1164842 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139010449 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.090085359 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.102018909 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101026039 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081338292 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098477816 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097878828 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095472082 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074887481 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09808041 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121482045 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075086119 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076383776 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096657301 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118369812 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068008631 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075438608 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094423478 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078171107 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097950043 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067838915 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086049354 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076444717 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09458885 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079284751 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115694864 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096935078 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132041008 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.082657021 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.13183937 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098183643 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072883515 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094713747 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073478987 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097316384 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077532875 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104487461 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076955254 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086245278 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07778322 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086165274 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067375755 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.099493671 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077882907 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099173231 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079460504 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.131101729 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.097521598 seconds)
  done (took 6.244242747 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.751355623 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110592581 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094317766 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.810428688 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089268214 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105777535 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.717118281 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117555864 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209940596 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.767095579 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089260883 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097823351 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.181132058 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.212959064 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.899232986 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.283111156 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.637734224 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104133789 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10865529 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.132424142 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140155906 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.176679837 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149817426 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.408122589 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075268809 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092134168 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.137895099 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075743083 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.13773542 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.106567238 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093077284 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.156194725 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.225723982 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.157204215 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096563419 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070756788 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091424134 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.149282735 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.2188679 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191895957 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.158392557 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068478381 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090167341 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139675613 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130489036 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068746861 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.140294691 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.152145465 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169662165 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074100503 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075341279 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.162719116 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138979995 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.143437429 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100829579 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.263826172 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288370097 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070110955 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12016999 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10341558 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.213514323 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104607177 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.199577937 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139096716 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.169527268 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090401142 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.73276417 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.149515244 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090609324 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076208766 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119544555 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073445563 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.158500548 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.124906579 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.384765365 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.141321745 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.095011644 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06965951 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204899646 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082779963 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090704345 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141849229 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075284897 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121447739 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.143303518 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.162638189 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.147149249 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.205793367 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.142206773 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.139685539 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094473626 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12359838 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.075728928 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.192860453 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.194574668 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.141262323 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.188782699 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139170288 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162395596 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146677235 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076700621 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.148958834 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12063104 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10070479 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140025353 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.191893584 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.10286381 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104226018 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072941405 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.160171963 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.105139302 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10663681 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139967492 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.147850055 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.45313767 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.14851865 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068129113 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107301727 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140196875 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.140804195 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095870666 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.218416069 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124322175 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.148177654 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121600491 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06713117 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120777835 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.140319091 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100707326 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121873174 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13946533 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097494262 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.211291357 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.170973382 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098108323 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.196998294 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.16536003 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.09467651 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.149422834 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120273523 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146421262 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078859713 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137771542 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097151422 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.722605162 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.163715881 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100219128 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094229964 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165216948 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070669944 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103804971 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083423662 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089408161 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755492272 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105739431 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079649286 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104557229 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074301907 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121376504 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136040649 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09496072 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138935797 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.203127428 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075853197 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118935397 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103299029 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.138967334 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075217292 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103631127 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08278439 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105255045 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123255068 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072111483 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105035596 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146747904 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.140606179 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.193355167 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.548739808 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091816485 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081994042 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.202347587 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069556423 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.264908474 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136113129 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.199240168 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141371455 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100466854 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.271728216 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142655772 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.166084189 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106762302 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152319833 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067531397 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137283733 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.165073285 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071454862 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095795908 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.141324903 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.146158982 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142258247 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.911757131 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071349932 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204571481 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090130079 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.151862247 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075881795 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098071066 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.260845307 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071701969 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14624827 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.14201189 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094422592 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082948239 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.848522318 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.083453495 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13771181 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095937196 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.193864687 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.142498892 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.137383123 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138969688 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09474814 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.140545608 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.187073643 seconds)
  done (took 40.453609437 seconds)
done (took 57.786900896 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.260683545 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.179184135 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.245175849 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145899964 seconds)
  done (took 1.805467026 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.143954843 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105650886 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118164983 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.085854788 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10388858 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086762937 seconds)
  done (took 1.547265974 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.409862532 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.266800113 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.232154303 seconds)
  done (took 1.814452491 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.285698545 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213514108 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.450935768 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.298921792 seconds)
  done (took 2.258088646 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.177427439 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115110693 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067508316 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106856537 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.159557386 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.255685947 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128006123 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.188289751 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080033442 seconds)
  done (took 2.229360635 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.198836692 seconds)
done (took 10.759888671 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.189798118 seconds)
    (2/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.207096115 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.146923908 seconds)
    (4/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.21756183 seconds)
    (5/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.127552454 seconds)
    (6/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.230450579 seconds)
    (7/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.135866888 seconds)
    (8/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.101792212 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.182718426 seconds)
    (10/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.204622013 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.118060298 seconds)
    (12/309) benchmarking ("sort", Float32, false)...
    done (took 0.12840975 seconds)
    (13/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.174545249 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.098755985 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.105115305 seconds)
    (16/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071593565 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.087847864 seconds)
    (18/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072859963 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.09952035 seconds)
    (20/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076946877 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073979376 seconds)
    (22/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.116537366 seconds)
    (23/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.159277085 seconds)
    (24/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074125895 seconds)
    (25/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.089662189 seconds)
    (26/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076271768 seconds)
    (27/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.111321041 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088660389 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.094547607 seconds)
    (30/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.172149293 seconds)
    (31/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.212700004 seconds)
    (32/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098703007 seconds)
    (33/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.138833167 seconds)
    (34/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098875433 seconds)
    (35/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.079085216 seconds)
    (36/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.221603045 seconds)
    (37/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.097664669 seconds)
    (38/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07480452 seconds)
    (39/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.214264566 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.11978677 seconds)
    (41/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.06878793 seconds)
    (42/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073420331 seconds)
    (43/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096307623 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073508567 seconds)
    (45/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.201038407 seconds)
    (46/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.180918262 seconds)
    (47/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.1456554 seconds)
    (48/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104658419 seconds)
    (49/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09842536 seconds)
    (50/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073526162 seconds)
    (51/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.116274182 seconds)
    (52/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109203731 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.115911731 seconds)
    (54/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.159489887 seconds)
    (55/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.241322385 seconds)
    (56/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07337047 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.129822625 seconds)
    (58/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054531547 seconds)
    (59/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.160150699 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092246428 seconds)
    (61/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.115359664 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074190981 seconds)
    (63/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.140167991 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073508553 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.199551055 seconds)
    (66/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051663679 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065477555 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.145366009 seconds)
    (69/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095430561 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097794067 seconds)
    (71/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062068181 seconds)
    (72/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.097197745 seconds)
    (73/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.063179863 seconds)
    (74/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067050528 seconds)
    (75/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.102752328 seconds)
    (76/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051965513 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.147259038 seconds)
    (78/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.208383634 seconds)
    (79/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09340031 seconds)
    (80/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.162186202 seconds)
    (81/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.098159617 seconds)
    (82/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.06315633 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.152836728 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092013623 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.120696763 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.161474867 seconds)
    (87/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079371946 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.138351778 seconds)
    (89/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070225267 seconds)
    (90/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.112715602 seconds)
    (91/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.099056213 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090063602 seconds)
    (93/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091994432 seconds)
    (94/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068766057 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 0.066326352 seconds)
    (96/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.121259756 seconds)
    (97/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.16325582 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148593486 seconds)
    (99/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.074164394 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.101487385 seconds)
    (101/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.105626684 seconds)
    (102/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171124996 seconds)
    (103/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.074151499 seconds)
    (104/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.081522697 seconds)
    (105/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052099429 seconds)
    (106/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091396986 seconds)
    (107/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.137841195 seconds)
    (108/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.192440693 seconds)
    (109/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068918698 seconds)
    (110/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.099399414 seconds)
    (111/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.184171859 seconds)
    (112/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.142941528 seconds)
    (113/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.090124474 seconds)
    (114/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069520898 seconds)
    (115/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065684977 seconds)
    (116/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.085252682 seconds)
    (117/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.220884253 seconds)
    (118/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.110356341 seconds)
    (119/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071259838 seconds)
    (120/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.171590565 seconds)
    (121/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.119429652 seconds)
    (122/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.091930073 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.088455987 seconds)
    (124/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.134809157 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.093806705 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134670046 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.11276156 seconds)
    (128/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.107584772 seconds)
    (129/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051320477 seconds)
    (130/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.095916872 seconds)
    (131/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.053956988 seconds)
    (132/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065818488 seconds)
    (133/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.088540587 seconds)
    (134/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067059652 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.110346174 seconds)
    (136/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053007072 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.168708297 seconds)
    (138/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06791041 seconds)
    (139/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063333831 seconds)
    (140/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.187125122 seconds)
    (141/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.190297294 seconds)
    (142/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051952794 seconds)
    (143/309) benchmarking ("sort", Bool, false)...
    done (took 0.159985245 seconds)
    (144/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074529435 seconds)
    (145/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.09955677 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089590315 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.096163118 seconds)
    (148/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.200665643 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071788182 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099100879 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.09545555 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092341129 seconds)
    (153/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112989274 seconds)
    (154/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.13599749 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095737495 seconds)
    (156/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051858484 seconds)
    (157/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.095126173 seconds)
    (158/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074618546 seconds)
    (159/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.12573844 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066278857 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134250511 seconds)
    (162/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.13161044 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065851443 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.096243942 seconds)
    (165/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051928763 seconds)
    (166/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.191374006 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05261614 seconds)
    (168/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053257966 seconds)
    (169/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.091958801 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075069108 seconds)
    (171/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.175181201 seconds)
    (172/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.137470327 seconds)
    (173/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113919818 seconds)
    (174/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053698743 seconds)
    (175/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.099079128 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098966247 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.122763693 seconds)
    (178/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.165081183 seconds)
    (179/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053616895 seconds)
    (180/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066399829 seconds)
    (181/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.077578183 seconds)
    (182/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054229206 seconds)
    (183/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074658264 seconds)
    (184/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.197988677 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066724595 seconds)
    (186/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.075514346 seconds)
    (187/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081346817 seconds)
    (188/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.315574062 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095810917 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.089920203 seconds)
    (191/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061263981 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073531198 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.202311583 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075446992 seconds)
    (195/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.075529952 seconds)
    (196/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065858597 seconds)
    (197/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069115606 seconds)
    (198/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.091108715 seconds)
    (199/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075219216 seconds)
    (200/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.090632448 seconds)
    (201/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052299345 seconds)
    (202/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053660613 seconds)
    (203/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051479337 seconds)
    (204/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.09565261 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065620836 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.142880445 seconds)
    (207/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051977903 seconds)
    (208/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077857316 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.088732503 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054011747 seconds)
    (211/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.05143627 seconds)
    (212/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.074626759 seconds)
    (213/309) benchmarking ("sort", BigInt, false)...
    done (took 0.20978294 seconds)
    (214/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053914967 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.137164041 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171331829 seconds)
    (217/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.092805388 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067351178 seconds)
    (219/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066033898 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.096999866 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075151769 seconds)
    (222/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.094392953 seconds)
    (223/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061344167 seconds)
    (224/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051798838 seconds)
    (225/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111788673 seconds)
    (226/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075124347 seconds)
    (227/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065628637 seconds)
    (228/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103350263 seconds)
    (229/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.159426226 seconds)
    (230/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.11878039 seconds)
    (231/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111079767 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07197926 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066372098 seconds)
    (234/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092943067 seconds)
    (235/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062528782 seconds)
    (236/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051387543 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.087298412 seconds)
    (238/309) benchmarking ("sort", Float64, false)...
    done (took 0.12591083 seconds)
    (239/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.094707272 seconds)
    (240/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071931935 seconds)
    (241/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066852775 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.169846739 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.162506595 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.133967254 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088573436 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.143178532 seconds)
    (247/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.076551631 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05200537 seconds)
    (249/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052754647 seconds)
    (250/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.075142173 seconds)
    (251/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06629992 seconds)
    (252/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052347806 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.113710857 seconds)
    (254/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07616162 seconds)
    (255/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.098831612 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129349385 seconds)
    (257/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.075216255 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06610709 seconds)
    (259/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.06192875 seconds)
    (260/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091756784 seconds)
    (261/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.103776875 seconds)
    (262/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061982869 seconds)
    (263/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105755269 seconds)
    (264/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.070474231 seconds)
    (265/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.089076015 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072959634 seconds)
    (267/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.053545576 seconds)
    (268/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088825337 seconds)
    (269/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052922768 seconds)
    (270/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052382393 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096586152 seconds)
    (272/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.052065476 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.158411072 seconds)
    (274/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.05131515 seconds)
    (275/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065598243 seconds)
    (276/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066521396 seconds)
    (277/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.08963466 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08880138 seconds)
    (279/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.075552013 seconds)
    (280/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170888854 seconds)
    (281/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086089238 seconds)
    (282/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051451069 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066611214 seconds)
    (284/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.074780066 seconds)
    (285/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067847346 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094982199 seconds)
    (287/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.190637991 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.088996496 seconds)
    (289/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052322338 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074961557 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.087946685 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09191949 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.120482059 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065963169 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073666441 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.114795381 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066332332 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.088956981 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091693699 seconds)
    (300/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.090147513 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071962446 seconds)
    (302/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.05323447 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093677738 seconds)
    (304/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051796784 seconds)
    (305/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074012808 seconds)
    (306/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.075510623 seconds)
    (307/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051738594 seconds)
    (308/309) benchmarking ("sort", Int8, false)...
    done (took 0.167534309 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.191546222 seconds)
  done (took 33.192457546 seconds)
done (took 34.109845029 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081566572 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115695981 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075633073 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116167929 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08113068 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101453765 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073652243 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.101835487 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081553517 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.105074838 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080108338 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05499887 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09888808 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07573563 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098288099 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09322665 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103945993 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074018572 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073714857 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.088753269 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074984745 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088729281 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06793974 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055177605 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101002702 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073665846 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096288655 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075388961 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066461662 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089616505 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06952306 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073808329 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088368173 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079922149 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095208895 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073987837 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07627571 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.100112671 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06773017 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08909196 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073713262 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065807014 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.095355248 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073457671 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071999177 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094706679 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074481896 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102512736 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09204073 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090956477 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074292028 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100174206 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077839438 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073138641 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09257321 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074616767 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093333228 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091810768 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098412729 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068615012 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074667263 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09812683 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071620926 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09722511 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074944651 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076418221 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098922362 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071436779 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09808331 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071427872 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066995498 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097220935 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069479904 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.08834543 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076495374 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077282826 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.087690954 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071765921 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073495275 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.095500988 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065720575 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090903461 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068204102 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072862994 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091222907 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055575264 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070056499 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094832699 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065483412 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075506863 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.09558713 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07334381 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.090383957 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077627715 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065830842 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094684732 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066931207 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066646431 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090970601 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070632129 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06625557 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091498045 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076276048 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090644145 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072696247 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081204342 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088971413 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072772253 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088213407 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065707473 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082812471 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099105402 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067268734 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091360084 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066092268 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073660907 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.08845362 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065929353 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066915996 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088992323 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073272946 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066282194 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09134247 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073787018 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.102732116 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066529089 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070370017 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091332881 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067191914 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07175738 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089729691 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067016562 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.090616053 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063919034 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069060615 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089257735 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074921001 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068815519 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097677477 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068528898 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098367938 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07049404 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072139293 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095173776 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06563628 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059755736 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091247059 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068659823 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067973541 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089783009 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068626007 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066184072 seconds)
done (took 13.265641741 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066592711 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.170321273 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.126794552 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096275849 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.11213617 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067079404 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.100735062 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104037463 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091884913 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.128729247 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088142375 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.108360315 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114851288 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.089150906 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067065374 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070594145 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.091112967 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089185547 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.125478289 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.109982719 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117400161 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.088933851 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121215047 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091365266 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113687939 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103768199 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090030042 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070440115 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069604449 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.117734505 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.10968417 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070891629 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067078036 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123998885 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121384625 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086170644 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088978496 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085153789 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.08985558 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066757718 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115586636 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101341363 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105534164 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083823921 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.093515465 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069379444 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091271548 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087361523 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.114810959 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08187631 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112565973 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134446569 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070118132 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.105757811 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065573938 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.111145124 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105591664 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068831325 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068103122 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.09225543 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066394673 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070399159 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112335499 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.116679029 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07089223 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106703745 seconds)
  done (took 7.300643549 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084850981 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.117491255 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084153275 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108668401 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066410037 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067634981 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090505559 seconds)
  done (took 1.595469471 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067217343 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08954426 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113597584 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090336948 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109207648 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08823076 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100483864 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067720446 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108876908 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068188278 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089171835 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.12845747 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069099664 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097461427 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092316342 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090034303 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091423697 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091136129 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070715521 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114819367 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070230172 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.086970263 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.093480294 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067940707 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.105875249 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067880789 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139408848 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072312757 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06850684 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.095058383 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065895571 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.142192134 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105062401 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078497504 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068417522 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105752238 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083232935 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089330687 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083860585 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097571014 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081822518 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068832895 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092509046 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065968638 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072683409 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102755917 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068819931 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.09137349 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070295116 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088536425 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092067821 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082634734 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090897474 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071703694 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069621494 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096679643 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077705328 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091760226 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088067724 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069255268 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107886161 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084669464 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105623501 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084735658 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093707288 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081856574 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105850554 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070534645 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069508853 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.09509517 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084318677 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088846894 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068925679 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079014756 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093200655 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091064164 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.114661962 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069291748 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101753757 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067457811 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068251318 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091951529 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091432022 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094678762 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068028537 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072564392 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09488553 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065904674 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066759041 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.095338606 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06648383 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069312415 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.093878018 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068816983 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093819512 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085197344 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068657704 seconds)
  done (took 9.35361231 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069547483 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068922503 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093170602 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068795067 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069478856 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.091890328 seconds)
  done (took 1.453683781 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099644134 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.093128902 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082889943 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.096484634 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107435124 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.106476322 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083940638 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107225547 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085911148 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.10431174 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083498742 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107308778 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088661272 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.097809111 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083096897 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.096985479 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083460226 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100743078 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079565144 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098269518 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088810138 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.097861852 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074709965 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.108080982 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.0711142 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073955644 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101542061 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080900855 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.103366888 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083996787 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098491222 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071225431 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096313536 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083246088 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.106370958 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073528693 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096767485 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072706846 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101142316 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070940279 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.107345529 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074310411 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.102621433 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07297071 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107287315 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073131255 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073016693 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101149868 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082475657 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095757363 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073306817 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096389851 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071389147 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096231995 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073349192 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107359858 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072832831 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107000276 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074351312 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073190232 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.09401617 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071704651 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106892781 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07152185 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10539419 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072122533 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096054077 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074794643 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098100678 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073982777 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071514612 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094356361 seconds)
  done (took 7.395707417 seconds)
done (took 28.074214153 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.65184477 seconds)
  done (took 1.637831616 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.770056542 seconds)
  done (took 1.759022835 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.260322672 seconds)
  done (took 15.252794821 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.622273537 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.765331927 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.812115248 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133784582 seconds)
  done (took 3.319910577 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.892081125 seconds)
  done (took 1.907360732 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235894411 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225672842 seconds)
  done (took 1.456054438 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.738352927 seconds)
  done (took 1.742316368 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.288770566 seconds)
  done (took 2.282648098 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.323921475 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181666381 seconds)
  done (took 1.507055307 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.522572806 seconds)
  done (took 1.524485802 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.640538624 seconds)
  done (took 7.648212498 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229603638 seconds)
  done (took 1.247241997 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.266547227 seconds)
  done (took 1.272679287 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.149986685 seconds)
  done (took 4.155913542 seconds)
done (took 47.710320568 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078620002 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081755181 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104255759 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080369877 seconds)
  done (took 1.34724945 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07755951 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073463664 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101039778 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072949688 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101960066 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074336038 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099444932 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077619598 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073229326 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098620915 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074196083 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.095751798 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076039824 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099169996 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071330101 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075915125 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100176155 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074390352 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.100209934 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074262411 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071529669 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099439075 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077139486 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096100278 seconds)
  done (took 3.049513003 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07803062 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074040495 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098522112 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073123019 seconds)
  done (took 1.33327836 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077486567 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.116251352 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089765102 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077627089 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.117336979 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.110773359 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070637608 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06969239 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096031483 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080444406 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.092372677 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099446315 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.11225114 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07854557 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102675573 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066596358 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069561882 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111455806 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078412104 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102552196 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07061055 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077238827 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.092402394 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090725619 seconds)
  done (took 3.165685335 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077180796 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103829821 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.102689047 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090320225 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.117098889 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065794495 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.100777671 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091820662 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.149586607 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066096467 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.095454512 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066988199 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097580787 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066261579 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078009932 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.133204822 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112591178 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.093411535 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097954475 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.091069536 seconds)
  done (took 2.916419811 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07534623 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070249461 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09008314 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06978834 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076935482 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098001781 seconds)
  done (took 1.494400154 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068205203 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068605927 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091902071 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068018042 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072149375 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091901555 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066686254 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068254157 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092763501 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067967253 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067777316 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090755489 seconds)
  done (took 1.92853806 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.422831223 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068942059 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.093236894 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066197746 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071378143 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091448046 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081365639 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068617429 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116568043 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067629244 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.091748223 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069255275 seconds)
  done (took 2.326581096 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263061 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077947589 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.327945185 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169805249 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141732211 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155085953 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105058113 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139772443 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199307682 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138822407 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201035109 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226242538 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134437774 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170258742 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115345123 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.108042122 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211610922 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222722337 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105961138 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226591882 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207850575 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15717781 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181657546 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129097408 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134887412 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15141725 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072370498 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10520462 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234104626 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162551228 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203306009 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13961833 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097754594 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232053252 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228252559 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196170893 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16307348 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085645203 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.158379491 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16551635 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256819871 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114264815 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194727683 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134128482 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106850366 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173263234 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146703813 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147535219 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.138146607 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115443137 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175542698 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241696899 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.166263392 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112960563 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138075128 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143324064 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144322218 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104052639 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244596685 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219369752 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158970792 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096037377 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098539161 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212138184 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161213023 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14317832 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.154710069 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12007435 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169287147 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212193334 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146367912 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174633197 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182281968 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08979605 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148506123 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197031696 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156560458 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204513497 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179629879 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073441123 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153786149 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129824279 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082957536 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.169325989 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076797026 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233908063 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12505717 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.14066814 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140470112 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136732975 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112426719 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222224272 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20362479 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10559015 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.09170888 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131288102 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150239198 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178065708 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114127095 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135546662 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148641329 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079914285 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16804804 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.101776812 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154497458 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078829551 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178753654 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166113876 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076623352 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154611522 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129188493 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128693325 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16494469 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221634971 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091008977 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108625567 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20178826 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181234321 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.108224566 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201515833 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190947672 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.128339289 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13146339 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207414739 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245850368 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090806326 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225091908 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136251068 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085420933 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114949319 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155858048 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141490354 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.14968282 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083754002 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.178765396 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202389739 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100977564 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097867227 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193163955 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082586531 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108105429 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140837944 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129051849 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096766832 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.127689093 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134858443 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171375893 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154710815 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134263448 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154782625 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125632534 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227270733 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114886635 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130418928 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105919356 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095465537 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.165973603 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192915444 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105989982 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228115953 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.156620043 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131209964 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148461956 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083525575 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169748413 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10466884 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071889172 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200370131 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138428514 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111562834 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.211215819 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13125455 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.157029189 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.154021842 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164498776 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161809462 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.186334588 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108200248 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.11384703 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141817516 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155581625 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100071873 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095921687 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.10921571 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131839974 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097652484 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110320211 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172659572 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182616484 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10068216 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141505339 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124926062 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180921448 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103366018 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161258548 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148888178 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121981394 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.18689255 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214606881 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167757908 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127576905 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177752172 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.096694793 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075046473 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.117308591 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158322345 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110678953 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084884662 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146645128 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206124208 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159488521 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169723273 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139832627 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151917362 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187817411 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097330842 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118956888 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205567162 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154764984 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.156032653 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091759809 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.125333886 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176303678 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136772842 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247431021 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144159214 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156459488 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208850213 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131776383 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08163623 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131005703 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169150013 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134639603 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209463148 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127398889 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090849519 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140299516 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108479007 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132581265 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157817615 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149910393 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166040269 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.145441547 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188442942 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079011979 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147162079 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153945213 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152579097 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.090992705 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149297019 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220710401 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097290532 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14768937 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214232551 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080998859 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.158391912 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239000455 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202785056 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08643668 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138344017 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15193159 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160187155 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148251639 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197982996 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140790975 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167012518 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114305834 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.111812636 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115133743 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100037917 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134720003 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.123657277 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.139906859 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.146062089 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.122974641 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162601489 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141668133 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139022259 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148926652 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099854223 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118189653 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125590495 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21106224 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150755164 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235658584 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129720114 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.209493524 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202880882 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102455837 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080602616 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.108128718 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171821266 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112227393 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165973561 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123878204 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1075289 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156215938 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201358511 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096646455 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.094774304 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139029961 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165553936 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140928587 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126444406 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10744715 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224468355 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131713078 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079774401 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155211512 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133117847 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131258978 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237484941 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063104888 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124046089 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076645723 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107820296 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160158529 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215677838 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084752708 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.15296757 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151689893 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150728172 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161478155 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130995758 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098860415 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141530533 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208761175 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159252522 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.118173262 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114941028 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185412189 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189559514 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134027796 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123754945 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235061546 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205894825 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224326279 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.116933773 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145448003 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145391931 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11219043 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199259924 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110296558 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201747921 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110346457 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168109329 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133502025 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120685022 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160493561 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.12388 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115759436 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182403441 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149404237 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109968586 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080851878 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147100688 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152778282 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136384332 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103245228 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170975595 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073287831 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195383867 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203759611 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109007101 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135614577 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124030899 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083584949 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137678987 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132235254 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114289958 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.123226259 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231342817 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.118362529 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18457989 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199790676 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144331152 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168480265 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128300879 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664765729 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079903996 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214769582 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146292581 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2408773 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126576832 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148411084 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139696461 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153515633 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177187861 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13304108 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.204554803 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163114035 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.150612768 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106480484 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132419631 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14140403 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.093604226 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135223362 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14399272 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146002678 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.129098506 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150756951 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157228057 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.109520277 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096995081 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218479583 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147093584 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201664941 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172547974 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086403217 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148712906 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198638794 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080984437 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178562115 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189988319 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136849312 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127045219 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082680032 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134722251 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232921101 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.100393406 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197000051 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154804749 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139313915 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14366168 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.175516054 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165355023 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138030372 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157273764 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123183152 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.141519801 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145170437 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086433967 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105724267 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135639236 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141963887 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100774032 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130663928 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.145219571 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186582506 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.098483516 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097463476 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130871986 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175739842 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239936517 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.117108724 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110409838 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14846137 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142413057 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.145980558 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155644764 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083179603 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110564347 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.110254604 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.114309939 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137590816 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143898257 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106038753 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139690943 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228745064 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.112250289 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22608416 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122716048 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134855898 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070800965 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107454428 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124790762 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099746717 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138753454 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12674293 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23551046 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099369741 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.118040235 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121820327 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074438231 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110960573 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159520866 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140243467 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151566976 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127052337 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064220846 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139497482 seconds)
  done (took 71.815898831 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.131856401 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.103146582 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.117247584 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.172689548 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145178059 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239383778 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.180219558 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223354664 seconds)
  done (took 2.410440427 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069162453 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.11745048 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103116096 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.117123131 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.089587228 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070786822 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.300330847 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110575409 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06657441 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114961823 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.120309723 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09222022 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.470985173 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066149062 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.094599744 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084830715 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06748144 seconds)
  done (took 3.246219917 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.43117524 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.878904978 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.45526626 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073228982 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.990536731 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.108344967 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.488917491 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195737606 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09314726 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.693103515 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.727045132 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.182599682 seconds)
  done (took 22.419527615 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075253259 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069328942 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110431971 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083722255 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.098507254 seconds)
  done (took 1.54229318 seconds)
done (took 119.999437438 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080276414 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.34634435 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053301329 seconds)
  done (took 1.536168749 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083705989 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085047614 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110654789 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083726719 seconds)
  done (took 1.47361947 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.0743168 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076886604 seconds)
  done (took 1.259055593 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.278390951 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16841507 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.116148029 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082465182 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077726519 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104277789 seconds)
  done (took 1.369703169 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072495152 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074949772 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100143597 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07699113 seconds)
  done (took 1.428679997 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076651534 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052850025 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054757747 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082148243 seconds)
  done (took 1.37715042 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090537291 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.106239335 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080225799 seconds)
  done (took 1.382617025 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107718934 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.112423849 seconds)
  done (took 1.329919279 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081707968 seconds)
  done (took 1.186241275 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091664773 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.140738844 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.157825652 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137379305 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.167516546 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.13842137 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087727692 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.11488232 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104892429 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089522249 seconds)
  done (took 2.339900855 seconds)
done (took 16.426955859 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079299176 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.387862016 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359684715 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117551158 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669236127 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356244487 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.012486976 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118834141 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121114143 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094413321 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084058241 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67511482 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.978107626 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.348540206 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.965640882 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319151679 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.67472476 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06866175 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067340463 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094201567 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.970204459 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093779466 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068429639 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068025942 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.673944007 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371635175 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094348815 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32473409 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068659567 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096048323 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355361309 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094169665 seconds)
  done (took 15.970849621 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070449675 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14445685 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073659387 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084442455 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097562062 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070249677 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098227379 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068670335 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154667749 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068089508 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111899583 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068608566 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098171918 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069407631 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087726504 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094891463 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069617553 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094884236 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068647584 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068352035 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113328538 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068015114 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095301909 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068731386 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068333078 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.105958827 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068803708 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094077816 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06845565 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070104842 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097359336 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069369802 seconds)
  done (took 3.86021468 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113997156 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153648732 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074480871 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129054354 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113576097 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09694193 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.170174533 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093973385 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15547599 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068182923 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111572562 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068593077 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.1279122 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069525231 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11440088 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069075186 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070125299 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095015322 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069436538 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095057724 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086924401 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093648361 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069252558 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069538596 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095183715 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082100805 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095208971 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068591728 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069760746 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096980297 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072011455 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095661611 seconds)
  done (took 4.172552259 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072691757 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075586398 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108867901 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084400119 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096594613 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072889098 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073272368 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.096589939 seconds)
  done (took 1.793938842 seconds)
done (took 26.908198541 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078652193 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071297322 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099282403 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08180413 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.099977992 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079297142 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067822407 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101571789 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077340405 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07284259 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102772139 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069051791 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.098224858 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068024935 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074660846 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.094404367 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080145267 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098510532 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.07961309 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080103615 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096662241 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077542791 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100961412 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080419502 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.106468106 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079913176 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.0825696 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101230504 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069944612 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096920502 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077239991 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110518381 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068672191 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079350517 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.095057398 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069001499 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067548952 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094923789 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080350487 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100078828 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07054335 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100688268 seconds)
  done (took 4.689963516 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088028008 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091135589 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111836853 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066117279 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097621241 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065192998 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116695617 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063685538 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.06034861 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.115514436 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055973003 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059307761 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089554739 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054904124 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059295614 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056862377 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.089218217 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056721475 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059370368 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.086365499 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057969804 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054260834 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087419978 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063492893 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057061824 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.091292127 seconds)
  done (took 3.077774026 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07567216 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084296062 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115064746 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128572465 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.132853923 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077242564 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105246845 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088649888 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113486169 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06777095 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071225686 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.124299026 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087886384 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101473182 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069001266 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.112533854 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082607322 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070125275 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100909254 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091123494 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.111857428 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.078892352 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119519843 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081540314 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06748092 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097730257 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072112011 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.108543422 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073529279 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07718041 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100122406 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072313399 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.096949689 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079868212 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072484158 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.097313864 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090169903 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104921563 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077497667 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068081879 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.098396529 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069198727 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115466907 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.112364774 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09392467 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074702875 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074816928 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103759824 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06769419 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112885039 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077288644 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068027072 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.097635448 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06743017 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094869885 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081444102 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070563208 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.097032248 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077349602 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098544291 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079774066 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071822865 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110450658 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067773023 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.102788987 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067937146 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068393414 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.09450952 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100593384 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095470861 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109324838 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097089933 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069003286 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076931532 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102315182 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074210163 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.095812904 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083512959 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077425502 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098334374 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076189761 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.098653286 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071020356 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087163168 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097326764 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070178926 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069024508 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101800822 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070573087 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.096330098 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080928954 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068460457 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098086238 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084690306 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094583749 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069308962 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074811545 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100576921 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067539604 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107400393 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07303207 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.095716423 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077140264 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067612651 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.09802971 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077497394 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.099388989 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066543046 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07267241 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102063156 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069114978 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069042031 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098691616 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069098799 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.104181433 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074352815 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072536368 seconds)
  done (took 11.343379742 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.1909204 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.18641476 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070399688 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.177828789 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076763013 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108174788 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.178495558 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095466414 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097472686 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068465894 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068949371 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.130597155 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.123595066 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.10641109 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.106795124 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067986928 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.114069138 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.105119425 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.182992512 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.176871079 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.115507686 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075974799 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070306878 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098758643 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070781668 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07776689 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.113058238 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076910008 seconds)
  done (took 4.269588999 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081530664 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.129923799 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073736806 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089231354 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120096088 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068942252 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102146524 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070138338 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.108666014 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080427093 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096144964 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073559423 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07488363 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105956858 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068894414 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106379379 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078238804 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069721637 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.0998375 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073225229 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.105205323 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.08038368 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099206978 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067031242 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07437986 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.095995781 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064912967 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.113005521 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067759429 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.118069535 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066685733 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074442312 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.110027656 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068280898 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096069742 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071802551 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07091152 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100080354 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069990357 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066666202 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094934008 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058090814 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068069955 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.109558874 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073916184 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.088089373 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074330314 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073369448 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.101623765 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066159147 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099494868 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071190916 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07109587 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.10576204 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073717175 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073270012 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100784257 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066754612 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104234498 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071590575 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064586233 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095276259 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073234992 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067388621 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104454481 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072448576 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095526164 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071180754 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073686996 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102674746 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071224121 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070968362 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.093833815 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070304543 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100762878 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072957012 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072044023 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.095700874 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067440016 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068773952 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.08412398 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06813752 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05347756 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.099662137 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066605098 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066920558 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.099612625 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073969085 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108806545 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069692037 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.102193609 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069152201 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067151317 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099601303 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064164767 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070810272 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.11242832 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112415379 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069021733 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066478477 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.110971202 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072759625 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067663889 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.085419654 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074565606 seconds)
  done (took 9.882735251 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093282007 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070431257 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112103529 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.096233187 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.122400668 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075290117 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.103305876 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070215099 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085606342 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.097737589 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076441996 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068898884 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.105159512 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075813374 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.098790087 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077591264 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072616871 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112590288 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082561238 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097262226 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073425481 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080125398 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.125206037 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080322429 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.106955857 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080407633 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.124265752 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072291806 seconds)
  done (took 3.688195131 seconds)
done (took 38.065578877 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.208481457 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.412250401 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.193050195 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.066628474 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.21667775 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.218365891 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.202216339 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.190364376 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.33461783 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.193974699 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.438162034 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.789439477 seconds)
done (took 58.604211127 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.206227971 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.348023199 seconds)
    (2/2) benchmarking "String"...
    done (took 1.463302035 seconds)
  done (took 3.947688231 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.558956879 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.077446164 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.448444214 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.191214275 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.199257079 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.503299782 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.803135022 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.028563399 seconds)
  done (took 27.386316356 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.200796078 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.801380036 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.69409412 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.688197031 seconds)
  done (took 18.522395431 seconds)
done (took 59.759705341 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.187693269 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.223568738 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.236765754 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.177771807 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.300789313 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.21694089 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.399517582 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.434613896 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.195292219 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.185157424 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.226654798 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.192771277 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.199281621 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.416761337 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.203385684 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.199485618 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.282660268 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.661105645 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.576575724 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.211069873 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.222664887 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.249406864 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.198617499 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.1967579 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.228889424 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.205270132 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.198025463 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.197946386 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.439970362 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.195289173 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.286760539 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.644512542 seconds)
  done (took 191.128961638 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.193360456 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.138463506 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.234252166 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.222619946 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.57432303 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.376472918 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.30972033 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.668842156 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.21018475 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.214185454 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.492660148 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.193495451 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.558292565 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.154272555 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.224254694 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.243849306 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.457680702 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.543982401 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.240229601 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.362677378 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.210997188 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.390448684 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.31003261 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.438681552 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.241623845 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.200259146 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.207223105 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.217397423 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.386807829 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.367958954 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.214022046 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.22711948 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.777613701 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.054504775 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.214995873 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.219694219 seconds)
  done (took 149.430237726 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.490027266 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.195250846 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.193722571 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.196540161 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.22542707 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.194962187 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.717378387 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.715686501 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.693382541 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.432583365 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.256970296 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.420179365 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.19746845 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286548132 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.207306981 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.196473063 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.211335149 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.221954007 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.196236374 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196171409 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.717593477 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.208165749 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.356109525 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.201898076 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.196600627 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.22510501 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.589041334 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.195975994 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195356395 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.225803213 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.512685857 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.240292373 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.19592823 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.497901427 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.733619722 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304650375 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.197930248 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.226215798 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.197979455 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.464339982 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195812163 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.19730857 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.199542863 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.788618123 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.198952331 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.718439902 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.196984848 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.082125397 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.196790786 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.196171296 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.544149357 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.199433424 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.702544146 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.200217328 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.197304692 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.199236667 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.197743161 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196953358 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.226773754 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.529090825 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.296171136 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.198117972 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.200098702 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.227319643 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.198423929 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.320776183 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.197790092 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.767711592 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.25703326 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.305061108 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.733973401 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200302048 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290697833 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315349633 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.19836949 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.198447524 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.199057671 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199637289 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.198401962 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.304134895 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.198857884 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.598116942 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.204671949 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.199809585 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.258302732 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.291083245 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.198682437 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.524682653 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.200994614 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.198838018 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.894877229 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.290719616 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.198672216 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.198717355 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199235845 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.595119844 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.727658658 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.386096585 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.203243438 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.480000222 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.201256929 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.198659551 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.604761885 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.715229491 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.81572949 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.202534234 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305809916 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.205166729 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.200439797 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.199623971 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.228314625 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.200189555 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.259222605 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.199350564 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.595426901 seconds)
  done (took 344.937236704 seconds)
done (took 688.124687226 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.842776075 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.831313785 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.944950206 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.824913931 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.81042499 seconds)
  done (took 10.398928776 seconds)
done (took 11.54356648 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.379767009 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.381631236 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.2589293 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.3822882 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.229352005 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.398186016 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.360144573 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.220575754 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.298668054 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.274983899 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.29854807 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.2503153 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227827183 seconds)
  done (took 18.1066087 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.510737549 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.498284675 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266660097 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.504522104 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241718405 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.497114145 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.39175148 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.397068999 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.389013475 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.217009916 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215616428 seconds)
  done (took 16.27549825 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.504079928 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.500072091 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.271095256 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.502827318 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244369246 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.510551799 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.394778541 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.403935855 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.389111016 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.21731664 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215823865 seconds)
  done (took 16.299832638 seconds)
done (took 51.827305202 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.211576695 seconds)
  done (took 2.357963883 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.244814386 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.40839716 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.225405437 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.21475211 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.213340202 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.212433256 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.215986085 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.210711628 seconds)
  done (took 11.093601466 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.208410862 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.208697325 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.211253588 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.211461383 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.209324214 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.211177144 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.211740498 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.210055717 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.21040347 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.211584346 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.212050768 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.212790176 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.210746442 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.210200561 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.208778188 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.212410023 seconds)
  done (took 20.518780412 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.211310868 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.210248803 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.210092443 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.21032064 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.210240464 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.210748775 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.211674004 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.210457613 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.20986385 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.210248896 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.211457817 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.210493323 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.211353191 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209619975 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.211209651 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.211229796 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.209484805 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.21093193 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.215615109 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.211137735 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.211250705 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.211074823 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.21122902 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.210636703 seconds)
  done (took 30.211972671 seconds)
done (took 65.328838708 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.477857652 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.848367246 seconds)
  done (took 9.474720243 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.213647541 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.214242337 seconds)
  done (took 3.57920866 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.213812093 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.213229632 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.214822956 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.213884786 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.213688427 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.214191633 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.214611408 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.214396949 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.214452032 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.214263074 seconds)
  done (took 13.290977285 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.213548185 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.214633249 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.211455572 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.214067433 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.214462409 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.211640909 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.213486428 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.215164833 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.215377453 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.21202656 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.214662689 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.212588317 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.214819572 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.212957402 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.215415878 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.211976986 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.212473948 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.213187706 seconds)
  done (took 22.993944145 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.214760858 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.214658063 seconds)
  done (took 3.578289318 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.212006909 seconds)
    (2/7) benchmarking "second"...
    done (took 1.213139723 seconds)
    (3/7) benchmarking "month"...
    done (took 1.211500515 seconds)
    (4/7) benchmarking "year"...
    done (took 1.212471914 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.213222844 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.212974161 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.212594364 seconds)
  done (took 9.638097259 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.215604856 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.387796798 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.466157476 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.779687218 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.216317695 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.219857073 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.018784697 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.218614807 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.221150164 seconds)
  done (took 13.894914412 seconds)
done (took 77.598636082 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.187691156 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.206199571 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.151257649 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.219971551 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.223182398 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.550587682 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.250164262 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.333487572 seconds)
done (took 37.274118009 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.216068563 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.94203234 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.946308219 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.219875347 seconds)
  done (took 11.260169448 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.206361701 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.118053908 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.210285222 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.204236539 seconds)
  done (took 17.894691279 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.820978641 seconds)
    (2/2) benchmarking "read"...
    done (took 1.542902 seconds)
  done (took 4.517326309 seconds)
done (took 41.040030201 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218602127 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.215317461 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.21603814 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.21631966 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.214259987 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.216585634 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.216215312 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.213964347 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.214365486 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.216519795 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.216276808 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.216947423 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.216781846 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.217052693 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216241256 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213877799 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214255401 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216335248 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.215172475 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214319089 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214519166 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216581466 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.213121889 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.214406671 seconds)
  done (took 30.328693881 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.216857849 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.215619514 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.216572858 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.216308912 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.214318558 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.216597079 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.216868406 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.213707747 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.216539888 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.217567415 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214802065 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.213638773 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.217183484 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.213855408 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21636553 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.213915784 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.216008727 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214497563 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216823757 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.213661001 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.215836006 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213610812 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.213833317 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216505138 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.214336494 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.213728145 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.21683251 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.214933736 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217483381 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.214910667 seconds)
  done (took 37.617272758 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.221606951 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.223456948 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.216817474 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.216649801 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.2167564 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.217152982 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.216841797 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.21556936 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.216641321 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.217281845 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.21668167 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.216295159 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.217114294 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.217158473 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.216230624 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.216614777 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.217746633 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.216949066 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.217071387 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.216346217 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.21658951 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.216943299 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.217294666 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.216940752 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.216723509 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.217570642 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.217688932 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.217690819 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.21694032 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.21651817 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.217641913 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.217263777 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.218017926 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.217392863 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.219009276 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.21769284 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.22214501 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.225075381 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.217322543 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.217713571 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.217585104 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.217909572 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.217964875 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.218177309 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.218072033 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.218759211 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.217893442 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.218400861 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.218395494 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.217710095 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.218720201 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.218586977 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.219047977 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.219740694 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.218391062 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.217888095 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.217819572 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.219556931 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.218075059 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.219034295 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.218635274 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.218987974 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.218748508 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.219223772 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.219538965 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.219292201 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.218796877 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.21939134 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.220519563 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.22020929 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.219742406 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.218994199 seconds)
  done (took 88.863566232 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.219941485 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.217151142 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.217035605 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216731494 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218062327 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.221138921 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.216411714 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219407842 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216524554 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.220097791 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220215945 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.218000778 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217751604 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.220181879 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21964334 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.217149486 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.219912731 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217722297 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.219924606 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.220139655 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218629586 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.218035997 seconds)
  done (took 27.965772531 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220545085 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220822733 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.218682354 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.2198586 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.217690895 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.220270979 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.220905069 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.219363325 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221008186 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217901331 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218146093 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220310167 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.218641073 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218416891 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218786611 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219606951 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221435321 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.218138723 seconds)
  done (took 23.106471695 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.218140478 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.219524733 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.220633093 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.218961158 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.218281059 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.221761151 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218333338 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.220701794 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.220578224 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.218909504 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.221653506 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221664051 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.222137818 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218441683 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221380997 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.219019202 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.221757856 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219112842 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221550395 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219391552 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220150788 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221635206 seconds)
  done (took 28.000921269 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221106761 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.221248334 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.219203149 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.21886034 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.219146774 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.222516171 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.221163661 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.218454797 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.220809853 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.221505522 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218728271 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.221106908 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.218699281 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.22006925 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.219720147 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218687213 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.221236497 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.219643115 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221790377 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.218142276 seconds)
  done (took 25.560021794 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.221407912 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231844971 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.221259027 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.221546558 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.222273406 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.222117658 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22136429 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.221101204 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.220859421 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.222783647 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.220758919 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.220786213 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.2219569 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.221294772 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.221345723 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221351955 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222147446 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.22151412 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.220892317 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.221069162 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.221977669 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.221559936 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221348567 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.221739615 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.221986346 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222901111 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.221742409 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.222345063 seconds)
  done (took 35.373827089 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222245403 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222055933 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.219789611 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.220215975 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.220577596 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.219551246 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.219581119 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.219326043 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.221799377 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219874101 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.222116387 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.222400464 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.221842686 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.222914703 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222301258 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.222859195 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222941292 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.220019464 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219191258 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220339089 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.222019184 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222870926 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.223246327 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.220266323 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22057908 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.223856053 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220878887 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219986889 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223071886 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.220871935 seconds)
  done (took 37.798780643 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.240585854 seconds)
    (2/2) benchmarking "in"...
    done (took 1.239860134 seconds)
  done (took 3.639453633 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.220243491 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222372941 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.223148389 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.220854933 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.22033213 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.223211069 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.2228829 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220674381 seconds)
  done (took 10.932400804 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.221979447 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.223124529 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.224212122 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.222979938 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.223867721 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.222486427 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.230690447 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.239373568 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.223897604 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.224394258 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.228455492 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.230129898 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.225276629 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.222702316 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.222861281 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.226152777 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.224626629 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.223938637 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.224682961 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.226282909 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.224580612 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.225462832 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.224524736 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.222482492 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.224634317 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.233172923 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.229037124 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.225716565 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.222331776 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.227922954 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.22284505 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.22184896 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.223545508 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.223963395 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.225311329 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.22595482 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.232471464 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.23820807 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.230339376 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.225147341 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.225153432 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.221186394 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.224930753 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.224854999 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.225504659 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.223184454 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.224586055 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.222543588 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.222887896 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.226276088 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.229205257 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.22305263 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.222082433 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.227520124 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.224844929 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.23154715 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.238912423 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.226207053 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.230813968 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.235320082 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.235655365 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.23089329 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.225218767 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.224342208 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.233135013 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.246531154 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.230258119 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.237355325 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.222954937 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.224276525 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.231035092 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.236809344 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.233145461 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.22397225 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.224597096 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.224536296 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.224541553 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.224503227 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229301249 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.24124857 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.224920054 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.22257422 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.231805123 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.244032749 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.222501718 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.223235346 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.223920213 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.223770452 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.224206388 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.234387898 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.239511347 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.225185585 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.224225558 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.223627549 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.224977643 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.224807223 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.222979584 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.224060416 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.222191648 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.22528374 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.225552404 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.227701032 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.231446502 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.22425112 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.22441173 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.230470514 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.226120233 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.221725015 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.232098413 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.225920587 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.224291746 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.224500066 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.229118294 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.222261748 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.226879585 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.231124455 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.224243446 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.224718272 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.224574331 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.225020257 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.233555037 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.248330315 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.225580436 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.225594738 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.228560898 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.234600716 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.224885838 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.227041394 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.22530541 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.222499687 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.223029263 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.22614138 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.225851896 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.224610104 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.224415695 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225176719 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.223353138 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.22588408 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.225255058 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.225425395 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.225867839 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.224781032 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.226258924 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.226353302 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.225028466 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.226238395 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.231509593 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.225032838 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.225949263 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.22597682 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.224409894 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227097076 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.2258332 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.226202222 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.225808269 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.22581811 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.224425042 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.226312821 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.226375358 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.226814519 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.226494558 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.2249354 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228520451 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.22607433 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.229078611 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.225954478 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.223978895 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.226227602 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.225807276 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.224246911 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.225626866 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.224368324 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.22856396 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.232072996 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.227875401 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.22574271 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.22824306 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.226083945 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.225543982 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226164597 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.228143496 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.232156875 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.226106597 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.231917446 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.226013797 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.22554061 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.225919225 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.22563867 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.224329326 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.225733575 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.228648459 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.232645133 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.237281373 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.233058827 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.226612464 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.229485329 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.225040553 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.228418664 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.229134638 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.225927842 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.226472442 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.225878177 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.224185534 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.225458648 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.22570495 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.225201493 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.223544093 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.226630813 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.225021983 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.225029828 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.226951396 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.224817255 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.226138563 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.223728953 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.227391544 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.225825054 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.224510737 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.223660877 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.223790425 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.225295816 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.22678173 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.226526998 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.233201211 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.224106878 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.227699191 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226256817 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.225480142 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.224795432 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.226470555 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.227940326 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.225318217 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232682861 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.240441288 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.225664955 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.232772408 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.240150592 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.224670864 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.228172884 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.228374192 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.224920272 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.227785425 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.233305941 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.225928428 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.226294091 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.225782593 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.225136293 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227200798 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.233884998 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.224408805 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.225287838 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.227552969 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.227050065 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.22477331 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.226673888 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.226231989 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.239729315 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.228117843 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227455408 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.227315714 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.227255218 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.227257884 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.226013506 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.226866432 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.227998832 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.232373977 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.231237422 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.226185995 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.228690418 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.226616262 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.230645617 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.22647538 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.226414338 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.225772637 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237901033 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.234314482 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.233038019 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.22848141 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.228188202 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.232325656 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.22816306 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.229423209 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.224757385 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.227350133 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.226457823 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.225816313 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.22530234 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.227535482 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.22797935 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.228703297 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.227815845 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.231299279 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.22755357 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.225312923 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.226503834 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.226975499 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.228113235 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.226272833 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.227757003 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.228004702 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.228169978 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.224967453 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.226178363 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.233244072 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.24103703 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.228205454 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.226816068 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.227093754 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.226062776 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.228060497 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.227174004 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.228937656 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.233336438 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.228750901 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.234502066 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.228326987 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235722232 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.228112076 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.229346382 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.233856198 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.225823149 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.226442873 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.227463618 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.227640985 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234752947 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.242048101 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.227112153 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.231465406 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.227913375 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.229260005 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.22809781 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.228020171 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.228938475 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.227773904 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234951745 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.243251255 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.23020767 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.230865485 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.22702297 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.22781443 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.229563076 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.227027636 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.231217049 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.228873487 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.229242628 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.226945493 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.228841902 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.229135746 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.229704047 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.229797273 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.22639443 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.228995378 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.235038758 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.243563698 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.232492497 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.229446819 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.236635521 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.230773763 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.235860918 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.244701691 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.22933549 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.229646721 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.230435665 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.229779824 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.22913045 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.228890503 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.229644798 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.229445637 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.232243047 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.229995655 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.231301345 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.230034948 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.229864249 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.22906227 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.237369801 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249104206 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.230075478 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.233536901 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.228305915 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.230219635 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.232904463 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.230846487 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.229446354 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.231605416 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238486668 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.237095286 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.229713638 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.230844733 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.229845364 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.230539698 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.231650999 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.231221151 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.230161969 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.231142939 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.231224978 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.230884196 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.233881667 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.231431716 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.231366114 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.230743413 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.230833149 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.239423699 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.231190485 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.232151907 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.230805548 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.231744286 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.230775022 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.231453528 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.231488373 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.232106242 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.233409069 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.23206744 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.23608613 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.236024504 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.233500543 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.230842067 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.232409879 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.231261692 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.231198666 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.23116256 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.231834624 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.232814976 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.232683744 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.232821051 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.232522376 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.230926372 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.234532817 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.232461602 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.233541508 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.234929157 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.237990492 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.233647665 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.231429315 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.233163935 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.233035434 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.232294569 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.233142816 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.240705577 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.235763214 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.240785153 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.239602762 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.235391243 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.232360364 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.236009048 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.238975101 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.231619727 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.232534439 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.234250697 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.234429711 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.234295558 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.235766986 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.233521514 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.239905415 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.233384155 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.23235172 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.241922705 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.248610967 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234323373 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.234357091 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.236177348 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.232868033 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.232488815 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.234005633 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.233293777 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.240901868 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.24927551 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.234156364 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.235624048 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.231973809 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.235016611 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.237060939 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.235635651 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.236228442 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.23351178 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.235394281 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.234636693 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.236315065 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.233788594 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.233666081 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.233557013 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.236980183 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.239399021 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.232750454 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.237090371 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.234685824 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.235351042 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236070385 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.236591044 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.233456252 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.233723212 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.235506749 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.234832171 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.2355705 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.237578055 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.235988888 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.23569744 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.236555041 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.236171001 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237959012 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.244825652 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.241902093 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.234835065 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.235378457 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.236961355 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.23885805 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.236660058 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.237533985 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236646961 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.238743166 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.237616536 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.236942757 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.237251323 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.238843165 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250883791 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.252214497 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236135016 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.237307257 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.239791646 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.237783188 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.235888199 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.23840615 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.23889113 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.238399125 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.242966175 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.237391785 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.245043834 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.251897554 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.238325356 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.241376219 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.239231515 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.243123974 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.239581845 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.237861816 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.238626515 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.240607981 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.252015171 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239489019 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246051504 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.263781609 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.252847164 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.239344828 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.238795798 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237242731 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.237814466 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.239961692 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.238541637 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.238684366 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.240302895 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.238336244 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.238607443 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.242046899 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.239870081 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.239962445 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.239159338 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.238052383 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.239737873 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.236201754 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.238365455 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.23949744 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.239150468 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.239821529 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.239021772 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.238739411 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.24901488 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.247168755 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.240456103 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.2393985 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.238017728 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.243479068 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.241265978 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246322098 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.245798534 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.239722091 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.240296751 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.240894466 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.239997837 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.237949248 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.240128346 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.238682509 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238345802 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.239168564 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.251673024 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.248547866 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.245795648 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.24082894 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239909255 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.241296207 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241962426 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.240909342 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240451078 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.241137931 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.240624232 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.242899511 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.242202477 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.242391106 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.243016435 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.248176351 seconds)
  done (took 735.091491086 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.239961683 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238861718 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.238015182 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.23931182 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239450921 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239432002 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240008844 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.239690545 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.23999506 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.239581919 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.23974639 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23988427 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.239942257 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.239452418 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239895773 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.238965371 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240049915 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.238660528 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.239802586 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240046683 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.240755554 seconds)
  done (took 27.209339535 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.242599013 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.239856976 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.239424615 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.242232955 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240132679 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.242674847 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.241043679 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242950211 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.243167168 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240463868 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.243310495 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242832182 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.239806483 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.240429544 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240554378 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242638514 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.243192563 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.240934847 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.243436062 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.240694927 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.243990377 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.240256675 seconds)
  done (took 28.49430865 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.243831009 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.243297004 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.242477152 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.242209559 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.244602918 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.241903448 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.242876421 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.243630367 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.244399777 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.243286952 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.24204039 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.243779019 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.247367739 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.247269376 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.246044266 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.244172097 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.38854274 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.243904096 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.243914874 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.244154702 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.242910145 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.249072299 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.242416612 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.242149138 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.243894713 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.244966694 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.245557636 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.245405394 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.244589764 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.244944029 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.247897382 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.247030353 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.24372847 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.246562154 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.243152848 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.245174441 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.248665305 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.245650496 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.24400104 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.246298618 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.253841464 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.262092157 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.245427621 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.251261321 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.246623134 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.246314997 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.247832044 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.251234257 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.244004398 seconds)
  done (took 62.357433257 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.24713871 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.246793188 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.243781389 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.246246477 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.247080442 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.246320971 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.246184473 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.246648192 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.24385556 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.244690099 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.246973618 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.244673088 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.245328662 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.246811971 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.246694245 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.244431515 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.244924276 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.244431208 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.244902112 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.244711652 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.2447797 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.247335676 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.247462147 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.245417578 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.247587686 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.245117344 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.245201693 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.247722385 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.246228417 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.245533158 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.247363065 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.247609936 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.247676151 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.246056927 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.246220941 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.247703677 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.248589579 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.245690124 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.247511315 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.246081526 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.24820594 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.247724338 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.249029207 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.248925577 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.246053215 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.245989647 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.246586942 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.245378565 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.245904061 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.248587156 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.2488404 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.246845716 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.249673072 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.246957688 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.249314561 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.248711688 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.246731455 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.246815738 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.249253506 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.247617564 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.2467017 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.250905522 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.247067771 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.250111173 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.249718448 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.247859119 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.247534813 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.249752692 seconds)
  done (took 85.971982039 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.249662805 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.248877126 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250414613 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249433638 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.249495941 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.249359267 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.249332908 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.249893479 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.249613091 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.249160434 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.248785517 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.249764507 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.249561744 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.25127057 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.250062886 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.249792951 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.249461934 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.25095074 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.250139933 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250030369 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.250076663 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.249890407 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.250186119 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.25032288 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.2515483 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.250529253 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.249972233 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.25013558 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251071046 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.250210747 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.250242004 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.250227745 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.250747307 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.249472803 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.251545174 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.250536256 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.251482913 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250902096 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.250741067 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.25081595 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.250844751 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.251268345 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.250098932 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.250740883 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251167737 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.250456358 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.250827947 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.251713078 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.252488427 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.251030809 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.251521427 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251944962 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251045416 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.25158631 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.251564318 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.252184408 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252339708 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.251543673 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.25254051 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.251147699 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.251963574 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.253440196 seconds)
  done (took 78.726120258 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252870835 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.253868065 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.250425516 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.249990299 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.253347622 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.251432231 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.253563899 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.252684897 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.253790943 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.254702693 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254375944 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.250869355 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251298809 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253638386 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.250992351 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250989313 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.251718369 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.251563399 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253806918 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.251319499 seconds)
  done (took 26.234564669 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.251831615 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.253808031 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.251420437 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.251642276 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.254835508 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.251821926 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.253914141 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253934632 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251476326 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254078632 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.254343152 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.254565538 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252349174 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.251405918 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.25532413 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.252545652 seconds)
  done (took 21.238376274 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.252940519 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.25453467 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.25431956 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.253498931 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.252553986 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.251389458 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.254866849 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.25304582 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.252583919 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.255898166 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.256039099 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.255661719 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.254004201 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.254549056 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.252823253 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.254866545 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.253063675 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.253267774 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.255622692 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.254664965 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.254202249 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.253009804 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.255692105 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.255556085 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.253057934 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.254746047 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.253485345 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.253794177 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.253509805 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.255874657 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.252987905 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.253919471 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.253104961 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.254249695 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.254765305 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.254055746 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.256290318 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.256250749 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.256837565 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.256662799 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.257536604 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.253787062 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.257001091 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.255991752 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.254485092 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.257974347 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.254933839 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.255645294 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.254816737 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.254158875 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.25721365 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.257399046 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.256953722 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.258407105 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.257494575 seconds)
  done (took 70.207129689 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.257516664 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.256884413 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.254997365 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.258231967 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.258196056 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.25606029 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.258125455 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.25476248 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.255321858 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.258368056 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.256654566 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.25778021 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.255018253 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.258149828 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.256634422 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.257580579 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.255408753 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.255845917 seconds)
  done (took 23.814105261 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.256304946 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.255870187 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.259108459 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.256005135 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.256341043 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.258617468 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.256818362 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.258882669 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258644055 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.256342186 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255384864 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.259301261 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258586604 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.2594494 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.257492225 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255892895 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.25866546 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.259176685 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.256847535 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.256245773 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.259011349 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.260340571 seconds)
  done (took 28.862472592 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.257476684 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.256966001 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.273212998 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.2733826 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.277615498 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.285503418 seconds)
  done (took 8.817170607 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257524448 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259851849 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258232072 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259730939 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259706762 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257237951 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256813701 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257729546 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259764998 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257437599 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257585507 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260750424 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.259935328 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257329014 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260657066 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260717685 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258876329 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257469765 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25865921 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261347912 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257196472 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261784919 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258571458 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257695971 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259385749 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.258620703 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261664371 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259312696 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258058689 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261482205 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260803974 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259216903 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261782171 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259560921 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262611755 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261071243 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259511121 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262077221 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261613049 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260518462 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.261047622 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262236513 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261807884 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259780399 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262299823 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259140021 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259032873 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259747114 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259109804 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262289265 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262408091 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259313531 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262346196 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261619787 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261673931 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262573421 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260091724 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259511693 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262483186 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260036522 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259589145 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262144161 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26017706 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259785724 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26303357 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260532113 seconds)
  done (took 84.359463638 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260073681 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.260215617 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259222146 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262018205 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260281542 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26069054 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261656995 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260431157 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26053731 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261014058 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262732227 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261259736 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26057647 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261632635 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261551398 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260060862 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261334312 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260906595 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262069285 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264341408 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260264491 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.260879386 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261848068 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26161621 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261860268 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264506389 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26218002 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261640524 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262011533 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261622597 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262438936 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261555789 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262162719 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.262834566 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263003005 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262908628 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261763815 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263277871 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262708721 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264570667 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262857815 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266718467 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262711236 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262684607 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261953486 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262971108 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26277925 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263714412 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262746547 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263693054 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263503607 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262345516 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264177732 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263197334 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263630853 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263472789 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264163158 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264294111 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263480405 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264788842 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264206589 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263615229 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266212495 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26356645 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264844569 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263134591 seconds)
  done (took 84.522944286 seconds)
done (took 1716.248347325 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.246981833 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.286667098 seconds)
  done (took 13.733190928 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.426769457 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.380383928 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.262968472 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.273160798 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.264084206 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.261226117 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.280354136 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.263877661 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.263154381 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.263830246 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.263598459 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.452528783 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.316918925 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.264700467 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.264773477 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.355987473 seconds)
  done (took 42.059571592 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.291190101 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.271109111 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.365978641 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.287080857 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.289709746 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.427758088 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.317037073 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.26918977 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.413990566 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.305886685 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.605764347 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.290534571 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.269806096 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.219249339 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.28453015 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.428151691 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.485035859 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.613553937 seconds)
  done (took 28.635957945 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.641919963 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.2731599 seconds)
  done (took 9.115894257 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.304089383 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.304865178 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.300630192 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.289126855 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.294357113 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.328638316 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.267092998 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.257230763 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.294390958 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.29954831 seconds)
  done (took 64.142546954 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.262111551 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.246056848 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.245790848 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.244056638 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.236947944 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.23255001 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.238620103 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.233027866 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.347977542 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.344037915 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.249377897 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.244635927 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.239442118 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.240129986 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.23630795 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.271209467 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.374590993 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.237037543 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.235391845 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.245954542 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.239977619 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.320025581 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.274503888 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.238028459 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.346439727 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.358720983 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.240141628 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.244725652 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.357348944 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.236309241 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.23680107 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.238577077 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.239809292 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.780740223 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.720863463 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.25082377 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.259011624 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.247627297 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.23633113 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.35012682 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.239991824 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.245485577 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.231159985 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.686506699 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.385177688 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.332123417 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.282310776 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.235352894 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.237556347 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.29322202 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.235558031 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.233800806 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.259584711 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.953733621 seconds)
  done (took 104.654883782 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.25538093 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.711249625 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.389493614 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.24209934 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.939751999 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.863485524 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.223009415 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.465166849 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.242034289 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.220822653 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.540160077 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.67644545 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.220180617 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.235472065 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.858657873 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.261312726 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.21255854 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.964758613 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.217010376 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.216752456 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.620426469 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.230848159 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.214742601 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.373062477 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.250205629 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.633269172 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.467052626 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.632251252 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.215581689 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.213816732 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.635477462 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.220257359 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.224821823 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.213296711 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.46607293 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.523456738 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.505745748 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.217068357 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.226470356 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.214806422 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.245949918 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.631358161 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.515415084 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.216230068 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.214545351 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.636289462 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.214626189 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.224518709 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.223451168 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.410775612 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.931992615 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.216672473 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.457329623 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.216076476 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.475306465 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.272834074 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.256715418 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.662617973 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.215598402 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.257102597 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.21957733 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.212011929 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.21522323 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.208900775 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.20970466 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.505092408 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.307765067 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.206052189 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.505983035 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.615474773 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.200617883 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.686495831 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.098627919 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.204230048 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.280385689 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.209760663 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.745284669 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.649372488 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.21545686 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.19950815 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.491664062 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.205765269 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.49749089 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.211134167 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.201430187 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.627809281 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.223243777 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.251230265 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.201038731 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.203434493 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.826655074 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.201276443 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.446740992 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.243002627 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.20126765 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.201087424 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.235887865 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.204857893 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.201243215 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.206795191 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.687953173 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.206752335 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.492191305 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.2192218 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.201969821 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.215502917 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.201936348 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.203495269 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.413088746 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.761625073 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.206869096 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.201246297 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.201765852 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.207369922 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.344870733 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.201173938 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.465561915 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.201302027 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.202519458 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.206674913 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.893253575 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.214635628 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.202433083 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.205734805 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.030124984 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.407296815 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.229023209 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.202157263 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.202687152 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.216002882 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.41344505 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.204690534 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.226324776 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.202926304 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.862733407 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.206441728 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.223144723 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.56274656 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.205055889 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.057462061 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.222882871 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.20335248 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.495616044 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.458165709 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.231988727 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.205624657 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.215775282 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.841893498 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.227601904 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.335142547 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.220165765 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.202771161 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.39922106 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.503835452 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.202843138 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.770424071 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.203295335 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.40871951 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.204765702 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.509435972 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.650389021 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.20420248 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.208054146 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.86456882 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.871168253 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.834748256 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.208875721 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.515699979 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.194953993 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.656083434 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.2051963 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.203945017 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.646147756 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.205562035 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.206229842 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.2049211 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.204963155 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.348013394 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.377609735 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.602767178 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.206789336 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.622673423 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.224425538 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.20498775 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.22682422 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.208805287 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.561947329 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.289389351 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.207606133 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.23566171 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.20492675 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.210962624 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.637546785 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.142254149 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.209164733 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.355567046 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.793972133 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.208790042 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.207735825 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.930532253 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.39517801 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.672771901 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.240987055 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.473817339 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.209901316 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.243769655 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.75879857 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.226148959 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.636623675 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.207664178 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.206865642 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.76003383 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.209622538 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.560354213 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.207475915 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.20802516 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.698343874 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.208822928 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.209181177 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.426397355 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.218367901 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.446656079 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.207045911 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.256346023 seconds)
  done (took 1079.974678425 seconds)
done (took 1343.516311819 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.207572509 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.2080847 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.195092659 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.207992962 seconds)
  done (took 25.969931285 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.216716941 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.211464602 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.212329086 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.212289642 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.214355725 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.212246451 seconds)
  done (took 8.429307716 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.249979369 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.205202677 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.208315221 seconds)
  done (took 18.814127459 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.402118722 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.354054124 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.534576493 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.13971916 seconds)
  done (took 9.58109174 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.213185994 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.213325016 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.213159675 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.215527031 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.217671694 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.218483031 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.215797181 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.216198009 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.21923598 seconds)
  done (took 12.092204779 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.184174191 seconds)
done (took 81.222323945 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.591485561 seconds)
    (2/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.771036479 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.39229417 seconds)
    (4/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.981805375 seconds)
    (5/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.440100226 seconds)
    (6/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.396776952 seconds)
    (7/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.33993953 seconds)
    (8/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.293087182 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.232593421 seconds)
    (10/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.882631451 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.032615431 seconds)
    (12/309) benchmarking ("sort", Float32, false)...
    done (took 5.173279003 seconds)
    (13/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.751147673 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.634151219 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.44234887 seconds)
    (16/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.412025017 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.996646671 seconds)
    (18/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.291219325 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.250520381 seconds)
    (20/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.293743863 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.235472619 seconds)
    (22/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.217508408 seconds)
    (23/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.200828354 seconds)
    (24/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.967722621 seconds)
    (25/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.335183875 seconds)
    (26/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.219760847 seconds)
    (27/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.262357805 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.412286278 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.962809644 seconds)
    (30/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.698644441 seconds)
    (31/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.248266994 seconds)
    (32/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.240709859 seconds)
    (33/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.011880091 seconds)
    (34/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.221804414 seconds)
    (35/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.269519683 seconds)
    (36/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.20986793 seconds)
    (37/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.23587027 seconds)
    (38/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.218632258 seconds)
    (39/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.194571036 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.618206039 seconds)
    (41/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.319965929 seconds)
    (42/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.236693468 seconds)
    (43/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.236700863 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.340491377 seconds)
    (45/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.000620657 seconds)
    (46/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.510482752 seconds)
    (47/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.881043682 seconds)
    (48/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.443599227 seconds)
    (49/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.236826377 seconds)
    (50/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.236439109 seconds)
    (51/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.683270238 seconds)
    (52/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.487966323 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.449716636 seconds)
    (54/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.654556946 seconds)
    (55/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.505669207 seconds)
    (56/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.240040492 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.046424945 seconds)
    (58/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.213688666 seconds)
    (59/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.359399167 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.353600769 seconds)
    (61/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.89250743 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.336923472 seconds)
    (63/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.327036409 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.472802324 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.210454711 seconds)
    (66/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.707124397 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.547136243 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.217522529 seconds)
    (69/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.241672477 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.818772009 seconds)
    (71/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.371617427 seconds)
    (72/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.211574264 seconds)
    (73/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.465662763 seconds)
    (74/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.281492784 seconds)
    (75/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.22356528 seconds)
    (76/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.597354719 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.302152905 seconds)
    (78/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.705523981 seconds)
    (79/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.242307076 seconds)
    (80/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.001773835 seconds)
    (81/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.235265113 seconds)
    (82/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.555344642 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.197986632 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.942787103 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.808878302 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.211675295 seconds)
    (87/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.297381375 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.287259134 seconds)
    (89/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.276031562 seconds)
    (90/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.199293579 seconds)
    (91/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.250094532 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.534807713 seconds)
    (93/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.290932559 seconds)
    (94/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.322490842 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 5.32915617 seconds)
    (96/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.550735471 seconds)
    (97/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.338243672 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.215414265 seconds)
    (99/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.705305334 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.225983101 seconds)
    (101/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.363245573 seconds)
    (102/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.217950694 seconds)
    (103/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.661661458 seconds)
    (104/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.336126159 seconds)
    (105/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.756019704 seconds)
    (106/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.281066474 seconds)
    (107/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.325351996 seconds)
    (108/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.198086246 seconds)
    (109/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.325860839 seconds)
    (110/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.330355648 seconds)
    (111/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.967849494 seconds)
    (112/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.573962699 seconds)
    (113/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.228970114 seconds)
    (114/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.661719367 seconds)
    (115/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.442818862 seconds)
    (116/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.902890761 seconds)
    (117/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.703740435 seconds)
    (118/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.429122075 seconds)
    (119/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.884543982 seconds)
    (120/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.745012904 seconds)
    (121/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.393017025 seconds)
    (122/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.899245988 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.727882269 seconds)
    (124/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.555584193 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.637357145 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.209853879 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.186086116 seconds)
    (128/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.390450859 seconds)
    (129/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.712139692 seconds)
    (130/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.408923339 seconds)
    (131/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.747875453 seconds)
    (132/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.447473052 seconds)
    (133/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.611995452 seconds)
    (134/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.216620412 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.430892137 seconds)
    (136/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.20011235 seconds)
    (137/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.236104142 seconds)
    (138/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.231786584 seconds)
    (139/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.261991068 seconds)
    (140/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.817530622 seconds)
    (141/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.410873954 seconds)
    (142/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.410076881 seconds)
    (143/309) benchmarking ("sort", Bool, false)...
    done (took 1.723381744 seconds)
    (144/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.233733358 seconds)
    (145/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.216890392 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.94627915 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.49248979 seconds)
    (148/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.196111903 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.880402843 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.260812607 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.471199366 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.256842721 seconds)
    (153/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.293603456 seconds)
    (154/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.448837122 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.354260947 seconds)
    (156/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.579298579 seconds)
    (157/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.334884434 seconds)
    (158/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.294007301 seconds)
    (159/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.35669442 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.604998831 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.223982868 seconds)
    (162/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.354937769 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.88592086 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.238315073 seconds)
    (165/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.498715303 seconds)
    (166/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.967150952 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.197588253 seconds)
    (168/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.954139191 seconds)
    (169/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.242561364 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.242002639 seconds)
    (171/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.198502542 seconds)
    (172/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.301985661 seconds)
    (173/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.215100258 seconds)
    (174/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.501288457 seconds)
    (175/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.35058325 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.211825086 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.220703831 seconds)
    (178/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.822964834 seconds)
    (179/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.499574624 seconds)
    (180/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.926359152 seconds)
    (181/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.201404412 seconds)
    (182/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.215427073 seconds)
    (183/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.342889752 seconds)
    (184/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.615295623 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.593793911 seconds)
    (186/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.214216264 seconds)
    (187/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.214538311 seconds)
    (188/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.239799547 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.579873258 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.214160137 seconds)
    (191/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.547388908 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.239757369 seconds)
    (193/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.211101872 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.25861871 seconds)
    (195/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.587402182 seconds)
    (196/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.326760171 seconds)
    (197/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.27780947 seconds)
    (198/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.357027102 seconds)
    (199/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.214080407 seconds)
    (200/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.266227294 seconds)
    (201/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.802114249 seconds)
    (202/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.202417903 seconds)
    (203/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.220347843 seconds)
    (204/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.252208381 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.271184649 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.310473948 seconds)
    (207/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.341481397 seconds)
    (208/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.240406484 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.799697118 seconds)
    (210/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.202591025 seconds)
    (211/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.915858629 seconds)
    (212/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.720617362 seconds)
    (213/309) benchmarking ("sort", BigInt, false)...
    done (took 6.214699715 seconds)
    (214/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.648841755 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.288223184 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.214813255 seconds)
    (217/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.62311806 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.222670477 seconds)
    (219/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.882276894 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.433611405 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.890366547 seconds)
    (222/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.23099661 seconds)
    (223/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.542744989 seconds)
    (224/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.489249406 seconds)
    (225/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.231237318 seconds)
    (226/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.239880666 seconds)
    (227/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.297307569 seconds)
    (228/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.209210356 seconds)
    (229/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.478071575 seconds)
    (230/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.216449122 seconds)
    (231/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.231018081 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.238117593 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.741817205 seconds)
    (234/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.300760884 seconds)
    (235/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.331428007 seconds)
    (236/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.369698481 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.257055839 seconds)
    (238/309) benchmarking ("sort", Float64, false)...
    done (took 5.454982851 seconds)
    (239/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.299940357 seconds)
    (240/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.240899627 seconds)
    (241/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.216087666 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.220591049 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.2155581 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.321769513 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.99022341 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.236791789 seconds)
    (247/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.201666252 seconds)
    (248/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.967911006 seconds)
    (249/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.618554754 seconds)
    (250/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.786409906 seconds)
    (251/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.888075135 seconds)
    (252/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.501571795 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.052179556 seconds)
    (254/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.245232681 seconds)
    (255/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.304418297 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.324481682 seconds)
    (257/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.740069094 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.420914085 seconds)
    (259/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.576204721 seconds)
    (260/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.236263404 seconds)
    (261/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.229601428 seconds)
    (262/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.507972774 seconds)
    (263/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.384653551 seconds)
    (264/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.200247813 seconds)
    (265/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.219875354 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.247411687 seconds)
    (267/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.188392527 seconds)
    (268/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.218121122 seconds)
    (269/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.828223737 seconds)
    (270/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.738392574 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.608054413 seconds)
    (272/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.43697637 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.318842603 seconds)
    (274/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.909144983 seconds)
    (275/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.856092004 seconds)
    (276/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.231397814 seconds)
    (277/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.229277684 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.563961636 seconds)
    (279/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.409502682 seconds)
    (280/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.219162291 seconds)
    (281/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.388791539 seconds)
    (282/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.432979934 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.049133674 seconds)
    (284/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.430435743 seconds)
    (285/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.318416645 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.266891212 seconds)
    (287/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.2752366 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.072669159 seconds)
    (289/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.215103963 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.302156779 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.300534596 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.03744944 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.206414056 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.348712528 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.94888157 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.344711428 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.559408353 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.763146438 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.338583937 seconds)
    (300/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.344751285 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.260323461 seconds)
    (302/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.642881088 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.242372753 seconds)
    (304/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.431205521 seconds)
    (305/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.228118139 seconds)
    (306/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.5335752 seconds)
    (307/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.215995828 seconds)
    (308/309) benchmarking ("sort", Int8, false)...
    done (took 4.227193698 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.21926981 seconds)
  done (took 868.996570847 seconds)
done (took 870.150234247 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.25196613 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.24647041 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.229260979 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.250564195 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.341484263 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.258354237 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.239626746 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.231914909 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.277666494 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.279585255 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.228222706 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.257953419 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.230479997 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.228974336 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.22958073 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.243933305 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.132510591 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.23249265 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.246093963 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.239121098 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.246100836 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.228472071 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.278915254 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.257686745 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.234241962 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.23378251 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.233433086 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.250009621 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.342027635 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.233432135 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.233261969 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.241319129 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.124394385 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.229534237 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.226399996 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.250023252 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.241562531 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.239499487 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.234941585 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.262240888 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.479299706 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.230826612 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.232052621 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.231407479 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.231860237 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.234144548 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.232647467 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.238156376 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.243832037 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.245313414 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.474148218 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.245991019 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.235026325 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.232280465 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.242733149 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.232267237 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.235078227 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.247942505 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.251371263 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.24746892 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.12029748 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.23761137 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.23474911 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.249275868 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.240219177 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.513888526 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.228792736 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.237225134 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.48515858 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.238095394 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.513828696 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.2414029 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.234468526 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.247279387 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.265525279 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.130377538 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.227902632 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.233259583 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.240524985 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.231455568 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.243661357 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.2458219 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.238940281 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.234035341 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.247010972 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.265838603 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.244107086 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.235181656 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.243809584 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.252772611 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.240978166 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.244872074 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.237075391 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.23002831 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.243773108 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.238075285 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.237394702 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.237091673 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.238875604 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.244943065 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.485983385 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.250475029 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.231506228 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.23147625 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.234106225 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.247969096 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.485128107 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.235257429 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.256391606 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.282964119 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.238027572 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.127063799 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.238376177 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.251416715 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.245027687 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.238860718 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.231186239 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.127534776 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.483511156 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.250014947 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.237000384 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.233660455 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.251502801 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.237722157 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.232760383 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.135211547 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.237258262 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.248962318 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.356999774 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.246393085 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.267431054 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.236189294 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.238794798 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.26533051 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.251929202 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.267697049 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.240014692 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.251653965 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.252975438 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.233013325 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.246722502 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.246461541 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.238296876 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.244172826 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.231785956 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.265858163 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.24920133 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.248823896 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.258278858 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.358074293 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.234250911 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.129548704 seconds)
done (took 207.553266712 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.295917599 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.227938167 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.328381183 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.234230794 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.330629371 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.33092765 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.231326784 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.231831984 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.23122504 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.638857787 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.232128384 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.232656946 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.234468508 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.232721421 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.31626281 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.234577799 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.232039217 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.574493286 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.233881192 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.304573652 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.233100808 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.232394193 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.235219629 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.618055837 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.230923252 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.230397958 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.305017698 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.234707933 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.58126118 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.227665629 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.231866955 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.582222134 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.32524549 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.252117873 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.244343609 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.242824498 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.331573793 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.250788373 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.317453319 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.316898417 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.330635606 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.272965861 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.235328528 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.232633542 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.237222402 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.236946109 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.234047999 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.26212179 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.235046657 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.233425094 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.576150544 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.245561002 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.234552628 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.234100772 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.234153551 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.264261183 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.23441495 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.237295698 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.326009138 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.237087524 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.298668776 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.619347675 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.669675247 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.23754761 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.237329281 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.234392196 seconds)
  done (took 141.935831672 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.304448676 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.309101606 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.342385774 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.236316994 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.287837244 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.347865385 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.237437898 seconds)
  done (took 10.238751274 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.242827979 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.237499316 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.287248333 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.285815486 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.236835042 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.385347591 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.237842473 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.248665506 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.235165748 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.290238728 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.238405258 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.238844296 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.24394048 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.236687987 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.285400572 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.248079238 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.351904853 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.238655708 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.238503391 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.387855461 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.235840081 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.246128749 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.289040837 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.249729852 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.240329469 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.243831635 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.807154963 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.238358262 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.236791588 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.239521326 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.237234301 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.2775864 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.239637737 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.235709612 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.236534492 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.35440278 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.238645119 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.236741741 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.240465238 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.233857056 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.23966087 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.239812099 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.239834874 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.237286504 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.239275877 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.261507081 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.23973513 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.239722429 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.239625728 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.240050407 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.289312609 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.240141902 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.23707496 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.237385012 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.294984885 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.247315191 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.239364246 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.237399199 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.241247672 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.238748662 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.390339136 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.287463929 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.240574713 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.28799641 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.241527699 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.241181573 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.240992456 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.240809468 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.294164553 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.240817586 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.288837252 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.238570241 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.394691712 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.262869093 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.243209193 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.243343686 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.24402042 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.240244085 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.240856034 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.245849069 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.239288384 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.242452349 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.246458101 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.239455877 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.239709159 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.344452816 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.350476639 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.239371922 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.253945953 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.247573281 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.239839547 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.293596746 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.242221328 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.239566925 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.293016696 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.35575005 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.295100246 seconds)
  done (took 144.000583861 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.24650334 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.249806684 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.24308935 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.258852279 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.242173021 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.242155232 seconds)
  done (took 8.660831652 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.244326242 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.242663432 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.242207733 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.243994553 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.24379531 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.243829043 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.242503288 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.243553928 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.245500248 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.24228907 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.243653376 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.245228862 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.244930361 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.243618058 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.243860013 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.243314028 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.243717424 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.240961316 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.244100413 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.243349989 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.339166872 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.243732192 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.243432978 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.244199903 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.248319293 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.243487832 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.25209456 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.244083842 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.244349259 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.250594977 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.245807262 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.245175257 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.244918484 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.24850282 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.248161615 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.245390161 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.247746226 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.246685136 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.242307837 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.245598391 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.246524682 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.24486754 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.245329623 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.246677999 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.246940692 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.248109313 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.24955751 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.252764867 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.244929925 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.246763858 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.247014478 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.24584274 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.246755682 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.247030623 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.247942235 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.249546461 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.250621244 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.246780152 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.245142485 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.246375941 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.246920993 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.247272341 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.24730776 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.24949793 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.253524209 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.247770208 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.24770929 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.249604894 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.246437596 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.246549225 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.2486794 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.24468949 seconds)
  done (took 91.988657995 seconds)
done (took 397.995383049 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.415235717 seconds)
  done (took 7.598439526 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.421440317 seconds)
  done (took 7.605722234 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.97994964 seconds)
  done (took 19.170204088 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.28327316 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.286375758 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.247825862 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.249562341 seconds)
  done (took 26.256821209 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.317404788 seconds)
  done (took 7.506764518 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.255785813 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.250579977 seconds)
  done (took 13.698570911 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.47781749 seconds)
  done (took 7.668338539 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.041750534 seconds)
  done (took 8.23269646 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.271767327 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.272210973 seconds)
  done (took 13.746518492 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.234028535 seconds)
  done (took 7.425027737 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.853865077 seconds)
  done (took 8.046642248 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.251845316 seconds)
  done (took 7.444520133 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.328075869 seconds)
  done (took 7.519667464 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.362880202 seconds)
  done (took 8.554368585 seconds)
done (took 151.658348557 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.249062117 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.252867848 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.252395464 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.250052339 seconds)
  done (took 26.196242945 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.289025168 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.289727461 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.291175461 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.300504786 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.292123623 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.290883144 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.281041628 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.282292345 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.301117356 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.293298194 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.292375435 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.292674389 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.309122312 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.282797749 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.292459499 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.291351395 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.301297761 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.291074981 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.282042796 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.294207068 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.257712247 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.301223186 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.293721227 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.258452778 seconds)
  done (took 32.14452019 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.455082243 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.327317924 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.410135565 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.308634901 seconds)
  done (took 6.694626345 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.30923595 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.310356833 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.322304762 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.361686403 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.396668611 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.319759164 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.283181117 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.278927241 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.26545464 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.311446879 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.385972171 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.327101324 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.393954717 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.257230641 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.524345234 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.257526839 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.258033268 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.309661229 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.361347217 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.376003428 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.257624216 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.310050004 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.314198227 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.32729809 seconds)
  done (took 33.013105474 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.256153768 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.265034741 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.263105715 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.257447741 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.257951485 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.257901609 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.263516794 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.259471738 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.278633953 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.258726292 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.256827486 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.258236731 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.257578538 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.257864214 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.257535651 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.270506038 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.272419526 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.257928398 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.261123978 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.264305207 seconds)
  done (took 26.427623355 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.251809707 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.185565062 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.604132072 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.507678834 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.251329363 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.254163742 seconds)
  done (took 28.250261685 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.320386085 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.261855454 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.259451258 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.576748792 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.65140522 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.259557002 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.259530496 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.294645582 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.572813369 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.738862027 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.310259111 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.320288584 seconds)
  done (took 18.021259613 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.253825864 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.2557326 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.262605142 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.270929667 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.307687664 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.264244397 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.266944254 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.254063655 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.310797974 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.314045003 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.263649222 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.309801755 seconds)
  done (took 36.531712689 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341699623 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.29800547 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.11408454 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.975620315 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.633628159 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.466755796 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.99438363 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.674700656 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.260622107 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.530173155 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.936371632 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357866876 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.511522093 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.255304559 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.258326967 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.192923973 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.486256054 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.699448566 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.257780061 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.939008553 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28088878 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.265110349 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.095813756 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.282537035 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.468160649 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.384582261 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.556107433 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.255974633 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512846568 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.269294479 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266896699 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.256858625 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.530707178 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893440186 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351900302 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266866655 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.94431992 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.971914858 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.254208523 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.954337435 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.701957513 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.259456542 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.267705782 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.257206177 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.191055509 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.268849814 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683536596 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.263264392 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.968849337 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.257516977 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.26819703 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352620022 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.260596779 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.072737688 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.265232558 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.258963943 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.254885892 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.263680098 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832318632 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.37561708 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.271870909 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.194990408 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.621160696 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.954484085 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.828499604 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.361412594 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.26234871 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.261857903 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.192917074 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.985305321 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.278889169 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.58705755 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.279565418 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.908428745 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9123736 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.965103026 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.201487134 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.769469186 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.268553478 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.195949471 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.486568291 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.259532267 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193966607 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.204893057 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.19352069 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909248436 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270639143 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.572984474 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.270222823 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.674202948 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.271273022 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276798136 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282918655 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.482962623 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.143650234 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.260543419 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.724378399 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404309232 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281754108 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.675943449 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.195157564 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.263466566 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.515607345 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.470753668 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.270841555 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.19750467 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.451761613 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273312365 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.278845468 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.264312115 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.269609838 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.786800787 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.273349796 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.386077348 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280526142 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.260970239 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951701556 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.268755261 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.36092243 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.960962028 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.502453404 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.991442285 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26617629 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344278798 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.270289127 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.261442136 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.045909421 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.7762664 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.261663228 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.263242604 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.267473913 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.271781268 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.262087013 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.205085058 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.269694528 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.999760169 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.677827701 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.485353202 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.267688121 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.536778448 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.196250281 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.590073639 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.318167999 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.484335832 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.371753619 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.261843404 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.522747665 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262398086 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.264681092 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.273170709 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282311137 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361120256 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283730691 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.26294244 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.519272413 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.266022328 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.267028157 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.036419148 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.267605182 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27090166 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.268197146 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.088654756 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793732995 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2425779 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.270116263 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.152669401 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.277334587 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.328363612 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.269789352 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.273339267 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.928729513 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.072976879 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.269118228 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.261092465 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.487948574 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.274414609 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.942617629 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345260235 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.447085096 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.797724861 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.278224403 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.198619421 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.975828116 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.95809669 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264841401 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.199754183 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.263903243 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.273557976 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.275415265 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.778620162 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.802682684 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267767678 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.942052363 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.27319737 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.275845552 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.270277165 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264836837 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.90348593 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.402349323 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.276921008 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.276414249 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409751844 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.279286464 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.199405775 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.269125201 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.271205877 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.265068562 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.266166912 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299028086 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.953172573 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.729182628 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.527925031 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.954001911 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.277623674 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.032536664 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.297313652 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.265414913 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.769263622 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292756921 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.268052951 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27698462 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.276804947 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.957036148 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.940033261 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837742511 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931679765 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.752130505 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157853643 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.283516482 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.266721756 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.688386003 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.202706634 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.823628469 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.439192044 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.691279163 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212617896 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.453261841 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.380356014 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.969552101 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.278493557 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.49485825 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149730826 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.772247792 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.29381012 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.479088958 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302496593 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.276636129 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.198525723 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.57064581 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.487225589 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.737848158 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.350076212 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68725875 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.765696529 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.283439652 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.268191993 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.543944594 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430950919 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.981952929 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.439932618 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.277272508 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.01196288 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.745956499 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.277641066 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.494463581 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845619561 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.271452468 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.469090991 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207168701 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.280052105 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.279510191 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.269092433 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.403811822 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.273277206 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.521784009 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.2797186 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.202780409 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.269330188 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.753981641 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.129888578 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.274378343 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.2696283 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964740737 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.284395974 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528249381 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.284690979 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.890566185 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27563354 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.203820048 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204384625 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.963034434 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.275169809 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24481127 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.720855038 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.617995555 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.263900016 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.296696411 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488576736 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.526500699 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.284196134 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.799160903 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.500682761 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.061505998 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29468449 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.37130977 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.807375363 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.271575066 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.270343413 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.506026082 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.097541604 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.49579134 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.210258568 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.185645977 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.269814026 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.485417609 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.271377786 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.018745846 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50914534 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.98842535 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.274073019 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922919983 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300341611 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.025193463 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.201894673 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.643346607 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.281102966 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.351946247 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.282123822 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.282362482 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.282674573 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429672988 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.033056546 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.288108407 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.286086187 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.366745823 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.433802638 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.899782518 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.27640736 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806702195 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949469887 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.809477058 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.287643758 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.272905894 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278963121 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206749517 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421773765 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.49920239 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546110723 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402383653 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.71870473 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295990645 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.823507102 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.302211991 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.488098622 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.54852615 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.168895564 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275994165 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.287862146 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.273276046 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.284910176 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.484814027 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.729671869 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.794877047 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395668477 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.274208799 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.696123624 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.548832684 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.274108547 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.275349358 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.864996783 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.288699925 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.557647202 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.282757832 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.065764367 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425703818 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.284334193 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917357365 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.286108146 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.430949098 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.047855053 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.980719398 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.533144654 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.685205138 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.286638542 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.808956593 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.917776835 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.541115165 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342244165 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.28661336 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.378017919 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422735153 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.272542208 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.276028991 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.274695253 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323495757 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.985832872 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.2857053 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821274561 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.541596709 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.273734155 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.283216976 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30100072 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.28555269 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.499536582 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939411654 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.503763916 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.286206256 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.281284175 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.092192858 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.813096987 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.29166844 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211192772 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.280114326 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49852055 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.515540681 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.299150979 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.788247177 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.987781293 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797461285 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.252308358 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29873805 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.27714014 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.92201789 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.815143452 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.897048792 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.737132565 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.848923215 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.277349506 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554150786 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.282092857 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.290360323 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555992896 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.281613914 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.285438449 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.291599254 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.809578713 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.983702739 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.283426201 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.995979351 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.217395465 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.618661377 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.908204836 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217184747 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287872954 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.448235939 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.282322532 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409792205 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.290341032 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.276675473 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285255086 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.034227108 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.554452226 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.284666846 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.274565029 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.864717666 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.285931665 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287848095 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.503297961 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281421912 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.953618691 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.629940345 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.534871462 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.286921765 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.26598728 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.283105354 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278721058 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.265809542 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.478429857 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.780505436 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.802947471 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.289232219 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.291969082 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.284460199 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.496061541 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.491108196 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.071904679 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.305971651 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290255052 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.297250383 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.185731198 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.781306973 seconds)
  done (took 1547.045763494 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.304739052 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.291710961 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.284192503 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.348938745 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.291751747 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.380240248 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.303722114 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.35570451 seconds)
  done (took 51.782909817 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.278932539 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.478528787 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.290630819 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.283542998 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.29137933 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.284188432 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.688111299 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.290127319 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.291824209 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.290556342 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.290868224 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.292186026 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.861136191 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.292705949 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.285817053 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.27590617 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.292073086 seconds)
  done (took 64.281458152 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.281863809 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.047410349 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.359694391 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.296820203 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 10.99354338 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.285335492 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.854877746 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.286512469 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.280874066 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.822722858 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.949255557 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.324155326 seconds)
  done (took 85.007114408 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.289139614 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.290493588 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.288435057 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.289575941 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.289542199 seconds)
  done (took 7.670467607 seconds)
done (took 1964.259806222 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.650767381 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.911352418 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.891985185 seconds)
  done (took 5.027494381 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.43244908 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.480318485 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.600647431 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.621798061 seconds)
  done (took 7.361719803 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 1.561021919 seconds)
    (2/2) benchmarking "Float64"...
    done (took 1.669274389 seconds)
  done (took 4.456928753 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.557607592 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.288616407 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.86484484 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.283356232 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.2875014 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.285825708 seconds)
  done (took 20.084537064 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.289197757 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.292089743 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.28951663 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.291844583 seconds)
  done (took 6.38874429 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.270580849 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.026305184 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.274979846 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.287778141 seconds)
  done (took 18.08662552 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.034528579 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.048881813 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.032522056 seconds)
  done (took 7.343558305 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.289096278 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.127576037 seconds)
  done (took 9.643843775 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.5778821 seconds)
  done (took 2.80575626 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.421745794 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.60291324 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.223933279 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.188013764 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.329247851 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.941215016 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.768949201 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.378566088 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.157953832 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.222576231 seconds)
  done (took 25.464355029 seconds)
done (took 120.249012139 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.804956934 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.289443664 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.495653383 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.772406192 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.521735369 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.491060528 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.48666295 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.740599785 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.277264913 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.270448729 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.771828075 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.518605338 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.449684932 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.531312859 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.449642019 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.286551924 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.511031305 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.843909577 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.451383477 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.649490106 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.494846719 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.410162057 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.60414799 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.428734682 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.509501725 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.440649771 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.992252514 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.286963159 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.632784074 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.053670837 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.442865319 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.828405054 seconds)
  done (took 183.968129316 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.300941725 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.294109903 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.288688194 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.292414771 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.28908196 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.289562971 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.289986794 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.290263828 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.287994244 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.31313781 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.288154939 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.288648253 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.287670661 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.309290433 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.289086277 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.288667164 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.301127588 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.299284193 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.301793718 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.288642751 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.288873104 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.310413612 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.287860476 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.30141557 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.298367822 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.289176224 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.288954396 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.306231756 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.289887804 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.288397159 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.289497652 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.28936336 seconds)
  done (took 202.637389775 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.28902582 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.289831018 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.30391774 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.289204968 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.302890644 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.295622393 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.29162343 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.28900937 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.296018882 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.29228164 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.291841359 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.293432375 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.291497219 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.291228331 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.291008541 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.289989953 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.303185021 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.307303673 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.30155066 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.2894984 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.292630232 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.298602715 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.29006994 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.303123682 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.291936699 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.303798151 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.288888285 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.29407502 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.291558824 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.295365918 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.291321868 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.291435355 seconds)
  done (took 202.655391057 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.486401322 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.297407806 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.298913121 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.234616742 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.299419965 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.297500529 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.292130102 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.48654331 seconds)
  done (took 13.924452788 seconds)
done (took 604.413277924 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.430742522 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.166668133 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.48482097 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.318036721 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.991724367 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.318955636 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.319183852 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.476757568 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.19160899 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.475221349 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.466766798 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.315020064 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.598107308 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.315854901 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.553855322 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.41128554 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.118637629 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.226299727 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.610166405 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.766388349 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.555340555 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.674158226 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.470963058 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.176964098 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.602370054 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.677313358 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.917938285 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.117743194 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.317458028 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.613879235 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.775766274 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.16497164 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.368695835 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.35156229 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.406969956 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.388306548 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.139341403 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.349782117 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.488021467 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.443768615 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.772421002 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.013824905 seconds)
  done (took 87.577804156 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.287757239 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.288041906 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.286342575 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.287766908 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.288661224 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.287878612 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.286512657 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.286943343 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.287431454 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.287473053 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.286544381 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.288255857 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.286933978 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.289201698 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.286585247 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.286936524 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.288059357 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.289853473 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.287818162 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.287369673 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.288136958 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.288496053 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.288384576 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.288381193 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.288382267 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.288768087 seconds)
  done (took 34.719893484 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.3012535 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.520318805 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.683635396 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.307474514 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.301225603 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.304841823 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.371043733 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.301803674 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.303480443 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.304812047 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.448613728 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.305109138 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.336376938 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.69175715 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.304750003 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.303120692 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.303136641 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.302405549 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.527026967 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.31217918 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.372980499 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.303915901 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.371676197 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.313884874 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.305348674 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.30363142 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.307255118 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.830386603 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.305161181 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.451069814 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.999812659 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.37229078 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.786799016 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.695054314 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.993743444 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.306161591 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.304944234 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.455521349 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.305600186 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.30408067 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.372502935 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.304488814 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.691982924 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.912679967 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.317773342 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.304476154 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.844028457 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.453248275 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.520294388 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.313780558 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.71293744 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.305924396 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.305270208 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.30489269 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.520384502 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.310190962 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.304052398 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.860736229 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.308543201 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.37302506 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.304532442 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.304941301 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.534982204 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.303963621 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.52430263 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.306104146 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.313693927 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.305798733 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.701702799 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.306690761 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.928625126 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.318847433 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.305230587 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.44968693 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.523199206 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.878356989 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.308721542 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.538049496 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.803118729 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.370987782 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.309252348 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.815175891 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.375215502 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.3088024 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.308151221 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.308727335 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.305297458 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.34912642 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.372089148 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.854353819 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.921786977 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.87707539 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.377867975 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.318123559 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.306753137 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.863771022 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.308727029 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.306589331 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.687343662 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.92994412 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.320115274 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.313860638 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.915622026 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.322626815 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.375625144 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.31136204 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.699171387 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.30091153 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.344724626 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.30059136 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.307577833 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.303881104 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.370101862 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.303513869 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.300794288 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.8976306 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.46639771 seconds)
  done (took 171.196120999 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.306184147 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.293340617 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.294016139 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.306559643 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.293434098 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.299553929 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.293893399 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.29431757 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.29933783 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.294126055 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.293660563 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.295786211 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.296347102 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.294976724 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.305309112 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.30200961 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.951101283 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.295866795 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.294885862 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.295444757 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.07015076 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.296581947 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.2949547 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.295368164 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.294723094 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.294785633 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.305003044 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.297796698 seconds)
  done (took 150.986520528 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.301873498 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.801602267 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.302829387 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.417630466 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.320646373 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.300478878 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.415809452 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.351905764 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.303251153 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.302798877 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.300575638 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.569357335 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.304026476 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.758263244 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.46877808 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.420614558 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.758524433 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.304293791 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.301065256 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.301104809 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.419510228 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.309299463 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.569689708 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.802552301 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.305030085 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.804301536 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.291657409 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.304160441 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.302382929 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.807092172 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.301521638 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.572313458 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.371621284 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.355885907 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.805727598 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.763307605 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.769271414 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.434794358 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.302738447 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.30113026 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.301678775 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.292688134 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.808560405 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.30566556 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.304206853 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.801414713 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.318680658 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.305272268 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.311993113 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.302040239 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.35605564 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.35654211 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.575756482 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.814312232 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.372313062 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.326079535 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.419643626 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.65921959 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.307449119 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.768578172 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.293674607 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.812352554 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.307623525 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.292783419 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.304477359 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.308800821 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.436148062 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.422534426 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.765631957 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.306521546 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.764850593 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.436051002 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.305171689 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.303642355 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.307423183 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.812861474 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.771872958 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.440461675 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.454115982 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.483939274 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.299377746 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.30670577 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.297447115 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.377528685 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.308219825 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.833028874 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.777179657 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.30965942 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.309478982 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.309800408 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.31014198 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.467757457 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.829608817 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.379458101 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.771766435 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.599408596 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.58707936 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.310138154 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.362818246 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.308638922 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.588115715 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.310419838 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.361028415 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.722713472 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.589156427 seconds)
  done (took 154.406375846 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.390798965 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.392631148 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.412876594 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.807272994 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.854308796 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.416898793 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.426580437 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.411547354 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.539901616 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.390710761 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.397920004 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.48046373 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.37697004 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.370949581 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.393460257 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.428036627 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.410386067 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.889930759 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.576959815 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.319885476 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.397828469 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.015034427 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.825399547 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 1.795790812 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.463893707 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.790578567 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.378532193 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.945352095 seconds)
  done (took 50.545877215 seconds)
done (took 650.665242686 seconds)
SAVING RESULT...
DONE!
