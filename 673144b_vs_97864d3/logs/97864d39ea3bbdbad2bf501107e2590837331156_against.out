cset: moving following pidspec: 7180
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.334432991 seconds)
loading group "string"... done (took 0.479111325 seconds)
loading group "linalg"... done (took 7.842406633 seconds)
loading group "parallel"... done (took 0.177675569 seconds)
loading group "find"... done (took 1.299053176 seconds)
loading group "tuple"... done (took 2.02792626 seconds)
loading group "dates"... done (took 1.43930158 seconds)
loading group "micro"... done (took 0.255327189 seconds)
loading group "io"... done (took 0.683140619 seconds)
loading group "scalar"... done (took 42.75841178 seconds)
loading group "sparse"... done (took 13.018217246 seconds)
loading group "broadcast"... done (took 1.213664493 seconds)
loading group "union"... done (took 14.733343352 seconds)
loading group "simd"... done (took 4.913794547 seconds)
loading group "random"... done (took 9.892690487 seconds)
loading group "problem"... done (took 2.054298576 seconds)
loading group "array"... done (took 22.952055276 seconds)
loading group "misc"... done (took 1.474902204 seconds)
loading group "sort"... done (took 3.664541263 seconds)
loading group "collection"... done (took 19.84839119 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.467809778 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142608439 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.147851848 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.153228615 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.188366342 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.139191679 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159372272 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.110705627 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.962113472 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.186123035 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143440858 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.513347047 seconds)
done (took 5.069528087 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.342476059 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084100349 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095189482 seconds)
  done (took 0.875961758 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.090133996 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145210261 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.090879364 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.075971261 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09058219 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.075786438 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.074022685 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.090347448 seconds)
  done (took 1.341869112 seconds)
done (took 3.356629607 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.742141017 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.293047335 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205693075 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.512111824 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.17782643 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.20971167 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.705654574 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.332158795 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.244212245 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10306639 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.13054127 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.403562913 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.115974469 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.673402442 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088326803 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124490552 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178293262 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.444100382 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.092040617 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.090696945 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.114531912 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.153923742 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.114455381 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.084914217 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.178473465 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.078235858 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.187854566 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.105085576 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.076665849 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.28671629 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199078221 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.716526186 seconds)
  done (took 10.901606007 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.116044304 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138191429 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09449828 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137590683 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138514664 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.081945591 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098461587 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076896739 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121326374 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178624383 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132686115 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.140618164 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075608282 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.078603786 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116292496 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245698925 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.101757621 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.119603193 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.095798249 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088626899 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13534691 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095229123 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106206909 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.089464004 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167371706 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.215017516 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10709182 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122724848 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091641965 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094308978 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141148244 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.155869802 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075856574 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.093478242 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176003509 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.105917206 seconds)
  done (took 5.065493736 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189940217 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.101478029 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.188006678 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.143538028 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141125267 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.167260551 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.094993652 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.261178298 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.133385484 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.175136405 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126062829 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112673937 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076255523 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097906689 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075533909 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.777229362 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.165008508 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112133279 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114580345 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095558564 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083238086 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.732486876 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083703156 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.090866614 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079688569 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.086198825 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157656507 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079644032 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.224993987 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.099330069 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097300601 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113499455 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.204754792 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124810116 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117627165 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095492832 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.073900884 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176466357 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098918147 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076952054 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.122148194 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115753418 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134100916 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09142608 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07728456 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222682723 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.07499089 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.090898404 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.107985683 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.985514073 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.10786225 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.177499116 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.103963025 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.074443109 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.339379104 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.113051632 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077309596 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.092214525 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.251325874 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126683391 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.093790584 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076711427 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076988186 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095788894 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.393250247 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.076319891 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.820540248 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079076472 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.085255498 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09449155 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.093039723 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084305331 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100003685 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.095880265 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.092630781 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078914033 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.074927415 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.093288043 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.076534457 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113555542 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098929095 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.077614055 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.156234309 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.0767135 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095252822 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125335034 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.094609772 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.075893645 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127635845 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079772943 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.092791787 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133240631 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.078742398 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112060561 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.092380307 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.123778272 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.093710099 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.154750526 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.090491235 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.074751799 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12188887 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.096876224 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.074976348 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125559724 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.092654113 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095911714 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081760642 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.091662028 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.074990967 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145433654 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.093606003 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.077885113 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.094021707 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.090171481 seconds)
  done (took 22.818791879 seconds)
done (took 39.482931572 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.352441094 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107380549 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10731099 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107476861 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.106182902 seconds)
  done (took 1.553840437 seconds)
done (took 2.299736133 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.276475424 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173091408 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072729165 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.189898822 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073393784 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.177106647 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.15981472 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.109230102 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.186991845 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.091259591 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.165567448 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072827171 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090611907 seconds)
  done (took 2.611780429 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093370174 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112639096 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079984184 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09235494 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090111009 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09194358 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107926648 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097336556 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107446768 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082499681 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090584723 seconds)
  done (took 1.788065301 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093136085 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11113561 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078885358 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090043741 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090209809 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090795811 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107756191 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096939391 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108080775 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082496546 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092207364 seconds)
  done (took 1.780695034 seconds)
done (took 6.916025919 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09449606 seconds)
  done (took 0.831887802 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.043325131 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.195340268 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.117003896 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.163207122 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.330127769 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.208638962 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.594420329 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.129821806 seconds)
  done (took 15.726077603 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.130275195 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102389002 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081991754 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.098961338 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.077990921 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.099170251 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.07833691 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095357108 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.078227995 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.097327291 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.077675608 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097995935 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.079793834 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095988795 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.078472104 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.079531986 seconds)
  done (took 2.254936476 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.1172787 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116131604 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.101818476 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.08755538 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.100615898 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.082835549 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102903068 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.10067265 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.081242011 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099024015 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.087420349 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.102230661 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.085134995 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.097573109 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.085174607 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.104207663 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.082553818 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.101204275 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.085235469 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.10163496 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10406426 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.082049254 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.101344929 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.086480637 seconds)
  done (took 3.149500979 seconds)
done (took 22.704738377 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.154387269 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083478855 seconds)
  done (took 0.985606607 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.101295116 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.117311877 seconds)
  done (took 0.972012923 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.106384012 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095624888 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134199809 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.096784746 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.096014439 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.079021568 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.128285324 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.096744835 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.079715368 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096252916 seconds)
  done (took 1.757538447 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085012951 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10018403 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.087747557 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.116236937 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.089192743 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097722317 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.083812479 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.09956266 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08552566 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094222501 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.087751802 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113655996 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.102424907 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.09989994 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.101049584 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.103190219 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.090380013 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100500998 seconds)
  done (took 2.490406111 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079676078 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.080948925 seconds)
  done (took 0.912996808 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083357161 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095979712 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082234023 seconds)
    (4/7) benchmarking "year"...
    done (took 0.09898117 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078274373 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094960459 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.077989523 seconds)
  done (took 1.367869028 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.488395936 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.140156942 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.269034498 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.099850637 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103248773 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.31401728 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.09450881 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.081710264 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.099982448 seconds)
  done (took 2.500615066 seconds)
done (took 11.741606886 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.090590964 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116034511 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11031923 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.470733908 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.114293358 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.076789088 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.157323826 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.264486068 seconds)
done (took 2.158449121 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.15054731 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342020458 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.122571706 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087023349 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.077093358 seconds)
  done (took 1.384345092 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.077853978 seconds)
    (2/2) benchmarking "read"...
    done (took 0.08118559 seconds)
  done (took 0.91629376 seconds)
done (took 3.211196946 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078250558 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.076777669 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.111987869 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.093013762 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.076080455 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.075356142 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.09304526 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07774933 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.094448619 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.074301879 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.07730688 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.093597296 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076813545 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091443009 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074437859 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090597523 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076835776 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.074623178 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091385455 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074302787 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093845668 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.075110051 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.074546043 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.092970492 seconds)
  done (took 2.819273197 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108630762 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095508279 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.083598614 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100421062 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.081570385 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.100349518 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.083402151 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093619472 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084137335 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.096332077 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099055432 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.082065737 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.096541052 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.081916896 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096844096 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.081892841 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.1007683 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077893919 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096296507 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.082048568 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.100228805 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078016618 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09917149 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082787964 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.0980748 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083025305 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.096556012 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.07795029 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09973584 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.098190763 seconds)
  done (took 3.498848575 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083582261 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.07473728 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092621466 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.082115673 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.091406428 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080093223 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.090907052 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.075447638 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.075572901 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091585472 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.076891806 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091733751 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.075994625 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09311626 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.075934427 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.0779097 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.104538789 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.075624451 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.0914773 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.075586284 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.095184061 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.074543878 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.077518336 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.092209219 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.074802951 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.09111917 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.075431787 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.091633597 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.07583196 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07467088 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.095191556 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.078331332 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091364358 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.081370486 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095563771 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.184566547 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.078432279 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.090821504 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.07557581 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.09105228 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07398535 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.074211835 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091433435 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.081387963 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095428098 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.077228082 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092094965 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.07589613 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.092752961 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.078231527 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.075145836 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.092131427 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.077078214 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09337527 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.079870144 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.091763774 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.076419676 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.074882171 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092721409 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.075254584 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.091538943 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.074348703 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094101712 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.076226884 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.091411864 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.099175642 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.074835805 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.094273715 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.079067004 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094348075 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.076859955 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.106953825 seconds)
  done (took 6.939704806 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082690262 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105219272 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07745776 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.077473119 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091309873 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.076045428 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097334155 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076366175 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094259338 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094605831 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093396858 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077846892 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094436135 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079958869 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093038382 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0775848 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102610735 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074236323 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092737267 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079352824 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093638182 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080357048 seconds)
  done (took 2.682359426 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.218734536 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105140388 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143126209 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094960943 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.117845645 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.113407898 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.084630561 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103310525 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082543626 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103174883 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086107219 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099486353 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113155535 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086431201 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102813289 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086265879 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099448024 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104406925 seconds)
  done (took 2.72037355 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094253481 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096994948 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102753049 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096207156 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.078253727 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098254244 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084393855 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111841424 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.081632476 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095784473 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.087749616 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097916488 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.080452652 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09527818 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080383888 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095271521 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.081032031 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095103441 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088904511 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102374682 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10187999 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088459097 seconds)
  done (took 2.808894139 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097804533 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100650757 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100981902 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101335723 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078112301 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097576314 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085654544 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096244821 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087566519 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.097163034 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078740552 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096524131 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085497169 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096156154 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.084568722 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095986945 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080728379 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095315207 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081314022 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094197031 seconds)
  done (took 2.610199376 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120681862 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111544258 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09296189 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121628776 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093229195 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109705012 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121403024 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092500764 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110444066 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107197788 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110302189 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110533821 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103996313 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11734153 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093418087 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12199483 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12112093 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103957752 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11004206 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09373641 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124446643 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110862647 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10366312 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110021169 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093673378 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110977387 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092540369 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117368976 seconds)
  done (took 3.809277837 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079158531 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078219372 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092885192 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.075090251 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093101208 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.07469313 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.075411597 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.093023967 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078475906 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092521577 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.078160289 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.095806344 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077072872 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.078464047 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095633384 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.078193019 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095312242 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.076046898 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078490371 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093332428 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.078517492 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095456282 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.078419071 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092688432 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075268018 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.078172777 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092813453 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075908968 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095461846 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075724443 seconds)
  done (took 3.294985665 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090837804 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104537231 seconds)
  done (took 0.976082726 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077829388 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11305509 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.075810565 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081504266 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102687893 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07908776 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107031306 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101723174 seconds)
  done (took 1.51829931 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098415655 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115143087 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085886841 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108310957 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096935548 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.112897182 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157594012 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08441866 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.084528882 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.094968161 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.096225433 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.095609881 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.084492638 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097425632 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.084794022 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102489396 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079897372 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107942211 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087424216 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099329011 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085589503 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108016762 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081536398 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.094721013 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08025528 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.107774948 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.089103587 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.098389211 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082853022 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106436811 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.085612125 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.072227767 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.100956022 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084760036 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.097357957 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.096147582 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109940776 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082421275 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.106123144 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085695064 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105928398 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.078069172 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.1022736 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.085758927 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108034972 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084811835 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102666368 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077743153 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.094843008 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.082112907 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095380027 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079059291 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.073896914 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104583259 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.083819073 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111347582 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081560071 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.098456864 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.082567233 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103186326 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.086557917 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.098798601 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08171779 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100340326 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086528792 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.101309473 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087226933 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096124963 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.072760249 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079635154 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.106129779 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.120015135 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089052318 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102426728 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085322857 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.098378856 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082737402 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102583941 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087734701 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106314102 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084505735 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103508765 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087366425 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096758459 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08202546 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.085916865 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099222699 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083370331 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.094167958 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094391857 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099575515 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080623148 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.093741695 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.087814799 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.099940913 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.083615187 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.094476437 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087051603 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.072890593 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101499993 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084192154 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097577685 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.088841474 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102034125 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08558789 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.104519295 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089602476 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09676547 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.082746432 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095269036 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084530987 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.098604723 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.086997024 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090534272 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082241593 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.080481412 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103155595 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.105654493 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080604613 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.084470555 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1057206 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.086155338 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.099468485 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.075830661 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.100055001 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083870088 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105853302 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.086823158 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099866721 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077463084 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095074926 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.083891422 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101102613 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.085098436 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102715707 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.082166425 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.073005401 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098558993 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.084755064 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.105536742 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.078924733 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.096663264 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.083497189 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.098018313 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083334956 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.102906687 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.081179914 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.095593811 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.084419511 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.098580703 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07754216 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10662698 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.081534353 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081808247 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.100416584 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087775851 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.100618585 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.084840436 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099575518 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.084174855 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102961064 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.078206773 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096713436 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081723985 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.106351534 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.081859486 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076601873 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094245914 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.085766719 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.095485223 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083402179 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.096132555 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.082446005 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102828577 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081136874 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099765663 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.080600026 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113212616 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092592375 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102638289 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.085991925 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.10795554 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083354345 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.099220364 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083688125 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084634334 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103023278 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.087038795 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.102933185 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084882163 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.100000636 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076699117 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104538005 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087511077 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.097964521 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081380621 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.096127398 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084808192 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.104798215 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.084134656 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10240502 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082434143 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.080411207 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106406114 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.082430028 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.1013902 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.078754503 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.10169796 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.078857638 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.103461063 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085327627 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.107808264 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082631457 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095381285 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088892777 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099275543 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.085859124 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095996394 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.077544142 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.080576962 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.1061283 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082584245 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.100082308 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.073243649 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10536673 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088336759 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.097178775 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.078876254 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101777948 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089680787 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.098607847 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083507226 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.082357243 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.104061283 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112525801 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.07894622 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.082447606 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.108775445 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.084399473 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.0919907 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.085101995 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100870178 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.07917876 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100359155 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081861217 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101927762 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087494278 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.102999808 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.073988548 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.100389616 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082229634 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.078314649 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095981331 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087118409 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.10159581 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.081765967 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107107996 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085068538 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103261121 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083512592 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.101401991 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.085443006 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104334218 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082854788 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103513711 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.082368507 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.096550572 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.082629927 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.077911165 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.0989078 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.081439709 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102653705 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.079664867 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103873486 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083359547 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097934339 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084869342 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103733203 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.080977583 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.098184465 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.079538229 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082987592 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099190483 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.079786096 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.100905864 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078003899 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105523664 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08418821 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106335188 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.079611075 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094761559 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.084907851 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.100252217 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.085619295 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085001664 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103876338 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.079793842 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102429144 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.082295406 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107342066 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.077353393 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.108037811 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086696412 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09858462 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.083670877 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.097684191 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.081793797 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.097325158 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082070627 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103792147 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.079900978 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084183741 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.103721548 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.082177337 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.098632557 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081380185 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104332557 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.079872601 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104097335 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.074861881 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.097211793 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.079536766 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084263349 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10622969 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084952526 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.10193847 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081911114 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104723619 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085239826 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094910541 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.087764866 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105494439 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085001597 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10642913 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.078823056 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.099444407 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090095678 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.0920863 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082645109 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080177164 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.096364878 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087952049 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.1032508 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097405694 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.098315034 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.079103397 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094793369 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086172303 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100746449 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.074881712 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080532358 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101770634 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082257816 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100952866 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085184932 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.101486988 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086674807 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106938947 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.083184862 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.100598385 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084983166 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.094860177 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.078810243 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.078619229 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.102075486 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085462898 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.096215992 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.076876879 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101587484 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.081999717 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.098341554 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083316915 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.080473123 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106896856 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083376325 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.101465391 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089408246 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.093521072 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.082552519 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102162111 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084261313 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.097598984 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.08440068 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101593865 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08644578 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.105900269 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084703247 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099298477 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085389691 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099960591 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083748947 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083160116 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103673368 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.079082622 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.104692743 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08923204 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099491259 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.082066449 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098425388 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.080744183 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.10402169 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086096386 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.100974665 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088984341 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101294954 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.083139578 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.08650838 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104421411 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083811662 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105093271 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.081812543 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105535716 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.079339332 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108040634 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.080630421 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104720214 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.082073899 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.096301315 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085046589 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102353744 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08346595 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.084828562 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104978804 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.078927269 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.097875944 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081924577 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.100564309 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088916508 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106624456 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.08304942 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102538782 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078868916 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.095229121 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086193765 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.077222398 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.100867708 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.082354527 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107281367 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.081819781 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.099632976 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083616458 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.106529104 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086128439 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.104473238 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.078163114 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104587595 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.085417105 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.101505865 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.081797703 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.098593364 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086951932 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.104349103 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08195151 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.079623967 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109550515 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.083554549 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105724316 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.081430298 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.099094933 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.079935273 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.09780395 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.08630967 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.101256689 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087934146 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.101804016 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084708308 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109035009 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080457093 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.098360637 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090502366 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102302085 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088580636 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.077751791 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10074169 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085799483 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105563636 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079615704 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.098367968 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.078397535 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.101404356 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.079862617 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098019511 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091047788 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.10757512 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.083954008 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101574299 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08312814 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078435289 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097607717 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08009726 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105359705 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.082478314 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.108869208 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.07934568 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.097392118 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079294342 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103068239 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084799736 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.083102269 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096754803 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.078770499 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.09759674 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.082721502 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.106833157 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083325708 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102893997 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084221472 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.101187935 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082132964 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108298083 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.077532109 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.084083927 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111283217 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08438633 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10119918 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.086928941 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108649312 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085842335 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098303149 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085571405 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.102649662 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.081092771 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104777759 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086474722 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114910776 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083943817 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.099066387 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083336486 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.102214871 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.080114441 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.107255651 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087691106 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104478414 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.085701427 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.101228268 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087969145 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083032055 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106245441 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.082878277 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.103818941 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.082774401 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099977034 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082312336 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.097369922 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.086554128 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.105870774 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084546514 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.10699935 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.080691445 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109507855 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.090039005 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103940707 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.077029167 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.079723749 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.099487893 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079513267 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104957593 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.078686987 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100963899 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082810786 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082491543 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.101740722 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087059493 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102301659 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086582597 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104143013 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.075053516 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.100439441 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.083150049 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100683398 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.077538356 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084344722 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105865075 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.086467191 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109695803 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.080228746 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104643485 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.081985632 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100402441 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079734829 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.10594327 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083752206 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.102032915 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.080661151 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084397759 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10637493 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08389626 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105721688 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086865027 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.102421967 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.089334102 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107081108 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.077717288 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.09728052 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.087314133 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100860068 seconds)
  done (took 55.684277422 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147691544 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086288564 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075442528 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096308463 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121901071 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080803915 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095533354 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081807291 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099329013 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09038683 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09458091 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07622405 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118000764 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125629672 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120724831 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091449608 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095154956 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080983458 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095397161 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080274252 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115953835 seconds)
  done (took 2.895337047 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10407048 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.114058692 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11279543 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09801484 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10646005 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113495407 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.093243224 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114315821 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.118514952 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089655113 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116960082 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113612514 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089970308 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108378798 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089499822 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113208833 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118325415 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087749696 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115125811 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.11254072 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091721785 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112354821 seconds)
  done (took 3.15800551 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.090486251 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.084422691 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.105240138 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.075938365 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104006441 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.076470918 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.108412325 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.079097002 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107905923 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.079708214 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.07859021 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.098721425 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085438067 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.095402633 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.080342968 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.097622969 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154145069 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.089359531 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.104362211 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.086442008 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098226245 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.083816387 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.077849565 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.099852911 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.079117548 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.11309264 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086426363 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.104672178 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.084821721 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.099106244 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085423189 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.077728795 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.102355639 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.081029388 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.098689761 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.079500443 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103893692 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.08520754 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078480441 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102017106 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.081635546 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099324598 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086162193 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.101682047 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081772814 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.097601251 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.082862083 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.084655394 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096544142 seconds)
  done (took 5.342443273 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.114797532 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.133597182 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104440317 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144892859 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119949906 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094304449 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.105494598 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14386741 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.079163037 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.102899589 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.102116238 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119568237 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105153075 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091457632 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.104371094 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085140356 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106208883 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.080690245 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.110077204 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.080442968 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.111574756 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.107784222 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099402165 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116747935 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109524973 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084606457 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.100504983 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.090569453 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.117170033 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.11122056 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.092290942 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111126379 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120483168 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.087379139 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.099399075 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088024506 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121183108 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085218887 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108590101 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.07882967 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.107471354 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109913516 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.090189746 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.122155449 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085022135 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107334934 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085444941 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.098685976 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117147168 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088076844 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115603778 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119190881 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090762201 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105155871 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091124558 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120276182 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104552576 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083926551 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.108273837 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.096881517 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.098939277 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090563149 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119720663 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106419799 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.095297941 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.119199671 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.106964355 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090948374 seconds)
  done (took 8.022844555 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114645573 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110072504 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101501355 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122427405 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11087782 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.089939803 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109443362 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089593027 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110859115 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115886305 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09013283 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.158610135 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.106784892 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096179619 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110304777 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090689143 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109853692 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089585475 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110510743 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08925873 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109894649 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120748462 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090248024 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12133152 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124018169 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086915198 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110505745 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089453638 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121581952 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109935922 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12440304 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090153861 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109367867 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100644726 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124645103 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.109588799 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085417204 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110260943 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090784535 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109774024 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08707528 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120400341 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109057766 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.087457987 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11010904 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090835853 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122215 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123560054 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094759452 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117491541 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.10962037 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101013982 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110807118 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109151201 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101187841 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.129652523 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121263128 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120754008 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09084913 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120165701 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121420095 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108509845 seconds)
  done (took 7.517907576 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114146043 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116678081 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.123669281 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.076970442 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099864853 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089545585 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099137235 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.079458291 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115552345 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095958194 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120656704 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109118222 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094210318 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120214818 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110695922 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094189454 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111427101 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110006309 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095903426 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110592638 seconds)
  done (took 2.929071171 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.090928091 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123187481 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.082613664 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110043345 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.085313971 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110099447 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.083677709 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105300939 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083106182 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106213518 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094462248 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.114738502 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102730336 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090882362 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115042659 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.089896574 seconds)
  done (took 2.432835467 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095664298 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.124000744 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.122604366 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.082208351 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.101166229 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.078588002 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.084268268 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099840244 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.077792969 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119982548 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.081679355 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110353821 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.084123469 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101679548 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.079126069 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.109390888 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.077852655 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.100686983 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.084924122 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121671423 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.09266124 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104550832 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.084521682 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105313884 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102223197 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089159101 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.103289058 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.080248401 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.100836845 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.086580064 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103447178 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.091773111 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.098223426 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.081431875 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100549657 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.080369407 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.083904411 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.106801714 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107748516 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.085559772 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.079502344 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.102784031 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084051924 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104724708 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.077984759 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.1060195 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.077909913 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.109931774 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.080400941 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.10328823 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.084515232 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.105914753 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.082956318 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114614841 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.086755388 seconds)
  done (took 6.076908884 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099589411 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10657791 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077987622 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079201535 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106475783 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.084019842 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107415175 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.084751182 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105264874 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079303983 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105203567 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.086560887 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104536818 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085660527 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105418455 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086743891 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.097968476 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.084361587 seconds)
  done (took 2.541433359 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089005672 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081066565 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.112188375 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081188702 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103703986 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084823257 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098879547 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.081370743 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101291342 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083475534 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102770214 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.085061404 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100442512 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.085604717 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081760644 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103821403 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.084608065 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101119984 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082223089 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099046506 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085384353 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100465877 seconds)
  done (took 2.884464398 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.120529193 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123119319 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.090420931 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.211232785 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.122884607 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.107682652 seconds)
  done (took 1.626784108 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10940697 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139542332 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083302326 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106175561 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096035386 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10948519 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086310805 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108450377 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119343843 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12202883 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088075614 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119814843 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098858839 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119222803 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116416354 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0954184 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108268815 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107355341 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084006073 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129151159 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087098669 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120355784 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107253828 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087939064 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108005274 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098544556 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120253421 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12215377 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08723178 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121234531 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115804 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0874373 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119721203 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120924544 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085182051 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120607626 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107189057 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108447565 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116565922 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118890942 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084904071 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11554607 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099464513 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115163327 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119789283 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088024445 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115904215 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108048206 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087693672 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136606566 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115444461 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098343478 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116835746 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11940206 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099672091 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135763054 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122556719 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119089207 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115779871 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101013096 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119778902 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115564338 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098384088 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122169203 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116305793 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119632142 seconds)
  done (took 8.068105336 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121912919 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105513904 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087123753 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122992692 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119203732 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08738793 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10836246 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107746359 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088225007 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104193446 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153348534 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088083136 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120001168 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119182311 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088920202 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107791736 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088529817 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119075158 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083810672 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136213235 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109797933 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118567688 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099258087 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119439555 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122267371 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115510358 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088200016 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107721677 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088928005 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10817925 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09469753 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108169275 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11892107 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085203354 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118832109 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087678242 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110059166 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116079007 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088661756 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116248173 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118457438 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108071803 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109143876 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087153061 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123708928 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10884137 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088021918 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105989004 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088132873 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106396542 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122787187 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102318054 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123570839 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119901691 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10833897 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088523465 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10841734 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08898548 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108105745 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096039587 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120855226 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108288933 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136083762 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088068293 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10811165 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099125929 seconds)
  done (took 7.90578999 seconds)
done (took 151.526044893 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.100482829 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137093528 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097739412 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.1658732 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.083568155 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.136801457 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.116796929 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.118755739 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.08305025 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.082387818 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.104591733 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.084696565 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.169377602 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.083102984 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.103405583 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.085839795 seconds)
  done (took 2.60419111 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.181232368 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.294238034 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101448419 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.102692734 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087911934 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.104294736 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.082260078 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.089585365 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.106881802 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.08183267 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10394395 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.084081523 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.102859469 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.084067223 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.104895955 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.08352268 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.08147842 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.103784217 seconds)
  done (took 2.846081986 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111890451 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.156738832 seconds)
  done (took 1.131069312 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118250967 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176209093 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.273171144 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154392221 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.134183925 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097057968 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155226398 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.125563111 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.205923974 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12785484 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12790494 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.089990971 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137631179 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.092381517 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114044686 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.088776983 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140124402 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.110855776 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.092061467 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.111576502 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117187104 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104575293 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093574757 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11149544 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.188161747 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.126125388 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084036335 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.080792849 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.113812545 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112279801 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.08974728 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118297501 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.103625401 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.169805838 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.096387222 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.151358482 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.113104015 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.088381345 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113774647 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.088588338 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.115604005 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.114616741 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.098192835 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.110321907 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.082678128 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.109969806 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085711638 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.082134483 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.112842319 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.090248013 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.113099843 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.109764232 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.148879289 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.091939108 seconds)
  done (took 7.265932289 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.822976089 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.150833536 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087558965 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.921513293 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137172431 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10079941 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.810668486 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134287239 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.233231233 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.802201405 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12835774 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119557985 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.208362768 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25046586 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.903076653 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312312485 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.695936517 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.343944527 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.138423636 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.146902616 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094701747 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1355028 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.127326884 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.404325277 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.111043982 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087931455 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.115659608 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117543298 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15810872 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.088089058 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111253123 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175579299 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.239504623 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203646879 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.089449931 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.108022056 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087582205 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.162849052 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270557601 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215130447 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.152833848 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105567161 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085281688 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.119937823 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127726659 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084335943 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16054025 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.168025133 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189755039 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089960737 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118685521 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095298912 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.118210502 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.159718423 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083391614 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315319946 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.312638413 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107432246 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095872982 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124536495 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240375597 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108964712 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225494302 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113486242 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215551553 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085966168 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782184576 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.161672158 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.107739176 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.093172199 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.114968525 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091234444 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.118091338 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162785738 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.386720121 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09954857 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111869283 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086315298 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227565692 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087456725 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106919355 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159611585 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.087872183 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11591485 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09865743 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120151351 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.166907294 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.222758066 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120108757 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114708837 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091756686 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120707243 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.088475446 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209328376 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.2209776 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.154996191 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.205684209 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119958576 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.160338289 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.161321234 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118387171 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.164840483 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.115330764 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100008145 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119432221 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217313038 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.138662442 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087212362 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111666129 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.093925107 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.142452147 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087993685 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116370446 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.164649366 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479289129 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.162743281 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.083762679 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111399366 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095549735 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159622901 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11495624 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.237471375 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117736219 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.161979447 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114611917 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.082819012 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.116316086 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161580276 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119351825 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.095219843 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119578377 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.093833882 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.24527244 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.198094981 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12140318 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219753097 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177423295 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115780489 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168344646 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11560754 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165645826 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095416425 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117738496 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.087641875 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779882622 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120808262 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.093204189 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113751054 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182097897 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087111861 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085921101 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.109157788 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082538225 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798042183 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087763826 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10739173 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.087535883 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116422942 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092571702 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115017364 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.089754934 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180992311 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.208851015 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119997048 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114646906 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.087317618 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158210557 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.110175469 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.088381398 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.107783839 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.088988365 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.116146338 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091415755 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109624966 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167836892 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.156108514 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220891202 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.575040013 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.107940006 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.087985857 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229418757 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087220997 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.286463764 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115835294 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.20523409 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184680227 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.085313134 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314678467 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165467801 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.183226993 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089769754 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.167440413 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107356895 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092383859 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.181605149 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.088049679 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114914007 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.15782201 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100841134 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121187176 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.926320955 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087238691 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.223964428 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.106304267 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.16507278 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088572498 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119841488 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29228324 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087626264 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127132394 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.160617403 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111556444 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.088855914 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.704568978 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.110746709 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.096132496 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116817166 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223240209 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163740586 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115253694 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.095411281 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118611422 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.160276921 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205627049 seconds)
  done (took 42.778156284 seconds)
done (took 57.491442654 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284730261 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214627496 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.268742825 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.1684429 seconds)
  done (took 1.908053291 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.179457575 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.124133281 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.145265975 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.103492522 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.129748117 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.104830392 seconds)
  done (took 1.679036267 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.381856076 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.28464657 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242663018 seconds)
  done (took 1.803589613 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.248698486 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.267542043 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.32684434 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.403102446 seconds)
  done (took 2.244527931 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.205633185 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.123720772 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.098549721 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.137300335 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.168332406 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.186361317 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140393531 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.153103629 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128077484 seconds)
  done (took 2.286766985 seconds)
done (took 10.823086035 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.139333852 seconds)
    (2/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.299745747 seconds)
    (3/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.264050573 seconds)
    (4/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.173211795 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.193495977 seconds)
    (6/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.218451165 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.126116812 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109618296 seconds)
    (9/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.248400481 seconds)
    (10/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.115512836 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.096622184 seconds)
    (12/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.225752877 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.149421628 seconds)
    (14/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.112937075 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.091472372 seconds)
    (16/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.133150798 seconds)
    (17/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.094462652 seconds)
    (18/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.120680852 seconds)
    (19/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.103162427 seconds)
    (20/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.225449181 seconds)
    (21/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.086559953 seconds)
    (22/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.214647033 seconds)
    (23/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.267031518 seconds)
    (24/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.190084944 seconds)
    (25/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.231599349 seconds)
    (26/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.160882785 seconds)
    (27/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.092377013 seconds)
    (28/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.126491156 seconds)
    (29/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.24562877 seconds)
    (30/286) benchmarking ("sort", BigInt, true)...
    done (took 0.243581749 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.232918677 seconds)
    (32/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.160363857 seconds)
    (33/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.16928323 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118119331 seconds)
    (35/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094437791 seconds)
    (36/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.116352519 seconds)
    (37/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.09056502 seconds)
    (38/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.184801314 seconds)
    (39/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.137916992 seconds)
    (40/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.114565726 seconds)
    (41/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.119330241 seconds)
    (42/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.089341364 seconds)
    (43/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.106155864 seconds)
    (44/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.180017684 seconds)
    (45/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136489837 seconds)
    (46/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.088289241 seconds)
    (47/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111696025 seconds)
    (48/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.159451497 seconds)
    (49/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.146454213 seconds)
    (50/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.105603162 seconds)
    (51/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.099971025 seconds)
    (52/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.181753129 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.112745638 seconds)
    (54/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.134397229 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.130503752 seconds)
    (56/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.111300045 seconds)
    (57/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109167906 seconds)
    (58/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.087121034 seconds)
    (59/286) benchmarking ("sort", Int8, true)...
    done (took 0.22866139 seconds)
    (60/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.191352779 seconds)
    (61/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.102040931 seconds)
    (62/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.09503516 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.08140147 seconds)
    (64/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.119409546 seconds)
    (65/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.111480049 seconds)
    (66/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137668849 seconds)
    (67/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.074998123 seconds)
    (68/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.216620924 seconds)
    (69/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.120681563 seconds)
    (70/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.09680295 seconds)
    (71/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.182831464 seconds)
    (72/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.08384382 seconds)
    (73/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.098510811 seconds)
    (74/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.093877559 seconds)
    (75/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.155789751 seconds)
    (76/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.093123851 seconds)
    (77/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109151479 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.11007351 seconds)
    (79/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.121291174 seconds)
    (80/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.193557675 seconds)
    (81/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.082987018 seconds)
    (82/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.07314175 seconds)
    (83/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.120373131 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 0.082780539 seconds)
    (85/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.187037932 seconds)
    (86/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.08927624 seconds)
    (87/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.107622359 seconds)
    (88/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.094247179 seconds)
    (89/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.113573744 seconds)
    (90/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.179048093 seconds)
    (91/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.073269587 seconds)
    (92/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.136027538 seconds)
    (93/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.07379615 seconds)
    (94/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089866601 seconds)
    (95/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.114252814 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.083252068 seconds)
    (97/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.175919198 seconds)
    (98/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.149047322 seconds)
    (99/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.092048884 seconds)
    (100/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.13469969 seconds)
    (101/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.154056381 seconds)
    (102/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.13655909 seconds)
    (103/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.121894468 seconds)
    (104/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.153089384 seconds)
    (105/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.190772456 seconds)
    (106/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.078978119 seconds)
    (107/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.13218968 seconds)
    (108/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.114417318 seconds)
    (109/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.165935804 seconds)
    (110/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.098332962 seconds)
    (111/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.082555824 seconds)
    (112/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.106275261 seconds)
    (113/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.09404828 seconds)
    (114/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.084394481 seconds)
    (115/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.233968019 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.187444491 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118027579 seconds)
    (118/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.090221658 seconds)
    (119/286) benchmarking ("sort", Float32, true)...
    done (took 0.239024551 seconds)
    (120/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.10828721 seconds)
    (121/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.089495468 seconds)
    (122/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.178473251 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.090907156 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.107850637 seconds)
    (125/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.129547327 seconds)
    (126/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123133834 seconds)
    (127/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.071814054 seconds)
    (128/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.194506231 seconds)
    (129/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.115781271 seconds)
    (130/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.152542359 seconds)
    (131/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.152825926 seconds)
    (132/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.177997983 seconds)
    (133/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.162972461 seconds)
    (134/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.095352236 seconds)
    (135/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.125719749 seconds)
    (136/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.200170886 seconds)
    (137/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.104380027 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.083622836 seconds)
    (139/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.112867984 seconds)
    (140/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.130458946 seconds)
    (141/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.185902298 seconds)
    (142/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.154791185 seconds)
    (143/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.071490798 seconds)
    (144/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.071513666 seconds)
    (145/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.094898549 seconds)
    (146/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.071891079 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.082096879 seconds)
    (148/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.122740689 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.093884 seconds)
    (150/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115227342 seconds)
    (151/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.135517369 seconds)
    (152/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.124335167 seconds)
    (153/286) benchmarking ("sort", Float32, false)...
    done (took 0.179139092 seconds)
    (154/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.086732927 seconds)
    (155/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.098010825 seconds)
    (156/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.087317152 seconds)
    (157/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.083724247 seconds)
    (158/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.120224803 seconds)
    (159/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.0963839 seconds)
    (160/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.17792688 seconds)
    (161/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.073025925 seconds)
    (162/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.109853491 seconds)
    (163/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.189685865 seconds)
    (164/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.074298349 seconds)
    (165/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.116595154 seconds)
    (166/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.072538509 seconds)
    (167/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.092358467 seconds)
    (168/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.09530895 seconds)
    (169/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.074115836 seconds)
    (170/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.084999524 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.107859622 seconds)
    (172/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.095391454 seconds)
    (173/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.108952094 seconds)
    (174/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.071424258 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.106066001 seconds)
    (176/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.090635234 seconds)
    (177/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.130149316 seconds)
    (178/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.084459356 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.117904763 seconds)
    (180/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.093021269 seconds)
    (181/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.082272395 seconds)
    (182/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.097721068 seconds)
    (183/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.139957749 seconds)
    (184/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.114623151 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.083367842 seconds)
    (186/286) benchmarking ("sort", Float64, true)...
    done (took 0.241306076 seconds)
    (187/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.093686968 seconds)
    (188/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.169496809 seconds)
    (189/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.096704839 seconds)
    (190/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.085466038 seconds)
    (191/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.109002862 seconds)
    (192/286) benchmarking ("sort", BigInt, false)...
    done (took 0.227611625 seconds)
    (193/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.101947631 seconds)
    (194/286) benchmarking ("sort", Bool, true)...
    done (took 0.232355323 seconds)
    (195/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.138844644 seconds)
    (196/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.080237701 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.107264247 seconds)
    (198/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.111285263 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.119406169 seconds)
    (200/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.08082213 seconds)
    (201/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.073316234 seconds)
    (202/286) benchmarking ("sort", Int8, false)...
    done (took 0.218377514 seconds)
    (203/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.139302949 seconds)
    (204/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.11682052 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.092649694 seconds)
    (206/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.084560166 seconds)
    (207/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.107687066 seconds)
    (208/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.096577052 seconds)
    (209/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.108022486 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.082380323 seconds)
    (211/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.135896819 seconds)
    (212/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.071608728 seconds)
    (213/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.093704472 seconds)
    (214/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.087550452 seconds)
    (215/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.081278485 seconds)
    (216/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.103618335 seconds)
    (217/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.071433636 seconds)
    (218/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.07384947 seconds)
    (219/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.096256186 seconds)
    (220/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.088974179 seconds)
    (221/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.111521821 seconds)
    (222/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.138123763 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.10763458 seconds)
    (224/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.072255341 seconds)
    (225/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.098442607 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.084405912 seconds)
    (227/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.082938402 seconds)
    (228/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.09611213 seconds)
    (229/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.0833125 seconds)
    (230/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.094669437 seconds)
    (231/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.145135559 seconds)
    (232/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.176110389 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.107664154 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084371199 seconds)
    (235/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.07112037 seconds)
    (236/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.10657226 seconds)
    (237/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.085861612 seconds)
    (238/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.097953875 seconds)
    (239/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.104026462 seconds)
    (240/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.079977959 seconds)
    (241/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.095796614 seconds)
    (242/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.09904082 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.113707249 seconds)
    (244/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.084897974 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.116133353 seconds)
    (246/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087414169 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.107462101 seconds)
    (248/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.076749106 seconds)
    (249/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.071691015 seconds)
    (250/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.135096982 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.084151302 seconds)
    (252/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.094058568 seconds)
    (253/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.08886657 seconds)
    (254/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.243456307 seconds)
    (255/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.084179531 seconds)
    (256/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.098479391 seconds)
    (257/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.090491409 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.116380486 seconds)
    (259/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.086261408 seconds)
    (260/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.193691892 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.081464675 seconds)
    (262/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.108240193 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.082896263 seconds)
    (264/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.107916783 seconds)
    (265/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.072390378 seconds)
    (266/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.082668479 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.116966156 seconds)
    (268/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.071043682 seconds)
    (269/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.118376263 seconds)
    (270/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.163214824 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.107026142 seconds)
    (272/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.074584288 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.106561499 seconds)
    (274/286) benchmarking ("sort", Float64, false)...
    done (took 0.155382105 seconds)
    (275/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.098278948 seconds)
    (276/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.082920575 seconds)
    (277/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.076107168 seconds)
    (278/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115729107 seconds)
    (279/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.109768695 seconds)
    (280/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108470407 seconds)
    (281/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.071932881 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.105184908 seconds)
    (283/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.082312416 seconds)
    (284/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.081490225 seconds)
    (285/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.110399574 seconds)
    (286/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.074049651 seconds)
  done (took 35.953755542 seconds)
done (took 36.851669884 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.097618562 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149019798 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095289038 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135576113 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.097578371 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.121674 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.092834593 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.120008781 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.097340615 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.12230215 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.096406494 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.09759161 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095978879 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.11835112 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.09536034 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139474546 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.097835292 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.089678982 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.11255345 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.083013814 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.112923632 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.083840505 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.108409218 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.074380185 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.094273616 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.116950099 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.088750602 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119695108 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.083900925 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.108112823 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.083377105 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.11513632 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.084558627 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.096404531 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.115000543 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.087031176 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.12000092 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093429426 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.109531624 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.084182235 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115548166 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086668425 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.090676752 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.116378914 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.085045416 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.106420248 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.088507552 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.122138505 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116558201 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113110674 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.092554727 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.118194771 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.094701219 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.114009034 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.08334508 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.087921229 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.107980426 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116343617 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.112288108 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089254002 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.115306622 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.092828506 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.106700753 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.088183118 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111336901 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.095090944 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.093799853 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.107391362 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.094052529 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.113590883 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.083785582 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.111497876 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.084236652 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.082877802 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.118403748 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.094200843 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.107070346 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.088989892 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.115151548 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.09076592 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.106353102 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087241178 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.085444132 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.109746592 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086667633 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.096964012 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.083610292 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.08938148 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.107237332 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.087794615 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.114394732 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.091522602 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.109285721 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.096304828 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.082809156 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.108203479 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.083693372 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.107551757 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.086534378 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.081924706 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.108283668 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086223753 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.11750494 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.086076327 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.10887349 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.097261853 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.107693607 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.091508356 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.082539428 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.107209987 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.100021836 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.118904526 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.085271471 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113218415 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08407452 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.085189991 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.10733197 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.083670884 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.107424138 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.085708574 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.084519605 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.108863796 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086887659 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.109931825 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.098333129 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.107919294 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.084293491 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085473377 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109462262 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.089394472 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.108274961 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.084433237 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.110230616 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.083746904 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086250213 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.109633426 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.085986996 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110612621 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.08853626 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.10864556 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.089080558 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.087519764 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.110246586 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.083787681 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.106720041 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.079234604 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088755833 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111726119 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.08544622 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.107811398 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.086297264 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.107240187 seconds)
done (took 16.094057405 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087057818 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185385193 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.145205991 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.120598945 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131429387 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.08496089 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122278826 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.141611773 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.087009914 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142615565 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.107675991 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.129794359 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148069173 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.083997247 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.083635806 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.114145192 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.085781592 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.126290889 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.147262237 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.107194146 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.143576613 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.084224504 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.139778918 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13277445 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.096448444 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.136290728 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.085657221 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.087664043 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.112996609 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101110311 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.130753487 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.087952035 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.108948497 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.106056856 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.126691058 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.092837516 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.110080608 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.092451091 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108685983 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.086115573 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.132127993 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.107146121 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.115124651 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.090194949 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.112439566 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.093934427 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.11010867 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.094694357 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.119187582 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.089652441 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.124715801 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.114206615 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.113442128 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.101119455 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.108284862 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.095519317 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.126216967 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.092290874 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.109953638 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093736517 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.108247562 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.089483625 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.124921084 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.109669519 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.113926699 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.101029921 seconds)
  done (took 8.294366495 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10344279 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139252599 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.103133622 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.128777009 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.085076495 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.109892591 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.08591845 seconds)
  done (took 1.722265228 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.086815602 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.127533406 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.137519048 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137359088 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109814032 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.136629264 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09094683 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.111556272 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106821618 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.110778681 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111195046 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151294857 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.087467276 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.118621058 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.114378787 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.110499534 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11366052 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.110144554 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090366615 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.138553686 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089256019 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.129179846 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.08835073 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.109668168 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.105389397 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.08513188 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160468468 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115470802 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084071631 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.112674779 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.084720812 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151345039 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104244354 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118902461 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086094872 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129777508 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.104776675 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10809936 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.10213572 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.116116626 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.10407449 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.085596524 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.112509011 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.084079347 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11525824 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100335383 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.114999447 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.08693454 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.087651348 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135742056 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.086624965 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129608665 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.085576256 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.1154472 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.088509863 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114628051 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.096483836 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.110878918 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111551877 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.082642533 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132046666 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131314714 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.10484196 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.1306527 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088600185 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127922997 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103886508 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.08816709 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113781488 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.089142524 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131680206 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.085116849 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114085319 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100141461 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111916556 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113984036 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137347562 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088145668 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.121392057 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.086700985 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.086616204 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.111828369 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11196181 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115261124 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.085872676 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115498563 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089347837 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.108206263 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.086416086 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.089060637 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.109656972 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.08765208 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.114158375 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.087569244 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.113804889 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107630307 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.111519038 seconds)
  done (took 11.439260295 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.088134639 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.086695185 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.115157086 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.088037221 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.112336026 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.08736683 seconds)
  done (took 1.549718028 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117246386 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.113113946 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.101024402 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.116107172 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.127257078 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.138480954 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.111218243 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122076471 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.129272872 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.099434762 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.140878412 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.112317299 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.14371533 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.091626724 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.138631046 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.090003936 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.137514306 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.092365639 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.122868279 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091271501 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.130445889 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.091716021 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11851105 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.105660248 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.122720909 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.090513771 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.118493319 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.097328979 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.123022031 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.096084297 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.11772049 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.095692004 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.118963509 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121497867 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.113018591 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.116661689 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092503985 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12335333 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.094125193 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121501966 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.113930401 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117226846 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.09853885 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.123734058 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.097319962 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.11796135 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.098950207 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118023155 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.111683595 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123624904 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097697061 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.116477911 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096681335 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123945619 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.092596604 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12245 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.098191395 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.13855419 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.091556158 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.119421024 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.088512982 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.123135109 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096188506 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121788601 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.095767653 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123907055 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.117962648 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.093194528 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092352585 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.117974752 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.097815172 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.114874269 seconds)
  done (took 9.026683922 seconds)
done (took 32.986397785 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.692051561 seconds)
  done (took 1.662015092 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.829929629 seconds)
  done (took 1.805701148 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.980955342 seconds)
  done (took 17.98341615 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.471436696 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.55078894 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.980994711 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.163178581 seconds)
  done (took 3.140251965 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.968304956 seconds)
  done (took 1.960135022 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.284378388 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234739836 seconds)
  done (took 1.498030061 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.776349951 seconds)
  done (took 1.765909006 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.451826163 seconds)
  done (took 2.434497322 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.329644598 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.158653554 seconds)
  done (took 1.482202633 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.570916519 seconds)
  done (took 1.560271877 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.371644316 seconds)
  done (took 11.35979053 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.244203145 seconds)
  done (took 1.243437103 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.294368323 seconds)
  done (took 1.284609192 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.567652745 seconds)
  done (took 4.55721357 seconds)
done (took 54.715538297 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.096116187 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.099535443 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.124683863 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.09670733 seconds)
  done (took 1.401392636 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101823735 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119043502 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10181787 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.11805847 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.103589562 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118678391 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.096194613 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.129585104 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.091971795 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.120939545 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.094497992 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.091357368 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.122518239 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120182099 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.091307908 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.096205967 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127145052 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.092350938 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124234851 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.092372139 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.115928094 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.094950348 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124370668 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09112998 seconds)
  done (took 3.577032934 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.09789198 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.091065688 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.119652066 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.09124546 seconds)
  done (took 1.399047778 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.097432781 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.12944998 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.103305319 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.122920665 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.104685607 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.128655042 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.090469662 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.088333186 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.117561079 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.096736405 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.113353342 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.111562751 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131222339 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.096482023 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.125462622 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.086847104 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.11420723 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.10372925 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12396386 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.097484297 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.115482689 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.097399847 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.086781024 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.130550993 seconds)
  done (took 3.613049828 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171991518 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126229998 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.111441179 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.119054249 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.132442961 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139576878 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.084507237 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140147727 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.084965028 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.127265294 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.08980172 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.16025549 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.12523996 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.085354217 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.084788313 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.111469754 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.098783278 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.12529696 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.088446501 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126344416 seconds)
  done (took 3.334385959 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.095711846 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.089852676 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.112026389 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.088721964 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123356612 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.093375874 seconds)
  done (took 1.60437584 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.095240468 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.086705267 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.11726851 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.088536039 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.118420808 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.086200397 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.111127222 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.087582356 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.087311962 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.112167865 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088869884 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.111000594 seconds)
  done (took 2.197650839 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.519004116 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.117128009 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.088911935 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113538036 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.09757355 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.112601969 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103412075 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.114405474 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.115214727 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.112945533 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.087101911 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.115170995 seconds)
  done (took 2.698368592 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2014333 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097571474 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26000759 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.350039599 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154134015 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160901187 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275847789 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163752968 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.176860003 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140572364 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193694513 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155143653 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126294873 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173243355 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137846313 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.153014084 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172710744 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188196515 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120294396 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224931874 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130487971 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16411808 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178155761 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150055351 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137295114 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157460202 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.092904527 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127881174 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169962736 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164485371 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172950701 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120539629 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139011259 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.461221344 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203927597 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173694788 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2819226 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133635599 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.177895059 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.140667224 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248279852 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111287516 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213196384 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125167571 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130156588 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176503897 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.320304333 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174311086 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.132443634 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140654081 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177730038 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17728671 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.17525429 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110337485 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323420579 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120977928 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143106908 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182264852 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179549339 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187745778 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165348509 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118398495 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184253722 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181895062 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176338538 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.11442848 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.161884394 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124167497 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168713191 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192039934 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173212066 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160206688 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.18226082 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137491413 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160454366 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169993008 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15450181 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14653881 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158365893 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120027898 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121926031 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136279898 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129039777 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168605249 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123761189 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196797536 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132864639 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.143679023 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226951821 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129542834 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159418465 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160261336 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159422838 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144979495 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.088283635 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144877548 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.149429355 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127829295 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130021959 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156548895 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114168973 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126564364 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150376119 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.095315296 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156511354 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.126164971 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.334098819 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163271243 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.124424545 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134167425 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147298459 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.147965959 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1663833 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183321474 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104942567 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132220722 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191704683 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156875544 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105595627 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172883604 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18090343 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.153865432 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136717615 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164154536 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186832253 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111890254 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212987557 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114011512 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134167717 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.139618136 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130272401 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156868319 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.157095156 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13058737 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.123143667 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216602927 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.096253784 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135956572 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16999551 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099656385 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127308622 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112964856 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135141207 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.132928192 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.114287511 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13521294 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152358858 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129712154 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153672137 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151149134 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140089675 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18576358 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106049506 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.147768179 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14569314 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09199079 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.170786331 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181615207 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129872717 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192450795 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.162023532 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196263683 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160146039 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130721399 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175310664 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100699247 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118506358 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160813512 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129096324 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159000344 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.178377761 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220785404 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162153998 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.12091573 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147887903 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163605991 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163433244 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148675417 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.107952327 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160137164 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155535064 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.094189545 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124806321 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.098931393 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137738027 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129227557 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106872512 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175700275 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16207329 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188537858 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159224638 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140231767 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180824325 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124259003 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132178697 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.400915712 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139594617 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.17975219 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179574595 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16261717 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111740201 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167921946 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118767153 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095452223 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.133847621 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161795066 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106081493 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134046985 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140323726 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181001409 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.342395757 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14778094 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200887677 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163078259 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189407175 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.12038254 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169906826 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166752003 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129017997 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.174754961 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105224568 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.146028432 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178338461 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145141344 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182741676 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159740556 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163841263 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189416925 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.146173338 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103121608 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147219467 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160790149 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109467331 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164417026 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145089613 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135855495 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315364389 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.09727592 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126578473 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172517693 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143772798 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171996378 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.118308118 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162655258 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126282968 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140411181 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129682354 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143948081 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.113365167 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.332647754 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178821523 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143936351 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.316849201 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170459926 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129782433 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.30832993 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187187794 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.363988934 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108656129 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142130813 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15886039 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130934975 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.349679031 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176957915 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144369864 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17590917 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127784433 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.134564624 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106770165 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148664808 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15049351 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.139526019 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104817658 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.149943276 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.134080575 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173821303 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111977149 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155896563 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16261874 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149231662 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.115733628 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144642493 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199391171 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157572348 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173173753 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.117870125 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.162499558 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193909712 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124886051 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098769536 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.127199817 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177849676 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10297151 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15641165 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.183158698 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22254046 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15753131 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161504985 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109607224 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118254451 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130543985 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14787359 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195616524 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140138184 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135352634 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184629197 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.113795689 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130768496 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158873758 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284001827 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141809262 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17094763 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.083844902 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277684168 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122917258 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103037662 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159670106 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17083671 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134605803 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.14524927 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161736984 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143011649 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132630862 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137167251 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188517318 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200611256 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16516365 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168332643 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132874993 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157925229 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320454972 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174258841 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145390079 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.105132469 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162946677 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181634895 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.183117989 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.13358275 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16114962 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13234467 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158421744 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165256583 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136041895 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194824278 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101074933 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162879042 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13869573 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123322695 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128840858 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.211905557 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103221182 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170516146 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157466129 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130918346 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098278765 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149694209 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156543667 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11369942 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.126599143 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173413592 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.094471619 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159844961 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175693134 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103720025 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154985512 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146513647 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134456811 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11233764 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143180484 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135591606 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.136336664 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178366324 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128995078 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175271409 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169539577 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133262476 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.345686369 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141059247 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636197817 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127822276 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180722124 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118013469 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178061018 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148434117 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163679246 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160664288 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148513603 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133919072 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14816052 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230213468 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163296365 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155702769 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102146661 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142848357 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141864224 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.102719152 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151428367 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161176421 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110926734 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135420972 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155872196 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142275413 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.104193891 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139433734 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182564308 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118298796 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172746957 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177877005 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138839222 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165089011 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166434605 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100286634 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158808228 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171282761 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141921868 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147519439 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.104033751 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134217248 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17704624 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.094991775 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158953146 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158413789 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132151585 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160308679 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.133454434 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158323105 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111380609 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161229689 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130168121 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.150315691 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127796888 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133214299 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125647081 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126594805 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15329113 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148983266 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096432398 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165008691 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179704885 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.093062908 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131830642 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284679938 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155993001 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185859675 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.113578692 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135530369 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113069172 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145015339 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.151334263 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157737347 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.099899492 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133282021 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.099912239 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.167111116 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142554986 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15367515 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156487346 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.350130512 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195451414 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135940372 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249877332 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14013398 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153931059 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.092959913 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129484329 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111623493 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133686874 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1436555 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188858265 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177689663 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.116032861 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.133899153 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125337242 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.095404052 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131609524 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132513122 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150913128 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15749408 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140831824 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.08487179 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142778858 seconds)
  done (took 76.47791183 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.157122338 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153376893 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.161960448 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.251909726 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.183545642 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263850563 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.2211856 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246519581 seconds)
  done (took 2.729917196 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.090944326 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.14168355 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.125347985 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134533037 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.113125634 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.113791063 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.303995653 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131933754 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.113162858 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.118574471 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.132387202 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.115277279 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.529060491 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.116382507 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.088214163 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109720079 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.113524869 seconds)
  done (took 3.679207865 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.220854415 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.477308316 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.082200917 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.192019799 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.176231407 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.092372449 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.714904449 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.092103159 seconds)
  done (took 12.13783417 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.116900016 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137732668 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.128557447 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.157401461 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.11415189 seconds)
  done (took 1.75904874 seconds)
done (took 117.595283009 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.094991857 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12456662 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.095636553 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.126464061 seconds)
  done (took 1.527584542 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.101357333 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.074207227 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.107317015 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.078731332 seconds)
  done (took 1.45505424 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.191827654 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.167942276 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.407042493 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.075380351 seconds)
  done (took 1.609655549 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112060129 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.129060511 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102892721 seconds)
  done (took 1.45078459 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.103176861 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.09908902 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.128847883 seconds)
  done (took 1.432411085 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.102188079 seconds)
  done (took 1.200849454 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108704737 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.13832 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109782713 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136217412 seconds)
  done (took 1.596438749 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.095191295 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096568307 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.137801163 seconds)
  done (took 1.431961514 seconds)
done (took 13.16545971 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103819043 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.421998061 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.387378594 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135682622 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.698292542 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.407437413 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.038404643 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144608989 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167609888 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088851466 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135488103 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671597249 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.020048036 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.345729952 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.006002678 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.345631291 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.716742716 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089204184 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116562283 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09004474 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.049454275 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.089621912 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088433843 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.1172365 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.679650911 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422322334 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.090114106 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.369874558 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.089262222 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125020589 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.377060895 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116403415 seconds)
  done (took 16.840554994 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095707187 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177427892 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099836891 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119908846 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097455104 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.11960844 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.093345723 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090596965 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182344345 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.118570956 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.106588324 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.118629933 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.093083745 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118951623 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.110287532 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.118511752 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.090527601 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117454597 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.090158267 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089647184 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137490718 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088842506 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119280781 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089233386 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11821307 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102295459 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118496236 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.089664323 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117884742 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09841077 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.091943473 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.119641436 seconds)
  done (took 4.642945871 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142389741 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186982109 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129208489 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125291558 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.174149634 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.092239897 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198914446 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14621141 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184248778 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.090877761 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135606535 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.090583952 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153101597 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.089814179 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139097915 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.089459278 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.118015517 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090097895 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117273612 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090861504 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.108543142 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11832133 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089121039 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118578351 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.089396833 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132644161 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.090662778 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118592454 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.08989195 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125909327 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.093236729 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117971915 seconds)
  done (took 4.988484322 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.094176047 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.094330674 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134508347 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.106564186 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119314892 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.092749988 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.122524497 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.090872096 seconds)
  done (took 1.962965232 seconds)
done (took 29.540115621 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.107908758 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.095721805 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131977816 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.102238841 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.128157181 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101992558 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.117286283 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100729555 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.131299977 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.098223028 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134692914 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.088764691 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.091177049 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.118020643 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.103452729 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123789907 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.103621817 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.128653514 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.104222666 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132375475 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.090696532 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.130242711 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100727417 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132640355 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104745392 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132979722 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.107185964 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.125189398 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.091607643 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.090931279 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.132013325 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110332492 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.121296688 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104999504 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123746487 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.094069537 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.120307738 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093688674 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132710725 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.101761494 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.12466556 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101579301 seconds)
  done (took 5.815343037 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.115600081 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.147983834 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111158457 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.113708851 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091823102 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.112790288 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.115113307 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.082208969 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.114242948 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113841384 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.107766597 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080257003 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.11116666 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076972412 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.080450272 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.108524031 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.083491775 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.107487015 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.08117869 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.081120532 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.113079839 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076551955 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.083058766 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.112118422 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078805054 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.114184479 seconds)
  done (took 3.736761428 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.098196983 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.104416042 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.141525387 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.17568301 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.124989833 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.128496646 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098454357 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139293873 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.106992521 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118699971 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.092316768 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149120561 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107626242 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126330028 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.093226798 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.104029869 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134226108 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.09165071 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124837074 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.109658826 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136682831 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.100712223 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.131724194 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.100865941 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.118505425 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092236985 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.123298648 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.100461343 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097424605 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.12776244 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096350098 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.122342218 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.09153595 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.132174485 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.097007759 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.121707471 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.110427366 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129732028 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.099538764 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.120486183 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.09810135 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.094001859 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.14228332 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.158974459 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090870312 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.09657245 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122296541 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.099287906 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120364655 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107828676 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129590824 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.08936581 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.122415594 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091764002 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.091554937 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136439728 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.091384725 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.121248221 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102086694 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125180182 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.102724236 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123887961 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.105027517 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.12046994 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.097048427 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.09132029 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.120520268 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.089097318 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143976186 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096133627 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162726163 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.090005459 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.121410158 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.098218723 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126803332 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096209317 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.119794733 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105128286 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128920976 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.094315659 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101195947 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.122096801 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09256662 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139272573 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.092348456 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.121591367 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.090981444 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125705282 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.093384059 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.090942941 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135295339 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.089347184 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123334776 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.103201274 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120264302 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.091605607 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126689012 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.094966786 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.118349033 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105074303 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.125389262 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.091154314 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.130317757 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09228839 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.09321939 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.130370149 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.094745219 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.120619304 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.095196978 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.127552378 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.090646228 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.12418761 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.093744422 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.092148862 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129997987 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.097805704 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.124392013 seconds)
  done (took 14.23883022 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.234349164 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.220427891 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.190267139 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.300599029 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.102632815 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.147350091 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.215632846 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.126695166 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.121612121 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160069836 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171217289 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.184160939 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.141044525 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.182527622 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.172977719 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.120290531 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11053973 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.167555274 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.217986841 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.264099484 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142357079 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.098095534 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161445722 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161337429 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.135310263 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.09997964 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.139449519 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102142329 seconds)
  done (took 5.71945395 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.113041801 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153699925 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096230501 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144913429 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.11721825 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.120954531 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.094766501 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.123052668 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.104269446 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136007717 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.090384333 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127553486 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.098277061 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.130237251 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.091354316 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.130336199 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.100205862 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.121748284 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.094330406 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09445074 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.131506325 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.138227919 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.095546455 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.08897924 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.131441869 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.089718393 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.122095883 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143793025 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.090585543 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.143465914 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.089224104 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098517825 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135414887 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.091185862 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120651324 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.092562072 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.123154266 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.092815389 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.092381039 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119347955 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.088895392 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.11248027 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.089796824 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136466988 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.096926196 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.115213498 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.096945437 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.126676729 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.091995154 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.088231087 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.1240934 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.094030548 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.124334264 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.098407936 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.122840276 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.092073576 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.093505565 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.121139978 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.097404105 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124351224 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.087985741 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.08842933 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125765833 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.123650363 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100113561 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.095114177 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.119981528 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.091827972 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.125296891 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.097725879 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.122311617 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.097141922 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.087554001 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.123520175 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.092895831 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127481214 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.093707962 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.120174388 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.090750533 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.090332377 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.110094519 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.090463749 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.107971671 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.094555906 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.088372834 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.119641697 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.093083426 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127944244 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.106807813 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.122367509 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.099761933 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.121913298 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.089337462 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.123556624 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088237818 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.094217126 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137697942 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.1411475 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.090738047 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.119158264 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106426206 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.093960704 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.120408342 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.080610098 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.130546049 seconds)
  done (took 12.597129759 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131626593 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152472263 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.092284911 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.140400226 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125296333 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157607183 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.097289801 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.12967459 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.091932317 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141071391 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.0905978 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.13107327 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.091429978 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.135858815 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.126280782 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.131813406 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.093153537 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.136273384 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.09524471 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169583426 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.109557944 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.140727199 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109292843 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.122488314 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.09677238 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.139988351 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.128876549 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.136990751 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.104075604 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141200785 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.104974757 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161002334 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141377322 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.096500462 seconds)
  done (took 5.340843235 seconds)
done (took 48.564830147 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.228891595 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.446543748 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.202360951 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.127043934 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.226771314 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.210629972 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.21394378 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.200032965 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.380165498 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.203299985 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.473958357 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.815956554 seconds)
done (took 58.863910047 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.287147065 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.364199889 seconds)
    (2/2) benchmarking "String"...
    done (took 1.494246053 seconds)
  done (took 4.000696864 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.793601005 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.165712241 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.45738821 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.204334295 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.20279392 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.49281571 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.906954521 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.633201272 seconds)
  done (took 28.194219109 seconds)
done (took 42.409851444 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.201222678 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.263405142 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.206670959 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.189612539 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.312440954 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.227016233 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.655383003 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.263966397 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.219731713 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.19196689 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.204177423 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.20325717 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.199295549 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.252940838 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.221574401 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.209053509 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.273948996 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.808397412 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.610564984 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.205070667 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.210298528 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.266413562 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.223365757 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.201299785 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.232987444 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.212659692 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.214976619 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.211253848 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.862025684 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.214505055 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.225543225 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.31728186 seconds)
  done (took 190.442127755 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.20559025 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.31173795 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.407919498 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.223664694 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.865317158 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.402908218 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.334773381 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.93054449 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.219555427 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.217490052 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.369970877 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.203375762 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.428575735 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.218422587 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.237449075 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.266635096 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.480633548 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.450208949 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.243291274 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.359696548 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.223205392 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.318081851 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.257417291 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.34343152 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.259043202 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.261284655 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.227643378 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.212200684 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.394390535 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.42232555 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.233151961 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.234966685 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.837727424 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.063182136 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.220607904 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.222424767 seconds)
  done (took 150.240615799 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.206905825 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.207708282 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.206200964 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.239050528 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.208146565 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.777796391 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.781449006 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.752825917 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.285751102 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.678522863 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.498742259 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.2071869 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.302933236 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.223245796 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.206542306 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.223380086 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.233554997 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.213069928 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.205549044 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.780902632 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.218535324 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.449071204 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.386724137 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.224479582 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.24297586 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.605761926 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206932312 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240409844 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.544313605 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.257658341 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.210579612 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.576478827 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.737428685 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.326746321 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209419864 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.241633984 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.209069964 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.48940505 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208895078 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.209051306 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.214428494 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.875301136 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.210197276 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.782206571 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.211460784 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.194177264 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.208206791 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.212139074 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.208853931 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.759643631 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.234064869 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.027569008 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.228149548 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.21342953 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.213299012 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.21072685 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.210586857 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.248024834 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.597123528 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.334249092 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.212399703 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.216871728 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.243782348 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.206993292 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.284932603 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.229458876 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.759660971 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.272514779 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.319920207 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.785293775 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.208846231 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.308124791 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332954192 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.210202867 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.211969571 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.211864252 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.214497663 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.327338101 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.207986844 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.642026199 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.390822662 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.2252326 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.700410229 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.315570766 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.214162723 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.653434861 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.211662992 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.210108705 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.014762552 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310362364 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.211997314 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.215600996 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.211223328 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.648386836 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.786906284 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.542206625 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.212152235 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.923428925 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.221364305 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.214489895 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.657123618 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.784991208 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.209023515 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.918806655 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.214446623 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.325851634 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.392901736 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.228813364 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.213140599 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.711066847 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.217007094 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.275666153 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.214888758 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.615049324 seconds)
  done (took 368.587748782 seconds)
done (took 710.404544369 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.84400891 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.828353775 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.944378287 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.820964804 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.781802066 seconds)
  done (took 10.361272489 seconds)
done (took 11.505386702 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.41267601 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.41679462 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280726446 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.414326976 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253386067 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.425848458 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.389428332 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.236642328 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.321322573 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.302477079 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.320215409 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.272905827 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.248665816 seconds)
  done (took 18.436884525 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.551413063 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.540940744 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275758292 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.535000173 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.25622966 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.5249318 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.421185631 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.432892325 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.428459198 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.229012551 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232186685 seconds)
  done (took 16.572218905 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.544397135 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.531697028 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.284170323 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.536828875 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253992564 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.540307351 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.42582864 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.435656552 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.439497727 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.231273227 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.229938427 seconds)
  done (took 16.596619064 seconds)
done (took 52.751827397 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.22731272 seconds)
  done (took 2.368232983 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.265778184 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.434271769 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.24747571 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.235754163 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.229215202 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.231341019 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.237437262 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.231452408 seconds)
  done (took 11.256617195 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.226745065 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.230054821 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.227859963 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.230573819 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.223406593 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.230806406 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.223682557 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.224622411 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.225121823 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.229693925 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.226171924 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.231342289 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.229319112 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.227929733 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.227067542 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.227122458 seconds)
  done (took 20.785759186 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.2247147 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.225399631 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.225510802 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.226212721 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.225166427 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.225026718 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.227711051 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.225994188 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.224118611 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.229983784 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.230699082 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.228241472 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.22905106 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.229268144 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.228420652 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.229476961 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.226632588 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.228465188 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.23303247 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.232642751 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.229562031 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.229269757 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.228586332 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.23077184 seconds)
  done (took 30.622514343 seconds)
done (took 66.177415213 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.886822802 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.986674318 seconds)
  done (took 7.0193075 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.288018495 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.293622614 seconds)
  done (took 3.731354703 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.231174428 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.231766597 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.231379603 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.228627616 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.232486496 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.230379215 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.230206187 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.231426381 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.230340453 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.231751001 seconds)
  done (took 13.457754801 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.23116239 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.228339609 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.230667997 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.232364171 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.233800928 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.229386988 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.232947908 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.23086614 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.234596727 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.228832702 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.232872214 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.225809379 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.232769627 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.229235648 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.233851698 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.229739411 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.23204971 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.228740393 seconds)
  done (took 23.303526901 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.24757969 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.254300437 seconds)
  done (took 3.651606663 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.361242426 seconds)
    (2/7) benchmarking "second"...
    done (took 1.272242693 seconds)
    (3/7) benchmarking "month"...
    done (took 1.342057383 seconds)
    (4/7) benchmarking "year"...
    done (took 1.32536288 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.268222329 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.254147168 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.272100947 seconds)
  done (took 10.242506559 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.233065535 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.416544782 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.527270471 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.805829812 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.235546669 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.236869512 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.087687654 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.237591874 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.2367417 seconds)
  done (took 14.168844929 seconds)
done (took 76.724381046 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.249017099 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.223565457 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.597054264 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.23061871 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.244295595 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.56837881 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.235995158 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.369427384 seconds)
done (took 37.872243675 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.243785025 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.215082386 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.063183904 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.231264828 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.328728109 seconds)
  done (took 18.990300278 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.326296058 seconds)
    (2/2) benchmarking "read"...
    done (took 1.566762215 seconds)
  done (took 5.041385426 seconds)
done (took 31.426325176 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234605615 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.237978437 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.234103311 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.233143262 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.234039654 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.23090701 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.233204175 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.237154745 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.234300843 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.233474171 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.235738623 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.231626669 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235094786 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233888927 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230578395 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.234657589 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23609279 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.234263618 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231695484 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.236295189 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237921717 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.233891001 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.233134789 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.236034164 seconds)
  done (took 30.775741252 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.238523375 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.235012144 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.235040713 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.236558728 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.232564702 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.23639009 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.237014539 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.235180603 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.234753502 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.236332281 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23360639 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.234575188 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.235366646 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.233795607 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23809675 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.233899655 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.235406545 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236091504 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234729922 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.232730331 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.236072657 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23239846 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.23697085 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236921522 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.234976701 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231702838 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.237183346 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.234994671 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238499842 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.232865608 seconds)
  done (took 38.21079001 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.2418319 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.243714123 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.237179215 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.238159233 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.237309343 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.241385083 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.238924534 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.239401531 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.237614585 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.239328996 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.241259854 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.240307258 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.238673392 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.240770402 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.241389582 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.241035143 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.241700522 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.239556996 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.239911219 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.240460784 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.242362456 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.240626664 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.241339452 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.240172068 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.238279449 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.239090094 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.24222002 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.239592588 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.239691008 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.239978111 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.239415485 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.239195249 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.241096195 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.240065136 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.23921076 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.239893678 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.246048557 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.248408696 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.241369932 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.242584818 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.240061739 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.242047737 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.241569849 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.238708273 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.238102771 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.237548582 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.241164478 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.241910213 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.240144863 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.241381115 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.243308615 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.235952116 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.239811897 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.240823995 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.243225815 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.2393527 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.241015042 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.241958775 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.243632751 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.240089276 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.242817126 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.238721557 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.242957603 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.241323546 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.241198952 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.244347551 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.240331847 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.242293679 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.242573318 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.239444901 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.244161111 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.243943466 seconds)
  done (took 90.491722028 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.243241561 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.24186811 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.240215038 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.239143619 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.236079292 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.244289401 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.240170061 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244127486 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241456458 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.245920481 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242418039 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.240479867 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241075663 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.245707826 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.243165416 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.241060958 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.243843789 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.237706468 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.240952712 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.244840033 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.244960193 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.24243906 seconds)
  done (took 28.486356172 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243502052 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.245764654 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.239400283 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.244782195 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.243804877 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.244526775 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.245080769 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.2458229 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252755751 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24292066 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24495681 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245809142 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.245355115 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244448342 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244307332 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.243262311 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244953749 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.246690548 seconds)
  done (took 23.567641564 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.241662621 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.245548278 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.246359482 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.244375671 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.243110126 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.245729164 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246611213 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.245501888 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.247617749 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.245218065 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.247323055 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24544938 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.248061584 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243290336 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250096053 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.24401013 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.244286425 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246199701 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.245030678 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.244874525 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.244051815 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246575934 seconds)
  done (took 28.564619827 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245592152 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.247655352 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.245582077 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.245196297 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.248661927 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.24446623 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.248356295 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.246846523 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.247963139 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.250132707 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244075108 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.248220127 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.246185042 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.247404977 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.246027757 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244914223 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.245952035 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.245213146 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249008883 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.24665409 seconds)
  done (took 26.09760819 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.249794485 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.245549111 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.250935219 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251916854 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252658129 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.248243276 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250444012 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.249570809 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.249832859 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.249582585 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.250322417 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.250241913 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250522984 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.249720329 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.248268498 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251690079 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.252038065 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.250855565 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.248872088 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.248601572 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.252664369 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251372822 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.251377311 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.249690486 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.247994451 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.251133002 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252346499 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.249963439 seconds)
  done (took 36.172753786 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24975532 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.251318122 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.247034093 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.24789356 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.250733477 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.248815106 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.246358841 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.717408504 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.251386209 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.249747467 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.251606699 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.250427627 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.248864668 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.250436602 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.247604935 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.250162571 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250582798 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.24924379 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24806647 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246655605 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.249490086 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251858546 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.24848911 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.25080907 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247144382 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.249241016 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.250061885 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.250811777 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249442276 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.248841838 seconds)
  done (took 39.118883057 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.268827202 seconds)
    (2/2) benchmarking "in"...
    done (took 1.270681283 seconds)
  done (took 3.705969989 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.248646122 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250978653 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.25522207 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.251329316 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.251675334 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.253216274 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.25172767 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252649265 seconds)
  done (took 11.185015143 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.249575753 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.25257961 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.253496688 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.251514015 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.251833687 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.250432494 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256824406 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.268692445 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.251563208 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.253869849 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.260657276 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.258987257 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.255690416 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252889136 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.2552431 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256533523 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.254130921 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.256245288 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.253878418 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.25751531 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.256253004 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256677334 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254475948 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.253059923 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.255362005 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.265360017 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.258019962 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.252101542 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.255154944 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.259477588 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.255942181 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.249407389 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.253998931 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.253025824 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.254657111 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.253921877 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264121864 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.277123486 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.261329016 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.255524409 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255906262 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.251567651 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.256025671 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.255905605 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255970057 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.255607598 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.253425821 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.253952681 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.255277116 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.257751828 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.262173586 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257527452 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.253466482 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258920138 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.259811952 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263199409 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.276560937 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.260492459 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.267171603 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.268765006 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.270188928 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.280817831 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258917154 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.260315981 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.267749997 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.28042737 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.265387244 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.272573512 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.255717176 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.25770874 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.2646041 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27057467 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.283434304 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.257018599 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258326324 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.258849671 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258393586 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.259767831 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.266521857 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.279122357 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.258920392 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.259438303 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269733977 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280665586 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.258827408 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.260195269 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.258713822 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.258699756 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.261364342 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2711794 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.279672275 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.259210098 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.259299334 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.257053968 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.26148237 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.259564779 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.258907431 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259016826 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.254723046 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.259853565 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259129327 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262477972 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.26874584 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259403439 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257923168 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.265882573 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.259002115 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260470103 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.264324878 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.259681035 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260652804 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.261950259 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.264528433 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.259452389 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263817342 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.265369686 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.259092411 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.261004371 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.257789967 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.262177336 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27228551 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.288385587 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.259776195 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.259366525 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.265703103 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.272502135 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260677398 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.264850646 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.263006611 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.260370853 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.260486846 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.267063092 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.26341505 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.263330118 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261656948 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263647152 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.262879429 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.262492117 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.263112662 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.264639966 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.265925661 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.262392284 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.263269792 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.265068764 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.264161318 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.263374328 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.266307607 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.260626403 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.261900832 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.26150928 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.263237331 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.264099797 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.26295338 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.261151987 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.263091789 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262883797 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.263356098 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.262618041 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264650681 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.26438857 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262626347 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.265263587 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.266289723 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.263592059 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.267060892 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.266492095 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.263636393 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.264300787 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.264239874 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.262778267 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.263805064 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.261672422 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.269486198 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.272513975 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.268525994 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.264583358 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.266714026 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266560649 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267148872 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.265082955 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.267108317 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.272400831 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.2659255 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.274451947 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.264501177 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267062226 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.266399519 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.26547604 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.265968287 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263845232 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.267064589 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.269934815 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277276524 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.290331212 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.266629787 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.269372995 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.264543791 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.270752054 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.268099227 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.26624799 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.267288358 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265330945 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.266194438 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266205869 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.267376267 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.266297974 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.265268126 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.267242018 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.265475042 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.264417994 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267999241 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.265649023 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266327371 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.264911648 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268237547 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267100545 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.267266065 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.267224741 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.265629935 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.267060802 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.269381916 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.269716253 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.273398871 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.266431919 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269448976 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271273819 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.269441364 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.268818 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.26834812 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270928907 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.267880062 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274230656 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.286436896 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.27014857 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273743933 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.287916136 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.268014349 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.273107657 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.26992258 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.265922267 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.27149667 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.27549712 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.269717357 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.267462334 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.270947437 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268225699 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271101014 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.27387859 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.26879263 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.270257543 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.269297476 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.271157159 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.269386758 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.269201755 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.269436421 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.271354176 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.27045358 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.270122143 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.27193875 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267364428 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.269899995 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.269453796 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.271950472 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273517224 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.277516911 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.275774355 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.27333301 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.273299522 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.275384156 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.275069847 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.27136094 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.272899953 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.272284778 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.283566534 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.297866285 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279260116 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.27409618 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.2709591 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276400248 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.276068424 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.273380304 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.273248236 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273252942 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.273201892 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.269873985 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.269978073 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272798751 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.271156438 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274102297 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.274285407 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.276164882 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.278449673 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.272932401 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.275553142 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.274016736 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.274118646 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.269557036 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.271308684 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.274670426 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273018814 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.272261978 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.273820274 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279521717 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.291695709 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.274743598 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.275684526 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.273220194 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.271536529 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.275256799 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.272627462 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.275620573 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.276815581 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.274719283 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.278372601 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.275718258 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.282059317 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.275000982 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.276303877 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.280858495 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.272988378 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.275311971 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.274386561 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.274857412 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280171958 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.294719479 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.276188096 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.279497491 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27339028 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.273169134 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.274715744 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.274479401 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276216569 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.276141615 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.28215899 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.299298507 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.278608728 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.276691989 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.276346633 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.276237892 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.274637535 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.273084301 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.276581526 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.272966052 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.274226331 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.27479345 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.270694557 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.273963507 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.273564283 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.274472062 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.271431669 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.276225731 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283082056 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.295401791 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278454047 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.277229614 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.282193102 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278183485 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.281983657 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.295229016 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.275498406 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.273780066 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.278338894 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.277087827 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.275481741 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.276266844 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.27681252 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.277406783 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.279585162 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.274879535 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.278944365 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.275721277 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.276455753 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.27858368 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288716689 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.302600805 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.27959832 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.280201786 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.274781271 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.275739453 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.280727516 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.278724283 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.279251714 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.278506279 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.289024079 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.287722985 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.277842787 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.278274689 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279991089 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.27903815 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.278160928 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.277008979 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.279398708 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.278110636 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.280363886 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.277309376 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.281774315 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.279953963 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.276037846 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277993812 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.275633266 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.285621449 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.277490413 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.276437955 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276275862 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.277979348 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.274994599 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.277481435 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.276854498 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279856598 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278978911 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.277211398 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285361745 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.284933971 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.281060633 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.277774582 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.273882966 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.280812859 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.281353728 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277497812 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.281644968 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282495906 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.278582237 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.28076606 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.281113415 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.276909985 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.280404181 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.279701613 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278834067 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.281301151 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.285787623 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.277294322 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.277761168 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.283605876 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.280895185 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.279631649 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.282633535 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.288211233 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286122278 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.292155919 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.29060338 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.282777472 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.282589159 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285005945 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.286459673 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.27869288 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.281015498 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.280440908 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.285985036 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.276605836 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.283667639 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282169795 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.287178756 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.282613292 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.282528632 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.289034015 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.303419995 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.283543496 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.285228704 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.286130189 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.284355085 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.280646265 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.282800554 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.283792236 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290484529 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.304477134 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.280260472 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284041209 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.282093502 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.282538261 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.285797217 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.286515811 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.283227807 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.28035168 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.284441382 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.286462782 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28323725 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.282691566 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.28415952 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.281985619 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.2883551 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.2908648 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.281870037 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285885155 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.286061187 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.286320629 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.284802635 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285481213 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.282658965 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.284543143 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.285193884 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284829745 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.28688627 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.290045341 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.284863826 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.287942592 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.28706223 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283766724 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287673814 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.295691881 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.292975749 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.283774275 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.283656543 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.285342323 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.287810001 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.287822776 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.287304895 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.287763372 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.28618852 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.284882147 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.287934884 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.289706928 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.289559994 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.304961341 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.31256983 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.28692813 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.288604338 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289295068 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.286888397 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.287389435 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.289194815 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.291127686 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.292352458 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.293892284 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.287959041 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.294866318 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.308589694 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.29043405 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.29390351 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.290651758 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.296285826 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.288845248 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.288382319 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.288896772 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.295009824 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.304246798 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.288989537 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.299267415 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.318674324 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.308737588 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.28966487 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.284779284 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.290824296 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.289321595 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.291799177 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.285024132 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.287752722 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.292023933 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.289887068 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.289146302 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.29442813 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.292971963 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.294094777 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.290091731 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.289930423 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.292778263 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.289233891 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.291308511 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.294348624 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.290715934 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.290638613 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.289193055 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.292173762 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302816934 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.318811513 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.291804033 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.292079204 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.287600054 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.292165141 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.293402354 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30014887 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.299952574 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.290996786 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.290601266 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.292218295 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.292571834 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.291226975 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.294186812 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.291491416 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.291617763 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.289784473 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.302751068 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.318878351 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.296131902 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.292364772 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.289924996 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.293410695 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291852147 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.294547826 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.290645953 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.293988599 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.29599694 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.297778776 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.291407691 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.293687071 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.297050418 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.300513342 seconds)
  done (took 761.143292158 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290630641 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291018515 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289062182 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290714188 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290388818 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290476933 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288942158 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.291528629 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.291429724 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.291734954 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.289811237 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291619427 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.290619261 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.293966682 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293115996 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.293994593 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292840509 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.291683304 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.291303456 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292149627 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.293373391 seconds)
  done (took 28.324108865 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.294790591 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.29568724 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292916919 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.29637268 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293889375 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.294236448 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.292751911 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297213546 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.295515537 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290837746 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.295285508 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292795369 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.2935202 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.290235965 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293507856 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296664366 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.29447357 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.293143259 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.295289763 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.294889791 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295636627 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.294015435 seconds)
  done (took 29.680067124 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.297119922 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.295843252 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.294568451 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.292735968 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.297248557 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.29370334 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.294619873 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.296803062 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.29805274 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.297312949 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.29485078 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.297491061 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.303182624 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.30257597 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.299028279 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.296101361 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.442697528 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.296264104 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.295990803 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.295707459 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.294217526 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.300153548 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.293785099 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.295816243 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.296279263 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.296967744 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.298932477 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.297144691 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.297498149 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.299139895 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.304624477 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.296149579 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.295470599 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.297691211 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.295383021 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.298757946 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.300477766 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.297185347 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.296948795 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.297515637 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.308365194 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.321898547 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.29697908 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.304796994 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.301280037 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.299559156 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.303199457 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.30791133 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.293904065 seconds)
  done (took 64.980705491 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.302171931 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.300237592 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.296547973 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.299218372 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.300418589 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.29786407 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.300872461 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.297719546 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.298532082 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.29956655 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.302385156 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.298392535 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.299242016 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.300625735 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.301134 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.295708333 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.295418552 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.297166096 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.298757674 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.29820204 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.300635916 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.302590912 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.301105488 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.298812393 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.300985969 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.299453744 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.30054975 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.301495401 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.298082295 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.298041135 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.300434432 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.30164491 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.299485234 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.300331827 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.299626264 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.301853308 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.30423021 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.298678237 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.301467022 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.299892684 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.300988303 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.301492528 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.301896657 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.302177924 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.300455929 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.300432168 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.299700657 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.300052263 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.298608476 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.302307563 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.303404522 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.296348225 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.300876205 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.298501847 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.303176581 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.302592121 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.303015771 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.29998058 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.302074821 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.30010669 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.30252763 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.303354698 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.301269215 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.305056496 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.303162864 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.301838808 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.299345162 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.303608632 seconds)
  done (took 89.642489717 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305809997 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.302903049 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.305964087 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.30215691 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.304429942 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.304696401 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.305693339 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.302807357 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.301905626 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.306104374 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.304612158 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.302570279 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.304013341 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.303428028 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.301672721 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.305795587 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.301882593 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.307239881 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.306886275 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.304394506 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.304018853 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.305956363 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.304288766 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.307355987 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.308515993 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.305273195 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.304584492 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.306819003 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.306162274 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.307841598 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.306313703 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.304222883 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.305109952 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.307059212 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.308019404 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.306481904 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.305684048 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.306780628 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.306860411 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.305264217 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.306918103 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.309257153 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.310614502 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.308508558 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.306214959 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.308206209 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.303862716 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.307413296 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.307873922 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.30716388 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.308264815 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.306191837 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.306534581 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.305008985 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.30689291 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.306229872 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.306322217 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.307472071 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307342835 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.309299059 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.310289717 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.307607591 seconds)
  done (took 82.185819714 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304388436 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.309695955 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.306287197 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.301228085 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.309163679 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.307567686 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.30665899 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.30804873 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.304672959 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.307250218 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308157901 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306534877 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310292848 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310370689 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.306040312 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308186966 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.307318107 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.307728485 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.307647422 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.309139614 seconds)
  done (took 27.364865506 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.306406889 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.309606791 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.307296085 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.307241701 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.309894972 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.305406465 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.309099651 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309231741 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310443925 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310179107 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.311760719 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.312789094 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306405021 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.309518794 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.310623002 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.308367841 seconds)
  done (took 22.161719432 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.308426132 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.312194037 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.310506167 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.310429897 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.307822794 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.309974024 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.312922239 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.308530152 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.308203777 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.309491355 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.311651081 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.311702795 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.31136265 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.311174636 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.306472498 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.314260072 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.308342681 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.30844854 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.313140273 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.310412221 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.308773102 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.310510151 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.314161405 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.310135046 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.310370349 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.308713769 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.3087247 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.308604481 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.312092666 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.310983364 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.310432017 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.31057101 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.310377018 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.312371158 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.311325019 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.307943456 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.31006477 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.310971718 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.312671457 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.313736999 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.31211699 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.306731256 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.312420403 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.313117596 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.310867888 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.312279659 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.31000109 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.308805303 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.309545165 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.308833456 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.311893603 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.312600665 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.313422952 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.313211037 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.313855339 seconds)
  done (took 73.30857955 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.313970012 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.31401126 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.309814681 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.315167833 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.3135238 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.310269761 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.314910186 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.311956743 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.311361788 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.313610319 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.310570924 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.31366453 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308461843 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.312490747 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.314109489 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31422102 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.30992545 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.31332055 seconds)
  done (took 24.851656647 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.312176306 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.311303161 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.31181982 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.310781655 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.313199085 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.31680482 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.309861734 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.313262769 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312748777 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.313415067 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309205319 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.315182029 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314141284 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.31426353 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.313068061 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312366411 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.315194765 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.314031746 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.312389441 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.310225355 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.313323209 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.314545083 seconds)
  done (took 30.106874001 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.315643989 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.312376669 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.312645614 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.330149822 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.332232957 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.337236472 seconds)
  done (took 9.162514181 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322274269 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316424939 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.312417902 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315176236 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313775156 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31312001 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313406164 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316231878 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316216096 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31336349 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310954196 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314347738 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317909497 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315909548 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316960051 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316963175 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315017768 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310296713 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31512409 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315196156 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311810775 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317755659 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314628476 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314617789 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313879757 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314687659 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317595731 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316000934 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313543235 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317638217 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317687981 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31235038 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320475396 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315159314 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319447247 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319994631 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314513788 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317155196 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31833552 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316382002 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.318449583 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317301849 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31734706 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315005869 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317670236 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314399576 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314995684 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3143353 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316918174 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31761822 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319568517 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317041103 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316941667 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319740953 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317897757 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318430383 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318883144 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315440857 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319087111 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31276209 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317611413 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320547685 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318544337 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3164934 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318374181 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317981628 seconds)
  done (took 88.12962983 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316154476 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.318343373 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316043072 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315887928 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320061889 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31761818 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317349708 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315544954 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316902519 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318827414 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319962212 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319673395 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317946709 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319322588 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319976877 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320892797 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320228733 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319734049 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317899753 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323169525 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318902318 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320026411 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320277576 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318388398 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319946692 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322768699 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321270039 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320968601 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319157494 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320814839 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323192769 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317809367 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322547968 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.320376015 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322269413 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319999271 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321909131 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31972133 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321133508 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320978862 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320034936 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320568264 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323488338 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322487691 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.324012733 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318930886 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319337753 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319206595 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321569545 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320660898 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323842234 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320956629 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319635627 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321142847 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321224076 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320223524 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32409096 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320263421 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320961682 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325778581 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320151279 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323495423 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324336489 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322185609 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320871737 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322373437 seconds)
  done (took 88.375010871 seconds)
done (took 1776.949446512 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.487984546 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.441617511 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.318788203 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.368819986 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.316857485 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.341085868 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.312081001 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.319384207 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.324691417 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.323516722 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.323100069 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.511628057 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.354701967 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.31833719 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.324963174 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.417742676 seconds)
  done (took 43.038052022 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.352243134 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.332479463 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.45060177 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.344164593 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.354550488 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.525708843 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.383419869 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.331403894 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.510398801 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.371214684 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.034383576 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.35023028 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.328052959 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.548928335 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.341828539 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.530239652 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.598409485 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.045639772 seconds)
  done (took 30.96691654 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.828482183 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.361374233 seconds)
  done (took 9.421343659 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.351260847 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.328828582 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.331835186 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.328252654 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.337024728 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.315894078 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.32461745 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.338002922 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.396879104 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.459151518 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.331137262 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.340768295 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.349994537 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.334461554 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.323330778 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.367966189 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.485153195 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.324580353 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.327069572 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.336808579 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.326598196 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.443139851 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.369944708 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.327315595 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.468066755 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.40758412 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.327959891 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.336288028 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.463137307 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.324972576 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.329976581 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.330062711 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.333001312 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.258454492 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.867195837 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.324737087 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.353797251 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.334241828 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.326937775 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.491630022 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.32786542 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.333087977 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.319317607 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.830228152 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.475293973 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.463972499 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.685863851 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.330372981 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.331959842 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.395539525 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.3308634 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.332264524 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.37438606 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.176093792 seconds)
  done (took 112.733143207 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.366190066 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.73449489 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.496874049 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.344810574 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.983300043 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.938623441 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.337390056 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.642634747 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.370773762 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.32073163 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.612681227 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.857292648 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.337122991 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.330693646 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.489811083 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.404370993 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.321635675 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.115670602 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.339773362 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.322317321 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854207094 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323156017 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.338462847 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.484220005 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.362353794 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.815543332 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.83155803 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.776849671 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.339848894 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.321022779 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.821680037 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.344389541 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.323452841 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.325229678 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.602798414 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.71148338 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.68727139 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.3240624 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.349676153 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.327781344 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.353414274 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.808659449 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.692591115 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.321334039 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.323278081 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.803392514 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.322202062 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.32472684 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.324980825 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.532428451 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.94317649 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.328884504 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.833681031 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.323347909 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.623679202 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.390118343 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.412908024 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.842222676 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.3233701 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.365625346 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.362313959 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.323528834 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.325071767 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.331236456 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.326601279 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.697287401 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.489372696 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.324329962 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.699070191 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.811310932 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.341688013 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.890377694 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.146074486 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.352061335 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.386679408 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.328829516 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.917540294 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.846919337 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.3630087 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.325663496 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.691556436 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.330382314 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.625604196 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.342315877 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.344781607 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.860244536 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.33168194 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.341810636 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.326807461 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.3246222 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.926285148 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.326833076 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.605666557 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.343776323 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.324623743 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.330364553 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.370360098 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.327536944 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.322839765 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.328370941 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.877424962 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.349221681 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.464315744 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.346182149 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.325702064 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.32966453 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.331606229 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.328050886 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.550996755 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.9394361 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.349729433 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.332232336 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.325415207 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.331575514 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.504695937 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.331077917 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.663264347 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.32898377 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.327315336 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.332838322 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.987602247 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.388726674 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.327059015 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.326573369 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.26494243 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.529518996 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.346143592 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.343993823 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.33923991 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.326171599 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.671287664 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.349721475 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.393289439 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.332133402 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.062574308 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.349608858 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.340864553 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.592221018 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.330013672 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.307406212 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.346533209 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.330775575 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.62233026 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.613805071 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.482973292 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.328633719 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.344144681 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.044258232 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.362192376 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.474209031 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.350779734 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.370180299 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.530964786 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.462990052 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.33016054 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.927175174 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.330255592 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.550072964 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.326720186 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.632882045 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.847583104 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.346267132 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.333472706 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.066519656 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.076555849 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.998026277 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.333096504 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.621542393 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.311003085 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.81311213 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.332659712 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.331842268 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.803315511 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.331723642 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.333866105 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.329928202 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.33454205 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.496027709 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.509725742 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.500835471 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.333934362 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.814913379 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.360507002 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328756507 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.336957563 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.336441065 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.680475687 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.393280577 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.333351023 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.371768378 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.330699895 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.330514003 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.832946478 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.173128903 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.337149755 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.490715862 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.995276298 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.348052325 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.332033499 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.095382834 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.023447949 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.871864812 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.336112761 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.670503887 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.330440362 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.371954287 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.93518426 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.349628653 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.832495156 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.334412044 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.332188015 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.958266902 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.348431719 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.427635894 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.333952783 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.335641264 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.893291169 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.349042309 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.335435782 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.685289419 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.3629101 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.582887269 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.332479026 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.377772142 seconds)
  done (took 1110.350657217 seconds)
done (took 1307.745025036 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.338290362 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.340646407 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.325974185 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.339739915 seconds)
  done (took 26.595251571 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.357835974 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.344231933 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.346601303 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.342863406 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.345295397 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.342874101 seconds)
  done (took 9.333635676 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.475920756 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.341205627 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.340291288 seconds)
  done (took 19.410595099 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.568600073 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.713815719 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.705334477 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.718849832 seconds)
  done (took 10.96044844 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.348274693 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.346145258 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.346123491 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.349558355 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.35505834 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.358486859 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.350708452 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.345485593 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.360330201 seconds)
  done (took 13.412720334 seconds)
done (took 80.966556293 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.172808029 seconds)
    (2/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.319028247 seconds)
    (3/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.257078961 seconds)
    (4/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.903627444 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.276978848 seconds)
    (6/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.360787241 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.603459525 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.779547451 seconds)
    (9/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.344104649 seconds)
    (10/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.361749444 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.382273229 seconds)
    (12/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.326495882 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.076054909 seconds)
    (14/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.417177455 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.365553912 seconds)
    (16/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.047423664 seconds)
    (17/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.338762019 seconds)
    (18/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.343130088 seconds)
    (19/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.613150952 seconds)
    (20/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.339346343 seconds)
    (21/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.4019004 seconds)
    (22/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.770768722 seconds)
    (23/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.289638901 seconds)
    (24/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.121350077 seconds)
    (25/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.879240987 seconds)
    (26/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.7168675 seconds)
    (27/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.335306907 seconds)
    (28/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.414907452 seconds)
    (29/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.47551864 seconds)
    (30/286) benchmarking ("sort", BigInt, true)...
    done (took 6.35594261 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 6.336209626 seconds)
    (32/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.068209027 seconds)
    (33/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.322888545 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.446686179 seconds)
    (35/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.427421465 seconds)
    (36/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.34204909 seconds)
    (37/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.373491821 seconds)
    (38/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.271348372 seconds)
    (39/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.339316087 seconds)
    (40/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.346876412 seconds)
    (41/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.812636662 seconds)
    (42/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.364541464 seconds)
    (43/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.354588293 seconds)
    (44/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.32426967 seconds)
    (45/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.438638683 seconds)
    (46/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.892544996 seconds)
    (47/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.401184785 seconds)
    (48/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.392445317 seconds)
    (49/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.370229384 seconds)
    (50/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.63425566 seconds)
    (51/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.079291408 seconds)
    (52/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.627112124 seconds)
    (53/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.448907031 seconds)
    (54/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.727463831 seconds)
    (55/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.593823478 seconds)
    (56/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.073477315 seconds)
    (57/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.401427898 seconds)
    (58/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.052651032 seconds)
    (59/286) benchmarking ("sort", Int8, true)...
    done (took 6.339999631 seconds)
    (60/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.343863334 seconds)
    (61/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.878331065 seconds)
    (62/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.041662254 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.396896433 seconds)
    (64/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.353706063 seconds)
    (65/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.404429284 seconds)
    (66/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.353442074 seconds)
    (67/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.33011772 seconds)
    (68/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.594645083 seconds)
    (69/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.425325974 seconds)
    (70/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.386523325 seconds)
    (71/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.568209416 seconds)
    (72/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.465506116 seconds)
    (73/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.329195232 seconds)
    (74/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.443869461 seconds)
    (75/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.671427421 seconds)
    (76/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.479025841 seconds)
    (77/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.409428101 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.286438236 seconds)
    (79/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.449090586 seconds)
    (80/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.341853018 seconds)
    (81/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.374395827 seconds)
    (82/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.328062216 seconds)
    (83/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.512337196 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 5.626790507 seconds)
    (85/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.159707813 seconds)
    (86/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.350152998 seconds)
    (87/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.342396092 seconds)
    (88/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.544394655 seconds)
    (89/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.189516266 seconds)
    (90/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.689619943 seconds)
    (91/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.330525667 seconds)
    (92/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.934230137 seconds)
    (93/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.367867603 seconds)
    (94/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.443147979 seconds)
    (95/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.269785697 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.337265481 seconds)
    (97/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.351126689 seconds)
    (98/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.219063763 seconds)
    (99/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.344711293 seconds)
    (100/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.358666331 seconds)
    (101/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.347113223 seconds)
    (102/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.373501735 seconds)
    (103/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.994895047 seconds)
    (104/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.33568379 seconds)
    (105/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.467676214 seconds)
    (106/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.032821776 seconds)
    (107/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.562659908 seconds)
    (108/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.370227692 seconds)
    (109/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.332701761 seconds)
    (110/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.323209618 seconds)
    (111/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.89913873 seconds)
    (112/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.604438176 seconds)
    (113/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.787986464 seconds)
    (114/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.486814767 seconds)
    (115/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.469435047 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.867129738 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.364928777 seconds)
    (118/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.629636845 seconds)
    (119/286) benchmarking ("sort", Float32, true)...
    done (took 6.348888246 seconds)
    (120/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.367591123 seconds)
    (121/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.183086672 seconds)
    (122/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.328998451 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.604715505 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.716242976 seconds)
    (125/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.054750614 seconds)
    (126/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.827041694 seconds)
    (127/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.345055091 seconds)
    (128/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.339640598 seconds)
    (129/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.452591406 seconds)
    (130/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.335167555 seconds)
    (131/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.052372445 seconds)
    (132/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.341450785 seconds)
    (133/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.329485524 seconds)
    (134/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.163431783 seconds)
    (135/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.357982053 seconds)
    (136/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.905244713 seconds)
    (137/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.826252327 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.185716205 seconds)
    (139/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.370853503 seconds)
    (140/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.762969172 seconds)
    (141/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.267238793 seconds)
    (142/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.932551716 seconds)
    (143/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.284589952 seconds)
    (144/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.332272134 seconds)
    (145/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.330421198 seconds)
    (146/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.35014674 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.773902787 seconds)
    (148/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.103878468 seconds)
    (149/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.38382524 seconds)
    (150/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.372136004 seconds)
    (151/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.73747606 seconds)
    (152/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.830170773 seconds)
    (153/286) benchmarking ("sort", Float32, false)...
    done (took 5.394512079 seconds)
    (154/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.344147116 seconds)
    (155/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.407580228 seconds)
    (156/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.342076513 seconds)
    (157/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.358145015 seconds)
    (158/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.498838304 seconds)
    (159/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.375252981 seconds)
    (160/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.700545758 seconds)
    (161/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.331834723 seconds)
    (162/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.367849312 seconds)
    (163/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.443528392 seconds)
    (164/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.338440419 seconds)
    (165/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.355454918 seconds)
    (166/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.61601084 seconds)
    (167/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.407632454 seconds)
    (168/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.33954176 seconds)
    (169/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.552087792 seconds)
    (170/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.452940275 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.185480015 seconds)
    (172/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.348221202 seconds)
    (173/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.454890255 seconds)
    (174/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.47054505 seconds)
    (175/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.345568588 seconds)
    (176/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.372096034 seconds)
    (177/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.36597455 seconds)
    (178/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.36537248 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.395908218 seconds)
    (180/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.478084895 seconds)
    (181/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.320018582 seconds)
    (182/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.332669856 seconds)
    (183/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.345661415 seconds)
    (184/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.372593888 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.172482241 seconds)
    (186/286) benchmarking ("sort", Float64, true)...
    done (took 6.345921838 seconds)
    (187/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.52119401 seconds)
    (188/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.360143069 seconds)
    (189/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.075386174 seconds)
    (190/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.482223658 seconds)
    (191/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.407856479 seconds)
    (192/286) benchmarking ("sort", BigInt, false)...
    done (took 6.350358184 seconds)
    (193/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.017248712 seconds)
    (194/286) benchmarking ("sort", Bool, true)...
    done (took 5.389076626 seconds)
    (195/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.373369625 seconds)
    (196/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.824208074 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.407536195 seconds)
    (198/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.962363397 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.043934264 seconds)
    (200/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.791529662 seconds)
    (201/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.335653569 seconds)
    (202/286) benchmarking ("sort", Int8, false)...
    done (took 4.375141559 seconds)
    (203/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.238527848 seconds)
    (204/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.416476566 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.568751787 seconds)
    (206/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.442021287 seconds)
    (207/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.439301555 seconds)
    (208/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.440420442 seconds)
    (209/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.35405934 seconds)
    (210/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.377159559 seconds)
    (211/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.235319055 seconds)
    (212/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.638462405 seconds)
    (213/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.904009274 seconds)
    (214/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.480501735 seconds)
    (215/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.395858665 seconds)
    (216/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.804499659 seconds)
    (217/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.547629375 seconds)
    (218/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.337123985 seconds)
    (219/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.631713712 seconds)
    (220/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.367731552 seconds)
    (221/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.103194761 seconds)
    (222/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.455991693 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.366871899 seconds)
    (224/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.340413823 seconds)
    (225/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.348736273 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.987326955 seconds)
    (227/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.333872186 seconds)
    (228/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.336188075 seconds)
    (229/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.287276681 seconds)
    (230/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.894892195 seconds)
    (231/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.336245721 seconds)
    (232/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.345149244 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.064045923 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.579766623 seconds)
    (235/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.565396235 seconds)
    (236/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.47124229 seconds)
    (237/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.357731758 seconds)
    (238/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.951635293 seconds)
    (239/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.008799502 seconds)
    (240/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.231291607 seconds)
    (241/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.145609615 seconds)
    (242/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.847090891 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.377679278 seconds)
    (244/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.379532144 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.733232121 seconds)
    (246/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.358181892 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.774267687 seconds)
    (248/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.352495344 seconds)
    (249/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.004495229 seconds)
    (250/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.23840581 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.385003233 seconds)
    (252/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.767681361 seconds)
    (253/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.369333183 seconds)
    (254/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.356782976 seconds)
    (255/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.438125167 seconds)
    (256/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.366309262 seconds)
    (257/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.409010796 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.446289344 seconds)
    (259/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.366015106 seconds)
    (260/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.4634441 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.439464025 seconds)
    (262/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.360257748 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.478776395 seconds)
    (264/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.358460694 seconds)
    (265/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.097926372 seconds)
    (266/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.196966028 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.19578405 seconds)
    (268/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.867870475 seconds)
    (269/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.459575115 seconds)
    (270/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.382936735 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.402377815 seconds)
    (272/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.344459838 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.725397313 seconds)
    (274/286) benchmarking ("sort", Float64, false)...
    done (took 5.711387649 seconds)
    (275/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.874753527 seconds)
    (276/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.435872614 seconds)
    (277/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.340751221 seconds)
    (278/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.419729131 seconds)
    (279/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.973055748 seconds)
    (280/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.854278416 seconds)
    (281/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.115240159 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.375047275 seconds)
    (283/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.138697322 seconds)
    (284/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.409005241 seconds)
    (285/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.431747589 seconds)
    (286/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.349875867 seconds)
  done (took 955.768825445 seconds)
done (took 957.024353211 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.391384376 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.391632427 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.365986198 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.387023076 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.484972024 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.542174356 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.378239283 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.369304646 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.415291552 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.419762406 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.371820868 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.540786956 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.378394792 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.374228185 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.367229225 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.391190812 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.519540967 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.375241929 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.392089615 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.377452829 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.392908726 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.373049116 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.421101524 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.54361314 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.375461551 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.374519024 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.376573821 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.395459309 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.486838555 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.378279468 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.374548699 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.385782364 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.521066339 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.363823822 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.367875193 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.397234228 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.385979971 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.377719527 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.374709008 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.40907717 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.97748865 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.373702658 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.378339214 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.373017726 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.370199742 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.373657826 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.378096065 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.378421674 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.389192005 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.392878768 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.964885645 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.389776082 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.379871819 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.371466004 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.38146702 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.378743488 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.375075701 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.397433357 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.399398162 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.398405091 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.512308916 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.373093938 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.374623725 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.396343894 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.387172325 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.007807632 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.364150342 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.377967832 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.985027293 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.373965983 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.010298495 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.383771497 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.374167942 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.394673413 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.412259209 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.52685175 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.364098973 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.373125149 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.385782685 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.376223724 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.383665589 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.396800275 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.378630573 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.374228466 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.395629349 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.549037725 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.385539912 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.381226227 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.381730247 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.401600138 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.386092187 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.38994886 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.37633196 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.367119176 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.382721256 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.377442159 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.380494387 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.382884359 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.379891841 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.384019503 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.983005172 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396489183 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.370077465 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.374413854 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.376364474 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.394993007 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.979716828 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.376874704 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.394008214 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.424887245 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.376994403 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.514438772 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.381158746 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.401570398 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.38142351 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.380543918 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.37398493 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.521700726 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.972709041 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.396158674 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.376336418 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.381369619 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.400738967 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.377135331 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.372507273 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.539222596 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.373539136 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.399054466 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.503267132 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.38656904 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.414655024 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.381956416 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.378112462 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.411131192 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.403410353 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.413582494 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.377356011 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.400948013 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.397296856 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.371069131 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.390052342 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.385392645 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.377206468 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.38218835 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.367114351 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.402442088 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.398692847 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.395887275 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.397389031 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.504247116 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.372703687 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.524087756 seconds)
done (took 234.726140361 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.436256605 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.365900824 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.464177502 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.374082649 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.475055983 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.467993767 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.371701543 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.371087905 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.37083109 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.749762348 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.370663977 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.3751697 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.369387846 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.37507851 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.459087901 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.373095758 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.373533656 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.714619926 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.374222287 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.44936735 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.37128002 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.372783946 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.374423112 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.749627896 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.368952778 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.37385758 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.44831291 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.373780344 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.72026864 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.369976274 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.369570154 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.715972794 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.46773086 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.389861368 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.383533682 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.38188969 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.476589089 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.388443821 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.456921263 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.455387717 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.472769932 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.414409223 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.373902194 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.366888029 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.372233775 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.377490334 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.372090859 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.405812814 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.371767261 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.373924456 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.716609742 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.385348981 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.376071638 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.376814546 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.370646292 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.408330252 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.375957429 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.37799965 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.47106721 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.376691321 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.441755482 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.751104686 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.752864657 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.377009392 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.372135446 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.374101967 seconds)
  done (took 151.177269199 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.44287674 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.452937017 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.495659587 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.386593248 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.427569692 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.500049635 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.376357404 seconds)
  done (took 11.36348633 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.383436115 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.376841381 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.427420718 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.425618565 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.377553446 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.561066376 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.379696934 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.389985632 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.3745722 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.430473321 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.381942756 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.379317536 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.385692872 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.381296527 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.425493326 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.389601671 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.496263067 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.380282538 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.379447913 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.544347977 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.377570452 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.38726126 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.431210263 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.391672584 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.382976815 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.385498459 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.198060767 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.382331649 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.383241478 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.379855439 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.379948175 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.459800333 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.382042746 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.381761706 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377824061 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.499664084 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.381160055 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.382705537 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.382664941 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.380597835 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.381183011 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.381786858 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.382606561 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.378360019 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.384341651 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.406223225 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.380520618 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.385325412 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.386162891 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.385012813 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.432986168 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.380023144 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.377141388 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.381125125 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.434913089 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.390708595 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.383330615 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.383026688 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.388464476 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.383871397 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.545863338 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.428766202 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.38250303 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.431544858 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.385272731 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.386556478 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.383867429 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.38512128 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.435151729 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.380246636 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.430273824 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.379767572 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.558910634 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.405482277 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.386800058 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.384476408 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.383546615 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.383630957 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.381249153 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.38956166 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.381915631 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.385090711 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.392174179 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.381957168 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.382895628 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.549760521 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.488595962 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.379511331 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.398812118 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.391622961 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.382963024 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.437459747 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.383738486 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.383554932 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.435591151 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.497115607 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.435770973 seconds)
  done (took 158.369836354 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.38809307 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.390391765 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.388156942 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.406863435 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.38545378 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.382594022 seconds)
  done (took 9.632189899 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.385946798 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.3856853 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.385408099 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.386302493 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.383060502 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.388192726 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.384921636 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.384946433 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.388658993 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.388531024 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.386181843 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.391461507 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.387257494 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.387058742 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.392071942 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.391195664 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.386691636 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.387212913 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.386927895 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.386892482 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.480285717 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.386661217 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.388062505 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.39200741 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.394096478 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.386633456 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.394821179 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.386877349 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.385967347 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.394859333 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.404116623 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.39146126 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.389819431 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.390857686 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.392300224 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.390092691 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.392411018 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.393665355 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.386612559 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.389539122 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.39359934 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.387908424 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.38697187 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.391291166 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.389985874 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.396126555 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.398549832 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.397863957 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.38926654 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.397736808 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.395009506 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.393408361 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.394325045 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.396901407 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.394988312 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.406757775 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.397128356 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.389823718 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.387997089 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.393863111 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.390267598 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.392875951 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.391770994 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.39215923 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.39809043 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.395235901 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.39160732 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.394319413 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.392199143 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.391134382 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.394689422 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.385943473 seconds)
  done (took 102.537025743 seconds)
done (took 434.362109565 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.606959722 seconds)
  done (took 7.901616742 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.796273812 seconds)
  done (took 8.095104793 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.133201165 seconds)
  done (took 24.442123681 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.391968234 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.498208052 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.3963972 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.383012723 seconds)
  done (took 26.9626015 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.611978543 seconds)
  done (took 7.907847401 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.385012141 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.382331932 seconds)
  done (took 14.065893739 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.751339571 seconds)
  done (took 8.048126434 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.549252167 seconds)
  done (took 7.856108447 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.39720052 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.409671111 seconds)
  done (took 14.125332568 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.369822556 seconds)
  done (took 7.666391006 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.199878283 seconds)
  done (took 12.498434247 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.391979759 seconds)
  done (took 7.688530871 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.459333897 seconds)
  done (took 7.755362147 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.2555877 seconds)
  done (took 10.552532165 seconds)
done (took 166.865130967 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.380632061 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.387731168 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.38324195 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.386913725 seconds)
  done (took 26.834443062 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.424810021 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.423441244 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.426638206 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.432588302 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.427655996 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.424033609 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.416839979 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.415495642 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.435704006 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.427810296 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.426998587 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.424806377 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.426185421 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.417403315 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.427955026 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.426989217 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.4366804 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.425829902 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.418456609 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.427668409 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.390932715 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.435487309 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.426721157 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.392494792 seconds)
  done (took 35.457331901 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.915609409 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.463999796 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.542479932 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.441442368 seconds)
  done (took 7.663035414 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.44593341 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.445244628 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.458919917 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.496514836 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.528672229 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.455685075 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.418093952 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.413131177 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.402712555 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.446621355 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.518839549 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.461279135 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.537898671 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.392224176 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.579082804 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.392829232 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.394847507 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.443760823 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.497203025 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.530540159 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.394720552 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.445675712 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.450945732 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.46257616 seconds)
  done (took 36.310243727 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.394178897 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.413403148 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.394999163 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.391431092 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.399121475 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.392423618 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.395259753 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.393514222 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.39472567 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.400346963 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.391617613 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.405378808 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.395594428 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.395288575 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.39894128 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.396050489 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.400006519 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.3950207 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.393882162 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.397523305 seconds)
  done (took 29.240251801 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.387905662 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.282526383 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.738818178 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.642968357 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.389944943 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.38399621 seconds)
  done (took 29.126713885 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.475932096 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.624900086 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.392090393 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.803103518 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.898667367 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.392510706 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.394802792 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.666212635 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.055108566 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.036570404 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.465084219 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.470067452 seconds)
  done (took 20.975938273 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.386108013 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.389762044 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.403068121 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.410486289 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.459311052 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.399310075 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.402944165 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.387544208 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.462624794 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.461915483 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.398374082 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.459004645 seconds)
  done (took 38.320892265 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478035122 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.442499886 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.53402311 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456003478 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.14082819 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599521482 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.402205214 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.155749052 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.411995005 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665070061 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39226699 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480153253 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.646720456 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389157106 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392729874 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.522941823 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.617917494 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905545776 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389086463 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.824280911 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414896762 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.399456725 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.911326018 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.655854323 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607917547 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.375748266 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.650582664 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.168513751 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.724322129 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.411377713 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403870387 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390929089 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667990748 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.554925087 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490053573 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.641019208 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395827683 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.962399957 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.386004245 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.821501767 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396096616 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392516994 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400986077 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392531737 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.327234428 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393151102 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.645099006 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.397068839 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.102817881 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.392771777 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.696181685 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494562718 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.397099839 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.967719043 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.476288331 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.405561836 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.396260236 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489130465 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968752988 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.080806675 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407965192 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.333130482 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.395996943 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.825686792 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06796316 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.399254173 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.397141126 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398346084 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329573567 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.818084141 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411676371 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531757788 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.418595106 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.05817019 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164756382 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.406264988 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.323598441 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974701962 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405450024 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.327151184 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622642624 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.171438266 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334957726 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.334343946 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.328806347 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15272616 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403453735 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.957403738 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419509396 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.153401244 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.665062677 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415930953 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418603609 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.620255944 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.28153532 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394519082 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.403006191 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51264351 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416335319 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.159477566 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349433297 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.398148176 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.654313914 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.60858586 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394875217 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.535093979 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.378428809 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407667653 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.408719419 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.408110839 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.651555083 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.038889296 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412032842 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.11658577 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413331263 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.172833083 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230434503 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42027309 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.404259836 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.405278382 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689220817 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.260491723 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.279933189 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466479035 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406312885 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400921183 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.855673328 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.250530606 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.558142957 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.64014635 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.432730608 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.418267475 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.401011234 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364978416 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.409613481 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402430996 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.182215843 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.626016854 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412747289 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675410185 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335976342 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.538833751 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.41691803 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.62243748 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.742957963 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.406440095 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665136172 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405201203 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.407151422 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.417112959 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422784312 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501334132 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426287317 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.422086282 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.666526822 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.404822815 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.408931871 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.854487197 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.181774693 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405211451 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.407529381 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407595268 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046002943 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378487564 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.410481396 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.300739563 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.419775743 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471547979 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.409427198 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.652978928 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.89030181 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427034016 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.408661036 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.40223381 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626778503 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.41541994 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 6.013909432 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491867178 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.969107109 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.073224597 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418155223 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.337086775 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.114583182 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.096565125 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405140798 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.59752681 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405407834 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.654881193 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.423851158 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.413668545 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.051766882 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408933995 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.018436936 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.415826972 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.418352535 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.754879481 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404829385 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.938249939 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330915507 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.411098563 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.424866144 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5494648 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.421703015 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.341280972 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.921369924 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.411568842 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405727749 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.182354234 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437706883 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.036544891 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.856878719 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.693344219 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409416654 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.71405293 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.113159741 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.4407277 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.414278442 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41483902 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422036758 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.422438768 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416659908 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.417406453 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.02719306 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.865003212 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975044506 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208180091 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000207963 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.82487346 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.417950873 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.290024078 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.18366991 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361719412 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.068552219 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66954595 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.228700757 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.387107343 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.532482978 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.818186835 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.284748414 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.714024901 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643001996 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.820319608 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.420198679 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.719831725 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.627907284 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441310106 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.421074124 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.33764498 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.933605535 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.6849341 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.430317873 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.49007692 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.76880323 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412183026 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.189043777 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.410355805 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.32162844 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.343015024 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.960170168 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.802477866 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.407533006 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.421775985 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.867377696 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.446484365 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.941587634 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092553727 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.427348307 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.948754086 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369148232 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.663404518 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.42886432 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.413997996 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.208138705 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.407749983 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.666571985 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.717062088 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353075892 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.425211189 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009404324 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.273536067 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.415426143 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411438253 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213502366 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427884341 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.743354273 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.423532392 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.899381191 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417304369 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.348482063 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346573327 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.104289834 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.423422253 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38378241 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93465152 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.418516793 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411683602 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.424133643 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262479403 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.671865128 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.424659405 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.059419445 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640804115 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41513614 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435692886 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.418226981 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415122435 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.401082904 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.31173252 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.650011482 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.477576197 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.642485438 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.573516724 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.326034143 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.453003559 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.654713253 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.30298203 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.428762359 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.680207918 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.128455368 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.440706697 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194805519 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437625731 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.429990849 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.43226479 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.415988714 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432819068 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487021851 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665865834 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.431065804 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.42710162 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.341543362 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418246842 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417562452 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.431327297 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510047156 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.166950554 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.96828854 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.196071233 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065426713 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222546072 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.067897363 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.727516733 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.422985245 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422244502 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351054736 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564975215 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.947651011 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68813266 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.538839205 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.412709709 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461863022 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42347915 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417067379 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628506096 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690451799 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.294510024 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428398124 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.079356217 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.29970416 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.42963135 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.629617371 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945634269 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004958734 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544296749 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.418334477 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.189046152 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.710886818 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.513049269 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420831194 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.016065543 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.432128393 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.317605438 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.427312868 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416708009 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582151114 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.726446417 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.632593961 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.434374591 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.575658665 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.19533943 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.899460924 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.677370535 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.958000669 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.67184849 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.072814419 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.196939861 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683448701 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487892752 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.675084818 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.534084435 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563764683 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.425133423 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.304157715 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416698942 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268612871 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.129248731 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.426900449 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076509781 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68453194 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.42216632 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.43143257 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443218516 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.43089918 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.644361426 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.226347987 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.651115796 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.431014784 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.42737058 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.994974051 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07521287 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.730986707 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363152885 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.423266662 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.683267974 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.662160211 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443999935 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.871100867 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.131293594 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016554845 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.39791242 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443279338 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418797419 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.20827196 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075360495 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.988354352 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971913039 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.085845174 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431113018 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700206611 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.426137072 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.430554952 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705774065 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.426042314 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.427286645 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.681840532 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.077596549 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.297219369 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.445002865 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.117139923 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.364753683 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.650799227 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43884166 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361403141 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.43235656 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.923088793 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.449617476 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546675456 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434038118 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.43461646 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435884332 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.161299042 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.712102022 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.42939482 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.434499238 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.420169718 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.429834532 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527951612 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.621662668 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425675974 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.100578254 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.773576951 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.682067018 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.430741388 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.416038806 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.428431944 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423707393 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.150598655 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.400274392 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.445277609 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045497348 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.434005359 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.443310318 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.430249674 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.644955989 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638099601 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.442845283 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683339557 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433705474 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446876397 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.331949384 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.197183512 seconds)
  done (took 1728.558972194 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.438120056 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.450886393 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.459813654 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.523616896 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.452260306 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.526190442 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.476637279 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.54303621 seconds)
  done (took 53.204444901 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.440813518 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.590100617 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.459241157 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.438489666 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.43531054 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.437771463 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.946674573 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.436293339 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.435804968 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.43680883 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.433473147 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.439392205 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.126613577 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.434637703 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.429878742 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.419451567 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.432834282 seconds)
  done (took 67.121113787 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.123736723 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.570006378 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.045782603 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.500105977 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.477667496 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.443177665 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.099338504 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.445520978 seconds)
  done (took 56.043475718 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.447191653 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.444137253 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.445388038 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.445412632 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.444121178 seconds)
  done (took 8.563140947 seconds)
done (took 2138.715941171 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.43635129 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.434692266 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.432226229 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.433988462 seconds)
  done (took 7.074740549 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.416080179 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.156505013 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.417108126 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.435774632 seconds)
  done (took 18.764425738 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.440801995 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.458122517 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.259951525 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.151929339 seconds)
  done (took 5.754536068 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.180755526 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.18996421 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.176541445 seconds)
  done (took 7.884232095 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.430687745 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.430830448 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.429727537 seconds)
  done (took 20.630195195 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.742911174 seconds)
  done (took 3.082425149 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.580555579 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.626599786 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.766396689 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.769034376 seconds)
  done (took 8.082995891 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.821409882 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.827819307 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.620505049 seconds)
  done (took 6.607004722 seconds)
done (took 92.118318132 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.743544912 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.454867673 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.645294233 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.716180947 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.669201716 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.672613726 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.921444883 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.678159653 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.504530665 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.223916057 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.721654872 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.663679249 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.658466298 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.455487097 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.6582985 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.457646431 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.798832059 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.807485961 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.437605116 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.444725136 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.923531076 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.354703096 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.541879692 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.381517469 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.740701875 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.589859213 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.935216951 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.454681343 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.435862047 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.962462175 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.58723069 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.435341343 seconds)
  done (took 201.014012811 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.444520896 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.430139609 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.430572188 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.427969873 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.430574262 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.449667318 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.426885324 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.4309197 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.442937188 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.431637137 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.451210084 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.426849741 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.432503412 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.44504451 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.44969908 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.431191253 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.429696741 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.432081918 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.430994791 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.430864324 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.431191146 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.430650538 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.446256612 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.431707212 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.450982397 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.43205556 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.448344773 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.444232784 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.432465755 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.43712136 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.434259905 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.463186716 seconds)
  done (took 207.332570511 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.435380531 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.453338496 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.431951248 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.458023459 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.444954477 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.432308919 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.451523776 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.430243176 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.45182124 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.431181802 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.432783022 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.437242718 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.434066222 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.43325958 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.433006061 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.447022299 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.441180562 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.44233271 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.44183533 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.435132862 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.434810267 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.449241079 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.433407222 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.433952611 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.439346877 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.434790869 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.44143137 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.433647704 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.434398976 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.448508252 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.437534963 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.43459243 seconds)
  done (took 207.397296898 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.642753881 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.441129627 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.444826435 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.384282512 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.446056963 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.439788508 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.440154708 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.636635612 seconds)
  done (took 15.218280372 seconds)
done (took 632.305488199 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.862928943 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.562116584 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.654436715 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.462908288 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.348923075 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.47926815 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.461566902 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.653996951 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.422040208 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.660784818 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.83012985 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.461171617 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.981439718 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.463002416 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.741457863 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.566459661 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.36999874 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.488387803 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.807781605 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.114791416 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.74732135 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.03796582 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.656992999 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.415368869 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.001574632 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.036271112 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.25727984 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.371922865 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.47994481 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.814533788 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.267022204 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.577918688 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.512034891 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.515600564 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.572563275 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.57174831 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.519151199 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.531397571 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.661569389 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.808209606 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.103755816 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.229043311 seconds)
  done (took 98.429311556 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.435711058 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.436026219 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.434970848 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.438321325 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.435614536 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.435508705 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.437339501 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.4361502 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.431407426 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.435768171 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.434959701 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.436428395 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.43455613 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.438585216 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.435198498 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.433914285 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.436206908 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.43769329 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.437035591 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.435694557 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.436030758 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.435974662 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.439200758 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.436124454 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.437682324 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.436645478 seconds)
  done (took 38.689342218 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.449674641 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.712195045 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.900742975 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.452017357 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.446770197 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.450555204 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.540953029 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.447966592 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.451427393 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.451208823 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.634075184 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.449331238 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.486418182 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.926005475 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.449499609 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.4506491 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.446589003 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.44917559 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.726505577 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.455317871 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.563022526 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.445123127 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.538580411 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.456240961 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.471596409 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.444662599 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.452862771 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.028491203 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.450063516 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.633900133 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.37975457 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.544026775 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.973824701 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.913650513 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.379009492 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.45434144 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.449077467 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.636310524 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.451347244 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.449465038 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.539524989 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.447763613 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.911012168 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.13778416 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.469818233 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.450546607 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.048887472 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.636484241 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.732300509 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.459665631 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.939265919 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.453667652 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.453230214 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.450325311 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.748106824 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.459649873 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.454057686 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.049614947 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.470994578 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.548176607 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.456209543 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.448952775 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.731802934 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.448728485 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.718412631 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.451884756 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.461187042 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.471717648 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.916384933 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.452286881 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.160420833 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.470365869 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.451390958 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.63322261 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.720806116 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.088108627 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.454974778 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.74372128 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.990214721 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.543673444 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.456208687 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.020619673 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.547050418 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.463334487 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.456810004 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.451915031 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.450728819 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.498158359 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.544016025 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.096695655 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.166558838 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.085078167 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.562963582 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.464200482 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.45228926 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.048657722 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.468885892 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.454641245 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.912686988 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.167312222 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.475032375 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.460577085 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.161319377 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.476990418 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.546832925 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.459984301 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.929555176 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.451012634 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.499515103 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.452010787 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.462099922 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.478024345 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.550247083 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.461848863 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.454896549 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.13744433 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.66299075 seconds)
  done (took 191.810419812 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.451225882 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.463518661 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.448958104 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.446053241 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.456126543 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.459720059 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.450983984 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.447841952 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.457191745 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.452777129 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.447963849 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.450756118 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.452761895 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.469114962 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.460064734 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.456153879 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.065458375 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.4499875 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.450546879 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.446852878 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.282490249 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.448069358 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.462002966 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.445335843 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.455111485 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.452627724 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.457112816 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.468215671 seconds)
  done (took 155.512498628 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.459039111 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.109412013 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.455206459 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.611227262 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.479784962 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.456726115 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.604422859 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.521992153 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.454841508 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.455308054 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.45697842 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.805644588 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.458052995 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.04995484 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.682388322 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.614161894 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.051943859 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.472446579 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.454367819 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.454405999 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.610193665 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.469673553 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.806208719 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.107450874 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.458765341 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.108129706 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.444838655 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.458992452 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.45432737 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.113006414 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.453061336 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.806704273 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.545667601 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.525168343 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.111221918 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.050298219 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.07024633 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.635448868 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.467753225 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.45595783 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.455126607 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.447968727 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.114458188 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.459454971 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.460784642 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.107332691 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.477794975 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.459383938 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.464929958 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.457074156 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.528487403 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.526316754 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.812661294 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.119244816 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.549102951 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.467102264 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.617214227 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.870286079 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.461038255 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.056943752 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.447725841 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.119758196 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.478748751 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.451483469 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.457917883 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.466322798 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.634851392 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.616823427 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.066367051 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.477597552 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.061720766 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.648166166 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.455635554 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.459223001 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.460321912 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.124169426 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.058200438 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.65075313 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.616034873 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.687668677 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.453639938 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.46253781 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.45228834 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.550833299 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.458040926 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.118889369 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.077680529 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.480214339 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.461442477 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.462409843 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.463831695 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.667718335 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.120631782 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.553081119 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.052600279 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.834263614 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.81722449 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.461883596 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.529719993 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.477034226 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.818101834 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.464852058 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.527856564 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.930664425 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.820161402 seconds)
  done (took 175.4942208 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.740879918 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.81772549 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.560078355 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.621310063 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.111230185 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.067011587 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.866640334 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.609606728 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.58468273 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.742392677 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.783561908 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.551131382 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.704290736 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.551585034 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.230566803 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.539064218 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.563026077 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.618546537 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.615708004 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.564342313 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.183069373 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.781609418 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.669037851 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.493238914 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.566468249 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.323630264 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.088889654 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.011973002 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.653369168 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.96100814 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.040722718 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.735846344 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.520951968 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.197563515 seconds)
  done (took 71.03643938 seconds)
done (took 732.320427178 seconds)
SAVING RESULT...
DONE!
