cset: moving following pidspec: 12945
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.343820048 seconds)
loading group "string"... done (took 0.479237783 seconds)
loading group "linalg"... done (took 7.864954098 seconds)
loading group "parallel"... done (took 0.176251282 seconds)
loading group "find"... done (took 1.286641094 seconds)
loading group "tuple"... done (took 2.031612947 seconds)
loading group "dates"... done (took 1.434674875 seconds)
loading group "micro"... done (took 0.253994025 seconds)
loading group "io"... done (took 0.683892885 seconds)
loading group "scalar"... done (took 41.964584223 seconds)
loading group "sparse"... done (took 12.866140942 seconds)
loading group "broadcast"... done (took 1.192326705 seconds)
loading group "union"... done (took 14.452640593 seconds)
loading group "simd"... done (took 4.955137632 seconds)
loading group "random"... done (took 9.911052115 seconds)
loading group "problem"... done (took 2.012246273 seconds)
loading group "array"... done (took 22.783626494 seconds)
loading group "misc"... done (took 1.468968187 seconds)
loading group "sort"... done (took 3.665686407 seconds)
loading group "collection"... done (took 19.877652594 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.463302945 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14334991 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148359948 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.154389526 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.189309463 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.138973597 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157892371 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.11096321 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.925071587 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.179628253 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143585408 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.512563869 seconds)
done (took 5.013595194 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.225055076 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082832563 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09537519 seconds)
  done (took 0.868852111 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.090057891 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145413634 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.090395894 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.075776208 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.092545421 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077653839 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.075950576 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.093133805 seconds)
  done (took 1.343365697 seconds)
done (took 3.225339047 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.736564934 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.279409128 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204384076 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.510826628 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.178148697 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.21127058 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674832152 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.35995378 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.244998693 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102505283 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.130370217 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.401037982 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.116763091 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.674738699 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.086039638 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125919542 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.16908695 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.445077919 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.091238669 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09141164 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.114737226 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.151273342 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.111859 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.084592807 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.181230992 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.0786827 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.187134926 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.105904036 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.076292105 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.285076806 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199536693 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.67608756 seconds)
  done (took 10.81541262 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115066227 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138970543 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096580513 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137552456 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137684251 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079945326 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098650562 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077293936 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122017248 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178243969 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132377607 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.14061971 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.074434659 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.078307882 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116754949 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245457246 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.103219693 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120279041 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.095330451 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088266609 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.135736508 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094835831 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106943912 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.089462269 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167398948 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.216949321 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107670602 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12171998 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092505362 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094731523 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142447309 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.155537984 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075752102 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.092487559 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17612709 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.105817737 seconds)
  done (took 5.059845128 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.18888661 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.099179195 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.187212126 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.143593031 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.140484589 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.16739901 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.094164705 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.259972128 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.116300687 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.17755268 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126932951 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112535428 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076737313 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097893793 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075888308 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.752378319 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.164414456 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111764119 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113821752 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095209653 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083295063 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.370558469 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083992817 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.091612769 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079799922 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.086563643 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.155943947 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083711271 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.200947579 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.100034578 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097590926 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113697637 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.204462995 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124840554 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117821952 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095283378 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.127473065 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.074265717 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176384811 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081433564 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095224524 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104436609 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133089579 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133825348 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.090818635 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.077504974 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.211259176 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.092256156 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.091704115 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.013376341 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.178876216 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089492922 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.07448298 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.343753937 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115413275 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076959071 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.093317024 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.289415155 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113783145 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.091724878 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.078550176 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094187966 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07903044 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095460594 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.386225314 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.077326752 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.847563106 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079413895 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.085344483 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095657853 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.093415813 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084269611 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101043524 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.096385196 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.093236388 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07927898 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07542427 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.093481397 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.077721539 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113370349 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.09902325 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.077028667 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.156962073 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078002048 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09829843 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126133741 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.096834644 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.076326321 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126933999 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079544692 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.092424762 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132369854 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.078241606 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112310767 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.093196822 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.124128655 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095394247 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.177606891 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.090836224 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.106689752 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09917733 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.12230715 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125882126 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.090092645 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095387612 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082296636 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.089974604 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076387805 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.073699203 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160858442 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078261108 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.093623176 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.077847282 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10626535 seconds)
  done (took 22.536856917 seconds)
done (took 39.10550782 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.352647613 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107984051 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107415404 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107235618 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.106650122 seconds)
  done (took 1.54743883 seconds)
done (took 2.286986783 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.275528203 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173028552 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072940156 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186448777 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073986639 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.176252425 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160028492 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110113657 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.184884705 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.090611518 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163902443 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073045227 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090228353 seconds)
  done (took 2.596688998 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091758138 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112911981 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079327007 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091500885 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090408565 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091672949 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106805324 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098019717 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107385041 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081994009 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089988062 seconds)
  done (took 1.780265966 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091578525 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110594255 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078970993 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089859796 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090138668 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090929426 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107961027 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096819071 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107169054 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081880907 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08999097 seconds)
  done (took 1.773737772 seconds)
done (took 6.883599488 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091703524 seconds)
  done (took 0.825991091 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.037520643 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.233430579 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.116781471 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.163609277 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.329565944 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.21036176 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.599305528 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.129797724 seconds)
  done (took 15.755779663 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.127117327 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.099779549 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.079252021 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.096807026 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.081271781 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.098783937 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.078080153 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095460799 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.081319114 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09620684 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.079030914 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.097371837 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.081785082 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.095334208 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.078043111 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.078473778 seconds)
  done (took 2.240381523 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.11574678 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.114516915 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.101819881 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.086336821 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.099748027 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.082942294 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101846142 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.100353743 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.080866383 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.098878035 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.087565436 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.102478446 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.085048512 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.09731259 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.085105779 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.103948779 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.081278665 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.100850659 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.085914919 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.101167985 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10311231 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.083360673 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.101580709 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.086334388 seconds)
  done (took 3.134467488 seconds)
done (took 22.695912932 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.150382664 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08285424 seconds)
  done (took 0.974768815 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098352591 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116156745 seconds)
  done (took 0.963427388 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.105594222 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095672073 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136047553 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.096460367 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.095880124 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.07938647 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.129032139 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.096845686 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.079802401 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096447073 seconds)
  done (took 1.760618427 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083234148 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100039481 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.089053003 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.116676457 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.090819204 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097970814 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.084874357 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099391652 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08598355 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.09403315 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.088984715 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113029267 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.102121127 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099584972 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.101218437 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.103279265 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.089661292 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100445474 seconds)
  done (took 2.487799544 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07852588 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.081238408 seconds)
  done (took 0.908468448 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082293597 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094785432 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082101533 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098399995 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078033198 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.093551799 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.077885772 seconds)
  done (took 1.357702487 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.488665581 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.140053773 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.267742709 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.083047418 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120327037 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.316354434 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.094710127 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083212357 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.100158916 seconds)
  done (took 2.50130425 seconds)
done (took 11.703334058 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.089429707 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116229809 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111184084 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.472150548 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.114210882 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.077468511 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.156655226 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.263576253 seconds)
done (took 2.15382056 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.146422622 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339498545 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.123747615 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088169083 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.078164095 seconds)
  done (took 1.384562827 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076309383 seconds)
    (2/2) benchmarking "read"...
    done (took 0.080303482 seconds)
  done (took 0.913890246 seconds)
done (took 3.201656027 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076677049 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.076964212 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.091279919 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.1276893 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.076679318 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.075157608 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.093068552 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078336615 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.094735177 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.076750996 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.076980602 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093696111 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074711605 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091266182 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076980969 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.091155293 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07370073 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.076603355 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090979776 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075046203 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.093216045 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076509251 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.074526156 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.091344252 seconds)
  done (took 2.812896121 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.106211273 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09540315 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084247976 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.10035887 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.082188249 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.100836348 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.084750917 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094553345 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084026897 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.096611759 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099243315 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.081099922 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.096479144 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.082190697 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096248922 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.081616942 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.10090711 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078328719 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096750113 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.081868676 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10083123 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078568238 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.097614486 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084772574 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.098397359 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081730369 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.096176397 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.077761597 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100032689 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097884733 seconds)
  done (took 3.497287772 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08122808 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.07418055 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092234573 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.082114995 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.09134661 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079485078 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.091301335 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.074957153 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.075751999 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091707598 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.076524653 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091553293 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.075587193 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.092921976 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.076480754 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.077911729 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.10477051 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07527691 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.092707751 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.07584794 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.095125568 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.074357575 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.077122177 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.091925049 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.074897775 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.092080286 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.075287353 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.09177127 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.076023523 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07464111 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.094576378 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.078508785 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091290608 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.082107913 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095878607 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.183316948 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.07818553 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.091783087 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.075746119 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090824148 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.074874731 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.074266919 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091637792 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.082171287 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095561711 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.076986618 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092801454 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.076621769 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.075104499 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095276844 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.074372513 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091712428 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.077644787 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093555473 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.080001264 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.091849719 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.076105293 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.075154048 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093125691 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.075370253 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.091704641 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.074016537 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094332034 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.076107911 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.090609235 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.0988688 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.074700545 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.093792649 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.08013887 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094740525 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.077020542 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107815493 seconds)
  done (took 6.93777256 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.080321008 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104447875 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.077305816 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.077061472 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091392913 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075438409 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097724517 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076458615 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094490474 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094688472 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093082799 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077299789 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095210473 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080177412 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092832506 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.078035099 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103743199 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073541695 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092730112 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079953803 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093372723 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079961239 seconds)
  done (took 2.674897384 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.216420306 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102207274 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140943051 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094532602 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113089042 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110759511 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.082957069 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101189869 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082847259 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102799573 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086718288 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099623599 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113504893 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085544703 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103236385 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088076714 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099134008 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087928592 seconds)
  done (took 2.681380876 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092452111 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096453759 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101554885 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095948606 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.07867428 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09881165 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085581636 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11131453 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.080757295 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096651111 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089462216 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099687451 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.080997096 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095348832 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081522684 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095988691 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.081204223 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095759974 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08857598 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101919809 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102791752 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088733446 seconds)
  done (took 2.812453089 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09564169 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098053498 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099472508 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099102301 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077947743 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097379792 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085759937 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096153992 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087056095 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.097599691 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078751966 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095886971 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085744838 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096466292 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.084798059 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095489872 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080375982 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095728633 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080373391 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09391859 seconds)
  done (took 2.594531039 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118753835 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110116089 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093241094 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121716206 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092691092 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111541845 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121263558 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093899263 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110563576 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106980468 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111121699 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110529581 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10453582 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116561856 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092749274 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121695973 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121409379 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103963437 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109920606 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093038001 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124263284 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109671351 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104309396 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111604028 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094192044 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111547921 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093037011 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118813248 seconds)
  done (took 3.806400647 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077109927 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077407008 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092594569 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.075621501 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092911568 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.075780148 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.075481978 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09377895 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078354445 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092889715 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.078757618 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.0950708 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077043395 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.077752469 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094938856 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.078215895 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095140867 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.075061391 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077464288 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092319257 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.078088746 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096283332 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.077898129 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09311638 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07602874 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.077731027 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093332896 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075740848 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094954798 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075590741 seconds)
  done (took 3.289572693 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.08931867 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104434859 seconds)
  done (took 0.972598433 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.076303092 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11282099 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.075109609 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081049254 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102137883 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.078084996 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106479006 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101409787 seconds)
  done (took 1.509834469 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096509951 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.11519219 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084095403 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108077135 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096670586 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.112457556 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157158961 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084317674 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.084086342 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.094316203 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.095506641 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.095234327 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083920203 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097477939 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.085037533 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102015717 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.07941083 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10631493 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085999636 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097957825 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084500607 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108416147 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081363315 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.093315989 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.080818295 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.107830193 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.088180994 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.098890427 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082802962 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106960907 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.085156499 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.072075948 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.10110753 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084379326 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.098056174 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.096944222 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110695973 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08172724 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.105429952 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085193573 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105666852 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.077481457 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.102543919 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.084436472 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107369769 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084327837 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101762423 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077376224 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09358786 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.081650421 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095700945 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079088032 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.072592952 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103975704 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.083917845 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110690197 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081306301 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.097359493 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.081917096 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102004605 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.086112991 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.099108013 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08169023 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100611951 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086352493 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.099971023 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086718071 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095233178 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.07353885 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079734443 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.106292457 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.119771952 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.087546999 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101723574 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085064769 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097163412 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082967946 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10235376 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086663028 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106195782 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083333861 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104394493 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087257598 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097318037 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.082436513 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10502197 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.08091732 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.081777359 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.094301468 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094379735 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099287349 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079836899 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.094434117 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.089634456 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.100302351 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.082989725 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.094679491 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086628573 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.072132469 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102544526 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084330203 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097935688 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.088528624 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103092574 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084263001 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.104093287 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088808369 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097026711 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08251611 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.093657759 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084900655 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.098932894 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.085951757 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090672111 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082064342 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099012345 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.084429272 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.105170517 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081986829 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.083216823 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105280712 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.085988913 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.099850353 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.075550543 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.100149643 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.0831983 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106238676 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.087922722 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099243717 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077399556 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095048201 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.083661385 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101062372 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.084616 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102532175 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.082979735 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.090875714 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081314544 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.084547629 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.105186256 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.079435186 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.098097062 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.084509111 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.098131188 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083039289 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.102726861 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.081951865 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.095754975 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.083698753 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.098966868 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077390122 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10652206 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.082348537 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.08134719 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.101237011 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088323385 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10010851 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.084861138 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099665475 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.084941541 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103237922 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.077955371 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09697579 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081864504 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108111488 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.081262242 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095347853 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.076288317 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.085173378 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.095200029 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083506076 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.096050124 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.081899115 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102755106 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080887836 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100892743 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.080394807 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113820102 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092068673 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102615949 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.085646037 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.107444129 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083254872 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.099095531 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083523947 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10273741 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085053602 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.105123758 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.084692471 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084791138 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.100923137 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076256842 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104207035 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08776126 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.097230336 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081040201 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.095951207 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084379701 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.104766178 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.084773109 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102840046 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081583234 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.079558522 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107833573 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.081268086 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102058797 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.077459792 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.101710633 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.07834557 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.103494791 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086119181 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.107951523 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082666428 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096435431 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089477389 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099935689 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.085814653 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095246358 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.077192341 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.077918236 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104153241 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081767624 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.100210362 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.074234887 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104673857 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087404099 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.097701155 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.07874884 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10094831 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088758858 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.099061856 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083637474 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.100763328 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.085265077 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112223862 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.079278877 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.100475565 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.089863353 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102209946 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.073954724 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.085875475 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101221013 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.079318981 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100230922 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082367427 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101571276 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087544168 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.102718983 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.073958167 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.100883078 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082744767 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.077899821 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096466208 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086975459 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.102728151 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08244181 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107879458 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085390337 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10391202 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083489816 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.102028795 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.085071737 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103598969 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084073678 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104001259 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.082396987 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.096639574 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.082319718 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.096557976 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081266951 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.080387035 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103218949 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.080051211 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103952982 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082893159 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098138747 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084572944 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103743228 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08128056 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.097741076 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.079905914 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101559828 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0801915 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.080089145 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.100959079 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078305682 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105609408 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084492693 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106414992 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.080296292 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094154468 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.085226621 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.100400151 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.08649434 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103583542 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085695984 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.079865215 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102562603 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.082092258 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107620971 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.077194881 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.107916947 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086356461 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098813709 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.08347761 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.097819827 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.081509699 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.096782285 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082087027 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103943902 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.080296909 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08238243 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.104462283 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08158169 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.098908308 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081726439 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103784189 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.079927941 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104238783 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.074607154 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.097004087 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.079900689 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084212586 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107219132 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.103131953 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082519281 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081850434 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104512411 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082227652 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09491716 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.088555207 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104946653 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085536817 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108533212 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.078802827 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.10073763 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089990927 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.091997902 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082153758 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098572586 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.077123254 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0885239 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10389966 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096525015 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.098117492 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.078928417 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095312855 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085980635 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100639794 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.074895808 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08009406 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102392263 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08173495 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101587221 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085224303 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.101297711 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085723951 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106460735 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.08389778 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.100364621 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085518012 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.094586463 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.079380351 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.07809086 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.102417865 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085272287 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.096500212 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.077800359 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101909278 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.082419961 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.099244957 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083521327 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.100328491 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087548749 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083717862 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.102277887 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107458507 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.074604873 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.082671835 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102781649 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084033263 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.097807997 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.084294069 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10330542 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085890002 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.107134822 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084123803 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098947493 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083977637 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100103809 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08465266 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.084044462 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104365743 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.079018361 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105104162 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088317498 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099238761 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.082236662 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098527838 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.081007312 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.104081404 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085799453 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.100958725 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087282908 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101547401 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.081821842 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.105424748 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.084895192 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083134885 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104946807 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.080722151 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105581768 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.078669368 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107710365 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.079838901 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104659324 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.081887308 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.095952588 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084174793 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102528725 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083498607 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.104248922 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085561476 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.078365793 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.097948936 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081109479 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.100134222 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090136307 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107385835 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.08293882 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101824288 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079074145 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.095968435 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086322391 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.096037835 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.081993245 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.082218722 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105686309 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.082238172 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.100130042 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083273145 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.106906452 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086738217 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.10508369 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.077913284 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.103773656 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.086168739 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.101059917 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.081785334 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.099151431 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086579679 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.104931188 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.082078973 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.078733481 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108768649 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.103178263 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086645132 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.081016008 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.100997764 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.080713294 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098466397 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.086988834 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.102135551 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088526807 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.102021404 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084892877 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109829859 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080155213 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.098703333 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089814231 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102423353 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088582361 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098126428 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.081437807 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086021983 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104967012 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.07857155 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.099546746 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.078335616 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.101272317 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.080160354 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097177654 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.090666473 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.106696099 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.083547257 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10125667 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083590844 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078309259 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097521632 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.079148719 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10543577 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.082146158 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.109433746 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.080030558 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.098022947 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.07924268 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10272433 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084798077 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.102235378 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.077307713 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.078961667 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.097707756 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.083293011 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.107299188 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084214197 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103374069 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085150838 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.101901121 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082386865 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108495246 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.077804047 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.103243967 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092309407 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104395737 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080980498 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.085233442 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108725373 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084840432 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098084755 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085122695 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.101826285 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.080708933 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104859268 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086432978 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114161168 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083913632 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.099174329 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084026728 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.102991283 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.081123092 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.10769626 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087379615 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104068795 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.086019408 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.101545078 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08795423 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101497349 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087410664 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.101523481 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.08312697 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.083700574 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100017409 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082224026 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.097994184 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.086379941 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106206752 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084610497 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.106690617 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.080473144 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11022272 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.089492453 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104503179 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.078064336 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.079807141 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.099157037 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079375087 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105081136 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.079073288 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102072416 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082779462 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101904811 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.081554681 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086470496 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102091942 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085982523 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103919535 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.074505874 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.100918841 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.084029271 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100456091 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.077171409 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.1038142 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086260023 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.10603448 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090308483 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.080036209 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104781875 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.082683773 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100089699 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079008219 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.107232299 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084021698 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.102744971 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.081109485 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103825361 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.087130051 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.084341221 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106825093 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086024684 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.103172414 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.090088947 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108865115 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.078340422 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098564236 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.086466528 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101401834 seconds)
  done (took 55.664084538 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14803233 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086582777 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075814427 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095970343 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123749673 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080816165 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095710809 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.081803276 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099094225 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091604181 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.095453318 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077158752 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118268791 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125958796 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121210158 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092090497 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094841421 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080943823 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095937606 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081493361 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117243971 seconds)
  done (took 2.906538518 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103426008 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115602328 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114313732 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099735439 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107686436 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113939865 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.093032002 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114392566 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.118865135 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089447985 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118590341 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114403501 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089255005 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108778494 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088378733 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112361751 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118148242 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08755072 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114939712 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.112947036 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091958809 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11282387 seconds)
  done (took 3.167015873 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.089823405 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.08381471 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.104602569 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.075664071 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103650342 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.07609957 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.10895325 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.078792496 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108577183 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.08014761 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.078928106 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.099381978 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085268665 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.096012446 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.080754658 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.097339085 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.155278788 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.089420484 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.104943391 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.086764863 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098849061 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.084103629 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.078004068 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.099704947 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.07953472 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.113517444 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086090307 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.104872853 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.085681799 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.098357072 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085035194 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.078359376 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.101821722 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.081672573 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.098743062 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.080639282 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.104258427 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085393573 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.077761859 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101386732 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.080619265 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100063418 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085657704 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.101840151 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081745293 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.097545343 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.081985847 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083414272 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.09675562 seconds)
  done (took 5.34692134 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.115499246 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.134186011 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104145151 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.147162224 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120203997 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094731088 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.10643968 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144227359 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.079249327 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.103456236 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.101124185 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120746007 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106065088 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091179014 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.104677154 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085312926 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106066444 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08054147 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.111015946 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.080579972 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.11107977 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.108060952 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099615915 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117132894 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108910366 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085023654 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.100705104 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.091010351 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.116670144 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110698069 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.090924857 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111420208 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120902669 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.0842206 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10069291 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.08792525 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.12190832 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085750227 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.107807667 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.079191855 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.108464385 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090226714 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.108576059 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.121820409 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086100638 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107574007 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085050079 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.098782804 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117869424 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088765249 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11435775 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119959994 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09046509 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104841015 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09111991 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119605715 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084924037 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.104241119 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088889967 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117858064 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.098168151 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089495056 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118841743 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.086220397 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.1144146 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.118683765 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.086551837 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110079808 seconds)
  done (took 8.022353656 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115239411 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110344833 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101114581 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120885712 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110260325 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.090227994 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110655365 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089888378 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110500988 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116648649 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090834058 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.157141674 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.106984702 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097023402 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109523251 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090413695 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109717322 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09015454 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110894963 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089788109 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110986093 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120613344 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089741502 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121415798 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124069405 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086657877 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110527207 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08965284 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121609102 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109744085 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124031604 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09109846 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109751678 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101961632 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124814806 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.110749633 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084522124 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110400194 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090428484 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11027952 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.087144327 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121949654 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109412368 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.087936312 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109859618 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091561786 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121712973 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124496539 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095448075 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117749848 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110661337 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101546251 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110831653 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109170018 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102414482 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128724952 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121041062 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121242717 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091039826 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.121827652 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121389993 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.109487561 seconds)
  done (took 7.528887138 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114280796 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.118366345 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.123912513 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.077364075 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100382585 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091046112 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09974571 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.081316888 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.116341123 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095985311 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119395344 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110146331 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094259107 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119654412 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109345422 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093486988 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110968924 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110719271 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096906482 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110802355 seconds)
  done (took 2.939357074 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.091324302 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123200529 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083289566 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110109364 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08514554 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110340495 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.084427624 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105393451 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082839117 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105996914 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094246208 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116014103 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102427647 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091252932 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115411254 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.089091542 seconds)
  done (took 2.433367404 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096058979 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.124791979 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.122884488 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083283687 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.100404728 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.078864881 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.084227195 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.098919181 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.077733387 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119704119 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.081094547 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109649353 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.084831996 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101396979 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.079086836 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.109144556 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.077860705 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.100612913 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.084447444 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121761275 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.093010402 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10448027 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.085639578 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105333766 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.081299219 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.109626831 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.103158386 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.080473452 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.100922014 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.085891506 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103017678 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.090734858 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.098195969 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.082037753 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100412249 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.080242336 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.084036153 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.106412437 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108362098 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.085968698 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.079807318 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103311895 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084504814 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104498582 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.07788729 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106500884 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.078199296 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.108925085 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.080551331 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103273118 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.085106099 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.105472817 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.08383501 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.11467292 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.085577374 seconds)
  done (took 6.077037794 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098555604 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106541434 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078207349 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079083685 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106143002 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.084486137 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107725025 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.084879269 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10616817 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079499018 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106062162 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.086820419 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104543366 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086302789 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104816227 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087024685 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09769844 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.085555487 seconds)
  done (took 2.54304171 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089378195 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081402523 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.111442516 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081916336 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104086126 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084114596 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099775982 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.081434813 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102024802 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083491318 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102008038 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.084666276 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100179954 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.085226224 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082131564 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104206727 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.08407349 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1016338 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082226849 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098784507 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085166743 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100987476 seconds)
  done (took 2.883391608 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119978217 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.122713263 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.090641749 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.211511589 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.122782938 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.107534191 seconds)
  done (took 1.626464647 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107455664 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140385424 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083519329 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105703861 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09565493 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109802984 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086941755 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108541302 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119529059 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122266902 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087805214 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120558974 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099040479 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119208585 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115603612 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095292131 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108577686 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107893149 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084691947 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128886719 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087316338 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119802166 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107237301 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088457353 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108124473 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098454446 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121560714 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1226416 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087209072 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120867242 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116015519 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087426777 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121902314 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122663445 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08589989 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120068451 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107157732 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109062622 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116355924 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118339423 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085267705 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116104151 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099485308 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116157568 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120554446 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087455467 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115955568 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108027173 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088032882 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137637069 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116194406 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098457972 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117825385 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120209783 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099635043 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13711049 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122748775 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119499616 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116480647 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101867054 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118771925 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116263448 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099130719 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123433562 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116550549 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119618318 seconds)
  done (took 8.090610301 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122313217 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105039232 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087266885 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123544191 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119362203 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086886193 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109118367 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108152673 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087848633 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104152244 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154086781 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088301991 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119237735 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119564838 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087912768 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107712971 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087953234 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119838577 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084426415 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136086096 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108278319 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119732897 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098682848 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119486171 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122900509 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115612014 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088945469 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108448841 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08807487 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108514668 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094980322 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108612316 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119286198 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085072182 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119143104 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0875853 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109266098 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115349484 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087899217 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116488591 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119317759 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108660146 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108912702 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087377644 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123270293 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109312725 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087396491 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105509284 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087633524 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106762101 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122362356 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101665201 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123115409 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120307162 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107878889 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088899575 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108069539 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087645755 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109156985 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096238169 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119742082 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107459588 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13570854 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087526943 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109030469 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098591583 seconds)
  done (took 7.907789786 seconds)
done (took 151.483082333 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.100102047 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13789183 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096604117 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.165466713 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.083606884 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.136736343 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.116320384 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.117923241 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.083283442 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.082501851 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.105440765 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.084977464 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.168750344 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.083412143 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.103189607 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.085982232 seconds)
  done (took 2.609069984 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.180923214 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.295133086 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101213904 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.102458006 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087041013 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.104043196 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.081702528 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090343083 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.105770859 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.082144948 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.104366622 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.084419896 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.102388505 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.083816174 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.104389774 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.084130805 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.081462206 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.104182258 seconds)
  done (took 2.847165718 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112194576 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142345217 seconds)
  done (took 1.119690877 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118954593 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17627589 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.274408405 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.152704429 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.135519504 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097823208 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.154044502 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.125211872 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.205941632 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.129028191 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.128447578 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.090765487 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139609251 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.093348553 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.1131336 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.089183736 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.139470103 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.110629029 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.092434687 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.111507101 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115641088 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103892079 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093175333 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.112444474 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18797453 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.126541122 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.083253726 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.08158288 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.113195423 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111706573 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.090242078 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118509677 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.104983596 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.17041752 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.096695529 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.152396589 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.111957942 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.089306258 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.112786179 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.088703747 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.114712746 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.114382095 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.098181087 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.11036423 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.083194752 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.110402023 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085537301 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.082174755 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.112541485 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.090962855 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.113397983 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.10989095 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.151270148 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.091770772 seconds)
  done (took 7.275944839 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.82059121 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155652391 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087550662 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.921235058 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137633927 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101625084 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.814076799 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134491675 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234187589 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.807565763 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128759582 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118873019 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.208353065 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.249670275 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.930625282 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311487351 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.692465783 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.343199383 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.138150475 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.148788094 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094284564 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135221034 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.127374689 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.40379273 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11186257 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086837924 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.115402364 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116838603 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159720352 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.087879955 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111521283 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176854132 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.240457389 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204915569 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.088775288 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107487338 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.086707918 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.164030394 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26933474 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216241368 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.152573596 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1061384 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085909252 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120076147 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128120585 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084737184 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160520177 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.16848378 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189793846 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090905843 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11812778 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095295948 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.117588389 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.159321687 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.0843053 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311952766 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311972278 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108133238 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095841792 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124743712 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.241350618 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10939794 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225949373 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112899008 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21586231 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.086189883 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78686904 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162076063 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.108094986 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.0934205 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.115538658 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.090526435 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.117698477 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164073653 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.387128496 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09967542 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111947562 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086285199 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228676257 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086966814 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107973787 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161928025 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.088266119 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116414989 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098786082 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120069875 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.165383558 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.218875699 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119772606 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116200228 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09104729 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119682545 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.089059772 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209215605 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219071391 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.155483164 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209174231 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119272576 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.160114385 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.161589286 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119184175 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.166185948 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.115288347 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10015124 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119802219 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217373234 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.139223305 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088239029 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112055644 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.094300669 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.142174182 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088579121 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116267573 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.164822704 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.480405635 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.163644496 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.084740657 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111297093 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095453232 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159366384 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115780784 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236383516 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118412072 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.163256571 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115197908 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.083634016 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.116247036 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.160981931 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118847212 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094593878 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119941021 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.093512501 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.246607167 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.197282057 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121329928 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219648291 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.178520759 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116056426 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170397335 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116828853 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166326446 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094652489 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118679416 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.087729977 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780539708 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120311573 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.093965843 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112723717 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18215696 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086913616 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086059508 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.109080884 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082475156 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.777001377 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088329501 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.107025931 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086413242 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115403371 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092570234 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115135261 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.089793512 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181818007 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.207563103 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118856885 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11418907 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.087449265 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158498694 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.110068524 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.087223421 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10909982 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.088293332 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.115669622 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.090911037 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108887663 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168813789 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.159147134 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220647867 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.577968268 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.108452986 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.088239279 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229338817 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085948333 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287241396 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115478475 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.204457479 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185575663 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.085317545 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.309507331 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165867402 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.182972459 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.090110942 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.166935839 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.106896985 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092591088 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.18590172 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.08752373 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115098333 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.159149266 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099369208 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120841129 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.923755406 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087660455 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.223707872 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.10661672 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.165359051 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.087915153 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119522675 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291504127 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087024697 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126429536 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.159718417 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111990466 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.089039763 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.70956143 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.110855063 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.095885827 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11697663 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224906839 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163490402 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115799508 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094884784 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117962078 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.161587914 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206847359 seconds)
  done (took 42.817272575 seconds)
done (took 57.53469351 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.28300146 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214054287 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.266895858 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168355303 seconds)
  done (took 1.898710758 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.179684837 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.12366673 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.14671624 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.104056438 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.129269914 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.105246452 seconds)
  done (took 1.680562834 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.375184992 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.280815893 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243558713 seconds)
  done (took 1.797027191 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.248365192 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.267839663 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.329173768 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.405970774 seconds)
  done (took 2.242156687 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.206010174 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.124004834 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.097858888 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.138137323 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.168027568 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.185886114 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140215451 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.152540316 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128341061 seconds)
  done (took 2.282726155 seconds)
done (took 10.798862547 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.133570118 seconds)
    (2/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111100346 seconds)
    (3/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.092566171 seconds)
    (4/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.244581691 seconds)
    (5/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.257280929 seconds)
    (6/286) benchmarking ("sort", Float64, true)...
    done (took 0.238400813 seconds)
    (7/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.243002809 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.10259374 seconds)
    (9/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.114865784 seconds)
    (10/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.106836269 seconds)
    (11/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.273129106 seconds)
    (12/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.121064931 seconds)
    (13/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.242795823 seconds)
    (14/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.109955924 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.120290422 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.124726767 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.113944743 seconds)
    (18/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.098404975 seconds)
    (19/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.132296453 seconds)
    (20/286) benchmarking ("sort", Float64, false)...
    done (took 0.177647317 seconds)
    (21/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.243247531 seconds)
    (22/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.26071219 seconds)
    (23/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.164429869 seconds)
    (24/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.136669631 seconds)
    (25/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.206505125 seconds)
    (26/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.108969292 seconds)
    (27/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.237724242 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.112557983 seconds)
    (29/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.117492743 seconds)
    (30/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.231678671 seconds)
    (31/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.09471106 seconds)
    (32/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.107752639 seconds)
    (33/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.094683175 seconds)
    (34/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.135849654 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 0.231998056 seconds)
    (36/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.153131251 seconds)
    (37/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.142350177 seconds)
    (38/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.192927292 seconds)
    (39/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.096126485 seconds)
    (40/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.241434224 seconds)
    (41/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.234063244 seconds)
    (42/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.095438741 seconds)
    (43/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.088278436 seconds)
    (44/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.213408296 seconds)
    (45/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.137424621 seconds)
    (46/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.127447036 seconds)
    (47/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117187447 seconds)
    (48/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.090937277 seconds)
    (49/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137776564 seconds)
    (50/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.095568418 seconds)
    (51/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.180219857 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.114860052 seconds)
    (53/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.178952385 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.131634611 seconds)
    (55/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.119356229 seconds)
    (56/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.165620863 seconds)
    (57/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.1793601 seconds)
    (58/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.136134733 seconds)
    (59/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.097225599 seconds)
    (60/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.107840422 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.082147465 seconds)
    (62/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.191146957 seconds)
    (63/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.090425587 seconds)
    (64/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109872275 seconds)
    (65/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.169041411 seconds)
    (66/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.094112103 seconds)
    (67/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.196044893 seconds)
    (68/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.070716788 seconds)
    (69/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.094663072 seconds)
    (70/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.112484165 seconds)
    (71/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.092834174 seconds)
    (72/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.184591663 seconds)
    (73/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.095379003 seconds)
    (74/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112447935 seconds)
    (75/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.18775859 seconds)
    (76/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.190897564 seconds)
    (77/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.131731465 seconds)
    (78/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.1069124 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.110935913 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.106561766 seconds)
    (81/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.084110669 seconds)
    (82/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.158272277 seconds)
    (83/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.089057885 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 0.106170003 seconds)
    (85/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.174575942 seconds)
    (86/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.15269057 seconds)
    (87/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.18429213 seconds)
    (88/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.084769993 seconds)
    (89/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.19184445 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.105282918 seconds)
    (91/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.077230223 seconds)
    (92/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124531444 seconds)
    (93/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.094170499 seconds)
    (94/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.166540013 seconds)
    (95/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.113436572 seconds)
    (96/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128544874 seconds)
    (97/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.133314921 seconds)
    (98/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.163145023 seconds)
    (99/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.141314633 seconds)
    (100/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.088198472 seconds)
    (101/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.122507071 seconds)
    (102/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.081386923 seconds)
    (103/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.095369601 seconds)
    (104/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.17403692 seconds)
    (105/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.11066641 seconds)
    (106/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.116701042 seconds)
    (107/286) benchmarking ("sort", Int8, true)...
    done (took 0.230710087 seconds)
    (108/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.16379209 seconds)
    (109/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.195151157 seconds)
    (110/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069697113 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.132252813 seconds)
    (112/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119717921 seconds)
    (113/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.165067486 seconds)
    (114/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.168495703 seconds)
    (115/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088494437 seconds)
    (116/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.107814792 seconds)
    (117/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.172657718 seconds)
    (118/286) benchmarking ("sort", Float32, false)...
    done (took 0.155801943 seconds)
    (119/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.116860078 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.093618486 seconds)
    (121/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.097074643 seconds)
    (122/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.21143715 seconds)
    (123/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.071846595 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.083269023 seconds)
    (125/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.112077081 seconds)
    (126/286) benchmarking ("sort", Bool, false)...
    done (took 0.187132368 seconds)
    (127/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094090266 seconds)
    (128/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.118188153 seconds)
    (129/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.091254049 seconds)
    (130/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.160528781 seconds)
    (131/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.084149014 seconds)
    (132/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.113414032 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.089949669 seconds)
    (134/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.130599355 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.093699253 seconds)
    (136/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.188075115 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.091382528 seconds)
    (138/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.115899441 seconds)
    (139/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.08091949 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.106234623 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.090972957 seconds)
    (142/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.114355258 seconds)
    (143/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.090995061 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.082894617 seconds)
    (145/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.122583986 seconds)
    (146/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.084032458 seconds)
    (147/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.095388875 seconds)
    (148/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.127292685 seconds)
    (149/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.158993906 seconds)
    (150/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.070976311 seconds)
    (151/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.095461549 seconds)
    (152/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.073244333 seconds)
    (153/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.113868949 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.094144711 seconds)
    (155/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.116215565 seconds)
    (156/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.097749856 seconds)
    (157/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.176179589 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.084206933 seconds)
    (159/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.086104798 seconds)
    (160/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.094575801 seconds)
    (161/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.071431718 seconds)
    (162/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.106832378 seconds)
    (163/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.095638926 seconds)
    (164/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.134737332 seconds)
    (165/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.08360809 seconds)
    (166/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.10901917 seconds)
    (167/286) benchmarking ("sort", BigInt, true)...
    done (took 0.24417417 seconds)
    (168/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.071738676 seconds)
    (169/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.08506852 seconds)
    (170/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.097194216 seconds)
    (171/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.113706065 seconds)
    (172/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.096331073 seconds)
    (173/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.074806607 seconds)
    (174/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108823213 seconds)
    (175/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.140845512 seconds)
    (176/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.176586222 seconds)
    (177/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.071082514 seconds)
    (178/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.134360356 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.089167155 seconds)
    (180/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.094784702 seconds)
    (181/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.074235369 seconds)
    (182/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.070009712 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118932444 seconds)
    (184/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.081443213 seconds)
    (185/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.106878794 seconds)
    (186/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.085281841 seconds)
    (187/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.151156165 seconds)
    (188/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.089973551 seconds)
    (189/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.12091634 seconds)
    (190/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.076489226 seconds)
    (191/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.070649507 seconds)
    (192/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.096150379 seconds)
    (193/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.178996626 seconds)
    (194/286) benchmarking ("sort", Bool, true)...
    done (took 0.230389475 seconds)
    (195/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.082994817 seconds)
    (196/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.070971964 seconds)
    (197/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.096480148 seconds)
    (198/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.072308728 seconds)
    (199/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.113538498 seconds)
    (200/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.087290857 seconds)
    (201/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.085023899 seconds)
    (202/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.122232595 seconds)
    (203/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.07157809 seconds)
    (204/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.094027891 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.084107354 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.090707496 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.117567226 seconds)
    (208/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.070280648 seconds)
    (209/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.111072194 seconds)
    (210/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.189867912 seconds)
    (211/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.166978237 seconds)
    (212/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.10753091 seconds)
    (213/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.141154243 seconds)
    (214/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.103977967 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.082662716 seconds)
    (216/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.112872827 seconds)
    (217/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.084594754 seconds)
    (218/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.082597339 seconds)
    (219/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.095727898 seconds)
    (220/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.082966584 seconds)
    (221/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.103336708 seconds)
    (222/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.073727555 seconds)
    (223/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.071374832 seconds)
    (224/286) benchmarking ("sort", BigInt, false)...
    done (took 0.225245355 seconds)
    (225/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.096224115 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.083855207 seconds)
    (227/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.102700749 seconds)
    (228/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.127864104 seconds)
    (229/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.108678115 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.084338106 seconds)
    (231/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.108399375 seconds)
    (232/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.075742463 seconds)
    (233/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088608438 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109005237 seconds)
    (235/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.073451994 seconds)
    (236/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.104079079 seconds)
    (237/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.090201568 seconds)
    (238/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.080288659 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.107493195 seconds)
    (240/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.109404755 seconds)
    (241/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123313092 seconds)
    (242/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.084560761 seconds)
    (243/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.134887602 seconds)
    (244/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.134145073 seconds)
    (245/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.092883014 seconds)
    (246/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.074320803 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.117659997 seconds)
    (248/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.108746405 seconds)
    (249/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.096598719 seconds)
    (250/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.171318341 seconds)
    (251/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.086037672 seconds)
    (252/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.08327508 seconds)
    (253/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.100231982 seconds)
    (254/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.086019193 seconds)
    (255/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.096363122 seconds)
    (256/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.07323257 seconds)
    (257/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.079245688 seconds)
    (258/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.109294925 seconds)
    (259/286) benchmarking ("sort", Float32, true)...
    done (took 0.241179996 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.08354629 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.116750746 seconds)
    (262/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.083479018 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.081955463 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.108290283 seconds)
    (265/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.083847524 seconds)
    (266/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.106164255 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.082524834 seconds)
    (268/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.0702964 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.116522388 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.083886443 seconds)
    (271/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.097421219 seconds)
    (272/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.164221474 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.107281659 seconds)
    (274/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.071834493 seconds)
    (275/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.111018149 seconds)
    (276/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.072874239 seconds)
    (277/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.082246391 seconds)
    (278/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.10286653 seconds)
    (279/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.168977021 seconds)
    (280/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.090412229 seconds)
    (281/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.07165292 seconds)
    (282/286) benchmarking ("sort", Int8, false)...
    done (took 0.220553396 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.083130833 seconds)
    (284/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.084343085 seconds)
    (285/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.098022264 seconds)
    (286/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.072320373 seconds)
  done (took 35.942887249 seconds)
done (took 36.844100487 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099278553 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149021923 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094467316 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136020441 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.097177847 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.121360449 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.092243864 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.119102889 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.09822521 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123384857 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.096525748 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.097588347 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096340539 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.118589122 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095894109 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139026378 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.097519021 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.089817167 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.112090206 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.081554576 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.111956128 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.083585125 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.108893203 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.074204911 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.094424365 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.116469461 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.089870035 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119829414 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.083524591 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.10780125 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.083940513 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.114746841 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.083992213 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.097371971 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.11488229 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.087621687 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.119985927 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093371865 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.109377438 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.084123395 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115385389 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086865161 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.089796998 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.115840333 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.085415385 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.106552767 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.088411627 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.122064596 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116708532 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11522431 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.092165605 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.118376769 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.094536294 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.114247387 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.084009836 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.087125722 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.108343751 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115862375 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.112898219 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088939224 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.116020886 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.092885769 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.106436668 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.089100302 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.10995743 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.095676302 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.093799621 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.107499695 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09375087 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.113083249 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.083824958 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.112238358 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.083663874 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.082643928 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.118214569 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.094859079 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.10757379 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.085253547 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.114395436 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.090435324 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.106352638 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087500681 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.084729172 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.109542894 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086841338 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.097532738 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.083500312 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.090416445 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.107926183 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.087850462 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.113964473 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.091663488 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.10850099 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.096909141 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.082289519 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.108239564 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.084418001 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.107583966 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.087104047 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.082145879 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109031505 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086142748 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.117703018 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.08647299 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.108255946 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.097358271 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.107300981 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.091811411 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.082429802 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.108059208 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.099115094 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.118732952 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.084552315 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112582244 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.084353215 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.084897814 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.107775567 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.083592323 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.106998829 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.08467713 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.08491884 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.10894106 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086108214 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.110349972 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.099288552 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.107402025 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.084623047 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08580475 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.108684165 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.089064227 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.108596837 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.084791594 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.108959123 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.082925006 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086643012 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.109450413 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.085782338 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110624491 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.088370635 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.108967202 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.088641881 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.087359986 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.110353535 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.084083252 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.107010102 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.078958771 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088889759 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112339458 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.08527746 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.108836239 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.086436411 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.106853262 seconds)
done (took 16.095573068 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.085831043 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183811401 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.145166228 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.118636736 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131201053 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.084170751 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120493433 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.140987284 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.087612542 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141719707 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.108799111 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13034155 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148295496 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.083850054 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.083414678 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.113766539 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.085662645 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.125798255 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146531549 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.106648711 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.143270499 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.084769213 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.140076174 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.133719775 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.094811142 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.12617445 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.085596699 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.087180435 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11264171 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10984722 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.130888668 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.087617714 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.109501087 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.105928196 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.127403963 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.09181627 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.109281984 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.091581382 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108601387 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.085410173 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.132106236 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.107485947 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.115827832 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.09085411 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.112944333 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.094658725 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.110233027 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.094754608 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.119298729 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.089235126 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.124570197 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.114100674 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.112782774 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.101309669 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.108598912 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.096018913 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.126360302 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.092084621 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.109838441 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093373765 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107656028 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.089168456 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.125202601 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.110076361 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.114783199 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.099519855 seconds)
  done (took 8.281539425 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.102620424 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140003728 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.103624828 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.128101119 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.085192701 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.10973741 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.085849082 seconds)
  done (took 1.721183043 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.08578375 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.128542919 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.137184332 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.13576887 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109775658 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.13661984 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091324269 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.109791387 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106305705 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.111492942 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112285293 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151475687 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.087961892 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.118642379 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.114731349 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.110469418 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114507676 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.110669079 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089552356 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.1380895 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089595721 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.129322577 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.088507807 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.110431405 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104716567 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.110615355 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136116093 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115147658 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084162701 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.11369095 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.085472405 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.152066183 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103767308 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.120143338 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086420414 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129743319 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.105104659 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108852588 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.102960882 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.116329565 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.103810078 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.085609621 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.112459216 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.083617355 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.115910102 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100207424 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.114116496 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.087594415 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.088025083 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136332102 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.086092472 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129320948 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.085396036 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115394826 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.087609862 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115183072 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.096252003 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.111582592 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112079763 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.108259685 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108241167 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.130208052 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.103914474 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131808117 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089258531 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129307472 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104785506 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.086963758 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113534086 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.089416191 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132066663 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.083789039 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114400396 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101520334 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111914619 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114286309 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137687676 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087881395 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.121971785 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.08700155 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.111096022 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.087128981 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112210237 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116014016 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.085978025 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115361874 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089148304 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.108864475 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.086069991 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.088852907 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.110717948 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.088374805 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.114559845 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.087624966 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.113767639 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.108182977 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112235391 seconds)
  done (took 11.454726573 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.087679181 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.086513813 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.115734419 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.087413797 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.112652306 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.088520907 seconds)
  done (took 1.552167449 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117013021 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.112658227 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.101302537 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.116272462 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.128607265 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.139377413 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.110662291 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122210321 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.131754638 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.098943037 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.140114418 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.113061209 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.144058615 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.092292355 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.136171353 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.090245652 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.137653883 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.092277658 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.123163874 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092637828 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.130040505 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.09136875 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117703197 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.105442689 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121937251 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.090795883 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.1187836 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.097545267 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.124079305 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.09569965 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.117634577 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.096391045 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.118815913 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121204608 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.112994659 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.11733792 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092797691 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123469257 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.093553752 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121298907 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.114100033 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117660424 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.098879644 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.123390253 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.096360792 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.118425102 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.099098345 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117985791 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.111142606 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123417029 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.098571676 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.116602677 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096668878 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123478364 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.092658994 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121694826 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.098436746 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.138320044 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.091884413 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.119028793 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.089012599 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.122617359 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097362067 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122343071 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.095915772 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.124405723 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.117318297 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.093050894 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092249787 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.117319576 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.098142232 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.115279573 seconds)
  done (took 9.033386942 seconds)
done (took 32.99855428 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.687171149 seconds)
  done (took 1.659649416 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.811074506 seconds)
  done (took 1.784782098 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.169526007 seconds)
  done (took 18.170038765 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.467867234 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.550220346 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.97936069 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.163854505 seconds)
  done (took 3.134757872 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.972742632 seconds)
  done (took 1.966117469 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.285842211 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232826061 seconds)
  done (took 1.497876758 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.763878628 seconds)
  done (took 1.753426279 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.454762828 seconds)
  done (took 2.438371592 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.328516742 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.157875797 seconds)
  done (took 1.485382683 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.571540878 seconds)
  done (took 1.568118031 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.233702083 seconds)
  done (took 11.229032189 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.242971605 seconds)
  done (took 1.245391849 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.290855236 seconds)
  done (took 1.283443702 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.56384334 seconds)
  done (took 4.557186034 seconds)
done (took 54.754290085 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.096509524 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.099728839 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.125275201 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.097145674 seconds)
  done (took 1.406686718 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102273845 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118051055 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102725887 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.117716333 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.103883582 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118933152 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.095994991 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.129071966 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.092689409 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.120043966 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.093781761 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.091962517 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.122993513 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121407936 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.090713838 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.095534712 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126681139 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.092705109 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124131883 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.093414301 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116328354 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.095719844 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122435991 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09125835 seconds)
  done (took 3.582249805 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.098425945 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.091046223 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.120103105 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.0914739 seconds)
  done (took 1.4011725 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.09755232 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129053302 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.104247031 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.122542805 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.105322967 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.128215496 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.089695345 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.088272797 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.117871468 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.096482266 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.113597949 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.109843457 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13026233 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.09625839 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.124712162 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.085317524 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.114688341 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.104566466 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.122549778 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.097630398 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.115661812 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.096902509 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.087494578 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.130606629 seconds)
  done (took 3.610561207 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170770773 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.12560649 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.109739607 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.118945625 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.132151239 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139704616 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.084807727 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.13963607 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.084194179 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.128170742 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.089402294 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.158696849 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.125053604 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.085936436 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.085020452 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.110730949 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.098225757 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.125404636 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.088232111 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12616868 seconds)
  done (took 3.328221444 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09678048 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.08964812 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.111061788 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.088605436 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122944665 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.093411758 seconds)
  done (took 1.603242193 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094756512 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.0873571 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.116928107 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.089113219 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.11796672 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.086273887 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.111901371 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.088412916 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.087838131 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.112105727 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088731706 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11228115 seconds)
  done (took 2.198540816 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.520479802 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.116972294 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.090297297 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112909543 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096960948 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.112878728 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103325154 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.113995524 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.114082844 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.111701588 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.087114193 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.087552675 seconds)
  done (took 2.668351267 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201141836 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097417406 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261797194 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.349431829 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154190139 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160630733 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277238229 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166020405 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.175459525 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137536318 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195621553 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156108329 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125723068 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173750259 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138005639 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.15335193 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171919732 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188171875 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120137854 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224645216 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157784337 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138053088 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17957068 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149867346 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13692691 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158780868 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.09245886 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128136838 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168884629 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16543121 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170854731 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146589161 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113289556 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.459350626 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212763383 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173620654 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281159075 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134640285 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.177475174 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.139662339 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248562515 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137870705 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188280766 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125698021 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130706269 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175478483 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.317589706 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.17377472 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.132097621 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141783409 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177142074 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176821899 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.174014242 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137913853 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298927486 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147792027 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115729053 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182121447 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177328673 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18798831 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164440359 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118790299 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184528891 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181804491 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17647533 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142806061 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.162608145 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096629077 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168470653 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192176841 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17286173 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161336817 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180642364 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137522288 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160905646 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170547406 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152736349 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173065341 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129535002 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119994244 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148369999 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109012169 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129874436 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167570429 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123115426 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195803317 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134020123 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.171097165 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200945621 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157790883 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130419732 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160701468 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160648558 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145878213 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.088091771 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145247076 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150911084 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15660335 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103010427 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157019229 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141284604 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.099809314 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150942458 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.094226977 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155639707 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.126056527 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330314545 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16042281 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.125625989 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160929147 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11990713 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.148348042 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166705316 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183199783 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13288586 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104944353 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192599919 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157794992 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133161022 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175582739 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181041521 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.126073727 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137432547 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164282875 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185697058 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139676149 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184834915 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113565767 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132182687 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.139323603 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156525752 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130090567 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.158222518 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131829544 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.15387079 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191529678 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.096078865 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136895804 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167644111 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099877236 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128509148 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139551113 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107984263 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.13354564 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.111500616 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13584493 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153144016 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15547721 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126474615 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15069926 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139808845 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185632929 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132961762 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.12055535 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146649057 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.091279043 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.196638943 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182125435 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101711442 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193408219 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.162609178 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223565732 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13463074 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131122939 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17574935 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10023049 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119008729 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161563723 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156138602 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131835199 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.177265343 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220090921 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162970952 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.149199469 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119439026 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162418163 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163757451 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149092955 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.107480867 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159851084 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155827868 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.093472121 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123967513 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126201127 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111138124 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131251887 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106447676 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175877423 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162585623 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215939545 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159997886 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112204278 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180113075 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124929271 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160124562 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.397303668 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112725096 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.179346455 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179482418 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163521327 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139827005 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169374676 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.090698516 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122331352 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.105950277 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1600314 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134688142 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106345135 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139967493 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181290167 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.356788936 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119351225 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227834857 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164114292 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190020371 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.092267831 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167275375 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167784192 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155878345 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.147958605 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130167608 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.11968751 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175942195 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144650848 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181050542 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159919554 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163985879 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188739071 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.146944139 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102057561 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146842484 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161822882 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137533575 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133019483 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144518407 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136121 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31262652 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.124623964 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098033633 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170355814 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143107906 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171569857 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.14648345 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163325995 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098369732 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139889931 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157476314 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117490279 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.114810272 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330485402 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17913488 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143110382 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.342892636 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170772048 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102457228 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.310821224 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184996999 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.362743159 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108179253 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140835315 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159531673 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160423338 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.318459288 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176032006 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145056323 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176020442 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1565513 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.106841718 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136591367 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11851358 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150439373 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.139702628 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.131341373 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.122187228 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.134071272 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172813949 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141051692 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130226444 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160946171 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149108533 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.113958721 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140780583 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196642287 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157470328 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172849991 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.146665128 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.162927054 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195411788 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095659191 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129300185 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.099111381 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176814208 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132556315 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156086631 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.182758109 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196466322 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158531227 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162399432 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108555168 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118234393 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15763218 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119641873 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224076423 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112300565 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134161479 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184739283 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.143641883 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10198319 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158276969 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284290813 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142457186 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172989519 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.084239855 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280744305 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122266974 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102847664 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160723437 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170457955 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137266778 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.147612169 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15776979 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143683316 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161353625 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108882215 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215203484 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203434832 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166168645 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168885641 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.102989361 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157821067 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.317368118 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17427685 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144826375 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.134107508 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132844921 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181210941 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.179290979 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131751928 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160768873 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159919521 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129346937 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191443664 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10765423 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194728877 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129717099 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163377063 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10926131 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123434777 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156742869 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.183085772 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129197611 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142175837 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155315792 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132184655 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096822754 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149286318 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157422322 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141535245 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.096956493 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169541733 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.122965387 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130841437 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174502539 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132477852 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152952342 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117526058 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135745376 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140662834 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114393087 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135690678 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.137087225 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174911177 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129216283 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176598429 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170631893 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162752015 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31520189 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144281723 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665284433 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.099345834 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181430722 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146701054 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179682758 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11925669 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163819478 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160280154 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149035206 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164183921 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149189489 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203258458 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163486656 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155948262 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13065163 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113540638 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142486229 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.129388235 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123261436 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159871226 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141112974 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.107717867 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154956054 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142514182 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.103381973 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138918526 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181837023 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146368708 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173793279 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177550681 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108932342 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164648285 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165591772 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130407947 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157527802 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170355925 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11168176 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147975889 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.103667354 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133394706 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178270142 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.093635413 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158832325 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158707481 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161012803 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163226751 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.104780889 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157308716 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141029612 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158294656 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10047565 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152934136 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156987454 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103938899 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.127799444 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154964532 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123996388 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149552966 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12507402 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.136353549 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180214911 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.093001257 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132749644 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283539014 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156709681 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187062499 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.143138793 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105037017 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142989278 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144822919 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.122699546 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158610751 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.129392953 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103249898 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.128951836 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.160941715 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.115915995 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157049072 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186600889 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318414989 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195312221 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136358442 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280751553 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110290556 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154305843 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.122047209 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.101131155 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141305728 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104460039 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143955708 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189194731 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176534336 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146144679 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.104195213 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126844662 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.094995965 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13235766 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163161472 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15128574 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128639599 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14194859 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.084894758 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142238588 seconds)
  done (took 76.443420231 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145763414 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130964137 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146649645 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.199400059 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166367902 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250987524 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.20894236 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.234720381 seconds)
  done (took 2.581285874 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.090577235 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.142580473 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.125911787 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133982333 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.113737969 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.114371984 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.305619149 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132142167 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.113128956 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.117911103 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.131696531 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.115099033 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.529685255 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.122797285 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.087969622 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109273495 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.114429972 seconds)
  done (took 3.688716713 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.227425723 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.475051713 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.117806949 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.191234987 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.176502443 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.092223816 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.709766534 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.091656799 seconds)
  done (took 12.172120347 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.117480934 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.138044641 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.129787403 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.157633498 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.114827904 seconds)
  done (took 1.760784351 seconds)
done (took 117.43549547 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.094495609 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126942915 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.095681678 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.12702713 seconds)
  done (took 1.52763831 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.101793693 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078142053 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.105284887 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.078318191 seconds)
  done (took 1.455303664 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.193065337 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.172503015 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.413402434 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.079504149 seconds)
  done (took 1.623406398 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.111855522 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.129226475 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102290198 seconds)
  done (took 1.448856992 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.102794059 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.099054802 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.127987155 seconds)
  done (took 1.431216915 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.102126739 seconds)
  done (took 1.198704709 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107599212 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137551539 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110049672 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.13664752 seconds)
  done (took 1.593655018 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.095699106 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.097487279 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.138316431 seconds)
  done (took 1.431018285 seconds)
done (took 13.177724956 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104429198 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.421034035 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.390073622 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.142622221 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.694796123 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.413813289 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.043733684 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144393155 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167580045 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096352553 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142570419 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.668649988 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.024663156 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.340944755 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.011642133 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.342751051 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.716279748 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089515984 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116703012 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089771668 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.05452467 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.089493369 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088718027 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117547058 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.690989879 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422480338 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089441404 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.36904528 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.088692004 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125569537 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.376095196 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116628299 seconds)
  done (took 16.878951662 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096024751 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177088094 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.101082164 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.120300219 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097148621 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119478638 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.093577775 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090322625 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182840135 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125682116 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.10717621 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.118236787 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.093881398 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.119437378 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.109197931 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117916967 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.090978165 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117333462 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.090112827 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089789183 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137011486 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.089611533 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11823336 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089335647 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.118916192 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10243708 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118989744 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.089888062 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116836858 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098504519 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090995992 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.119149272 seconds)
  done (took 4.647957303 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14297706 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.187309836 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129799858 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124628784 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.173328095 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.091543695 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200170976 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14617581 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183914943 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.090187748 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136221442 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.090053116 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153564371 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09039163 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138807502 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.089289588 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.118427686 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090227644 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117188713 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09030388 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.109672987 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117722668 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089902441 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119419852 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.089112097 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133323759 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.090252624 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.117778432 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.090322202 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126259351 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.093260188 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118559411 seconds)
  done (took 4.985355206 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.094036704 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.095305946 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134186328 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.105905811 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119766281 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.093730548 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.122659596 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.091296664 seconds)
  done (took 1.9596148 seconds)
done (took 29.571789616 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.108163356 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.098600805 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.133904923 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.103960076 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.128465324 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.104725347 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.121158371 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101356976 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133696802 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.098852466 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137189851 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.088700178 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.091086196 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.117232296 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.104180988 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.12386733 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.102466261 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.131047946 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.106468768 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.138637348 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.091404743 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.130130624 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101361045 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132041429 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104743867 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133130558 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.107321043 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.125541793 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.092635284 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09175749 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.131958002 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.118265972 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122568046 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105222346 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124050802 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.094946064 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.119959898 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095011093 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131603325 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.102951299 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.12539142 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102366522 seconds)
  done (took 5.854856461 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.115916953 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.155687382 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.118469188 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.121440496 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.092647449 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.113073152 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116220414 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.089199157 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.114730977 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113866899 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.107644227 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080320655 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.111605845 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.07671068 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079975859 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.108896865 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.083558383 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.107432916 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080646749 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080704166 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.112599174 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076995754 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082291848 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.111672684 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078719597 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.113813698 seconds)
  done (took 3.763232083 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.09790427 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.104219538 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139650343 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.173934761 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.125148381 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.128439373 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098877904 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138632419 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.106146929 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118361365 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.091664837 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149134469 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107421947 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126354956 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092406954 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.104242431 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133902365 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.091375821 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.125133567 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.109421651 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.135773009 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.099645272 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.131823005 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.101000825 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.11819131 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091875713 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.122841736 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.100806012 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.099382686 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.12968606 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096645553 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.122380322 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.091848219 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.130955036 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.09513769 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.119945254 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.108478057 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129157166 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.098843997 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.119952823 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.09789939 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.091716952 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141309651 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.158976644 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091115942 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.095836006 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122741435 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.099239616 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120989814 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107554212 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12984542 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.090792843 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.122817215 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091609666 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.090820304 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136326 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.091010334 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.121716973 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102752736 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125696758 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.102081612 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124026635 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.105491933 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120836697 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.097739146 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.09065453 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.120345647 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.088952317 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143606646 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095870913 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162236329 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.090778842 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.120643051 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.097519984 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126409355 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095886787 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.119664153 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105119577 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128256885 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.093638863 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.100688221 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.120958931 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.092181391 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.138769234 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.09114179 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.120786104 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.090431927 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125827696 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.092530772 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.090992217 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135127667 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.08934446 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.122535522 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.103841377 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120212168 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.090533729 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126505181 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.09548889 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.118427354 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104751185 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.125107489 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.090538885 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.129128126 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.091399511 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.092827476 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.130377062 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.094350199 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.11964857 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.095404595 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.126292327 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.090650391 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122987432 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.094323674 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.092237356 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129828954 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.097071058 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.123952847 seconds)
  done (took 14.204501914 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.23177932 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217704066 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.190501933 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.300901443 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.102926349 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.146451593 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.21482587 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.126895595 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.121406115 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160579678 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171848026 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.184090089 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.140856906 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181885793 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.17288977 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.119881405 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.1096298 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.1666898 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216202502 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.262062813 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.1428439 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.09800907 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160763812 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159950216 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.134705649 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.099995662 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.138378458 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.10328813 seconds)
  done (took 5.702924803 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106838566 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153732511 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.095587803 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143798704 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.117419756 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.120633407 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.094064222 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.123015728 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.103472947 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135194255 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.089711107 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126593698 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.097836265 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.130248221 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.090694679 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.130389314 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.101317439 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.12149889 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.09355851 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.094807908 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.131540791 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.13889082 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.094356466 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.089276026 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.130078103 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.090195751 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.122759338 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141983005 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.091081349 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.143036182 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.089382368 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.097983848 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.1354314 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.091290096 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121471516 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.092166904 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.122599628 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.092283004 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.092061431 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119471392 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.089450748 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.112370062 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.089477916 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136710763 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.097122227 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.115332133 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.09718392 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.126802939 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.091275039 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.087739079 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.123616481 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.094351046 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.124324179 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.098978651 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.122657889 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.091862588 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.094030231 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.121200421 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.097356469 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123972173 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.088717748 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.088426289 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125706668 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.123962158 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.099549612 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.095141029 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.119512497 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.092237831 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.125126208 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.097690284 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.122924199 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.097130731 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.087573813 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.123321439 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.093119787 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127082852 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.093929919 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.119237412 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.090604478 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.090930183 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.109864127 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.090633465 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.107961147 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.094443821 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.089727694 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.119860095 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.092896648 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127854408 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.106967369 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.122240401 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.09938571 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.122108446 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.089445038 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.123616711 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087591402 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.093297955 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138644244 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140501789 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.090416677 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.118724334 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.105744118 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.093803155 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.120304774 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.080629447 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129995547 seconds)
  done (took 12.568557029 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130249889 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152640623 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.093061323 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.139629084 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124681194 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157471133 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.097215855 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129219474 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.091596639 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141369284 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.090600091 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131265211 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.090950137 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.136563601 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125941108 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.132242785 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.092511276 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.136605355 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.095089291 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169004711 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.109541722 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141075083 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.10872658 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.122323606 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.096868791 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.139299119 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.13314548 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.136454138 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107354198 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140856497 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107769577 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163637321 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141626453 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098112861 seconds)
  done (took 5.342301346 seconds)
done (took 48.547653237 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.209006306 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.420323192 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.195754288 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.164484779 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.249608146 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.206838736 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.227542488 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.199850973 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.822119554 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.198329215 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.461384824 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.785520932 seconds)
done (took 60.270650454 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.307552143 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.359337681 seconds)
    (2/2) benchmarking "String"...
    done (took 1.5944081 seconds)
  done (took 4.081300453 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.783007619 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.140749627 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.455871482 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.195885244 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.196331085 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.486506617 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.958698311 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.584018375 seconds)
  done (took 28.144655674 seconds)
done (took 42.447974261 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.216735786 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.222687008 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.242190814 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.183470214 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.308894803 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.228518503 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.634166669 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.221398146 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.229496889 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.189982377 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.198429679 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.213096599 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.205860026 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.607804477 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.207827851 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.201782141 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.288993869 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.742169573 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.603398977 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.20440945 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.201909001 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.251699781 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.235020916 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.201285682 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.214179571 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.199838689 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.205353393 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.200410029 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.766699632 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.199165337 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.21225209 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.738535933 seconds)
  done (took 190.905224674 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.198959373 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.39583549 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.483707889 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.244272715 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.90692778 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.398528437 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.346421622 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.973218841 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.216410007 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.226758929 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.535666791 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.19980153 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.594952512 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.172302733 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.229866703 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.281377674 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.540396968 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.588346699 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.23547314 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.361202998 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.205860811 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.418801033 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.351284641 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.489200717 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.234746346 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.256276991 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.205345193 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.223821471 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.389198975 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.47437549 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.224650262 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.254931656 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.831596259 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.058679696 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.218709792 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.225643615 seconds)
  done (took 151.323607643 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.201574669 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.200502554 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201179513 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.233222195 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.200709867 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.789906336 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.794481412 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.733184471 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.515036144 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.622195712 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.51108682 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.207028791 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296862801 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.21620376 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.202204357 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.217972818 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.228196192 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206316361 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202120093 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.79110678 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.218844849 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.394001604 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.383025527 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.218343492 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.235181805 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.600363871 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.202916681 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.235755766 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.535804091 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.252198874 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.202593597 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.60515877 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.373444577 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320246429 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205533178 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.235395241 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.20263337 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.2022317 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.484074775 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.20283667 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.203379701 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.206747296 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.905852102 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.208783193 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.793950156 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.207546542 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.17307193 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.203552698 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.203614042 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.24540175 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.927502734 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.224002126 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.203676358 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.206449561 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.203970069 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.204837008 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.237067885 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.183849714 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.30182799 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.204348554 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.204478355 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.207449436 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.236964119 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.204211686 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.330380369 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.22180232 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.382773123 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.260622693 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.311959497 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.793147173 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209187534 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303959772 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.326898611 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.206279864 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.204259234 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205540127 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.203806291 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.316413429 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.204719731 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.62375271 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.382767324 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.223640635 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.621981064 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.307740251 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.206087282 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.636894201 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.210784016 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.206347627 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.964774853 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304124818 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.207266125 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.206530548 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.205841679 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.62606667 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.794554716 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.491856803 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.210911044 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.541849684 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.206540021 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.635241682 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.766776007 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.206449515 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.907027279 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.212809818 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320682708 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.384043646 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.222634969 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.20755537 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.206044367 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.621695216 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.211916529 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.266960178 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.206017096 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.605398157 seconds)
  done (took 366.765531841 seconds)
done (took 710.124680872 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.826681887 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.820698594 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.934732204 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.815570882 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.773821995 seconds)
  done (took 10.308382591 seconds)
done (took 11.447438434 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.396451311 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.394967504 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268323449 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.397047616 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240942411 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.414826128 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.374687595 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.227805645 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.310308483 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.289627269 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.309085995 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.264076929 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.245081278 seconds)
  done (took 18.269896417 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.540235511 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.521959912 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27304922 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.56733511 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24931985 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.516596571 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.415474029 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.419584774 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.418132586 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.224934883 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222658684 seconds)
  done (took 16.508202683 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.530366056 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.528471839 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277503253 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.523249481 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251252272 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.523706615 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.413063415 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.42675577 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.446941497 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.226315264 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222356648 seconds)
  done (took 16.508773869 seconds)
done (took 52.426282593 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.219396827 seconds)
  done (took 2.358782607 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.255552632 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.421707409 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.237977317 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.226286591 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.219028708 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.222577292 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.227279849 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.221279044 seconds)
  done (took 11.172160571 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.217824679 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.219219451 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.214673145 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.219653038 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.21860698 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.21985074 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.215648097 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.217412981 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.218645097 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.2158481 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.216395032 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.219745812 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.218762463 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.216142677 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.216600613 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.215846474 seconds)
  done (took 20.62208663 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.218403381 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.215683926 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.216881037 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.217024126 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.216146173 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.217465396 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.218341186 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.216643271 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.216445005 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.217135479 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.217064295 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.217441019 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.217503504 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.215650644 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.21734099 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.217557077 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.216642568 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.218323811 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.222646501 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.218018612 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.217879989 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.218188653 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.218174148 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.219314249 seconds)
  done (took 30.364461869 seconds)
done (took 65.65872897 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.852631517 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.959232597 seconds)
  done (took 6.95349498 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.278557722 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.27967643 seconds)
  done (took 3.701728431 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.220531272 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.220819684 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.220912762 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.220953726 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.221327 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.220282694 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.220818718 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.22067858 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.220116262 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.220628439 seconds)
  done (took 13.349701197 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.222090914 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.221099143 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.218872219 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.22184247 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.221804861 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.21858701 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.221207256 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.22111924 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.222274289 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.2191564 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.22134819 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.219868021 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.22182514 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.21861462 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.224381892 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.218665855 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.219512849 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.219076249 seconds)
  done (took 23.114690098 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.236647956 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.243438659 seconds)
  done (took 3.623746464 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.350043182 seconds)
    (2/7) benchmarking "second"...
    done (took 1.260906463 seconds)
    (3/7) benchmarking "month"...
    done (took 1.329577086 seconds)
    (4/7) benchmarking "year"...
    done (took 1.318406997 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.261792482 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.240570971 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.261175731 seconds)
  done (took 10.165964802 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.224126229 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.413631468 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.520028501 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.796613721 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.224495071 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.226632097 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.071876576 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.227100741 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.229722904 seconds)
  done (took 14.078218154 seconds)
done (took 76.132190406 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.252501107 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.217500766 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.523588484 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.222804156 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.250789469 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.564769148 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.245274015 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.346765047 seconds)
done (took 37.771199545 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.219215939 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.212653803 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.018561288 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.228132267 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.331207096 seconds)
  done (took 18.936083751 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.284694465 seconds)
    (2/2) benchmarking "read"...
    done (took 1.553555408 seconds)
  done (took 4.983941678 seconds)
done (took 31.286442142 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224646626 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.224001395 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.221928226 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.221813801 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.224674584 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.221748772 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.222163419 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.226572266 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.224985624 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.224805157 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.224773212 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2256227 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222452852 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222221042 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224586085 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.221943449 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221750619 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.225208423 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.223342819 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222397702 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.225961421 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.225789167 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.221949781 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.222722549 seconds)
  done (took 30.515333782 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.226108888 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.223951918 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.226058213 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.225595303 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.223352123 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.22683099 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.226652755 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.223333852 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.226887504 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.227177592 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223488875 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.224261654 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.22619795 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.224232852 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226873328 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.224429363 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.226572479 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22375373 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226209516 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.223423347 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.226452172 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225510633 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.224463767 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228300249 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.224846439 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224342636 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.228036244 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.224690861 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22701123 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.225667329 seconds)
  done (took 37.912783214 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.232783203 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.2349214 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.227821771 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.227873511 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.227664492 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.228640614 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.227851448 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.227938643 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.227646278 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.228013808 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.227821741 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.22805262 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.228314741 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.228175702 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.228075522 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.228481479 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.228441208 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.227811458 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.228147541 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.228958088 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.229106889 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.230336603 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.228299273 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.22808207 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.228231449 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.229379463 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.229168535 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.228553727 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.227998258 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.22905529 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.228444327 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.229364177 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.229185022 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.229768427 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.229757238 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.228568387 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.233909905 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.236942438 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.230255431 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.23031989 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.228934907 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.229691386 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.229511699 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.229690067 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.230181947 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.229639964 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.229612679 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.229972371 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.23080353 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.230900602 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.231131039 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.230799366 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.231351806 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.230423918 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.23073472 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.231803304 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.231554836 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.231603514 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.231515601 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.23152552 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.230366095 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.231792938 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.230850211 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.231305473 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.231631536 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.231537422 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.231776837 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.232223865 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.231059417 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.232478065 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.23192093 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.231874711 seconds)
  done (took 89.709989933 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.231569751 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.229453395 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.229518244 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.228795035 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228444173 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.231809096 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.229158239 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232075378 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230280563 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.232515867 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231935779 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.230160742 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229683259 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.232481331 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232210859 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.23054294 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.233340022 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230188507 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.232575881 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.23352846 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232801926 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.230141171 seconds)
  done (took 28.237057459 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233065113 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.234757753 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.229810573 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234443712 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.231916447 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.234176539 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.232202509 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.234219077 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239855927 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231295883 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231737776 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233661657 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.232780345 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230602446 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230839371 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.232539428 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234038303 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.23278879 seconds)
  done (took 23.349503592 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.231682978 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.23146173 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.233613467 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.232083455 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.230552625 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233609861 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231646895 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.234335465 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.234544982 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.231466898 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.234801682 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23469819 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.234595837 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231186415 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234421704 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.232649111 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.233854956 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231651563 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235148382 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233101861 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.232786518 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.235837405 seconds)
  done (took 28.284764424 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235608017 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.235205469 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.232444231 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.233208786 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.233493399 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.235835734 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.236545161 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.232380536 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.237838154 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.235951201 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233914223 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.235521442 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.23373632 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.234205194 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.23410684 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234973813 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.23597183 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.23407502 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236130403 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.234591598 seconds)
  done (took 25.853342231 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.237646769 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.237028428 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.23836743 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238343976 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238715025 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.238264762 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237889359 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.238727936 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.237625332 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.238312507 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.23779086 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.237894701 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239081785 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.239091405 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.238646475 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239677791 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.238494613 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.239249282 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.238734605 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239505215 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.24023411 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.239724377 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240316282 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.24009479 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.239296353 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240022334 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238879145 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.239495291 seconds)
  done (took 35.844881572 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239018532 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.237620998 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.23543742 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.236402464 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.236671215 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.69137389 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.236434179 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.23614084 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.239007343 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.23603968 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.239062238 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.239057601 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.238934081 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.239017996 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.239193581 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.23978613 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239310855 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.237420385 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237876951 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2363476 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.239467588 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239925433 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.239202931 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.237954729 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236392233 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.239727973 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238335318 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.238018013 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240780958 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.237226175 seconds)
  done (took 38.757932271 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.258763852 seconds)
    (2/2) benchmarking "in"...
    done (took 1.259700819 seconds)
  done (took 3.67986084 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.238788983 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242669824 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.240450532 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.237912169 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.237976691 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.240306242 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.240969752 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237687971 seconds)
  done (took 11.078004735 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.240556424 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.242184797 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.242061092 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.241547274 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.242206385 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.241166505 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248767805 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.261507344 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.241734457 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.242564617 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.249125655 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.248478454 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.243100111 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24230402 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.241232797 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243772442 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.242588215 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.243368048 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.243229333 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.242732746 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243323584 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244643858 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244429232 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.239327216 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.243581008 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.252672211 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.245811576 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.243507247 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.24286483 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.245680289 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.243158316 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.239842575 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.243391633 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.24365399 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.243377718 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.243865795 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251583339 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26586127 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.248398458 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244103821 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245098595 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.240753128 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.244424658 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.245175442 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.245964715 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.246226287 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.245784435 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.242091838 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.243659559 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.248756961 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.249663337 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243114447 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.241051474 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247037363 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.245170134 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.251665973 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.265371427 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.249546562 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.254931504 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.253886382 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.258803479 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.270268802 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246847872 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.245481596 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256212811 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.269817291 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.251601362 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.26167145 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.243345304 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.24654655 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.251889059 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257333407 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.271856089 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.246145246 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246625197 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.246345391 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246663051 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246529731 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25287289 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.267632693 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.247178779 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247220662 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256915103 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269891334 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.2463571 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.246201666 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.247921441 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.248030364 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.248800641 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257294987 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.267706591 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.247322793 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.247199944 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.24712205 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.247902348 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.248562125 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.246511208 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247669391 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.245209084 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.247651167 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248327907 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252737099 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.257055924 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248564279 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.248227774 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.25406992 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.248940903 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.2471906 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.253481979 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.249191509 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24870834 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.249707911 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.254968877 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.246960253 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253031484 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.2571272 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.249396202 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.250007784 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.249278836 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.250287532 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259902029 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.275888247 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.250029282 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.250361606 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.254368372 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.261089661 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249846429 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.251887094 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.249906084 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.247246363 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.247862848 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.251067741 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.250762849 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.250342426 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249865235 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25155326 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.248203531 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.249817623 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.250443248 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.25128287 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.252008031 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.251569386 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.251384632 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.252897971 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.251819217 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.252302281 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.25756458 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.250893657 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.252374302 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.253394333 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.248726874 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25121865 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.251916236 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.253719174 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.251577036 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25141468 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.251812752 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.251701927 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251769348 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.252560607 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.252505577 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.251704961 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257042298 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.250554939 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.2552638 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.252091341 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.248622608 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.251756822 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.252391014 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.252434004 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.252955079 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.250894446 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.255043466 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.261013601 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.253567417 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.252265402 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.255642649 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253363447 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.253731029 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254051106 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.256524418 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.261583451 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.253425002 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.259320982 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.253288861 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25361173 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.254639285 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.252849814 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.25336949 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.2539638 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.257329409 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.261798836 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265697098 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.279980782 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.254910444 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.25806594 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.255193282 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.25796399 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.257792243 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.254556812 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.255646612 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254915627 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254136798 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254114982 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.255969965 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.254292893 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.253726824 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.255287563 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.254447762 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.254601674 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255498888 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.255042062 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255325548 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.252557784 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.255129738 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255541408 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.255623611 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.251899842 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.25283338 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.254951049 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.255171977 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.255630722 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.259900846 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.252391973 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257360573 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257100173 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.255319619 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.255395046 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.256611146 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258605438 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.257038319 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26210489 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.275930739 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.257222032 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263677023 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.275363522 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.255887884 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.259318222 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.257644392 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.255023046 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.260075757 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.264980101 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.256685122 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.257021004 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.257587139 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257902163 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257919359 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.263067927 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.255433186 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.257701165 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.258915207 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.259007445 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.255137297 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.25931513 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.25820915 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.257180862 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260455964 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.259007434 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.2598757 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259253275 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.258252769 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.258435805 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.257915751 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261730473 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.266582073 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.263191133 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.258223219 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.260497817 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.26029042 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.263872816 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.259283163 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.259369744 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.258375322 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270065592 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.285134477 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26441471 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.260446184 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.259100746 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264273761 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.259543137 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.262669477 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259507301 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259427924 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.259359259 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.259646993 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.25637818 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260376536 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.260220278 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260716288 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.261455893 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.264848451 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.260817181 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.260605779 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.260786966 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.260367134 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.260211312 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.259553508 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.260391768 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.262907826 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261371235 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.259286723 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.260538793 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266741433 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.280254599 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.261114557 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.261609938 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.261304435 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.260447973 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.262710425 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.260094018 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.264520999 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.268961313 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.264961708 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.270715455 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.262564168 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271136526 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.261923688 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.267036187 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.270934524 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.259671407 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.261531917 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.261313678 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.261827668 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269324449 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.281786186 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.263168187 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.267615708 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262976358 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.2636921 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.263354954 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.262959972 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263927805 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.263250056 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.27078051 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.286097897 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.266214707 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264455021 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.25982157 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.263296977 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.263033683 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.262439117 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265424947 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.263480849 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.264272048 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.262738071 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.262861926 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.263287266 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.263365079 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.265092839 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.261223899 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.264021492 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270505436 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.284764786 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268941056 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.264580308 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.269612018 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264499441 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27060287 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.285000259 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.264321924 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.264408183 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.263951255 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.265699535 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.264659892 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.26575708 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.26441238 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.26534022 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.268930461 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.264420313 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.266232736 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.266280758 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.265306492 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.265641911 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274584148 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288924888 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.266546791 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26989295 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.262327212 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.267124466 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.270650407 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.26538953 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.264950805 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.26951398 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.277810878 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275011285 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.265347139 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.266569104 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268075601 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267264004 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.265983421 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.26784484 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.265641033 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.266170894 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.26712392 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.267094551 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269624176 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.266949993 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.266705336 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267260858 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.267817353 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.276441977 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.267317848 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.26742659 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266738084 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.267987961 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.267070377 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.267130452 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.267101061 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267969924 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267402847 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.268385191 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.275461875 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.274960905 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.269169464 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.267063403 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.267849962 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.268289175 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.268306545 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268122554 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.266908552 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268272382 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.269406848 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.268292231 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.269298326 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.267621936 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.268946329 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.268626098 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269334423 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271001876 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.277306963 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268380192 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.265836699 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.268393635 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268581882 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.267288601 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.269358338 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.274248648 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272630891 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.279189701 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.278085754 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.27340555 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.269522435 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272550295 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.277626806 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.268941173 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.270079179 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.27071128 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.27058655 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.270787707 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.273804368 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270891533 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.27593239 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.270305369 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.269058092 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278815922 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.293539766 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.270013311 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.271267493 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.275012898 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.270715808 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.2678949 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.271473721 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.270750457 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276962315 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.28915684 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.270367787 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272966482 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.270143271 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.272891746 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.275609988 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272288703 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.272207319 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.269075961 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.27239222 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271717404 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272381417 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.269554109 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.271602233 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.272074199 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.276065715 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.278957621 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.270676632 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273877348 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.271974611 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.272354229 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272285686 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273947171 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.270598984 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.270076652 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.27299387 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273201287 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.272670299 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.274106007 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.271610326 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.274039657 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.275798587 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273671241 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276136349 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.283963599 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.281771724 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.270634671 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.273044415 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.274246894 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.275788243 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.273040237 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.274238364 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274533619 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.274466038 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.274173458 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.274240544 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.274172248 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.277503894 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.291113155 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.297571037 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273925951 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.274987485 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27825058 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.275545276 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.271248679 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.274936637 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.276402407 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.278377949 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.285492766 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.274918304 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281472914 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.294777287 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.276116917 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.280078607 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.277450898 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.284147608 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.277332938 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276571049 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.276628607 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.280352976 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.29246412 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27632248 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.285713927 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.306745629 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.2955731 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.277306268 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.276339302 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275727248 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.277583199 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.278409454 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.277223732 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.278190016 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.277275072 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.276489229 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.277650091 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.283472971 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.278475802 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.280207277 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.277327062 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.276247687 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.278282204 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.276298838 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.278122224 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.278675926 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.277778161 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.277143614 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.277449453 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.277780405 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.290230408 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.305983193 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.278066495 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.27789085 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.275644304 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.280934964 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.281416741 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28904798 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.286726706 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.277887545 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.278126843 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.280088516 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.27930732 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.277410038 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.27988573 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.277625805 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.279312916 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.277685726 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.291137553 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.306651165 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.282470266 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.279059347 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.279423007 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.280235858 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.280641398 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279718237 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.279946096 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.280218149 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.2824426 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284066914 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.279639276 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.28005832 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.282541585 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.287407841 seconds)
  done (took 754.031532152 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.278024499 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278039219 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277959248 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.277217403 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27808059 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277684778 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277547496 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.2778575 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.27714756 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.277963288 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.278443606 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278917775 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.278614165 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.278504663 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278042707 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.278884448 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279526935 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.278367579 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.2796616 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27992015 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277936173 seconds)
  done (took 28.041236307 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.281665761 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.280119093 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.278724439 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.281937953 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280015391 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.282500237 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.279767968 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281873341 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.281617866 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279486884 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.282190737 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282703732 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.28019996 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.279809848 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280225015 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283259379 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.282840252 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.280240679 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.282471832 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.280388231 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283421363 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.280969694 seconds)
  done (took 29.385518697 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.282130128 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.282462183 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.282277891 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.28098146 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.283823614 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.280587985 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.283248679 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.283931239 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.283544575 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.28390425 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.282133577 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.284695877 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.290792079 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.289044697 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.285294388 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.28475018 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.427725462 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.284096277 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.284369367 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.284224052 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.281321583 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.289944357 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.281553223 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.280853937 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.282464985 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.28443386 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.284517609 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.285498936 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.284243448 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.285148747 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.288999367 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.282985718 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.28318243 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.285212443 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.283342407 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.284662657 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.287786986 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.283817176 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.279960892 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.282743033 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.293055728 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.3047147 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.284311349 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.289813975 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.283711683 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.283654126 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.287007632 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.291705919 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.281783652 seconds)
  done (took 64.308212176 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.285107268 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.283965458 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.281723575 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.284498171 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.285254859 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.284954474 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.285430643 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.284853665 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.283120576 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.283121969 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.285072333 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.283328879 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.282927585 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.284902666 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.286119547 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282993572 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.283407338 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.282527892 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.280688143 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282628241 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.281678589 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.283667594 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.284272828 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.281592761 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.28543091 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281909352 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.281070819 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.285735191 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.281622146 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.281699472 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.284319781 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.283424527 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.284470103 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.2825866 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.281427291 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.283005436 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.283344612 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.281901513 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.284014919 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.282151488 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.284567796 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.282550908 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.281844878 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.28330506 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.280185513 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.279322183 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.279461443 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.279124966 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.282252632 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.283497279 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.283096166 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.281013017 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.282501709 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.27913043 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283084885 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.283413089 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.281183703 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.281063368 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.283382903 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.280005985 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.280814845 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.283174282 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.280539995 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.284705504 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.284482717 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.280957858 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.279889166 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.282517253 seconds)
  done (took 88.430518101 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282928617 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.283134311 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283301328 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282083694 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.282363878 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.284467174 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.283346775 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.283278528 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.283755274 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.282976942 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284307725 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.282880386 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.282128329 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.282851159 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.282663942 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.282559363 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.282896067 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283247509 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.283169045 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283009299 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.282736027 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.283885699 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.283334547 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.283342101 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.283955755 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.283195328 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.283591468 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.283624834 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284443981 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.283778858 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.284819538 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.28385198 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.283681666 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.283539872 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.284527001 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.28359688 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285247544 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282734346 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.282374937 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.284917752 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.285236736 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283665924 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.284391217 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.284473571 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.284608377 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.284599823 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.284717448 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.284791827 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.285282389 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.285027147 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.285345067 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.284009849 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285251973 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.283696306 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.285453048 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.285327373 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284571729 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284916944 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284988476 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.284596555 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.286018494 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.286126002 seconds)
  done (took 80.804581622 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285719281 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.285391797 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.283386615 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.283414435 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.285077298 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.283698706 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.285658113 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.28574072 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.285833267 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.28645567 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286979029 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284875419 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286097109 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288068436 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.284787494 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285538696 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285156747 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.284978542 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287006837 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.285749204 seconds)
  done (took 26.911502785 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.283401345 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.287984632 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.284127336 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.283697559 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.287260138 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.284666875 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.287149247 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287776722 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284648386 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288062303 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.287575929 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.2873345 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285325811 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.285465921 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.288373917 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.286011779 seconds)
  done (took 21.781964671 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.285476104 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.287955413 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.286740284 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.287638807 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.285351177 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.286281045 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.287733834 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.285460059 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.285144957 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.288296991 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.287597813 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.288683329 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.288259773 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.289355787 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.285802943 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.288461586 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.286488947 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.284570125 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.288306752 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.288736446 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.287207963 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.285841305 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.288787516 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.289136135 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.285737417 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.287136711 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.286706413 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.286763999 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.286763381 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.288604422 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.286620238 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.287482636 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.28722061 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.287113371 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.289854001 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.287279497 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.288493079 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.289135936 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.29007216 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.289783013 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.289880139 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.289759145 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.29070421 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.29066802 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.287372765 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.290024987 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.287473665 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.287946636 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.287255538 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.288625367 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.289822644 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.291466651 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.291303332 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.290537066 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.29120613 seconds)
  done (took 72.047978677 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291749128 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.291465366 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.28903574 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.292120868 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.2910732 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.288646589 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.292140046 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.290960767 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.289084609 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.294021093 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291110312 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.292398274 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.29104758 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293110323 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.290539291 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293472256 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.289648885 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.291017929 seconds)
  done (took 24.450438384 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.290357281 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.290730368 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.292710627 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.291265078 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.290522023 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.297288168 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.292668142 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.294468607 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294208 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.29206743 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292514688 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.297110846 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29590173 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.297737007 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294475372 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294239907 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.297700381 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295652188 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.292650485 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2922593 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.297734503 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.296888063 seconds)
  done (took 29.680932334 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.296014494 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.295190243 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.2952129 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.313760594 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.315149422 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.319180868 seconds)
  done (took 9.048270939 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303624819 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2966678 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293762458 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297026716 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297475565 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294395085 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296688296 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296105393 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298394045 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29764088 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294767292 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299801293 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297063109 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295425599 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297030866 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299898419 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294768504 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295088874 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295825372 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297062928 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29515584 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29769153 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295996818 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295857932 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296761069 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295855986 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297864941 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295459798 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295105532 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298038635 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298687687 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296322529 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299705623 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294337505 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296823244 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297491605 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297365799 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299598197 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299191815 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296828961 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.297894907 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298245889 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298099692 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296084709 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29981086 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296779113 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296212781 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295795114 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295698973 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299099937 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299112528 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296299885 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297410311 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29849692 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298654326 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300484458 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296488322 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296734825 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29903037 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297233944 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296277799 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298700311 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296758026 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296589604 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298730599 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297889495 seconds)
  done (took 86.857875437 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296878723 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299666996 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296365271 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297292755 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297384044 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297088956 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298187969 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297173149 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298097736 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296938379 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301027685 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2976999 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297797509 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29752954 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296918508 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297136217 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299024499 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299658057 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29659098 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302573822 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298467502 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299048918 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297043822 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297239746 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299298864 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29983663 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298620528 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297695083 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298880458 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29769833 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297965726 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299304474 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297987434 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.299605731 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300658234 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298951187 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298221834 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298599789 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298975263 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301808422 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304277169 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303673325 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301651973 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300259953 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301868987 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301010451 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300572449 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302568318 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300461996 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298562571 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3013073 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29897473 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299451966 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30033615 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300691869 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299620865 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302193869 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300213436 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300900732 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302249069 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301459786 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299950557 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304022189 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301623447 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302654978 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302985576 seconds)
  done (took 86.991464546 seconds)
done (took 1757.142693921 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.462691033 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.418725066 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.30478833 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.32677917 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.30324946 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.314746987 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.305306476 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.299902234 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.301469509 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.300024319 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.303648719 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.493484378 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.358317618 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.299169182 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.300465752 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.395086137 seconds)
  done (took 42.711166041 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.330380208 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.303378405 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.420209184 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.327640386 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.330424976 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.493561983 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.36227151 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.311333793 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.478569447 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.351066134 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.865924111 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.32592958 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.309628299 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.420652311 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.31948892 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.493854899 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.561916427 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.927289298 seconds)
  done (took 30.150409993 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.764093498 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.306713893 seconds)
  done (took 9.2915817 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.319314654 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.304553664 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.301508872 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.29897476 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.292406644 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.296806465 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.298800683 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.297879116 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.013682889 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.434651362 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.307439363 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.312471531 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.320015509 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.301174023 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.298128276 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.336700975 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.453874663 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.298167674 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.298918916 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.306958837 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.301045513 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.392779623 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.341151721 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.298659652 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.427277497 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.017181902 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.307747717 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.308793278 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.434847058 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.298838655 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.300888427 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.301408357 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.303754877 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.195213858 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.818366368 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.30129674 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.327053945 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.309154415 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.299683743 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.44876405 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.303712672 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.308064191 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.293807129 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.811302318 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.437906927 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.419514292 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.59497001 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.30812245 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.304085097 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.362814289 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.303055952 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.30357339 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.34627298 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.136336055 seconds)
  done (took 110.287303354 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.335395977 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.684065828 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.463644322 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.324978423 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.985461842 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.891932771 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.319602865 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.591667673 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.337243768 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.295176314 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.585653094 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.80971024 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.324085437 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.357221267 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.482535795 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.314415919 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.297432627 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.093326204 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.317409461 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.295316437 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.7991529 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.30158958 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.301043413 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.464073371 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.333444249 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.768847649 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.710703883 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.690918831 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.319090126 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.295177512 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.766438437 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.317889708 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.364769931 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.298224582 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.566819888 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.671340317 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.651298212 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.303622997 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.322899662 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.298640523 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.294061638 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.757338745 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.655742283 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.302533676 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.301826071 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.782112348 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.303161385 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.300668131 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.29661636 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.496409433 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.919212124 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.30168605 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.716186548 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.302560461 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.568965324 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.379349791 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.308154657 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.793362706 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303256422 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.330279865 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.340230257 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.299047384 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.304833735 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30058644 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.298903435 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.657123603 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.484257136 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.302908794 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.654913772 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.766334102 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.334195367 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.824365703 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.106725903 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.322501198 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.366066415 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.299327983 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.875177805 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.805863049 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.327605117 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.297559961 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.634016859 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.304408209 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.588578845 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.334753067 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.307093263 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817031974 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.308281787 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.300612285 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.304995559 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.305792993 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.972309314 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.307865391 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.575949858 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.339120147 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.29912886 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.299370187 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.336698191 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.301750124 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.304449709 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.302973839 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.818620887 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.320436015 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.415257224 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.32258546 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306771039 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.302865505 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.298263156 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.297552663 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.514237634 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.871751412 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.323613478 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.29856423 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.297675374 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.304330198 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.476115166 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.303032554 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.606972269 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.305253748 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313568375 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.303412851 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.914979427 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.3265097 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298992851 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.305533528 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.21104597 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.504556906 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.322154838 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.305319127 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.313236421 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.299805398 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.562993411 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.322485038 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.357486475 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.302013824 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.984952344 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.355679555 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.316930248 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.563811652 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.305942554 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.210714435 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.320249277 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.2995567 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.586784035 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.565104615 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.508598619 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.296543208 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.31457548 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.976975541 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.33574944 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.443102725 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.321398885 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.338633579 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.4946475 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.477217724 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.299356115 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.886823162 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.300000989 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.506402607 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.297439443 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.595626326 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.773461308 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.318968399 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.298197026 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.98774826 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.025589927 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.981457765 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.298293504 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.570767945 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.248203978 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.776683684 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.298869996 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.29836065 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.789669127 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.30014229 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.298202876 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.299115723 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.29885843 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.451608546 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.46906032 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.459210091 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.299634928 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.740017266 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.372339325 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.2984153 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.327073179 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.301728604 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.647487441 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.299575389 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.301433287 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.300064946 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.298363429 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.297901527 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.759250616 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.100058507 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.307955518 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.448818527 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.909471739 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.318875229 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.298499501 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.016876636 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.978403348 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.795350523 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.364145619 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.591349205 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.31230183 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.33426784 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.930792729 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.377895598 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.757394274 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.308568846 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.304860049 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.87568446 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.321248044 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.398600492 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.299020732 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.301020662 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.818810362 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.32005197 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.30154491 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.503675558 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.322855163 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.558162293 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.299796388 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.346144426 seconds)
  done (took 1102.364713008 seconds)
done (took 1296.027814452 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.301262529 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.300527903 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.29266473 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.305180544 seconds)
  done (took 26.42033134 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.318412169 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.306057172 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.307568573 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.305883277 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.309223604 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.306456543 seconds)
  done (took 9.077396322 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.365880541 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.302878838 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.307373595 seconds)
  done (took 19.197259508 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.498652116 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.538670302 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.619175361 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.361200779 seconds)
  done (took 10.23960355 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.308079974 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.306207272 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.307384602 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.311177646 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.320268752 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.320214474 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.310703706 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.310593847 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.319535519 seconds)
  done (took 13.037661172 seconds)
done (took 79.193506368 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.410111688 seconds)
    (2/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.365045667 seconds)
    (3/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.385808435 seconds)
    (4/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.662854532 seconds)
    (5/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.314977527 seconds)
    (6/286) benchmarking ("sort", Float64, true)...
    done (took 6.300548558 seconds)
    (7/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.293023545 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.578481954 seconds)
    (9/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.348154801 seconds)
    (10/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.055407482 seconds)
    (11/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.832005879 seconds)
    (12/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.449720668 seconds)
    (13/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.303122658 seconds)
    (14/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.434090404 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.343744587 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.136699032 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.334394393 seconds)
    (18/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.30463259 seconds)
    (19/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.46043506 seconds)
    (20/286) benchmarking ("sort", Float64, false)...
    done (took 5.541410406 seconds)
    (21/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.289086404 seconds)
    (22/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.290735237 seconds)
    (23/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.585180315 seconds)
    (24/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.890176931 seconds)
    (25/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.494441374 seconds)
    (26/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.395360278 seconds)
    (27/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.296853269 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.195601518 seconds)
    (29/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.391782558 seconds)
    (30/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.795903044 seconds)
    (31/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.435987324 seconds)
    (32/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.410387233 seconds)
    (33/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.328980945 seconds)
    (34/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.557299353 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 6.303700051 seconds)
    (36/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.054767486 seconds)
    (37/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.324696738 seconds)
    (38/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.41278917 seconds)
    (39/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.321116068 seconds)
    (40/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.295696894 seconds)
    (41/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.008787661 seconds)
    (42/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.420928719 seconds)
    (43/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.551170961 seconds)
    (44/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.58371161 seconds)
    (45/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.143399373 seconds)
    (46/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.67968108 seconds)
    (47/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.338948761 seconds)
    (48/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.332723464 seconds)
    (49/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.304728998 seconds)
    (50/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.33003299 seconds)
    (51/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.291357944 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.482868515 seconds)
    (53/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.325252307 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.574498384 seconds)
    (55/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.362423428 seconds)
    (56/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.290968231 seconds)
    (57/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.29635113 seconds)
    (58/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.009264068 seconds)
    (59/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.336020256 seconds)
    (60/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.410979241 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.362695913 seconds)
    (62/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.289825736 seconds)
    (63/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.333336998 seconds)
    (64/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.37201824 seconds)
    (65/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.14115838 seconds)
    (66/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.138884421 seconds)
    (67/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.800660505 seconds)
    (68/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.630172735 seconds)
    (69/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.338451458 seconds)
    (70/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.331179089 seconds)
    (71/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.364445933 seconds)
    (72/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.556338383 seconds)
    (73/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.298374996 seconds)
    (74/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.38852475 seconds)
    (75/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.301210253 seconds)
    (76/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.302958956 seconds)
    (77/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.816163033 seconds)
    (78/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.529647469 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.924123924 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.198645679 seconds)
    (81/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.366044911 seconds)
    (82/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.679959695 seconds)
    (83/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.655440332 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 5.477133278 seconds)
    (85/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.410810258 seconds)
    (86/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.527202169 seconds)
    (87/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.993097087 seconds)
    (88/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.388143117 seconds)
    (89/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.293353353 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.201827645 seconds)
    (91/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.294861403 seconds)
    (92/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.64392082 seconds)
    (93/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.433659454 seconds)
    (94/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.671979465 seconds)
    (95/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.364452327 seconds)
    (96/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.124418501 seconds)
    (97/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.699273858 seconds)
    (98/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.403951089 seconds)
    (99/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.623070329 seconds)
    (100/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.325924277 seconds)
    (101/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.319048375 seconds)
    (102/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.335123197 seconds)
    (103/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.249622797 seconds)
    (104/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.489996485 seconds)
    (105/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.325555334 seconds)
    (106/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.306247722 seconds)
    (107/286) benchmarking ("sort", Int8, true)...
    done (took 6.311271203 seconds)
    (108/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.728598811 seconds)
    (109/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.411395538 seconds)
    (110/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.821051758 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.518740031 seconds)
    (112/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.318725281 seconds)
    (113/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.293422939 seconds)
    (114/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.334528997 seconds)
    (115/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.766741676 seconds)
    (116/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.293994246 seconds)
    (117/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.193342939 seconds)
    (118/286) benchmarking ("sort", Float32, false)...
    done (took 5.307747927 seconds)
    (119/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.327931581 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.935770247 seconds)
    (121/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.295475122 seconds)
    (122/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.295268647 seconds)
    (123/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.946426139 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.194520252 seconds)
    (125/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.325952918 seconds)
    (126/286) benchmarking ("sort", Bool, false)...
    done (took 1.822666799 seconds)
    (127/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.337147181 seconds)
    (128/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.394093822 seconds)
    (129/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.57555382 seconds)
    (130/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.295754952 seconds)
    (131/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.394877017 seconds)
    (132/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.129501642 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.033238026 seconds)
    (134/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.587242752 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.711541222 seconds)
    (136/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.317560556 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.418344508 seconds)
    (138/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.391489902 seconds)
    (139/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.547987104 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.048041607 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.336413796 seconds)
    (142/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.310204845 seconds)
    (143/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.134315611 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.926033604 seconds)
    (145/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.008957741 seconds)
    (146/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.340195597 seconds)
    (147/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.298783748 seconds)
    (148/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.49589023 seconds)
    (149/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.712221794 seconds)
    (150/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.322214354 seconds)
    (151/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.523203216 seconds)
    (152/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.764284854 seconds)
    (153/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.336896759 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.715499263 seconds)
    (155/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.35501044 seconds)
    (156/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.433842336 seconds)
    (157/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.273155776 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.72184946 seconds)
    (159/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.835989773 seconds)
    (160/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.889459685 seconds)
    (161/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.822400141 seconds)
    (162/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.40273985 seconds)
    (163/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.311218317 seconds)
    (164/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.315148225 seconds)
    (165/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.663996627 seconds)
    (166/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.321453908 seconds)
    (167/286) benchmarking ("sort", BigInt, true)...
    done (took 6.309913652 seconds)
    (168/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.080414766 seconds)
    (169/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.311794288 seconds)
    (170/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.336821831 seconds)
    (171/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.271367674 seconds)
    (172/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.299777153 seconds)
    (173/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.307788621 seconds)
    (174/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.374439689 seconds)
    (175/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.298959776 seconds)
    (176/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.31364891 seconds)
    (177/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.305001412 seconds)
    (178/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.723474379 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.339720956 seconds)
    (180/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.50879803 seconds)
    (181/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.297516987 seconds)
    (182/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.918713993 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.355992428 seconds)
    (184/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.410967626 seconds)
    (185/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.746287524 seconds)
    (186/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.311855618 seconds)
    (187/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.503451096 seconds)
    (188/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.345753866 seconds)
    (189/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.397752282 seconds)
    (190/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.330444853 seconds)
    (191/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.13626669 seconds)
    (192/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.279923537 seconds)
    (193/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.301559415 seconds)
    (194/286) benchmarking ("sort", Bool, true)...
    done (took 5.343796616 seconds)
    (195/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.385023055 seconds)
    (196/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.13321414 seconds)
    (197/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.318295325 seconds)
    (198/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.44777131 seconds)
    (199/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.355958067 seconds)
    (200/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.466650848 seconds)
    (201/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.354031526 seconds)
    (202/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.48453086 seconds)
    (203/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.047043624 seconds)
    (204/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.841328701 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.878301901 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.531871457 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.313406129 seconds)
    (208/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.156785244 seconds)
    (209/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.300545721 seconds)
    (210/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.307154446 seconds)
    (211/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.319517683 seconds)
    (212/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.103281047 seconds)
    (213/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.312685207 seconds)
    (214/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.685526674 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.34394835 seconds)
    (216/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.340655385 seconds)
    (217/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.314532915 seconds)
    (218/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.191875856 seconds)
    (219/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.097480793 seconds)
    (220/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.362621116 seconds)
    (221/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.55286334 seconds)
    (222/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.73561525 seconds)
    (223/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.311676627 seconds)
    (224/286) benchmarking ("sort", BigInt, false)...
    done (took 6.317179641 seconds)
    (225/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.844835717 seconds)
    (226/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.154074784 seconds)
    (227/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.665846654 seconds)
    (228/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.931852007 seconds)
    (229/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.317275597 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.734662149 seconds)
    (231/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.331479575 seconds)
    (232/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.315210336 seconds)
    (233/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.085405888 seconds)
    (234/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.521795902 seconds)
    (235/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.540602633 seconds)
    (236/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.052794183 seconds)
    (237/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.343034729 seconds)
    (238/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.547913032 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.861441652 seconds)
    (240/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.156287139 seconds)
    (241/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.667445352 seconds)
    (242/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.342548888 seconds)
    (243/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.767489251 seconds)
    (244/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.603265128 seconds)
    (245/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.399190895 seconds)
    (246/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.303487148 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.709925068 seconds)
    (248/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.344206114 seconds)
    (249/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.556411695 seconds)
    (250/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.350234871 seconds)
    (251/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.430040276 seconds)
    (252/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.318722156 seconds)
    (253/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.304909938 seconds)
    (254/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.318448129 seconds)
    (255/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.328614721 seconds)
    (256/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.303835625 seconds)
    (257/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.667828387 seconds)
    (258/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.332672591 seconds)
    (259/286) benchmarking ("sort", Float32, true)...
    done (took 6.318655668 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.928910808 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.400991271 seconds)
    (262/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.441238318 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.401461176 seconds)
    (264/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.66574244 seconds)
    (265/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.333474963 seconds)
    (266/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.442156323 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.428131758 seconds)
    (268/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.33138085 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.173059353 seconds)
    (270/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.665377552 seconds)
    (271/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.321006581 seconds)
    (272/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.362653239 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.360365143 seconds)
    (274/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.304165271 seconds)
    (275/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.44332804 seconds)
    (276/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.976642009 seconds)
    (277/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.054275079 seconds)
    (278/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.311764985 seconds)
    (279/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.311186766 seconds)
    (280/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.425866354 seconds)
    (281/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.308305104 seconds)
    (282/286) benchmarking ("sort", Int8, false)...
    done (took 4.406091942 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.348722687 seconds)
    (284/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.32979375 seconds)
    (285/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.308906382 seconds)
    (286/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.537504771 seconds)
  done (took 930.337367307 seconds)
done (took 931.562409999 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.351828451 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.354709562 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.330712672 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.35268011 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.449816907 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.507688682 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.341230904 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.333181962 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.378295206 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.380608375 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.336472139 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.505594593 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.338766111 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.337415659 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.330802826 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.353211979 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.345008214 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.339069311 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.356025101 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.339712941 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.354417327 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.336492829 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.380626603 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.505849709 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.335521682 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.334014329 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.340216587 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.357272832 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.449198409 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.341836848 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.334534845 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.349197519 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.349764669 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.336584574 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.32659956 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.357782136 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.349646397 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.342782249 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.335607873 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.370332328 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.754752938 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.345118811 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.341120127 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.33332017 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.334206561 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.335538239 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.339643932 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.338569249 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.354427324 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.354476198 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.765432913 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.360905671 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.343297603 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.334383357 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.345751905 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.338707939 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.338040777 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.357560021 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.358893307 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359247334 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.356825748 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.344798923 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.33598804 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.357212724 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.350196833 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.818130049 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.336896908 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.337567483 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.765674141 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.344779244 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.814605683 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.356740496 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.336377757 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.355941195 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.373619016 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.371294514 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.336184369 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.336743497 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.349691302 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.340565569 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.348272709 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.356254904 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.340106077 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.336671112 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359257359 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.510349862 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.346291945 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.343206787 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.344533148 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.361115275 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.35032451 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.353041908 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.339855158 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.331534777 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.345217936 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.339475667 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.346871536 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.346015387 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.341143494 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.346668399 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.762785754 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368535618 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.335663431 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.334206029 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.3370704 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.357096243 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.763720994 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.35087784 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.360835057 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.384060923 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.340543434 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.363495308 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.3537939 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362399456 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.346716769 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.340853043 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.332772889 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.366259426 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.77792621 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.367084829 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.340037992 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.344738356 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364563769 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.340287105 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.336969842 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.375399719 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.345875879 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360836041 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.466961779 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.348495929 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.376450907 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.343468087 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.341700242 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.372251002 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362955509 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.378370155 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.343690357 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364152297 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.361982274 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.335887025 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.355994578 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.350156983 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.341044756 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.346849005 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.332906806 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.374149367 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.358933763 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.360938829 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.361889443 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.46705593 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.337638335 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.351583382 seconds)
done (took 226.790877523 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.399597287 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.328742435 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.429541422 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.335172033 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.43577311 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.434390316 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.333107235 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.335317478 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.333403322 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.720135504 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.334281562 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.334425488 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.330163303 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.333358396 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.418786723 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.337318866 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.334437625 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.680358031 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.338754756 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.408103635 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.337221729 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.335493411 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.336643826 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.717879729 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.332576071 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.335746401 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.413192179 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.338187773 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.684222736 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.335923674 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.334268638 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.683354116 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.435425552 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.356517552 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.34918873 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.344079979 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.437964681 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.356558114 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.419385291 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.420900425 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.437568938 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.376765715 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.336635106 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.333325254 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.340070489 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.339614819 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.336354764 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.365001425 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.337341639 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.337245139 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.685430719 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.349502306 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.33709252 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.336812171 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.337486821 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.368902785 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.33833804 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.34119835 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.429953569 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.339886106 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.407597372 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.722917764 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.767481427 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.339391561 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.339696843 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.337071101 seconds)
  done (took 148.808977225 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.407119431 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.413988216 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.452026008 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.344473539 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.390894004 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.457067788 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.347017207 seconds)
  done (took 11.063040607 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.346026282 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.341257555 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.390238321 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.391847954 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.340961228 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.519883459 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.34107272 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.352493339 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.339394952 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.393469362 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.344976843 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.342542184 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.34976349 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.335011711 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.391159909 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.353183101 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.456985612 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.342526407 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.343943752 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.505559596 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.340343968 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.350503017 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.395471489 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.354621195 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.344913142 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.348628349 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.175708736 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.343336079 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.339896379 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.343478424 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.340401334 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.422980653 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.344988824 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.343348257 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.340798304 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.457718207 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.342753238 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.341007795 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.343773617 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.340423138 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.34364276 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.344465963 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.343430442 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.340988509 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.34390201 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.366212525 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.343079002 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.345536306 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.343179406 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.343906307 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.395030185 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.345399174 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.342211272 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.340830576 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.397215071 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.352089161 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.345484988 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.341688363 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.344817525 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.342633183 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.506518718 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.393957244 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.344297567 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.392192011 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345331431 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.34834474 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.346002148 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.344657385 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.39969834 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.345259335 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.393792876 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.343477043 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.524708747 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.368217721 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.348272914 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.349320133 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.348729339 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.34844192 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.342983759 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.353249545 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.343609721 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.347919553 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.353591371 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.345106427 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.343905468 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.518158298 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.451601819 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.344595935 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.359898815 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.352795789 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.34407658 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.400259158 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.346610608 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.343792983 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.398973949 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.462964735 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.39916019 seconds)
  done (took 154.682342861 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.352147982 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.354703512 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.352345923 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.369259388 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.348476172 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.347236814 seconds)
  done (took 9.382648451 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.348499521 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.349365564 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.348937713 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.346297699 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.347329203 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.351533905 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.348180207 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.349434795 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.352772033 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.348415808 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.350038605 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.35361998 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.350998511 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.347876907 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.348332391 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.349624423 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.348258849 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.345549672 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.34821816 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.349256915 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.445405638 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.34764677 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.348234084 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.350312294 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.353056148 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.349803857 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.357032307 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.348442581 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.349705552 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.355705696 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.368332708 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.352242218 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.3514031 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.355857939 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.354201946 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.351288877 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.353859005 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.3542256 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.349230531 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.352123091 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.35929179 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.352989136 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.352720495 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.356872859 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.354101146 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.357021809 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.36116377 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.361480482 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.354128977 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.357840095 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.356399787 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.351185782 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.355272723 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.357151499 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.353776017 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37253302 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.362048603 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.35188368 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.352997951 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.353062589 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.353826517 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.353428 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.353548937 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.356418685 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.35963215 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.357454966 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.352015534 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.356275272 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.351495168 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.351774307 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.359096894 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.351173974 seconds)
  done (took 99.781626208 seconds)
done (took 424.969909683 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.659207856 seconds)
  done (took 7.922703404 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.448456841 seconds)
  done (took 7.714176863 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.508498651 seconds)
  done (took 21.779816689 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.391943099 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.477263067 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.39231488 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.347476724 seconds)
  done (took 26.873209249 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.824884856 seconds)
  done (took 8.087864963 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.345909142 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.352018977 seconds)
  done (took 13.962316387 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.96684822 seconds)
  done (took 8.230576634 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.36372984 seconds)
  done (took 7.634544747 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.367418902 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.371254474 seconds)
  done (took 14.017007869 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.3332964 seconds)
  done (took 7.598734447 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.436514088 seconds)
  done (took 11.706880582 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.361958285 seconds)
  done (took 7.629028523 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.423432806 seconds)
  done (took 7.688687434 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.229675076 seconds)
  done (took 9.492969158 seconds)
done (took 161.604071938 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.348038738 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.34905369 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.34912739 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.348038585 seconds)
  done (took 26.658816178 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.388949476 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.388721043 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.389466669 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.399592407 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.392785116 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.389029759 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.381035185 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.380050781 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.399157013 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.393319643 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.391022648 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.390124742 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.39053595 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.381808529 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.391558021 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.390441634 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.400793223 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.391065594 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.382308181 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.391076727 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.35618819 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.401146336 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.393926961 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.356790194 seconds)
  done (took 34.575949074 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.875667525 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.42680319 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.510405738 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.407889364 seconds)
  done (took 7.486769968 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.410742334 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.408798529 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.42270528 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.459494121 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.491941938 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.421213234 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.380721727 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.378360532 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.363273824 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.409053199 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.484748898 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.427281094 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.50332078 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.35631394 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.550119023 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.358267953 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.356424861 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.410026912 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.462333388 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.485708264 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.359270257 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.410085409 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.413122844 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.427123252 seconds)
  done (took 35.417363385 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.35750499 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.376728441 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.358624252 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.356010409 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.367856471 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.357431239 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.358623042 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.359199046 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.357796853 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.363838124 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.355838612 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.369853787 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.358208217 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.356773832 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.363728655 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.358009828 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.364671932 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.35630526 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.357758855 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.363852829 seconds)
  done (took 28.48853154 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.350908044 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.275939937 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.702801561 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.608286477 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.352629016 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.35249584 seconds)
  done (took 28.912520222 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.425382803 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.56614858 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.362453128 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.710037377 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.793134255 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.367870972 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.36095925 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.597927764 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.917212776 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.899884115 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.423404652 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.434190325 seconds)
  done (took 20.133700341 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.353757642 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.361441614 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.373375265 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.377445528 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.413078348 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.369787266 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.367924556 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.353729214 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.421981763 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.424353698 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.371010486 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.41557472 seconds)
  done (took 37.878463658 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441352162 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401230775 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.709211252 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396386061 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.077269047 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567579599 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.43015465 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.823489654 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.379054435 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630325481 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355159227 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46973095 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.612005036 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363418082 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363265082 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.350209876 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581474282 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810908342 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357843213 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.400514585 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388981342 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.367926811 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.478563885 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.589259144 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.579261014 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.335513802 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.618389082 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.136654453 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641847116 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.377792955 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367945477 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358164494 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632957187 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.069680163 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456885094 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.569377007 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367560614 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.920954407 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.369144297 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.395312746 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379644251 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36645933 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370575157 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356864864 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.293056942 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371005169 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.14361283 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.36375806 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.069972682 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358519047 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620597113 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460770673 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.364533436 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.931166209 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42752579 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.366452458 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.36210645 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451613759 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931415139 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.73342104 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361599653 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.317534723 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370567613 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.386854592 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960437059 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.365785511 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.363250775 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.365945115 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293940132 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.378271185 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376814471 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508109044 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.386799378 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.010393832 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031245477 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.366138231 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.290207321 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877621851 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366675579 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.304156036 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588959602 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.136588916 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.296393498 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.30600112 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.295802273 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029593935 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370255888 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.888487999 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381340508 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.831926067 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.593855928 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387802581 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385960108 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.58448574 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.246950703 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361689888 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.367173318 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488675428 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38441812 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.834804485 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316874501 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.366046441 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617369308 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.574084568 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376237484 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.386964395 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.182284661 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377297288 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.388900433 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.370497406 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.583401495 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.93674037 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.379095539 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.657136705 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379811793 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.138301409 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091076269 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377138885 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.373568421 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.364800126 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638255078 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.127998698 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.262540184 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43248067 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368718616 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.364338085 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.408346125 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.21500726 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.246518888 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.565785344 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39439617 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.380696652 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.36594732 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309629489 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.361790677 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393673008 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.143009836 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.589291724 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366654643 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647041762 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298772448 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512661826 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.376344423 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.587676552 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.556339454 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.371066399 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624937439 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365347144 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.371643085 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384132329 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384909356 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466391114 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387559717 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.375225648 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.629277784 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.370806657 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.370657746 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.414301358 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.145354524 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366944975 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.372301277 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385640266 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.935303516 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343030695 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.375291201 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.255760629 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.379510172 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436977182 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.371877615 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.579605911 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.570127224 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379518464 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.373269094 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.372533301 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590173233 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.377664922 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.408596911 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445049095 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.850396365 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.964605846 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380671993 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.302749162 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.079216045 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.060540628 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367752957 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.567773242 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.368399706 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.579897087 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389631597 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388450776 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.940399701 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371350991 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.429270336 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.379365258 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.379629231 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.64671534 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368595487 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.578947219 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.701841467 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38186819 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.386391824 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51460654 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.381944336 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.304136159 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.887219495 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375126871 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369484383 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.143891443 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405111291 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.436926368 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.330062361 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656710755 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371802701 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62502689 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.499908593 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.401788305 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.372173254 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370691061 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387898003 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.397044995 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377066549 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.380466789 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.419825844 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.808025935 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939387772 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0817141 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885931754 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.689089813 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.385785654 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.271525657 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.848406346 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326327068 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.028141481 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607308475 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.862030088 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338842829 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263983051 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.568450614 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.130084576 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635406484 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605480577 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.683863224 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.376629703 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638409554 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587940205 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4072884 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.383697466 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.307572779 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.675383855 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.415617247 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38114835 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459987492 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.180849407 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386144508 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.156282296 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.436338936 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.719625792 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.066581128 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.924886765 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.760163914 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.384423342 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388814469 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.329941342 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.406813121 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.898500403 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978698585 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390466727 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.856325616 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.330173684 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.586439368 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.391752023 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.377503471 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.899394289 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.376223245 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.62681197 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632014333 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316358183 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373519498 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89710625 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.234128481 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.379647924 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375329924 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087544924 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393397858 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663565582 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.381479879 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.594100363 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38473757 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.307296421 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307971754 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.06759449 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38250953 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350960919 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836462484 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.387499921 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389424132 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387543921 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.225876773 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.630608272 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.388219457 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.946968594 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.606429408 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387504266 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405714456 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.37799116 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375364406 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.370460736 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.268518056 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.611188149 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.442427032 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.598321955 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.753387667 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.287611992 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.406756811 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.585831884 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.258555733 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.376709199 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624646415 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.09341384 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.384475107 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067430498 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403649884 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.375997676 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.393267903 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.3793185 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397821258 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447260764 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591095226 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.395450686 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.387496175 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.069283735 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383135898 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385814281 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.391545466 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471416151 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.734252935 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.603668965 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.157839756 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956049407 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10690209 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.965717506 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638075709 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.386394244 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385115213 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312220539 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527343743 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.904648593 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651827713 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507562086 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.37851286 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418853519 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382243548 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394335904 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596905849 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654139642 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.248903695 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39096609 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.043009285 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.260965136 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.388569235 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.589850562 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847222231 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909561383 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500387147 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.394455481 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.865507889 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673200424 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.470821033 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38106822 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.96997529 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.400833132 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.734246831 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.388620502 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380472237 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532934431 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638396008 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.096263252 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.394444523 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.537057718 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.154063769 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.474006648 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.641837573 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.816442428 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.595347397 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963379965 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.076217706 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648307611 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45094294 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594858063 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.492627471 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529285662 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.386425147 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.270605176 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383059349 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224098098 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.092273149 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.391516554 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965145117 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647523165 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.386327539 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.384195285 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409958773 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.392072454 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.607028283 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061655877 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608329582 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392784719 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391094163 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.952575263 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962579156 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646581983 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325279148 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.387792621 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.606662795 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.626680877 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408796002 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.837844041 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.094884248 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910605767 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.355910602 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404602753 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392378554 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.087609293 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965442827 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.614804391 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856620312 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.045924491 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388263863 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661395528 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.388330056 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.395237633 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667216526 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.387702119 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.384643243 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606340482 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.965779066 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151722407 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.398926724 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.503026348 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.32548253 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.60963531 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403547542 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320220321 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384300286 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.790547803 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410191088 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513308975 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395579652 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.389469577 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391447434 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.148000607 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668734274 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.390601069 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.38538887 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.379082364 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.401862512 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48535302 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367069468 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390997588 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.059640001 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.73574936 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.640953807 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.398185118 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.379289219 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.390397872 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386612467 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.102800919 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.356229696 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40284726 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915057611 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.400270032 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.404075715 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390228149 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.601448597 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598555588 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.387435837 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609697522 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405922805 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407589274 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.294008667 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.154381327 seconds)
  done (took 1686.41961886 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.408116563 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.404409428 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.404725688 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.411261386 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.440779122 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.481115866 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.456645364 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.510526613 seconds)
  done (took 52.818061584 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.391249079 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.547968927 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.418486672 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.386766572 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.403087972 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.390186988 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.847226875 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.389218498 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.39674833 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.396808604 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.394194762 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.39928746 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.021964787 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.396196406 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.391301209 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.393985871 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.403022706 seconds)
  done (took 66.277606277 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.45956231 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.742583156 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.307678923 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.468813957 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.433816972 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.400205797 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.972742431 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.407197516 seconds)
  done (took 59.495523035 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.406623523 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.405387621 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.407106617 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.405880548 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.40475217 seconds)
  done (took 8.332746259 seconds)
done (took 2094.168904601 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.391815178 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.396391624 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.393662779 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.397171218 seconds)
  done (took 6.882560368 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.375983718 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.109064187 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.377094567 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.396065863 seconds)
  done (took 18.561589271 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.40397535 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.416834866 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.095719858 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.039833479 seconds)
  done (took 5.439388743 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.140149832 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.151823494 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.13718513 seconds)
  done (took 7.732953643 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.387350927 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.398690835 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.394567618 seconds)
  done (took 20.483567159 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.685599855 seconds)
  done (took 2.990366984 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.539208811 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.586616605 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.707440761 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.712092046 seconds)
  done (took 7.852421605 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.785626886 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.787783797 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.582157169 seconds)
  done (took 6.458531567 seconds)
done (took 90.527455871 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.178736545 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.638434214 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.597304002 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.151655481 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.621790277 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.598661676 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.812973931 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.120583126 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.734773464 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.655985811 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.153773329 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.624775753 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.549919327 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.64007699 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.552049274 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.395902981 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.792441869 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.22760067 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.880438305 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.042479941 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.81595224 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.795846609 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.98980512 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.882255946 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.794404914 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.548095421 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.372689988 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.394652695 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.052112125 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.468934076 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.554826962 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.213682255 seconds)
  done (took 194.158651045 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.391174699 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.407625576 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.408864993 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.411178185 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.393375957 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.414322069 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.394171075 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.393233114 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.409031383 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.396751005 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.39315013 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.400537375 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.394136438 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.403898498 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.394762316 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.393086661 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.417857731 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.414528543 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.393997265 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.39405196 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.393534042 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.392957232 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.393847474 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.393983313 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.417407507 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.393101249 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.396155182 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.394548938 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.393911724 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.394324141 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.40270344 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.401196038 seconds)
  done (took 206.094787502 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.394894345 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.393378645 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.394852571 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.405671999 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.405234375 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.403128248 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.413036451 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.394857183 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.405628091 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.403311655 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.402075757 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.394947635 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.413977506 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.40800068 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.401418893 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.398289541 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.408403694 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.405287936 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.403587598 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.396280506 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.40234558 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.400585009 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.402658535 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.395595141 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.402877617 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.399422244 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.404788296 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.395630146 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.3965719 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.425820222 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.403155196 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.418395126 seconds)
  done (took 206.20372364 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.596471589 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.403236051 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.403993134 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.341607599 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.403953878 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.403495889 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.40181826 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.593549568 seconds)
  done (took 14.85771021 seconds)
done (took 622.62067897 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.702196799 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.417447328 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.605874628 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.426704256 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.187037734 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.443573454 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.425223686 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.594506496 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.325470928 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.602096722 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.695311676 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.428992813 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.817813171 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.420929074 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.683493217 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.523032908 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.321945558 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.427934165 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.738653625 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.967763675 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.692391105 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.882548534 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.596935795 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.319325689 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.834112243 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.887070167 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.124049554 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.337944806 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.45032178 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.749554436 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.086230627 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.378451452 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.464986473 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.471361248 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.525613159 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.521738738 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.351249398 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.481352981 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.608248104 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.668630704 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.981988437 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.150282149 seconds)
  done (took 94.632000752 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.395073389 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.39421102 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.393313704 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.394779372 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.395382611 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.397851123 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.394113397 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.394673293 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.395199511 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.394914315 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.395336507 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.396691275 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.393649963 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.398041969 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.394885658 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.395032624 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.396489486 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.396915259 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.394867027 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.395281911 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.396181003 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.394263146 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.396524735 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.397517203 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.396246839 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.396089729 seconds)
  done (took 37.597444458 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.408285479 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.656185372 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.81878242 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.414612633 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.408737068 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.412721577 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.487146393 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.411156296 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.413132259 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.411097523 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.565503507 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.410583511 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.444204001 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.847096119 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.411261073 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.408425346 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.409727635 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.410854356 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.665555897 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.418434671 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.506774303 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.41162528 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.489193194 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.423939338 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.430242843 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.410735347 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.41342878 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.980374203 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.420681218 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.56951335 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.208666027 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.491228085 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.933302665 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.835643019 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.205210641 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.419885594 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.411606813 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.572173039 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.414274208 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.411616963 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.487210454 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.413011065 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.833379705 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.086430474 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.428759272 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.410341423 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.999739534 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.573465334 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.655503418 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.428972384 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.858599269 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.416638349 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.415546579 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.415981286 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.653861962 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.430225843 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.413344793 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.018406143 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.439610293 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.490084099 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.414893489 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.41547001 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.677336301 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.413725494 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.665551494 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.417012417 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.422959107 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.432915464 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.835738514 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.415283437 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.105149551 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.433147448 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.416702481 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.571380379 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.664874333 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.030831856 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.418532407 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.678466027 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.94729506 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.491639698 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.419632268 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.968078989 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.495172147 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.417875624 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.419443915 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.41634749 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.416955836 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.4616519 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.490658279 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.044157827 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.104089707 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.046630283 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.516056064 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.423656378 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.41614881 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.02099794 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.432467561 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.417292003 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.832354616 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.107834178 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.434544985 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.424603073 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.119414359 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.438106334 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.496450668 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.426067897 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.844904631 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.418750092 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.462180364 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.416610683 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.425085479 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.438307532 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.494488251 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.419609937 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.418066489 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.082306969 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.598359596 seconds)
  done (took 186.075720789 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.424341959 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.40900477 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.426201758 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.412444767 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.409874274 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.416826725 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.411471079 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.411424658 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.417268136 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.409568388 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.410975834 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.409992053 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.414330135 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.410989294 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.441304084 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.417710315 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.026978375 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.413119586 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.411489011 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.413739818 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.204379759 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.419120264 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.412339591 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.412869651 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.411682753 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.413650323 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.415159061 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.415375597 seconds)
  done (took 154.346918856 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.419161059 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.988399091 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.427968818 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.550554009 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.441691184 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.418155628 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.550622748 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.476788432 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.420637671 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.419225227 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.419352496 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.719329041 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.42121924 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.932677736 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.613749136 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.560512994 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.929527517 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.437917277 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.42049273 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.4182397 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.550549235 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.432377016 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.720817566 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.978180235 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.424038056 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.980491968 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.414451981 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.423886638 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.422911859 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.983478251 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.419519965 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.725321643 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.498907618 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.480084416 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.985800565 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.941653625 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.961880463 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.573868958 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.423734093 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.419470221 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.420887218 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.414668671 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.98323922 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.426389524 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.422532784 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.979047855 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.44073285 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.424714145 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.427289277 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.419945518 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.481968214 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.485783546 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.725739812 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.99010042 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.500951909 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.436116963 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.552224544 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.837662372 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.431121502 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.944390363 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.420632651 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.989032939 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.443075587 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.416105579 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.423023522 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.429936225 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.571782672 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.555195509 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.941355942 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.449907996 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.942407229 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.593159554 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.421459299 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.422330281 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.424434799 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.986791845 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.943104088 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.596872806 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.557703103 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.617272052 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.419970331 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.423074182 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.41400801 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.500602533 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.424995774 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.988447167 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.964495447 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.448067287 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.428066673 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.427356521 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.426162495 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.602299397 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.99720905 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.501308122 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.936516538 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.750517017 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.731033813 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.426207021 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.485692267 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.453778332 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.731105286 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.42738103 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.48057009 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.915791684 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.733326377 seconds)
  done (took 169.006089713 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.67065345 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.656968058 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.513953241 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.57841275 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.030512302 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.99485534 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.768353137 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.566939889 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.541726041 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.688948272 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.574224115 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.518460349 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.641860146 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.503282374 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.187400387 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.498416763 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.520209494 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.577001496 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.565401713 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.455253648 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.109250327 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.708902601 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.608069471 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.272743035 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.519046907 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.215056854 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.995433615 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.001537308 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.610070439 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.71654392 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.965667581 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.605471536 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.413942571 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.090210721 seconds)
  done (took 68.21935999 seconds)
done (took 711.189839022 seconds)
SAVING RESULT...
DONE!
