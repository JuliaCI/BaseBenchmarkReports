cset: moving following pidspec: 29857
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.860362888 seconds)
loading group "string"... done (took 0.53898488 seconds)
loading group "linalg"... done (took 8.797242489 seconds)
loading group "parallel"... done (took 0.170238181 seconds)
loading group "find"... done (took 1.409986907 seconds)
loading group "tuple"... done (took 2.05105843 seconds)
loading group "dates"... done (took 1.349954066 seconds)
loading group "micro"... done (took 0.216309962 seconds)
loading group "io"... done (took 0.626421225 seconds)
loading group "scalar"... done (took 41.988350521 seconds)
loading group "sparse"... done (took 13.217946352 seconds)
loading group "broadcast"... done (took 1.064518618 seconds)
loading group "union"... done (took 14.391409482 seconds)
loading group "simd"... done (took 4.967853368 seconds)
loading group "random"... done (took 10.022810302 seconds)
loading group "problem"... done (took 2.188708121 seconds)
loading group "array"... done (took 25.453264829 seconds)
loading group "misc"... done (took 1.148332579 seconds)
loading group "sort"... done (took 3.649674546 seconds)
loading group "collection"... done (took 21.472595835 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.638752276 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.118459697 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.166224073 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.195755602 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.192872057 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156101749 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.163776141 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.558657047 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.006508404 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.21362734 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.144112419 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.54853587 seconds)
done (took 5.855061904 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.291721893 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.432972259 seconds)
    (2/2) benchmarking "String"...
    done (took 0.111439646 seconds)
  done (took 1.229021095 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.092757483 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.174154718 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093707068 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.110023771 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.109676096 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108078929 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093239288 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110058613 seconds)
  done (took 1.480698962 seconds)
done (took 3.783904669 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.481175919 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.843549939 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.500241736 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.12351877 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.158240789 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.14909867 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.316621839 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.164542805 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.117262379 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.099947309 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.168252319 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.362728204 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.485019197 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.937998362 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.093776771 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.128003445 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.080578281 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.703815375 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.084598754 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.133865183 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.52558816 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.109043817 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.12014551 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.140198048 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.192198915 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131869012 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.178353987 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.109308294 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.659065515 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102090173 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.18692385 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098996496 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161708185 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.246985078 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.095091549 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.092749716 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.667278118 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.194365915 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.110999072 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097757452 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685622727 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08071809 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.190587155 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.108240368 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.108916765 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.188101656 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.113472257 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080299877 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.102717692 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.100325464 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.171591124 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.791933999 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10614641 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.147487552 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.109125689 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.747443279 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096573995 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.154891218 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.137549983 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096274608 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095639149 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.105673421 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.172585321 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.114766899 seconds)
  done (took 19.889973223 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11911032 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139610688 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094506602 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139051528 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138855513 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096630968 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082290405 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094363083 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124920583 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.185442314 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.120438135 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.142410313 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091007096 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.079638154 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11734377 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247979897 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104747907 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.11998034 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.080255498 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106604838 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139403889 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.09573946 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109109933 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.108772486 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167987081 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205314527 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107609296 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124068595 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094830162 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097893359 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143337687 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.160985058 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074816992 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094389441 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.181948462 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119588552 seconds)
  done (took 5.151365439 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.197164738 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.11542386 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.190428941 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.132939408 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08000866 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.195731662 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.130265064 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.183188688 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118343608 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258351247 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.22426409 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.184084467 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129544607 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095953551 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095077182 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081327859 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094277544 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.67480842 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.135362399 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.189131227 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106751371 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105055503 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097105708 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.799347304 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08448871 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096462035 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085025544 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087680985 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.17508365 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101011082 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.222869158 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12001178 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106956657 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113830155 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.21307734 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.131038152 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123217277 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102668091 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.082163336 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.232663501 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.107637953 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078420474 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.12460066 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131277657 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115619318 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099412171 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109269192 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223117029 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.098380667 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.117652877 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.148920096 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198213249 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.097334748 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097101139 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.347932494 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116875417 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084800115 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.098496429 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.360903833 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130263612 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081459735 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078037886 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10209327 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.09433056 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.752872434 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.089399196 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 2.150854373 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.097075418 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155420007 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.128745191 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103120525 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082854329 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10260955 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083842221 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.119302987 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.095203437 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078564894 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07869659 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096816976 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099606938 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.097707877 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10193591 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.077373634 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16358635 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.116416856 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101583762 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125548804 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100273715 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079207993 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127768879 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080382369 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.09880838 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.143924391 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080148751 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103820685 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113039955 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098642342 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126940507 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09994737 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.257244862 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08230376 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12487899 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098974361 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112034886 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.118144382 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095916545 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08429635 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094381572 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079837553 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161049756 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.07963802 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078869688 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100517512 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10980297 seconds)
  done (took 25.808016151 seconds)
done (took 51.529383001 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.436098958 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093258088 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.112469863 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.11260945 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.111022783 seconds)
  done (took 1.62978164 seconds)
done (took 2.365087642 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.345821194 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172843193 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10042067 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.192873296 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087898539 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.199200581 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163112594 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.11814067 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.193547513 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.100856249 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.173645849 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099956323 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088102547 seconds)
  done (took 2.801061337 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094873635 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118330844 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083513053 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110650142 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076670125 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090217936 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107747964 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.133118203 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09079717 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.101437866 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075560331 seconds)
  done (took 1.816199001 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092804436 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115577341 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08099482 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10742013 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075072587 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090185635 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108947296 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118261708 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092142312 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102798115 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075490626 seconds)
  done (took 1.792790078 seconds)
done (took 7.134219713 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.042938944 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.481780748 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.119055711 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.165865777 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.334745219 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.211063124 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.532379144 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.13322142 seconds)
  done (took 11.939562327 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.112583147 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.114683363 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.080572218 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.09985941 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.079425451 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.098785985 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.078764745 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096621439 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.082326453 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096797185 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.081749815 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09437473 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.081533317 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.095746179 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.082845016 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095760763 seconds)
  done (took 2.270380455 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117060432 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115859668 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103445102 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107861026 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.084478255 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101131585 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.086597234 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.10131564 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.082129978 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099952672 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.105558499 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.088259962 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103090406 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081511769 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103024857 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107109134 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.082919469 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102676935 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.088028478 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.103898715 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.089679368 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.101009563 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.104024364 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.088869769 seconds)
  done (took 3.19328715 seconds)
done (took 18.136450984 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.170719565 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084434938 seconds)
  done (took 0.99464154 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.103289712 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.118793464 seconds)
  done (took 0.969076787 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.106855932 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096663977 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136307205 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113765384 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08152964 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096625602 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.112716302 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.098826188 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080399153 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097545802 seconds)
  done (took 1.767263659 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08718548 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.102424832 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.089113988 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.118072914 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108543123 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082292108 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.102543166 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084257457 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.103491801 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079805981 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104806122 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115249594 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087011562 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118635205 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.085516193 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.102719481 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.107637023 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.085304341 seconds)
  done (took 2.51081542 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082572688 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.082956706 seconds)
  done (took 0.912219673 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085229507 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095587824 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083526402 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099282616 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080429958 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.095681567 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079623944 seconds)
  done (took 1.367132978 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.663759006 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.229783709 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.332514857 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.115735152 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.133361123 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.347074573 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.134200943 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.112185499 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.113404969 seconds)
  done (took 2.970743843 seconds)
done (took 12.236419599 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093610201 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.198591628 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.527836749 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.119343086 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.07839546 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.146567953 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.253937792 seconds)
done (took 2.169856042 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.352617325 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.124561131 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088717695 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.078273542 seconds)
  done (took 1.393089814 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080259677 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102383792 seconds)
  done (took 0.937564708 seconds)
done (took 3.090337979 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080835888 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.128836754 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.078354647 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097835091 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.075744042 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097790474 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.075270297 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07478552 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096038509 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.078140742 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095406371 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.077901596 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.095322393 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078110159 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075493814 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093074117 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.075262796 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095727324 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.197322567 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093021849 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075829479 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095314035 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.076016555 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.075206795 seconds)
  done (took 2.97117847 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105925112 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097466919 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084752889 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.101699428 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.08249904 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.102980717 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101724464 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.079001112 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.101729901 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081532205 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099327041 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.081954492 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098270417 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.082272637 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098047221 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099892098 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08492441 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096332192 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080911847 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100288344 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.084632248 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097797797 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.08353661 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102392533 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083099002 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099994804 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.09879517 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.079774736 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101476764 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083767847 seconds)
  done (took 3.53451679 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.089276129 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.075579117 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.094667109 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.086812621 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.093927351 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080261875 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.093778756 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.076642891 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095070773 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.076110772 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.095228454 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.075935871 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.075819687 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095109702 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077235204 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101026725 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112110101 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080106273 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.075463564 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.094754678 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.08162652 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.093998609 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.079745102 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.094468427 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.077066454 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.093171198 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.076677302 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.075733325 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094968173 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076367889 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099168959 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082538015 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093761297 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.08931967 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099976603 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076800294 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102745361 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076448202 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09500326 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07573277 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.09364528 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.077262842 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076352181 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105260352 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079473647 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.094523534 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.076263839 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095887779 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.076505844 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097197781 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07628984 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094474734 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080304888 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09595142 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082958816 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076330973 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094740376 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.075747403 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095897956 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07708459 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093838555 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076711205 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100972631 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077189679 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.118473912 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08828818 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093664185 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079205145 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09814699 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084928558 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095390069 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095702419 seconds)
  done (took 7.065053442 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084754787 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105610956 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079429615 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096676937 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075592678 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.076931054 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102683137 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095282811 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079710784 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11315561 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07754797 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096459084 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0785365 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098475158 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077507433 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.078961077 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104803539 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093281291 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.07800509 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098578853 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077618598 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101492163 seconds)
  done (took 2.736714783 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.225575617 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104876217 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144681245 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.114594144 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097309008 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111973352 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102623593 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085997588 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1024749 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08785044 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105326799 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084891205 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114615184 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104732896 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087007775 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106894551 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102169394 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088416982 seconds)
  done (took 2.735058494 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094963506 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098468983 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105200909 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098169668 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.079976424 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100807244 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086183682 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113482389 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.10011306 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.080240934 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.108926533 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082034149 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100427489 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081140708 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100492996 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080091713 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100703835 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07949805 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109228981 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104991543 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086950883 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108848357 seconds)
  done (took 2.87041854 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098373266 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10016084 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.11018741 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101669583 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075946108 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096313413 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.087494595 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.098419586 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106067342 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.081447523 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098386798 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079456033 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.104924603 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.080729525 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103888087 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080788605 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101243578 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080877218 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100777798 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076488607 seconds)
  done (took 2.63251383 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125049415 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114261682 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096444253 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125806538 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115826881 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096270438 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125443585 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114055888 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096971406 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12804084 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096492805 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.115067443 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125177792 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.103631929 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115341161 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125491483 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107441059 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125331282 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114948594 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09668784 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127645794 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114667086 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107957883 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114476902 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099149644 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114714722 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114671561 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.104356449 seconds)
  done (took 3.936690043 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082285489 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08123958 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.09604697 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.077644438 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095682634 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.078043634 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.095693684 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.077944107 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080403326 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095439128 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079900732 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098024082 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079791139 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098268825 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079967473 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097540091 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080480285 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.077489559 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09555965 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077645482 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.098327247 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079894542 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.097682728 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07781647 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077128807 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099032345 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077610917 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095972533 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079792348 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095731207 seconds)
  done (took 3.379792285 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091296003 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10375328 seconds)
  done (took 0.970417037 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081213608 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115475048 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077689273 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102072745 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086131275 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099116679 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091136048 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104639331 seconds)
  done (took 1.532109453 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.105719372 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.118562786 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086376025 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111041463 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.099942687 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.11752515 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16675509 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086311046 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106644957 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081608122 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118512062 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080855245 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109501036 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0856791 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107789897 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113991346 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.079004126 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10916174 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.08875597 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102611212 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08649421 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11575896 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092042262 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107954384 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083958613 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111911386 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114399171 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.093665371 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105087441 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094511177 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.107213561 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.074925789 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.104585866 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.08743982 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.097096748 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.099331636 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117541125 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086716197 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108786323 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086696382 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110028844 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.07612434 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.10983988 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106636031 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09378772 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.104483372 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087837704 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094903947 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082292101 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.10330837 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.076714196 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103074582 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.075527943 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109271747 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091423633 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118459761 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084211334 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104404872 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086617962 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102809981 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089164765 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103618976 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091701389 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.10219417 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091327061 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.109596693 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108051336 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077006588 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.075502619 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097547739 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109025546 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105752237 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111350207 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.087526237 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106973168 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080387632 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105662806 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088638129 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108684289 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092534099 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.10506946 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108090328 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092515316 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103138878 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085891383 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107934542 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083836511 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.102554817 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082725089 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120401188 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084872184 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.099437403 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082553759 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111582468 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086777783 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103835228 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08261246 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109996482 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076456509 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.105422338 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088215249 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107000395 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094297666 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106286698 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089501113 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109377815 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.093950162 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107012338 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085774011 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09688636 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087788184 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103710556 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090575171 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094246502 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087081558 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.10472228 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.087278577 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111233814 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102686621 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.087394598 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111809458 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.093790099 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.102311884 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078548048 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.10472089 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086180335 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10882869 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094745859 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.103384164 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078356694 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095279875 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.091029773 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.104604489 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089320295 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106998201 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088347015 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094412453 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.08022665 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106116807 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092666088 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.104052655 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08831166 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110914202 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.107946837 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08525164 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111376362 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085245435 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100617394 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091940686 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104516665 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078323984 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109795465 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086013574 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.10272357 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087912414 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109515182 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086996434 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.106938375 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085085843 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105248982 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088065442 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100740391 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087330786 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.103352044 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094312666 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.105059283 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077551192 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097848073 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088607426 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101592422 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086274385 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.10163804 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087380196 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.106409586 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08069788 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.104037001 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085783954 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117180665 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095992217 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107457361 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090072084 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.11295449 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086790324 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.107624034 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.087284474 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107237688 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.088533697 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110560862 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089196238 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106757033 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105052033 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079887766 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088738795 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112081459 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101724469 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080642321 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082132269 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105771969 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.112431205 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087498975 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.106176681 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08436683 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107452112 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092209791 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105498841 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.086420657 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101316967 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088184257 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.110591091 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088402225 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107441167 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094827273 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10778648 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078278621 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110122199 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084854793 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109923488 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078468221 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.101161476 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083346343 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.1071202 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085354965 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104398618 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077094336 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111020461 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093457208 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.106330065 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083775745 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.105499441 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097008955 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10479211 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090897099 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106210312 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090954498 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119936064 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101700823 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087236326 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113844853 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.088047515 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095172235 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090664695 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.103625638 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081815289 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08497399 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.103468132 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087656884 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109459565 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106771145 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076862299 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087264923 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.104931907 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.084288269 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097085457 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092332403 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107412206 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086795533 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115434072 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107395339 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.089058844 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107886695 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.087140122 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.107326575 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.092614352 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106797268 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.088634879 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.104730389 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083924308 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.106647216 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083261636 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099872822 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087487034 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.115238177 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.088315477 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10807136 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.087198287 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111573863 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087414993 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.107263047 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.125228757 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084786603 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102129242 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088454007 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109032287 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08748984 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105816905 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079599482 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112315216 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087382923 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112848427 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086602645 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098163241 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088009984 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.105857837 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.089026333 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10744749 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.089186626 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.104348801 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.087868066 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106989557 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09656213 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102921204 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093917762 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108939755 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108535612 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087209308 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.106992817 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086100907 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101970401 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087555897 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.107694379 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.088888674 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.106064279 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089793833 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.106649525 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086745601 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104880201 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088973717 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.106747092 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.090322584 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096867926 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084151281 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102407147 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.088178126 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110574149 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.089304956 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104689558 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.08670331 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108159565 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086717503 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098894307 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092574729 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109568163 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.089602749 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116210943 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.083944818 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.107264369 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098490509 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096556883 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.085601268 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.101341367 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084648903 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113538572 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088997432 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112973251 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08926986 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103162676 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080355228 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.107578555 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.086419035 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096835371 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082106563 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110339933 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086227368 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105235105 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.088992774 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.10939476 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090083679 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110957353 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.087273422 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.106544396 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.088646622 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.100211824 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084581047 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.102711136 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088730267 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.108838559 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084020531 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099957971 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087841047 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.106711051 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.089007394 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.106397126 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.08727148 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113212322 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088349069 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.107792732 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09363225 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097496498 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.088888444 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.106893992 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.088545219 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101893467 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089771383 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108308712 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089881263 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112320649 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.088266033 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110103293 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088142219 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100960355 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.088127551 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.107109657 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.08848792 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.103316056 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.090072315 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114179431 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081632831 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.108871925 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089634768 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.104948561 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089512424 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.109675899 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088195419 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111441207 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.089066329 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.108305206 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091302111 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.107660557 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090444008 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109788323 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086780997 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112116243 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083972717 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.114657423 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.108695118 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.089913476 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10576982 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.085257836 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107255959 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087743981 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086998387 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.113552445 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.108639608 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084563575 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.103393904 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082509168 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.107194768 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094189082 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113717731 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089062334 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108871807 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080195893 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.100100503 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090301084 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.103844276 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087579781 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10961487 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093398239 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107939544 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086632114 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.105887448 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094748935 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113008836 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090981493 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.104988532 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090933864 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.109672887 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088800251 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.105834778 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086981794 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11021097 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089667969 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.10763496 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08453311 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117129087 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.113291071 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090046209 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105938569 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.090890977 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107532395 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080105735 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.108766255 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088925727 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110959247 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.090127493 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10824857 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098739357 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.10407268 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.088148079 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113144285 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08783601 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.113824533 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079170654 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.109898666 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090244896 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109983166 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079395535 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.105108181 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085200221 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.108692949 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084013673 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100059766 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098782146 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114019197 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107915334 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087826679 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106076233 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080036523 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080480989 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.104386602 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090217821 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.107889098 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116435407 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08521667 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084374096 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.100412847 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088795908 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110003797 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090573499 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.102540662 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.080454786 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.10547005 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088914527 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.115879288 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087099104 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10935694 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090800443 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.109488471 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082415979 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114965795 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080767323 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.111075007 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120426822 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.091298661 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111058434 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093470874 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115573511 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.090856836 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100612951 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.091486403 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.109255548 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.091363846 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.111334421 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.091950055 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124442128 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11067446 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085753774 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.107769516 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090017057 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104677689 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.097183925 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110298946 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.091387457 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.111341281 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.088159005 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111649342 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097358969 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111432416 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09024624 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.1094722 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.088416847 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108641197 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.087639389 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.107482384 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.091534705 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.110718289 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089663362 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112233279 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086710239 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120157533 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.115359094 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.092445862 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.081291317 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.106674262 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085847105 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100867341 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.091849124 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.103384395 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.088431913 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.107830723 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.088675277 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.112134902 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092734957 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.11005567 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.091252768 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.109126165 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079268951 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.112730255 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.089878764 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111781307 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.084761502 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.109145327 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.09132796 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.113722043 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095005553 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.107156361 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088848856 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.108440466 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092369215 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101157792 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093082304 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108752947 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088335981 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.106248944 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09018959 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.111603894 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092311551 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111027538 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092399449 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.111780059 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.094182064 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113587638 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082086222 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102638288 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093644539 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.105004681 seconds)
  done (took 59.203220961 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.15514861 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088140726 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100567214 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081256651 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128982821 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082396723 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100355539 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082742047 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102015779 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095609318 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10075841 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081116765 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123017817 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129685416 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126452285 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115568585 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081566491 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101728014 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081653875 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082214353 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.122238474 seconds)
  done (took 2.998832415 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.110692814 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120331578 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.117656508 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103395839 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112809636 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.119175868 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09768726 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120072217 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.122413144 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113424326 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.103674002 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119922901 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.113219909 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.094228586 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113867281 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116036723 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104301087 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111595007 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.120303661 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097968797 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116896295 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118223317 seconds)
  done (took 3.301837925 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.096477118 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.088565824 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.114856852 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.083475718 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.109582271 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.083233565 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.115178184 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.08548356 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.114431899 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.08982853 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107365882 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.090366778 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.114083633 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.083697195 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.107824059 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.086497845 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.113721096 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.090532168 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.110502143 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.084198359 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.129350858 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.083516905 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.105235184 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.086777487 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.119080802 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.090254093 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.110253581 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.089870853 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.106596051 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.08932472 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.106073416 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091560385 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.113344671 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.087501813 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.107846638 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.089320711 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.108902768 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.084059139 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.106134356 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.092702038 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.10464982 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.091092438 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.116815812 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.086711181 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.105793747 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091939024 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.1098984 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.084478163 seconds)
  done (took 5.5923515 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.132797773 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159662879 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.095510994 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.15175326 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12585649 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.123925859 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091254804 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.152971789 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.108659106 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.089602677 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.135563602 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.128698618 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091878392 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.122353923 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090674131 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.114519257 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.111785534 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.089903694 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.119584584 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.093847303 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.118815785 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093188681 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.125171519 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.129312682 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.116954295 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.089981709 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.115610849 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.096598719 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.125499584 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.116981996 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.096777548 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.121975767 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125810555 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.094604343 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110025449 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.092272966 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.134572135 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.114182099 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093118919 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.11403245 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.092408811 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.120358505 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113782923 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.107164104 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.115786329 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112158971 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.093793856 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.107027639 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.102429956 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.120358827 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.124116601 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.103987546 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.121732271 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.111512032 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.099972481 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125607376 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.111222523 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.094043732 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.114166257 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.104722579 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.108238284 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09471281 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.129891518 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.115367549 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.119252818 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.110086672 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.112542977 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.098088719 seconds)
  done (took 8.625580938 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099805125 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.135565079 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127959904 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106511379 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.116657184 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11574414 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.0960989 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.115218152 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.096156689 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123457104 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115394636 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.165737067 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089781654 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121211533 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.095671869 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116948339 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115605698 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095793937 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.11588141 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095738115 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.115988961 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126825514 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095633831 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127733405 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12870483 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08891239 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.118241821 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115489901 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106619147 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.116944631 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128467689 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.095919087 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117229181 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.126270045 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.129540488 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095728959 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106465589 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095767146 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.116551652 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115473759 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08988338 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127323916 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.096397566 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.111297509 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115677931 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.097021448 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.127309038 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.129355568 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.10256391 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.124148889 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.115230442 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127218477 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096581258 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.115929467 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106955351 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.13581862 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128578832 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127937293 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115524453 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106825048 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129094856 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.13615784 seconds)
  done (took 7.937498355 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090281587 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086355348 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.105456855 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.085080366 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107895954 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085204783 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107356371 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.087487471 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086582401 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.108691978 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086618766 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105117213 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085377762 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107327328 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085834795 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105472079 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085179983 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084685729 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107515273 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084728544 seconds)
  done (took 2.736509138 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.098757802 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.128496989 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088302091 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116005033 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089947008 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.116208981 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109429765 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091674235 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108331488 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091674386 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.120853109 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100950397 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109034576 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.116154922 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10172713 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115543175 seconds)
  done (took 2.553634558 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.111727981 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.122041722 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.134163161 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.093814687 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.107231479 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.09664221 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.108932306 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.084094495 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.104390786 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.098056483 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.115045443 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.098735649 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.109257174 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086221152 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10898303 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.094530805 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.1044958 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.092331569 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.108289813 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.112720885 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.114849163 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.090130227 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.110804794 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.110283716 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.094205967 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.113260267 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.095894045 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.106838396 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08661705 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.108889206 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.091520336 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.117463021 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084445853 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.114484882 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086607626 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.106061571 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.087685206 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.109395803 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.093613152 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.108778484 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085896946 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.111710749 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087673477 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.111042306 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083232444 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.109382431 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084015025 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.11618727 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.089614566 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.112657381 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.087433824 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.11803014 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.1155391 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.10042335 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.118979422 seconds)
  done (took 6.507458151 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105110929 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112460069 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093555044 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106640305 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091549304 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.11700711 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.092779267 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110967747 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091268705 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.106141639 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090099459 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113098525 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090339498 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113025319 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091835107 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11252021 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083090227 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110598233 seconds)
  done (took 2.687682161 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100001411 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108162687 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096414208 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109188614 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088545603 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090213675 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106677155 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086114476 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107593522 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088503282 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109124191 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090926634 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107617517 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091306037 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109453771 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088584228 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.111207563 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087624391 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.109356482 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085756994 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110882078 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087963004 seconds)
  done (took 3.029422393 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.108267482 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.141720117 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.103173728 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.152518234 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.115026762 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.092773874 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.124953833 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.093377588 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.133563634 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.112428331 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.093323161 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.11351208 seconds)
  done (took 2.245988148 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118348737 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148629876 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085683492 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11279453 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122845243 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095037068 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114980657 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093865901 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12795732 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127129778 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094512987 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128617561 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12768938 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125521088 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102346415 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123491412 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114422312 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095268556 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110434284 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137168753 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095192168 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12807763 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115188344 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095452952 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115994898 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104972899 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128635703 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128495493 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11591223 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107087302 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123681968 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114323752 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10691519 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129302552 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111880662 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106529629 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115715785 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136996351 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123068156 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10606352 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.112996043 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122673841 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107500868 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123027053 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128173619 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095076396 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122255508 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114777009 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095957441 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143405617 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123809985 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126741785 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102195945 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129210771 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12743002 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144417706 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128969133 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105359946 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123086235 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127656075 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125808086 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101645307 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126598308 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128178288 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12290922 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104681726 seconds)
  done (took 8.592718252 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131879068 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109175368 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093280525 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130057529 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127691211 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114927162 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095592656 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11507391 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0942224 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112055318 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164206706 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115545129 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10497454 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126553174 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115538577 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094967252 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11570077 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126642311 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091195127 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143040105 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115628477 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105544584 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128131189 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127588939 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129194905 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122813572 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095998031 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114837636 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095246314 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116145826 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12311054 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095875116 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127040243 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087736462 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127231617 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115695126 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095534748 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123518238 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11462159 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103709744 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127857276 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138221905 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116315689 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095851288 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129131625 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116107359 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095678996 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111494976 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09535535 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112025284 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129693817 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107518009 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130565043 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127401003 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115598108 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095339938 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115812429 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094657814 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116098203 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123476676 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105302084 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116216676 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144082044 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115102587 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096119288 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127518806 seconds)
  done (took 8.456474391 seconds)
done (took 159.583659073 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.109538402 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.147103894 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.103911122 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.174306662 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089431427 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.146001882 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.123183958 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.126692863 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.089296697 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.111296527 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.090063869 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.11408774 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.156104182 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.111007986 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089980614 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.114275265 seconds)
  done (took 2.764506622 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.185114627 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.295691367 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108572438 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.117350258 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09584581 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.114247134 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.094312725 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.118927929 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090929555 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.125826436 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.112457483 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093299934 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.12388432 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09248163 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.113352333 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.092094972 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.12450024 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091714083 seconds)
  done (took 3.064085664 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.123200364 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.205291692 seconds)
  done (took 1.207449121 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128574558 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.191174394 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318203532 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.168161606 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119377041 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.13395393 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.168296826 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131609741 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.200477337 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133693014 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110847332 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.120100715 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14223931 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.102242969 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.122641739 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096314036 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.146178387 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.120200406 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098922715 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.119216503 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120867156 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.12029336 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.123278168 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.099597064 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18872376 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133178485 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.119477503 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.098075461 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120099755 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.099134943 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.125115399 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.132936028 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.132129507 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174254634 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.12264868 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.169812364 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.125850352 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.096093094 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.119100317 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096661208 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.122011717 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099939951 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.134080483 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.11694769 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.098508773 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.126817464 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.097376532 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.119794815 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.124980895 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106038397 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.125634593 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.123550512 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.171398336 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.126369958 seconds)
  done (took 7.96080894 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.850675926 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.159428567 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118150374 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.980002308 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125485455 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133656933 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.855403831 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.141955289 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.246770214 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.879188548 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134708895 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107249024 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238509315 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259441389 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.149540018 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.343443623 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.747365157 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108033392 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.148604535 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160711071 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123111037 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145154505 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.116169991 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.436320526 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117750771 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094809476 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123289132 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128799298 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170963717 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.098458813 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.121570083 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.18962495 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.295872544 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.188427472 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11788481 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093997047 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116407485 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.177936214 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274136445 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.225859916 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181572483 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091939851 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.115242748 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107999273 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136530958 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090117219 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.195430737 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.183248999 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.182463683 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121133302 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12860501 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103788304 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128316453 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.169933536 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.114612094 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.341945988 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.35097653 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09516118 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125220954 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113461211 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272092719 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.116101562 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.209647205 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143862018 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221424143 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093469178 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789999815 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.174681145 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.116915796 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125203016 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.360426268 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123909742 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.105263213 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174035197 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390960492 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132031562 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.1205785 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09406193 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.251462063 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094478747 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115179738 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.173878798 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117541537 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104101287 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132848489 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129176687 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.180486304 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.258061213 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131259187 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123627969 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.100381678 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1286694 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.096351951 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.24590167 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.20346119 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.188391623 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.222701836 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129254656 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.173819071 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.174498028 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129026338 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.179458427 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124425055 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134283493 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106968098 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224599322 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.151805473 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.116823559 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099527333 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.123885767 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.154183674 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09786086 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123930166 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.178271465 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.485835601 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.180975745 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.09123902 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.121270942 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102138184 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195339923 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101354702 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27182039 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126481011 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.177765836 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123720925 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.091791804 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125061285 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.173733931 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131354737 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103121109 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12982738 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125538553 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.259866836 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22766598 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109227641 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245614223 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.187741267 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126106265 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.183960089 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125798471 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.179638456 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125774889 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10656681 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119013906 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785186679 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107765415 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124543152 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099905846 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.19855961 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116623656 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095736517 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.116697875 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091929873 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.824285048 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.09772741 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.115039097 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.095583185 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126293588 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124038418 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101049382 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.122513607 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.171126929 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241723956 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129768873 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10220979 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.11675586 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.171373939 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118551376 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.095293166 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.115523134 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.096131235 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12549667 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09950793 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.119098512 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.182618723 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.167230913 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.2270278 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.556333775 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09453676 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.116791649 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237688767 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095408432 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.313210062 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102111455 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.234907422 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.19865761 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09229372 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.344948908 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.177915354 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.199589535 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.12049937 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.181986361 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114824414 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.101412465 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.170728957 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.117386094 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123858581 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.167364019 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.132715892 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108978368 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.158390128 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.116991624 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23768093 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.091172904 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.199739787 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096493192 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129547182 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.31636439 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094460698 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137385622 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.171686967 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12214827 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.095269721 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.714890036 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.094955612 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127817616 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103993501 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.231835486 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.197361681 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102363866 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126032325 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.1302382 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.172458058 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.219545512 seconds)
  done (took 46.168848864 seconds)
done (took 62.036982672 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315425528 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275349109 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.306974212 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.225824498 seconds)
  done (took 2.107309688 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.190765317 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160466279 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.15485163 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.092571571 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.163144991 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.092120865 seconds)
  done (took 1.759773195 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.495512341 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.408018124 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.350109146 seconds)
  done (took 2.162835628 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.2712649 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.289216863 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.369570387 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.414665675 seconds)
  done (took 2.359749396 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211289823 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132678451 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.105307062 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.14726514 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.179278818 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.183698526 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.150341271 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.160339409 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.137324702 seconds)
  done (took 2.365213515 seconds)
done (took 11.666630986 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.197565553 seconds)
    (2/286) benchmarking ("sort", Float32, true)...
    done (took 0.273341264 seconds)
    (3/286) benchmarking ("sort", Int8, true)...
    done (took 0.228419447 seconds)
    (4/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.317284697 seconds)
    (5/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.318230651 seconds)
    (6/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.255211686 seconds)
    (7/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.278033277 seconds)
    (8/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.156470168 seconds)
    (9/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.121456682 seconds)
    (10/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.245197828 seconds)
    (11/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.140189738 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.136501015 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.10664432 seconds)
    (14/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.251271892 seconds)
    (15/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.126801871 seconds)
    (16/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.091981076 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.122747692 seconds)
    (18/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.099397418 seconds)
    (19/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.272733123 seconds)
    (20/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.146414226 seconds)
    (21/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.268794171 seconds)
    (22/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.198596518 seconds)
    (23/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.149092943 seconds)
    (24/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.211746508 seconds)
    (25/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.138575782 seconds)
    (26/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.12121183 seconds)
    (27/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.252572791 seconds)
    (28/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.09158004 seconds)
    (29/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.180998082 seconds)
    (30/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.149386237 seconds)
    (31/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.110489424 seconds)
    (32/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.13141142 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.199775896 seconds)
    (34/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096846607 seconds)
    (35/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.140695401 seconds)
    (36/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.129491689 seconds)
    (37/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.107575599 seconds)
    (38/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.17310186 seconds)
    (39/286) benchmarking ("sort", Int64, true)...
    done (took 0.231397612 seconds)
    (40/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.10464155 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.130610386 seconds)
    (42/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.115731097 seconds)
    (43/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.264610021 seconds)
    (44/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.097759491 seconds)
    (45/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.130518556 seconds)
    (46/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.191335963 seconds)
    (47/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098357883 seconds)
    (48/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.103833747 seconds)
    (49/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.141966961 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.125451879 seconds)
    (51/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.157129879 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.123759718 seconds)
    (53/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.22354719 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.124527332 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096049502 seconds)
    (56/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.233258858 seconds)
    (57/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.102945366 seconds)
    (58/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.25606789 seconds)
    (59/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.210920546 seconds)
    (60/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.107561955 seconds)
    (61/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.134751459 seconds)
    (62/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.106765544 seconds)
    (63/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.123026868 seconds)
    (64/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.207007784 seconds)
    (65/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.202981579 seconds)
    (66/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.085742069 seconds)
    (67/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.154873205 seconds)
    (68/286) benchmarking ("sort", BigInt, false)...
    done (took 0.235254626 seconds)
    (69/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.207307101 seconds)
    (70/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.142447502 seconds)
    (71/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.081913844 seconds)
    (72/286) benchmarking ("sort", Float32, false)...
    done (took 0.182326173 seconds)
    (73/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.089015043 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.151226347 seconds)
    (75/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.080522644 seconds)
    (76/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.125280785 seconds)
    (77/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.203281692 seconds)
    (78/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.094339107 seconds)
    (79/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.125770789 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 0.092782722 seconds)
    (81/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.210375046 seconds)
    (82/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.123969202 seconds)
    (83/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.198943006 seconds)
    (84/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.101123985 seconds)
    (85/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.14152865 seconds)
    (86/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.099542575 seconds)
    (87/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.116982977 seconds)
    (88/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.190796902 seconds)
    (89/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.147435449 seconds)
    (90/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.172581964 seconds)
    (91/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.100129002 seconds)
    (92/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.1235144 seconds)
    (93/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.081716041 seconds)
    (94/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.115466178 seconds)
    (95/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.14024442 seconds)
    (96/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.134815515 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.123700179 seconds)
    (98/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.14338589 seconds)
    (99/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.119998459 seconds)
    (100/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.123314955 seconds)
    (101/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.107141005 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.152102514 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124889847 seconds)
    (104/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.134558555 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.132476111 seconds)
    (106/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.174701374 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.149972005 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.123597481 seconds)
    (109/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.08197628 seconds)
    (110/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.121917855 seconds)
    (111/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.133217959 seconds)
    (112/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.168922336 seconds)
    (113/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.150464367 seconds)
    (114/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.207799789 seconds)
    (115/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.101362124 seconds)
    (116/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.196425509 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 0.195064315 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.130479269 seconds)
    (119/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.106116156 seconds)
    (120/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.130770367 seconds)
    (121/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.147247139 seconds)
    (122/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.192749627 seconds)
    (123/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.129580359 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.099845737 seconds)
    (125/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.207655313 seconds)
    (126/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.104649006 seconds)
    (127/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.178645867 seconds)
    (128/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.159884263 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.123301284 seconds)
    (130/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.109859359 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.129987783 seconds)
    (132/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.110398077 seconds)
    (133/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.112671889 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.100431373 seconds)
    (135/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.178514164 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.128712753 seconds)
    (137/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.101740869 seconds)
    (138/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.192659484 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.117842739 seconds)
    (140/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.080859977 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098722359 seconds)
    (142/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.124142104 seconds)
    (143/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.205236141 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10998484 seconds)
    (145/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.104246458 seconds)
    (146/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.100805987 seconds)
    (147/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.128768672 seconds)
    (148/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.148817326 seconds)
    (149/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.082257011 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.09989557 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.131557749 seconds)
    (152/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.133740381 seconds)
    (153/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.145288196 seconds)
    (154/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.13904973 seconds)
    (155/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.104910726 seconds)
    (156/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.199120698 seconds)
    (157/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.122938356 seconds)
    (158/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.097875648 seconds)
    (159/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.165479061 seconds)
    (160/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.161799423 seconds)
    (161/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.126531048 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.126172767 seconds)
    (163/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097298682 seconds)
    (164/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.105152302 seconds)
    (165/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.094831179 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.124279604 seconds)
    (167/286) benchmarking ("sort", Float64, false)...
    done (took 0.181249402 seconds)
    (168/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.109148827 seconds)
    (169/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.120655005 seconds)
    (170/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.089527876 seconds)
    (171/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.122197155 seconds)
    (172/286) benchmarking ("sort", BigInt, true)...
    done (took 0.258012609 seconds)
    (173/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.107751178 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.125036393 seconds)
    (175/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.111672188 seconds)
    (176/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.123782029 seconds)
    (177/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.082120619 seconds)
    (178/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.176943535 seconds)
    (179/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.12261472 seconds)
    (180/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.098634571 seconds)
    (181/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.137046743 seconds)
    (182/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.083228528 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.125059141 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 0.232464825 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.098166584 seconds)
    (186/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.109154159 seconds)
    (187/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.082426485 seconds)
    (188/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.126306685 seconds)
    (189/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.106082965 seconds)
    (190/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.134135757 seconds)
    (191/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.10691257 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.131624315 seconds)
    (193/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.258103915 seconds)
    (194/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.106684731 seconds)
    (195/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.097810046 seconds)
    (196/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.19558072 seconds)
    (197/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.082657262 seconds)
    (198/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.119862997 seconds)
    (199/286) benchmarking ("sort", Int8, false)...
    done (took 0.202898368 seconds)
    (200/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.084998572 seconds)
    (201/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.105296055 seconds)
    (202/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.082216404 seconds)
    (203/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.131280244 seconds)
    (204/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.081693916 seconds)
    (205/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.080661033 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.120972949 seconds)
    (207/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.084135445 seconds)
    (208/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.138459943 seconds)
    (209/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.110692986 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.121142932 seconds)
    (211/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.098972646 seconds)
    (212/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.108745133 seconds)
    (213/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.089505402 seconds)
    (214/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.12487515 seconds)
    (215/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.117983214 seconds)
    (216/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.105636333 seconds)
    (217/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.082683993 seconds)
    (218/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136289541 seconds)
    (219/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.110938882 seconds)
    (220/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.106937126 seconds)
    (221/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.098724416 seconds)
    (222/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.106072757 seconds)
    (223/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.091501533 seconds)
    (224/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.123815613 seconds)
    (225/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.08519624 seconds)
    (226/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.082011489 seconds)
    (227/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.133698564 seconds)
    (228/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.117824945 seconds)
    (229/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104896859 seconds)
    (230/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.089198266 seconds)
    (231/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.110166572 seconds)
    (232/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.099337068 seconds)
    (233/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.108594255 seconds)
    (234/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.095976539 seconds)
    (235/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.105512679 seconds)
    (236/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.082503967 seconds)
    (237/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.104534423 seconds)
    (238/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.10826793 seconds)
    (239/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.195060159 seconds)
    (240/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.099917435 seconds)
    (241/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.122800649 seconds)
    (242/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105941177 seconds)
    (243/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.108775715 seconds)
    (244/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.081696897 seconds)
    (245/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.108071337 seconds)
    (246/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.100357748 seconds)
    (247/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.118611038 seconds)
    (248/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.082986974 seconds)
    (249/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.120245671 seconds)
    (250/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.085149782 seconds)
    (251/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.120849013 seconds)
    (252/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.085309442 seconds)
    (253/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.081959501 seconds)
    (254/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.127635357 seconds)
    (255/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082072629 seconds)
    (256/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.12552017 seconds)
    (257/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.094847154 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.12500385 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.095200692 seconds)
    (260/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.126671889 seconds)
    (261/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.121440954 seconds)
    (262/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.085744262 seconds)
    (263/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.132527346 seconds)
    (264/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.105404619 seconds)
    (265/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.124499321 seconds)
    (266/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.09105562 seconds)
    (267/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.100255363 seconds)
    (268/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.122205481 seconds)
    (269/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.122378335 seconds)
    (270/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.094633273 seconds)
    (271/286) benchmarking ("sort", Float64, true)...
    done (took 0.241305138 seconds)
    (272/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.109951749 seconds)
    (273/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.082780862 seconds)
    (274/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.094224823 seconds)
    (275/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.134313378 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.125518807 seconds)
    (277/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.125176316 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.122092783 seconds)
    (279/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.085663402 seconds)
    (280/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.171158275 seconds)
    (281/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.100177404 seconds)
    (282/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.107059168 seconds)
    (283/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.099825589 seconds)
    (284/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.123619609 seconds)
    (285/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.124615858 seconds)
    (286/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.125018075 seconds)
  done (took 39.652256268 seconds)
done (took 40.568326348 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.110203409 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.160915969 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.106064303 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.148971496 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.132384311 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.111856264 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.128809475 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.106440341 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.132336998 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.1333538 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.109335103 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.113325337 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.106391527 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.130227281 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.107707619 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.149639293 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.10842806 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.126409599 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.097074566 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.122075506 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.096755034 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.12356432 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.123319575 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.089116247 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.13031462 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.105462826 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.125004774 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.106090853 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.122781421 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.095660846 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.120266894 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.102194588 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.120898406 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.107234388 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.124448159 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.097981158 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.131053144 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.104572713 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.124572206 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.098913612 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.127453224 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.09956635 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.125996854 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.104311191 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.12312452 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.098323644 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.122362355 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.132860621 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126262034 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.123164698 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.102997679 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.129902212 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.107093029 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.127558167 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09785582 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122590575 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.099051759 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.151173945 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.097333796 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.124433991 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.102251018 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.130038556 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.096882192 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.122344445 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.09764738 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.13001476 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.128464869 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.09829998 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.128290817 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.102007826 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.117189078 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.09811972 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.120995017 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.096316863 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.129142762 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.105329714 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.117033578 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.099750726 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.126340192 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.100741613 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.12286993 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096379717 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.124022984 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.099360976 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12058344 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089983204 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.120700677 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.100596119 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.123081339 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.098369707 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.124742136 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.101303698 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.124447465 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104955276 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.122344821 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.099745828 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.122967793 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.098881416 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.125203083 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.096757563 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.118874923 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097005089 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.127062356 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.095755773 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.124217966 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.107763646 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.120480424 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.101273366 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.122482516 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.097876897 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.134702692 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.104398328 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.124344991 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098540248 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.120673409 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.101630403 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.121151409 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.119647357 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.096488655 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.122921532 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.100176717 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.122910827 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097273344 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.124910563 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.108171499 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.118676821 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.097594933 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120683028 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.099456452 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.12554264 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.099328731 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.119822777 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.098277905 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.117432145 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097726945 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.120161944 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.10251361 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.121773335 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098415541 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.123328363 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098746787 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.124409429 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.099622347 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.123736779 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.096482376 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.115450061 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100870945 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.120750845 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.100769276 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.123374078 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.098986426 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.117912159 seconds)
done (took 18.265420373 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107513071 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.193546982 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15548959 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.159353231 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.155920854 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.116131163 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.133896524 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.155057759 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.107080351 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.152918677 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.153379288 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.145454038 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.135408635 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.131693432 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.141036846 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.106628966 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.129826072 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.139207984 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.139852521 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.150946164 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.155906289 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.106109091 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.152913589 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.150888566 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.128655679 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.125214977 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.133791926 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.129863585 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.109647064 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.147119298 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.122078049 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.133940216 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.132127232 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.118224102 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.137387143 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.104062811 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.140160748 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.126716079 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106769403 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.12992834 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142299589 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.116738176 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.126635536 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11180528 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.131641607 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.13374336 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.106380172 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.128550431 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106678363 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.125439081 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110787898 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.150957766 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.129302794 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.10774376 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.132116801 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.130376614 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.108937278 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.133895459 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.132295943 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.109080572 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.131192492 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.10832832 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.135642004 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.146739069 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.105531434 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.132938039 seconds)
  done (took 9.607154406 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124167324 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.16365563 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.1394424 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.113092237 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.135168212 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.094657945 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.120703325 seconds)
  done (took 1.874119221 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.097847586 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.150796681 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129119711 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.154238277 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.142869794 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.132991256 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.138645161 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.096255389 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.146719476 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.13124215 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.12452361 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.177194164 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.122872226 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.108319467 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.156450375 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.121596871 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.132348038 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.121586717 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.104694324 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.154508624 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.126553654 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.119156474 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.135454267 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.097453923 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.143824721 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.098799494 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.190832299 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13474363 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096673472 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.128180754 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.10142711 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.218208975 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118876258 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.132764425 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094929673 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.151013311 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.117595073 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.127961779 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.147396873 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100984375 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.143939594 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.103445469 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.129724186 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.101672201 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.130808386 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.136870265 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.107858606 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.131543009 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.103148185 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.151245929 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.132810694 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119602172 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.123572878 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.101132226 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.133256859 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.104184602 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.1366617 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.101782981 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.15164506 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.129977315 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.123713213 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.148630073 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.144092465 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.123824619 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.140271049 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.119017459 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.144006669 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.12822287 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.105275747 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.129865374 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.123782292 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.127250336 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.106978924 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.138288835 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.131169113 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.125716762 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.149921357 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100996519 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.136171487 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.101529349 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.12589738 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.097185413 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.138508879 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100779036 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12527057 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140161765 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109865475 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.128172478 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.100882687 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.145902569 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.12656768 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.109251363 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.134443049 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.101156832 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.139074306 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.151294602 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.10764845 seconds)
  done (took 13.324978548 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.099364963 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.098673632 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.129557094 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.123312113 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.099479517 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.098431385 seconds)
  done (took 1.64978993 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.130630548 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.128249697 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.114493353 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.130871296 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.168569788 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.122342822 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.148376054 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.13366529 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.118421208 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.139309312 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.121162615 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.15049397 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.15336333 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.105685046 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.147804677 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.10629865 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.1486014 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12678118 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.113141006 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1277487 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.115038977 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.132561223 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10152363 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.146836773 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.105336989 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.132699741 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.130208511 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.11316924 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.139530148 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.108283264 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.131437289 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.105347867 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.131438342 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.133043414 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.122363187 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.132511687 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10054832 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.13389156 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.105827947 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.136217933 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.149141684 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102815653 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.137238845 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.107299151 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.135117492 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.1059167 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.133815699 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.130083985 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.122664547 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.133314842 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.107783672 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.131766862 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.105520071 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.134258302 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.105412788 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.134443341 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.133562928 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.122840048 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.131937884 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.124503173 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.129962088 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.106239422 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.134943927 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.131918603 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105705669 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.133815132 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.105498211 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.128194491 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102239079 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.131665052 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.107721803 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.128626836 seconds)
  done (took 10.034285892 seconds)
done (took 37.462527189 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.699002151 seconds)
  done (took 1.695088224 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.929367824 seconds)
  done (took 1.92676599 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.178516387 seconds)
  done (took 19.214045156 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.551597975 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.638812286 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.984007909 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.173105212 seconds)
  done (took 3.343875055 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.970351145 seconds)
  done (took 1.987793856 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.319701847 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.271522098 seconds)
  done (took 1.593131192 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.90205749 seconds)
  done (took 1.908983477 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.606742194 seconds)
  done (took 2.622020246 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.361789335 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.208451519 seconds)
  done (took 1.592882739 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.589886722 seconds)
  done (took 1.604819123 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.738145204 seconds)
  done (took 16.75393939 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.245538262 seconds)
  done (took 1.276831201 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.312191295 seconds)
  done (took 1.330084909 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.776468064 seconds)
  done (took 4.794709352 seconds)
done (took 62.648286318 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.110516342 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.13732859 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.111975453 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.134611717 seconds)
  done (took 1.505491923 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.11429872 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.132310288 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.110321327 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.132560651 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.113843508 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.133816169 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.104095751 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.138854723 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.131894864 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.108895852 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.133202942 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.105699343 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.13530108 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.104293202 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.131122959 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.107751186 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.136840106 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.13203849 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.105929178 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.133829855 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.104668803 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.133939022 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.109499649 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.134641957 seconds)
  done (took 3.942845148 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.109017119 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.102230461 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.13167792 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.101918318 seconds)
  done (took 1.46756552 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.113886971 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.145811711 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.118920191 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.139104099 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.146038958 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.119576941 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.128639893 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.102378813 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.130940742 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.112187591 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.130377371 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.148751939 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.121262995 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123537265 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.114660702 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.122443495 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.099219524 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.146609298 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.112094211 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.141907916 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.10137286 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.139966309 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.136668647 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.117649655 seconds)
  done (took 4.036598428 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.21512222 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.116043946 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.152508351 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.109474001 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.182721463 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.155603269 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.100979659 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.15468433 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.127941582 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.115495742 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.132893542 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.184105394 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.11692429 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.13286924 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.103157466 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.135690746 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.138273727 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.11337535 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.132388784 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.114360278 seconds)
  done (took 3.760316609 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.109816699 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.127984711 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.098659316 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.127692505 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.109384851 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.130362061 seconds)
  done (took 1.735236467 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.099091131 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.097138844 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.124322294 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.096159494 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.127947242 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.098035379 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.122413381 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.097688761 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.096976433 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.124848619 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.097655685 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.123619935 seconds)
  done (took 2.335485266 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.546483626 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.10156262 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.131338979 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.102701317 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.133054953 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.10030792 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.144919462 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.127010049 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.183989194 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.104611938 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.144056594 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.182971039 seconds)
  done (took 3.03295645 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220698054 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106638526 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286875992 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.444990123 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168617338 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178207167 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.33176879 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174208465 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.22302642 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122359568 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243848431 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142466745 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166355296 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191164466 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152548165 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.198598264 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187660532 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213792283 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160908577 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225887351 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176709441 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178602421 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228877872 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137734775 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150352131 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170143749 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.101390471 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141414033 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184430623 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180935785 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184794427 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160215732 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150008318 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212936246 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252323766 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190294521 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.39621164 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118357134 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.226832166 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.207291931 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290489015 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126391258 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234992495 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139953857 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142680277 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192280413 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168131759 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.191938402 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.144585864 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125523189 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22506662 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188954587 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193660788 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149493712 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.359248604 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156245069 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.158100668 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196009251 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201727907 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239358009 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178237348 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.107944515 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.25791255 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203776978 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193920676 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.158072591 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.180495758 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107880873 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188746588 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.244936531 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190541245 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179654427 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.228993438 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117567758 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175645979 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190473183 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166464116 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192246811 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172688708 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.103852072 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162091156 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149287813 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139252045 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.170900314 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13478085 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226240109 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14801325 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.301294867 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226186793 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170925821 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173304226 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176158141 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179388816 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159649497 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.130623282 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130815162 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.182980008 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169027923 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144910096 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170405071 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156788996 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.110732317 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164235643 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.134097218 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143050187 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.146751534 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178989864 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176436074 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.14096629 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175950455 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133228423 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.170598839 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181744112 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205934419 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146199139 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143922405 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215801173 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170340981 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.119402741 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22547254 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208769793 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.185829635 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121068514 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208421248 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208994577 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126099656 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238734375 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125146033 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146386653 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.163044331 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17114372 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169978935 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.166654352 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114241475 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.163470041 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214862278 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.139912414 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147661231 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18516887 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110438916 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140423389 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155279191 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119338096 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.154191534 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.161237749 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.122461647 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167278408 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170737975 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165450448 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171117446 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154961088 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203346627 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145561065 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.172340209 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13103779 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.130532924 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190586761 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206320239 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141469528 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199023721 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.181118062 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2691954 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175562081 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113752859 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192596943 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142163368 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.10249259 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178265669 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170882196 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174037845 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.233619405 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243406396 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.177535895 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.164880626 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161052607 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179969127 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.195846105 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167902977 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.157870685 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175056261 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18137525 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.104793759 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.136404081 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.138058722 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123810594 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142259765 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115509846 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222854202 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176649156 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233303088 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171961618 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152158016 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203513652 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.138498342 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177759422 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.18480602 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14970953 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.204926132 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203979742 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178710886 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15462875 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183048016 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.10302935 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137135637 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.116174913 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177342975 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145167002 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144584629 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127003949 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203292306 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214211435 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132765044 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276135682 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177515116 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242046255 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.106046739 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.175338255 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192845607 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169372305 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.173579688 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143164502 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.173568685 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199810037 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155958637 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205293659 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174947697 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181238501 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241067888 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.140623864 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143347908 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162212037 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181311096 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152388737 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18320063 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128679457 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147848252 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165840169 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.11870906 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137577746 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192019031 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156123327 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191219466 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.178965406 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214754956 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109380266 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157012523 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173202405 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156678893 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.101989823 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182604076 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235672895 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126659843 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17045213 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196125872 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14228651 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.38890979 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235864949 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198315174 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149018857 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125507062 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174159363 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181511635 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176722922 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194881468 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156441289 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192975491 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171249017 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.154709436 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117376759 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160681713 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16301237 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.16273866 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.115560026 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.164576524 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.155455224 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196398349 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157430329 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171553881 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176550405 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.130659794 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.16724345 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152954458 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223033978 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171217062 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190458829 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.168415617 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.188768511 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201344503 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13630361 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111321223 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.139223636 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195874512 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114900638 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170544631 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.261197233 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279651344 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169858982 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18104033 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12119578 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.135691954 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171714349 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132338693 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278409644 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154040396 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.148436888 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214714905 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.16257115 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114385936 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177579714 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.361964239 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128611187 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197383531 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.133277638 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.331377256 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1368511 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143170924 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153220085 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212261993 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.115758571 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.197430434 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178148101 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156338124 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153220799 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151174542 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.270631557 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220866426 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183096844 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186839267 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.156433031 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171031511 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17552606 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198576007 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155840582 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.156959059 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145603927 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232468977 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.207762144 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114593142 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17557982 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176818034 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172799475 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18580619 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147064467 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200874287 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143718807 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17964537 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150903024 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107438588 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171146536 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.262782294 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116930054 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197601303 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170573651 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144756616 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109481776 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164476481 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171412806 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156518758 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.112314055 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222328612 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.110545619 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175308531 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193918083 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141578336 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136756656 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1586239 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142506368 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125106327 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156893965 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147763955 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.157206299 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228277446 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.113008038 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225869177 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186242823 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17752017 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171385628 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127222229 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.675725324 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.139413486 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202082083 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1298194 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2277418 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131646816 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180404092 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175090654 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16236109 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180432456 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162322249 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233116342 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179371857 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.170470194 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115312845 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157298683 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157456084 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.11436113 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164311776 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175041956 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153284237 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.119076705 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.168657808 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15977148 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.157604959 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121248729 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234072421 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12987115 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224739784 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196544701 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122375344 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180002718 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21545524 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113180986 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.173297988 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184092604 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15588219 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163183956 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.113254018 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.148082935 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192101172 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.106167669 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173729341 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173149392 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176074752 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175776925 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146155294 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171556546 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125587192 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173419926 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138440376 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.166520038 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16871311 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114239319 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.140150063 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165782173 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14204365 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.170619984 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139636772 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.15981131 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228042425 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.109678246 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145666436 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.334964064 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170142872 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206522676 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.165875284 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148188048 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125682392 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167913143 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.165472389 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173302854 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.14072496 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115952715 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.143789595 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.19553562 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.177305928 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170351537 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200199749 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172987601 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20182767 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.118712632 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278378762 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150808652 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164999258 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114737298 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.14172745 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123457237 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147180618 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157436486 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.279784452 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162847972 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.165583678 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.158150982 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138721483 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.111275365 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145136592 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183109796 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137655469 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170526567 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155537666 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.130583731 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127098635 seconds)
  done (took 84.150689441 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.208863689 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.177096069 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.234891544 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.218740252 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.183768341 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.27137084 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.22309844 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.243941942 seconds)
  done (took 2.888125881 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.113587117 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.147284009 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.152319171 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.135538542 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.103032274 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.350981728 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.150192145 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.135635027 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162259747 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.14549096 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.103374559 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.624033741 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.134127068 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.108543837 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.13427406 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.126466033 seconds)
  done (took 3.945128743 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.481370147 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.569501449 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.244005873 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.263366369 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.24191202 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.189142143 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.784830944 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.177265459 seconds)
  done (took 13.076303896 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.136647237 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.152400771 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.151482956 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.179193223 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.162753077 seconds)
  done (took 1.916878556 seconds)
done (took 128.804152525 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.107203697 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.136433767 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.106546253 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.137563092 seconds)
  done (took 1.60766621 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.119449668 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090909659 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.124632853 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.090117628 seconds)
  done (took 1.554266491 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.440126695 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.121076976 seconds)
  done (took 1.723085805 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.130710714 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.154019139 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.120507056 seconds)
  done (took 1.533477538 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.114732054 seconds)
  done (took 1.248851249 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.117632739 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.110605157 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.158564319 seconds)
  done (took 1.520414842 seconds)
done (took 10.315751198 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123567349 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.450625664 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.396597495 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149963738 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.735517738 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.38995211 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.040329693 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.169181007 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178430176 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.102117974 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.148267021 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.683022988 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.023757831 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.351747338 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.009689122 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.445689467 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.713881024 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.103269654 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.137841576 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.103179982 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.018664085 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101326598 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.133234722 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.103719373 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.712387322 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.406195571 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.132274544 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.457918589 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.129952496 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.105783762 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.42059724 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101783779 seconds)
  done (took 17.404700225 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.105929956 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.192732391 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.110195829 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133092477 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.105181482 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.132924635 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.111107383 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145164353 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.192742665 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.129599069 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120699168 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.129905692 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107374784 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.130061279 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.122979776 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12926428 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.105819513 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.132507254 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.10973628 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.132306904 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.12158783 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.130638959 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.104844801 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.132638054 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.102538668 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.149766422 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.102667546 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.144034331 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101911268 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.135793557 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.106911598 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.131882475 seconds)
  done (took 5.185644847 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.152697031 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.202357083 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.141100266 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137203487 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186039498 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.13302518 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.216875205 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142181018 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.196100575 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.131998078 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1198392 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.130994804 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.168204069 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.103615904 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.151988578 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.103430131 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.133890362 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.10543782 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.138495596 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.104764326 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.152445356 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101904741 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.133853756 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.10465639 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.132241354 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.116696539 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.132715563 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.143919232 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.103785318 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.136442314 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.109394187 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.13106629 seconds)
  done (took 5.53823228 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.110865306 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.140310306 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.119550215 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.148996131 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.105272162 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.140161567 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.111592548 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.134453986 seconds)
  done (took 2.151951457 seconds)
done (took 31.413463242 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.12226697 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.107756554 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.146159001 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.144481314 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.11348613 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.168041756 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.101775115 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.143244855 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.116751869 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.110746526 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.14890586 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.10294832 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.134120776 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.10042691 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.146070745 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.108532401 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.148479918 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.110979001 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.154090191 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.117597574 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.134627757 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.114470739 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.142782926 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.123979539 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.15422014 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.153266875 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.118488859 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.139042743 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.103035362 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.133136409 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.120244459 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.15845735 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.104746222 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.150150456 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.106835281 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.137444805 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.10270483 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.134581991 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.118478569 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.144415396 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.108329464 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.144528285 seconds)
  done (took 6.526668736 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.131093229 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.177272175 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.099721378 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.131673461 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.101200898 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.172866257 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.168525153 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.100909088 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.129861989 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.128962978 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.15997435 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.100794777 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.131751543 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.100597399 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.130522715 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.1020532 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.157875831 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.128298748 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.164572946 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.164054948 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.14985277 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.164891195 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.169269813 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.128317806 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.176614561 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.169398527 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.124126691 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.171457455 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.161362699 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.100428568 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.164227183 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.135219085 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.131479267 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.099972014 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.175211885 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.16978381 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.130688935 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.174231238 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.16508211 seconds)
  done (took 6.686357475 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.112825776 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.151665197 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.134716922 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.239763974 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.176708625 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.151857522 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.118845651 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.152899162 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.163030539 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.104613324 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.116116333 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.166732665 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.150314507 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.117149151 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.138845231 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.118401862 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.154448992 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.105578616 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.143972391 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122472149 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.153334714 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.117759291 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.153659844 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.144366537 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.104572213 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.142410275 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.111992459 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.148817981 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.112248606 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.145577426 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.106945765 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.137861482 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.10653689 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.145735087 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.107592261 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.141309888 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.155288691 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.116000786 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.149725676 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.138158483 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.145468665 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.106565894 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.157377865 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.185421934 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.10702283 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.141331476 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.115061296 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.146401773 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.104481894 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.154122447 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.119812387 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.136872938 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.14930859 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.103248029 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.134782924 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.113191248 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.136945236 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.1077006 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.145043945 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.109214931 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.155742212 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.114985183 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145052666 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.108294159 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.144259103 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.10340353 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.134612751 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.108387408 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.160322054 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.142471409 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.140930072 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.136942963 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.109816799 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.144774188 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.11216839 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.146161282 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.103203293 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.145207777 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113923032 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.141633683 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.145096215 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.10768077 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.108248877 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.15216707 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.149722879 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.111384935 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.140172042 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.11032923 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.137678361 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.107356419 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.152858719 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.106072172 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.139323309 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.116672227 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.137756681 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.106425033 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.142093104 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.13823723 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.104185771 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.157726555 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.110174001 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.1328585 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.12625921 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.137404428 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.108359085 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.143590225 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.118342019 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.135648621 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.109526115 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.1413533 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.103905802 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.14397162 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.107935105 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.135894808 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.118368173 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.150602858 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.111504157 seconds)
  done (took 16.571342626 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.257248495 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.235419647 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.20875261 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.322157071 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.158634017 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.130489759 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.231444633 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.186132447 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.136721259 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.176124177 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.191056275 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.211115478 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.190233795 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.202027923 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.193415023 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.104922521 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.171890853 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.189335284 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.233947585 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.318507583 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.138933257 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.151559819 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.17796931 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.175813425 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.154494513 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.121924255 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.161061532 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.157678574 seconds)
  done (took 6.461096085 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.123659177 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.176459539 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.112691171 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.164589278 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.163673285 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.104876559 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.142829676 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.105811526 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.152012879 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.150847573 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.106892338 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.1422965 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.11156875 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.146367808 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.104709314 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.144175028 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.115028217 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.143695235 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.107404292 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.140352481 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.122812755 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.154569224 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.112210154 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.14317699 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.148355104 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.111492751 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.137067446 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.157879277 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.112859489 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.165709735 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.101301036 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.145166761 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.119329283 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.135960945 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.110607269 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.138817594 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.105857761 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.137315828 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.108407702 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.132943635 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.105285582 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.094565348 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.141372982 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.150937239 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.111931774 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.136390323 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.110615853 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.140775786 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.112833266 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.132777214 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.107655929 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.137611658 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.109606171 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.151068031 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.108023546 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.1445436 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.108675324 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.136503536 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.114345945 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.138806937 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.102815507 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.140341555 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.112109612 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.140919983 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.11406295 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.142763833 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.109629783 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.138464939 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.109825023 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.143768689 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.107147581 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.148426861 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.10198882 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.138643054 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.11575348 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.149093847 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.108322895 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.142158747 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.111991825 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.135961873 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.094412733 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.134211746 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.09214378 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.108875425 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.134921861 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.14015017 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.108471682 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.110565987 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.151929043 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.143281795 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.111165032 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.135068476 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.11097042 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.141272044 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.10181333 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.140778899 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.122587315 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.156653946 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.10322414 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.134718353 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.121132199 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.141847661 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.1033027 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.124997481 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.115005603 seconds)
  done (took 14.530528756 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13319229 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.175499859 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.10544948 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.155949329 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.171702851 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.134707704 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.145325738 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.113507545 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.136814179 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.126099482 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.143756686 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.114441409 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.144722493 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.119460585 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165339538 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.148429271 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.106601774 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.15007261 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.111056064 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.177779545 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.124448024 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.162854931 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.166930663 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.111819417 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.141604438 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.128018695 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.168753721 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.118093418 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.14840947 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.168933187 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.11863904 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.168134901 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.168705865 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.111040168 seconds)
  done (took 5.972209507 seconds)
done (took 57.890520546 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.268349329 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.478144686 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.240325827 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.241578345 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.266703472 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.271388915 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.242288648 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.458610472 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.037366099 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.232172602 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.243114975 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.242668305 seconds)
done (took 28.398932847 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.428229515 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.954830349 seconds)
    (2/2) benchmarking "String"...
    done (took 1.618597302 seconds)
  done (took 4.765044083 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.242737797 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.240233663 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.623726165 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.27177211 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.241888855 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.242404291 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.247417224 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.242061356 seconds)
  done (took 16.281530412 seconds)
done (took 26.892593152 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.264308748 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.572233665 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.505427775 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.272019453 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.241272235 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.241392445 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.247089381 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.301455037 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.2537603 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.244305618 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.239955959 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.51052354 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.278522058 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.628358671 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.241748017 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.257779043 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.259150824 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.536971076 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.241216531 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.248724351 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.250809947 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.252046586 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.255767935 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.26731067 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.260594374 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.247750328 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.275589219 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.253167587 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.513616382 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.247143171 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.294891626 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.246811232 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.292081108 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.245026038 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.375921489 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.262804873 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.453476899 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.26356834 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.234989074 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.252578415 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.465174078 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.688355522 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.251711217 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.258887746 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.247188399 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.279046845 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.232651941 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.090591933 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.248686033 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.247845145 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.308961141 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.632459891 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.248506428 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.27167441 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.258771449 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.508237024 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.255835565 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.310493028 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.278969272 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.257071109 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.270842479 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.246468187 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.313198902 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.248416543 seconds)
  done (took 146.926048432 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.248296991 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.246716336 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.249844761 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.271288745 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.248263746 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.250657856 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.246396433 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.248609996 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.249390743 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.272943143 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.245779124 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.248646311 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.248966254 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.263439852 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.248415123 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.272502886 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.24908278 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.26922324 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.267966846 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.251255878 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.273351215 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.249372024 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.25095954 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.248723715 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.291466856 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.342602948 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.275216379 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.24868491 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.251077246 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.24959525 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.253718238 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.250204151 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.918272716 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.106987939 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.261089247 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.276136581 seconds)
  done (took 82.022410697 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.251758435 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.251428971 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.25173138 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.248066556 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.252786465 seconds)
    (6/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.286858739 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.248060243 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.856629613 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.875988039 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.981253801 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.547452488 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.710427897 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.561828291 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.250847725 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.346975777 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.264293017 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.248639629 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.266394849 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.2808102 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.250008964 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.249244276 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.87815389 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.266600029 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.512402044 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.438831041 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.272108925 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.290051171 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.653745408 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.251578825 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287664923 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.594033114 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.303879406 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.250348275 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.654700284 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.715043904 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.367918799 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.25269452 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.28573981 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.252089283 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.539047683 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.251686346 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.254290725 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.256519985 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.947984795 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.251633796 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.860041432 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.253280322 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.25215116 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.253348184 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.253587762 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.526824316 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.995143541 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.270017832 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.254992234 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.260538118 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.25320937 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.255180218 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.289182981 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.514085143 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.369181061 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.255478375 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.256677745 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.291384313 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.255239086 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.434023958 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.254089787 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.279799377 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.315978881 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.464954272 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.253631612 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.253200321 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.88508271 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.356806653 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.380654281 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.253804124 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.253460337 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.255090363 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.254183385 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.368847869 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.255340575 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.708009058 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.437849879 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.27455566 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.716524259 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.355942683 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.2560055 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.732951379 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.258966115 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.256097395 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.069293973 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.358153873 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.254173942 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.259593365 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.256991608 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.254699224 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.709878693 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.889106773 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.55640847 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.257405676 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.734046604 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.257765144 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.718350798 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.860381989 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.96618131 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.259146422 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.373760811 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.441815913 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.274896412 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.257454048 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.719635131 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.257613223 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.320768315 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.257174163 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.661410676 seconds)
  done (took 373.354165933 seconds)
done (took 603.475365976 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.05230861 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.994154154 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.133348344 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.018329856 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.987649534 seconds)
  done (took 11.375309086 seconds)
done (took 12.562219579 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.463480251 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.463395933 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.323611523 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.464428216 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.292659738 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.481991249 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.448090637 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.280727659 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.370272583 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.349347207 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.374625348 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.317736178 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.298224941 seconds)
  done (took 19.114178837 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.593733052 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.268566485 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.326128669 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.609260078 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.299057459 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.601663799 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.474010839 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.280688965 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.48652348 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.274411931 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.273142964 seconds)
  done (took 18.677171102 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.608862065 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.260038992 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.347225543 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.615102026 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.3013553 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.589547973 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.476860901 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.282626847 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.505380183 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.274575935 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.273348589 seconds)
  done (took 18.726535071 seconds)
done (took 57.704238926 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.305277177 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.43143143 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.289031089 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.274120801 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.270653891 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.272220921 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.277437616 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.272227864 seconds)
  done (took 11.583844443 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.267130558 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.269580292 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.270086434 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.269749344 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.268039121 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.2712867 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.269799024 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.268238311 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.270124072 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.266617588 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.271847508 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.267284006 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.26756267 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.26592656 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.268155604 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.266471058 seconds)
  done (took 21.490654701 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.269686496 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.268626534 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.268203613 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.268972133 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.267752574 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.268576083 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.272012903 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.270271851 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.270379366 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.270062112 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.27183295 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.269150344 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.269353226 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.267821083 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.27046762 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.269473634 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.269274959 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.273472299 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.275505805 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.268649217 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.270083503 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.270885422 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.269651172 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.269978473 seconds)
  done (took 31.673616419 seconds)
done (took 65.936464923 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.269421321 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.265255845 seconds)
  done (took 5.727398062 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.331117478 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.33075787 seconds)
  done (took 3.85682116 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.269225277 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.270979961 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.269604674 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.270560825 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.268598645 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.273661597 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.273252279 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.273128279 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.27208947 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.27436286 seconds)
  done (took 13.910204354 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.272138039 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.273975761 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.272430756 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.274597752 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.272185766 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.268660807 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.272624191 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.274019853 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.270987099 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.271985011 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.273219527 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.270217865 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.272599711 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.272106956 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.27435943 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.271514866 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.272561717 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.272607014 seconds)
  done (took 24.096660799 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.287287559 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.295197233 seconds)
  done (took 3.778261111 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.411373825 seconds)
    (2/7) benchmarking "second"...
    done (took 1.313704939 seconds)
    (3/7) benchmarking "month"...
    done (took 1.387711094 seconds)
    (4/7) benchmarking "year"...
    done (took 1.378071581 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.314472357 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.291225832 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.314746909 seconds)
  done (took 10.605583996 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.278090695 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.469966086 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.579476394 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.871731393 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.276818096 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.282515662 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.232624631 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.280370877 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.281121721 seconds)
  done (took 14.749370309 seconds)
done (took 77.915278825 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.269841092 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.342162176 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.292085628 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.285906911 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.570649 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.306579793 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.26632013 seconds)
done (took 16.529631733 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.273679126 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.26077154 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.259200651 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.269392816 seconds)
  done (took 10.257278231 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.269923676 seconds)
    (2/2) benchmarking "read"...
    done (took 1.620644749 seconds)
  done (took 5.08629573 seconds)
done (took 16.54114025 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.277257842 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.273766281 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.27479492 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.280422011 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.276154542 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.278733406 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.276112836 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.277409537 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.276992171 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.278750207 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.277505585 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.278870893 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.277196462 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280003265 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278556048 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276651814 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.276770175 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279754685 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.276671713 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275980136 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.276573398 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.27871675 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.277869366 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.276627575 seconds)
  done (took 31.855470662 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.27861372 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.275273562 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.280606423 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.281050017 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.275683264 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.280115572 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.27968081 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.277406532 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.279331755 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.278044877 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278057301 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.278841205 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.281633926 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.275761114 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280066805 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.276990805 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.281967937 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275788296 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279123138 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.279173005 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.282028209 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279204211 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.27785139 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.280519652 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.277331133 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278363862 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.282180577 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.277731395 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.284343279 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.280054762 seconds)
  done (took 39.572717452 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.285407591 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.288802469 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.281880523 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.281830703 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.282891741 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.284700872 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.28274059 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.283773719 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.282291477 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.285882854 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.281920625 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.282881463 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.283815448 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.283365311 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.28291369 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.282734527 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.283402124 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.283623321 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.284240721 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.284097898 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.283593252 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.284495756 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.285252101 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.283085904 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.28469221 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.282534419 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.281991717 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.284012933 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.283548867 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.281930609 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.283209992 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.282671067 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.284969945 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.284692164 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.283622277 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.283538877 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.288447586 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.290823202 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.2839643 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.284042882 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.285540573 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.284051014 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.283994156 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.283957843 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.282754407 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.285565371 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.286170171 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.287489174 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.285577032 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.286924532 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.286034803 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.28875155 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.286106492 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.287113029 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.283832501 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.284626951 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.286932579 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.283505819 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.287200727 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.285255614 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.282831167 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.285590054 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.286898902 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.284930222 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.285437306 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.285752032 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.287750674 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.286733483 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.286191675 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.28763755 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.287949239 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.2864747 seconds)
  done (took 93.708280595 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.287554864 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.285268727 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.283069847 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.285658756 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28483224 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.288415687 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.284859683 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286889114 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285468629 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.290055332 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285593886 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.286042633 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283730507 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.287390146 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.287708037 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.285012264 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.286222423 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.286250262 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.286945778 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.287274713 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286726037 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.287021286 seconds)
  done (took 29.507250713 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2875733 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.286289442 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.285212855 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.288838178 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.287805952 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.288036836 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.287431986 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.288560206 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286149889 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287803749 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286508916 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28702037 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.285984269 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286039918 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285142056 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.286348822 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289482618 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.287311598 seconds)
  done (took 24.375658715 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.287936811 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.285090544 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.289665097 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.284226849 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.288121499 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.290213014 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288075109 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.292142723 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.28926165 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.288627693 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.288436153 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287656822 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.285892684 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286917535 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289761154 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.2867852 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.290370921 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286320224 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.289237973 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.287418078 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.288375908 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.287644036 seconds)
  done (took 29.546354283 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287444944 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.288734397 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.287414257 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.285868322 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.286076422 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.291066453 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.289672695 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.287608844 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.291628577 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.291260168 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287824719 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.291846558 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.289189176 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.287434815 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.290034102 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285720571 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29152862 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286902434 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29081749 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.289955873 seconds)
  done (took 26.990728766 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292332192 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290854408 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.292600841 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.29329907 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2910095 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.290139608 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294148341 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.294779934 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.293599256 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.295719448 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.295065517 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.291918701 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291046135 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.295147299 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.296148037 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29307894 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.293912172 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.292019675 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.292108287 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293472475 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.293671786 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.293670429 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.296641819 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.293472805 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.294858326 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.296469286 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293906781 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.293753073 seconds)
  done (took 37.433120587 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293094468 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.294181942 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.291725189 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.290374854 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.293390054 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.291156718 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.292680596 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.287356315 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.290095865 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.288187785 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.289744447 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.29563321 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.293872457 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.297214246 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.293434271 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.293547761 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294300968 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.291474487 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.291835027 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293089803 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.294328646 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297349008 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.295507209 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.289500427 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289890376 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.291389792 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293849273 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.294805115 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29601673 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.295028915 seconds)
  done (took 40.003264694 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.340969605 seconds)
    (2/2) benchmarking "in"...
    done (took 1.335953482 seconds)
  done (took 3.893637796 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.292583221 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295807457 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.295788356 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.291123288 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.292432083 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.298577673 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.297188498 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291467188 seconds)
  done (took 11.573206727 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.292517452 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.294243653 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.295162214 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.295801844 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.294236132 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.293089854 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.302260318 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.318517909 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.298503397 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.300526478 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.302329431 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.3022389 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.296930837 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.29674957 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.295997843 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.29745557 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.296480053 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.297959811 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.299163219 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.300385386 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.295258033 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.30278466 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.301413362 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.296132439 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.299401385 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.307406178 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.302973949 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.300496996 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.297345144 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.30268298 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.300329097 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.293933275 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.299652206 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.300303824 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.300574895 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.297725292 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.308061713 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.321674954 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.308105028 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.296703598 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.299912472 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.296129183 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.297156629 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.300097516 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.301360637 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.300694436 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.304715286 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.297880714 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.304330611 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.306684429 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.308448625 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.302096267 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.299644826 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.305806181 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.303460055 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.310953744 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.325508427 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.307660701 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.311971044 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.314884587 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.315044062 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.331267589 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.306421052 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.303015798 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.318758519 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.32827848 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.310348647 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.325667644 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.301923223 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.304653054 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.309987422 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.316672629 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.332743342 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.305297828 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.306485726 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.306086452 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.305330881 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.307737405 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.310986442 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.330888474 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.307130923 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.305751904 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.317223572 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.331639715 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.307950096 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.308052465 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.306962019 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.307911665 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.310337934 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.317048822 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.328650602 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.307500001 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.304683956 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.30779666 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.309545862 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.306489181 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.307447047 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.30817112 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.306445285 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.306577049 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.306256024 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.310182691 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.315256742 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.307225478 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.307967957 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.31581599 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.309192216 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.307898119 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.312204884 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.308339844 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.308300626 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.31242991 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.316169985 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.305623147 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.310434369 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.314950362 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.30697234 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.312854146 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.308357534 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.311510166 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.318052926 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.337257076 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.30851605 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.308993719 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.316315899 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.318849078 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.309251515 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.312834093 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.308727366 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.306974841 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.305664587 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.307163755 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.30972858 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.30879697 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.305767924 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.312636125 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.307158517 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.313159601 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.307530637 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.31264287 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.311057667 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.308910644 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.308870975 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.308843013 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.311185063 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.311770593 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.313653449 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.309715552 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.313004351 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.310452508 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.307569613 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.307689429 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.310553517 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.307197395 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.309548539 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.310028649 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.314075043 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.306988195 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.311734889 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.310253117 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.31178431 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.312928605 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.314457716 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.311733826 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.314038423 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.31115917 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.309766187 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.310079713 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.314345619 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.308429852 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.311540733 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.311281132 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.315783734 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.322524545 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.31537041 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.312039206 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.316363554 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.315029114 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.313013381 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.313180373 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.318809074 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.322297337 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.314789246 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.320703078 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.313615863 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.312988514 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.314069849 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.316616511 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.314611523 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.314276961 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.317608238 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.323488022 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.323745468 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.343476049 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.31737543 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.317876751 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.316354243 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.317171885 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.315677086 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.315260339 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.315465271 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.317153261 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.313642511 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.313167625 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.316947376 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.314268013 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.316918457 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.315600771 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.314870183 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.310687973 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.316585312 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.31694652 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.316342412 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.312363245 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.314309935 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.315435568 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.317868266 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.312174083 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.313077139 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.315501776 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.317029142 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.316274034 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.322883996 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.312238517 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.318066583 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.31850252 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.316152569 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.318702352 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.31739566 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.317930691 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.318427873 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.323649602 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.339693426 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.3174784 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.323439265 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.336103668 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.313588962 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.319990134 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.320124812 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.315665079 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.32223736 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.324764333 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.320916697 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.313749042 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.318485328 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.318469562 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.319760065 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.32548051 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.317323396 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.316956361 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.318418873 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.321851528 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.316355586 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.318763925 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.319602906 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.320101737 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.32240279 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.320135644 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.317573634 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.319095506 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.319848557 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.322325923 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.31935679 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.323778637 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.327023666 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.326672144 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.319498431 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.321627905 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.320828186 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.323049017 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.318317184 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.316525609 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.318469529 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.332537146 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.347013097 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.327118132 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.342456404 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.320880628 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.323127495 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.341921278 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.32238796 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.321890332 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.319767983 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.32167983 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.320653868 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.316723212 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.324044167 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.32179472 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.322627174 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.321004772 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.325608736 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.320319789 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.320986872 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.318099913 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.319787167 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.320846247 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.322924379 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.321722818 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.322753428 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.323581954 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.320124055 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.319343434 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.328476009 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.343647961 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.325717088 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.319026304 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.320958799 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.319640345 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.320946721 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.318683735 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.323668172 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.328197117 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.326818402 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.329490173 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.323695541 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.329374874 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.318902785 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.326462795 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.33298048 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.318420308 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.322096949 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.321305949 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.32150649 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.328696749 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.343927132 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.324774631 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.326778818 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.322813671 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.321902737 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.322192063 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.325481197 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.324048078 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.323454487 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.332829756 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.34828313 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.328574335 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.323675603 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.322956147 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.322699004 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.32199687 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.324219881 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.324082607 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.322134399 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.323111109 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.321686189 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.32323596 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.324811025 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.32376024 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.32539735 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.319261577 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.32206709 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.330531116 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.347494333 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.325873357 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.32135531 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.329259579 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.321833377 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.329999017 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.344326935 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.326584948 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.324223986 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.324343286 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.324236215 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.323634794 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.325624822 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.322413425 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.32572434 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.3304237 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.324142977 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.324641859 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.325228491 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.321799985 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.325757328 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.33313694 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.348049103 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.326745743 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.331698327 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.320431277 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.325552552 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.329054892 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.328451177 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.324393435 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.331350747 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.339862247 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.33551932 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.326718858 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.325318626 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.325672054 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.836773534 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.325618788 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.328845268 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.324502863 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.327004786 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.327920812 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.325710551 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.327840049 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.328071121 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.325279517 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.328094806 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.328488838 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.335604188 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.326372603 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.327035622 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.325756798 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.329027568 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.32666648 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.330449052 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.326183359 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.323722321 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.325345246 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.327997634 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.334235213 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.334468011 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.331137774 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.329225931 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.326161284 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.328032834 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.326003226 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.327554367 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.327565829 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.326443597 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.329565259 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.32901733 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.329863529 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.326156203 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.329751358 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.329276089 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.327786536 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.334733897 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.335716803 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.331082096 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.328202269 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.331994379 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.330481937 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.328741545 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.331880369 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.335351498 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.332528282 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.342646477 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.342211783 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.333647424 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.330359105 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.331023277 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.337961127 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.329242389 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.329748861 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.328097486 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.329805996 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.32945315 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.334290129 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.329934904 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.336333701 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.329161635 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.328114753 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.339758675 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.355788096 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.334740867 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.33172306 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.334164253 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.331633422 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.331249783 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.332345656 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.331841931 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.339030449 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.359945294 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.330798969 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.336234195 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.331651578 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.336566357 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.336350979 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.336512957 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.330976065 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.329403474 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.332610767 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.331112355 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.334189752 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.329835138 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.331502895 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.331140467 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.337018857 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.341516646 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.33184955 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.333694186 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.333129432 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.334101558 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.332160254 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.337588109 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.333255224 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.330795157 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.33253349 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.333454852 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.335868416 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.333495498 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.334636968 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.336647264 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.335511592 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.335995419 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.340744555 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.347291785 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.342912167 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.331596353 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.336303271 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.335843706 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.337070756 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.33291182 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.335298812 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.336676488 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.33631333 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.33609924 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.33685246 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.336309356 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.339596927 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.352620187 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.361067387 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.337416322 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.335310984 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.338480596 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.336206217 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.335054323 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.337098095 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.337623222 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.342235089 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.347203811 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.341269759 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.344616866 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.361166987 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.339058173 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.342836808 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.343423436 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.346024995 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.34500485 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.339746321 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.335755241 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.34466347 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.353509349 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.341593838 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.346862586 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.369688818 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.363094468 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.341399608 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.338833684 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.340345739 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.341965161 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.342192583 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.339925818 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.339490668 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.340464989 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.341101228 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.339247798 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.343388613 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.339825428 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.342215596 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.340502671 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.339635207 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.342569325 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.339354457 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.341732644 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.340869186 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.33888222 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.340278887 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.340911082 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.338922717 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.354871722 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.370953763 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.343450901 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.340871418 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.336967775 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.344962816 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.346021582 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.355600837 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.350223722 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.340397123 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.340254672 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.342248498 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.342630844 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.342909632 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.341921963 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.338914398 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.342011199 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.337740862 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.35279247 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.3726846 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.348267693 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.341053169 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.3424805 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.342701608 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.342042283 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.343248298 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.34189339 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.343558258 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.343271269 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.34574503 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.342151664 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.34466178 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.347342199 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.352694491 seconds)
  done (took 790.535795557 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.341178804 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.338858677 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.338779858 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.343518359 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.341021957 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.342048906 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.338381253 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.337812072 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.340794478 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.341319704 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.340023963 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.339884659 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.34154904 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.338706524 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.343293327 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.342521917 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.344177821 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.337324695 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.340220484 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.3401281 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.340875259 seconds)
  done (took 29.414265104 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.34364732 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.341435646 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.341057781 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.341454113 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.342636043 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.345897234 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.339539284 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.341970206 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.343055894 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.338356254 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.343830862 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.345821406 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.338243399 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.339464887 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343094177 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.344558751 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.345083583 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.338559336 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.345373296 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.339884286 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.344739848 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.341584843 seconds)
  done (took 30.790841365 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.344409103 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.347698702 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.345289803 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.34298331 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.347407945 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.342706618 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.344033252 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.345067314 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.346909657 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.346582005 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.344115352 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.348605189 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.355525348 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.353541323 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.348993208 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.347380455 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.345938229 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.345167038 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.347694998 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.34577523 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.353473653 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.367596926 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.34624428 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.349290818 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.348055294 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.348457498 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.347495378 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.347440217 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.348179621 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.353053632 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.345776829 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.349744339 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.348460979 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.347080483 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.350157603 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.354155992 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.348364515 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.345066229 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.349418338 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.35753791 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.36886492 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.34734194 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.351753501 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.370745603 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.348215156 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.351419407 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.354030796 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.345290483 seconds)
  done (took 66.042179604 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 2.029772643 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.075370828 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 2.08661226 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.004209428 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.032498593 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.99677963 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 2.003631411 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.99682382 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 2.013632114 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 2.009423321 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 2.000331659 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.087438756 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.995325222 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 2.047668698 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 2.098803713 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.016075788 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.047484492 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.078190546 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 2.051811443 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.99680821 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 2.048521888 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 2.064564299 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.062101694 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.055822067 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.031538942 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.063934296 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.091693927 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 2.09077397 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.063587929 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.068754989 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 2.021939108 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.988454671 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.000702879 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.998278319 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.992707452 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.993830487 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 2.028667424 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 2.010781378 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.995586574 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.997260966 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.990490408 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.057443716 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.994680919 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.037282219 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.075294312 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.994616685 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.069406312 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 2.049568596 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 2.064971804 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 2.031432404 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 2.027469495 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.991863028 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.022499463 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.994420041 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.999133801 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.034896999 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 2.050921684 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.010297369 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.007003928 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.044049597 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.00043855 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.076573196 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.073002242 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 2.093790047 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 2.101384985 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.056893328 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 2.076456302 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.036469596 seconds)
  done (took 139.665199225 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.354911496 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.356832885 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.358122197 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.358871385 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.359315023 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.357728255 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.356605221 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.35794727 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.3560277 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.357603351 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.356071595 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.358377522 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.357878394 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.35851509 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.357484182 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.359369844 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.3580754 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.359340742 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.358140708 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.355344368 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.355122501 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.358058334 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.358097135 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.358232564 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.356721824 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.358696567 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.359151092 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.357790459 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.358118272 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.356889564 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.358386439 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.359867023 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.357545619 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.359596401 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.36146327 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.35958748 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.359817128 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.360124446 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.358998383 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.356610687 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.356219337 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.359584022 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.359870864 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.359370011 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.359133463 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.358426961 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.360485326 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.360650963 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.360935406 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.357495659 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.361170032 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.360448348 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.359857898 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.358625752 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.357367532 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.359432305 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.360604871 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.360952464 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.360389141 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.358872847 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.358582536 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.359215438 seconds)
  done (took 85.49902289 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.359481712 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.359037027 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.358697373 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.35755135 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.358128405 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.357046623 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.359230912 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.363642413 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.363929262 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.361430444 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.362458354 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.360520704 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.358618504 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.361890339 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.361373315 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.358201107 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.354164133 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.358553325 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.359900252 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.362069862 seconds)
  done (took 28.471463254 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.358996002 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.359313057 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.355942189 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.356875567 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.356719176 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.358185819 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.360500708 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.36185698 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.358206703 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.359961059 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.362089547 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.363353953 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.360516752 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.362407995 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.361061348 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.359769029 seconds)
  done (took 23.028926176 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.360815373 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.362832823 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.36090404 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.362148749 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.359646594 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.358891705 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.364445778 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.362006056 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.360070484 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.364585119 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.367267985 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.363392388 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.364738234 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.360004514 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.363465786 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.363218609 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.363720766 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.364023929 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.366375645 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.362720822 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.361548533 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.360408681 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.365336139 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.363000128 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.363341287 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.360171701 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.36203693 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.360414743 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.36481263 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.364095761 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.361089061 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.364441125 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.363952806 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.365644919 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.365036726 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.365926183 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.362741379 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.364841798 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.366846752 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.365279082 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.365188539 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.364749872 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.367371793 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.368189375 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.358430889 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.365271712 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.359812206 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.361688429 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.364143522 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.365627617 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.367038213 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.367549139 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.36699851 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.365063756 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.364488948 seconds)
  done (took 76.27490177 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.365259673 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.365491882 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.36480189 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.36523743 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.367922804 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.363362188 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.367964945 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.365124207 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.365788974 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.366733423 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.3693348 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.366767127 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.368826948 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.37106292 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.366761587 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.370304003 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.368778604 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.365355822 seconds)
  done (took 25.88027804 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.367889731 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.368042415 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.369187582 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.364244781 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.367114786 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.370196552 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.367526936 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.370589752 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.369263875 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.367030816 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.365914587 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.367815162 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.367073306 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.370287217 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.36589475 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.366705546 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.369754472 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.37127301 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.365560139 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.366380904 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.368263665 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.366503889 seconds)
  done (took 31.374205552 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.367612191 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.36893811 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.368870486 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.386389694 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.390666936 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.368643149 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.370815655 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.369112937 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.391997371 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.43255063 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.423981357 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.388502767 seconds)
  done (took 17.911850985 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36598866 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374264038 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.368459745 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372226753 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371981781 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36910006 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370206596 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367870954 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369579278 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369539916 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366846519 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371713815 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374268669 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371394004 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371578355 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.37231031 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369771328 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368870274 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372145382 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.373680612 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367889648 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371681071 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370715267 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370640955 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370198354 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367154372 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373315096 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369479634 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370702085 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374225292 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373722907 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370309627 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375839061 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370729421 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374720283 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.373474347 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370584499 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374336562 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373294513 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.371009121 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.373548578 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374554253 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.372215339 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370355669 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373728411 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366498283 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370940827 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375114017 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374946744 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.378549291 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376416885 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3727776 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.376977087 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.376465679 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375562801 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372280739 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.371125085 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36743399 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.376214244 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.373128011 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372728504 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.374381621 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368634288 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373031411 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370770037 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372916115 seconds)
  done (took 91.834249071 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372007027 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.373029565 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372036909 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371536635 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370245168 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371981032 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37352924 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.37148569 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370177827 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375546998 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372414612 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.374156839 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373970662 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372889564 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372177024 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3736364 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369052376 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371904936 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37296393 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37618216 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372811028 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372730876 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.372091463 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37528118 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376180161 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375869912 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.371542942 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.372624054 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376242627 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372467765 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.371522373 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.376658999 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376858905 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.374429832 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374581514 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374631029 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.377246439 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372254526 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375296503 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.377787206 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375305954 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375004333 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.37773141 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.376272967 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.373385509 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.374615052 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.37297523 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.376159601 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.376709546 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371974736 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375382339 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380461079 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.377098936 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376168831 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.375533263 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378247412 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.373605693 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377473358 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376372451 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.378215675 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.377983149 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.377751833 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379899922 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.377396887 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.377087613 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.376918906 seconds)
  done (took 92.020151588 seconds)
done (took 1898.399378636 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.546744758 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.49557724 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.374787848 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.387359916 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.38032756 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.399745495 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.397527722 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.380318771 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.379358921 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.381751332 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.380535084 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.571740725 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.373989567 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.381346447 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.38139919 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.479801019 seconds)
  done (took 27.985146996 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.41064533 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.388216346 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.513419638 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.407418103 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.413377742 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.595028418 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.447889035 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.38447121 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.584464185 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.435009788 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.378469028 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.415686392 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.385551682 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.37816413 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.405443055 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.594586086 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.67097119 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.373423354 seconds)
  done (took 30.47510837 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.910294187 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.414963801 seconds)
  done (took 5.619325873 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.405072291 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.382187267 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.3846924 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.380584015 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.372775401 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.372096688 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.380719514 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.376319474 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.379580475 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.528224426 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.385560386 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.395433101 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.405273886 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.385846481 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.378671769 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.425435707 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.55611929 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.382420159 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.380093629 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.388186053 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.382869603 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.481571751 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.428751051 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.381445283 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.526541039 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.380780335 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.388139518 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.391533161 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.516069632 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.382194229 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.381647496 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.382770135 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.387012212 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.355211761 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.923561234 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.376596496 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.412718556 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.393483651 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.382044038 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.539275855 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.386300446 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.391036216 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.374585903 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.884508024 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.551963872 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.51633527 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.405000605 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.38988396 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.388277298 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.454151284 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.386512672 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.385643986 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.431438315 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.228456499 seconds)
  done (took 88.328172837 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.385489638 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.377878013 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.560903675 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.398264645 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.377832313 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.381508541 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.380362761 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.708739825 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.400277953 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.379805067 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.73595211 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.99352302 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.407833643 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.420659738 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.302580805 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.454158358 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.377209658 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.40213151 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.377990411 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.38315808 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.962479357 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.380371703 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.401680705 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.513313416 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.4198991 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.942539182 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.386983722 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.390509917 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.38353128 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.378646753 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.947842523 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.407331801 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.439575085 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.380981445 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.673243701 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.808788781 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.76568908 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.386076294 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.390085398 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.385255069 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.3899691 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.928432063 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.796155331 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.382053028 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.381835984 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.93402862 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.381471117 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.388567272 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.387038081 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.63672646 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.381086546 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.382730319 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.401940311 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.403742403 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.382120762 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.503251548 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.449465617 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.948668076 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.383548108 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.382665735 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.453467899 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.381950628 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.382526796 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.384315198 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.40651391 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.802004929 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.530811572 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.381987982 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.788082876 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.96160437 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.407506503 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.028881584 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.406612544 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.399994737 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.604187823 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.383993549 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.383022694 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.963375319 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.428329924 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.385705037 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.771985354 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.385400036 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.736279876 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.415875338 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.384373119 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.977496166 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.393035075 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.467875908 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.382939042 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.382738597 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.383396389 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.385698647 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.687507667 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.442474436 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.384470838 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.385117942 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.411658868 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.392735655 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.38442113 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.388378662 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.032172287 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.413230488 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.385275005 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.388409403 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.38616958 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.385268402 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.384254147 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.387599042 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.657429811 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.38460195 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.411303539 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.384960232 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.384983859 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.389079117 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.525257603 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.397416034 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.746880393 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.387550157 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.389824666 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.412781224 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.387195253 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.39035331 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.389419458 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.389935101 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.28620039 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.652593874 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.410102022 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.390011598 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.388000404 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.389141459 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.389046254 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.407328139 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.421330859 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.391371776 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.200895983 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.409374497 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.420237593 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.386896773 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.401137841 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.403957657 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.38960667 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.390903502 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.691624232 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.694576859 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.537889745 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.394158038 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.398313897 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.182040197 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.420482295 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.572467864 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.411539767 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.388070805 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.641312775 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.625808611 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.388208635 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.388702473 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.3898272 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.653886801 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.389731528 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.704997632 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.981529904 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.409185179 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.390751729 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.205831802 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.11442401 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.393779145 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.395954111 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.747376921 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.4114714 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.38972419 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.391333379 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.392164609 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.409657354 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.412792205 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.390492324 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.390629664 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.390899142 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.437217909 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.585428815 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.411007777 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.396189299 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.949050921 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.397383585 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.398295527 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.390673813 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.390644608 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.390585666 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.447996122 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.395500217 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.404094639 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.394803811 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.394249435 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.97568878 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.392673434 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.391579402 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.586934735 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.13435016 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.413627871 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.393826697 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.413865287 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.28332578 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.007293855 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.429118425 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.750303918 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.394226255 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.43317647 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.392431337 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.439916806 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.974712754 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.396312301 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.415827654 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.101476796 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.411911202 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.917415569 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.393095649 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.394707236 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.054534979 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.413875991 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.3947194 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.392674434 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.424659377 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.6948196 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.394078958 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.400574639 seconds)
  done (took 512.691071031 seconds)
done (took 666.389882017 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.392602164 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.399011155 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.38525819 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.396544794 seconds)
  done (took 10.881144698 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.403100845 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.399924018 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.401151972 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.39830741 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.403002225 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.401535188 seconds)
  done (took 9.723494047 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.394937328 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.401987727 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.399436118 seconds)
  done (took 8.506921588 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.633389488 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.418105424 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.803882875 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.421707925 seconds)
  done (took 9.589676109 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.401512428 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.402664573 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.402832196 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.402653948 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.406424219 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.405352398 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.403751074 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.404004898 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.407524195 seconds)
  done (took 13.947029068 seconds)
done (took 53.954658464 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.459024796 seconds)
    (2/286) benchmarking ("sort", Float32, true)...
    done (took 1.991774293 seconds)
    (3/286) benchmarking ("sort", Int8, true)...
    done (took 1.741866781 seconds)
    (4/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.241121621 seconds)
    (5/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.321254803 seconds)
    (6/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.517854329 seconds)
    (7/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.063490234 seconds)
    (8/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.420341942 seconds)
    (9/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.468910076 seconds)
    (10/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.113629413 seconds)
    (11/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.488734751 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.438286908 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.413054836 seconds)
    (14/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.479576041 seconds)
    (15/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.419371853 seconds)
    (16/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.516974761 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.41100825 seconds)
    (18/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.40982551 seconds)
    (19/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.613035804 seconds)
    (20/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.614753857 seconds)
    (21/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.394916862 seconds)
    (22/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.561422385 seconds)
    (23/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.502917121 seconds)
    (24/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.569394349 seconds)
    (25/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.503738803 seconds)
    (26/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.773570771 seconds)
    (27/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.448015209 seconds)
    (28/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.560531369 seconds)
    (29/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.471153846 seconds)
    (30/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.408842793 seconds)
    (31/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.409884482 seconds)
    (32/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.407275896 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.509765043 seconds)
    (34/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.412179771 seconds)
    (35/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.738715118 seconds)
    (36/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.413189039 seconds)
    (37/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.410619021 seconds)
    (38/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.419301087 seconds)
    (39/286) benchmarking ("sort", Int64, true)...
    done (took 1.829318065 seconds)
    (40/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.425185983 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.4125737 seconds)
    (42/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.483550473 seconds)
    (43/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.513303909 seconds)
    (44/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.410715074 seconds)
    (45/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.3993961 seconds)
    (46/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.404981612 seconds)
    (47/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.413649321 seconds)
    (48/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.445013449 seconds)
    (49/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.411919484 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.423376034 seconds)
    (51/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.485741476 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.45281095 seconds)
    (53/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.404877442 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.513984761 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.410707916 seconds)
    (56/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.571190091 seconds)
    (57/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.42093604 seconds)
    (58/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.540558273 seconds)
    (59/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.174760677 seconds)
    (60/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.435512292 seconds)
    (61/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.416274195 seconds)
    (62/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.398927764 seconds)
    (63/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.488249924 seconds)
    (64/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.418242371 seconds)
    (65/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.502389752 seconds)
    (66/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.059946517 seconds)
    (67/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.401999256 seconds)
    (68/286) benchmarking ("sort", BigInt, false)...
    done (took 2.414526651 seconds)
    (69/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.06512092 seconds)
    (70/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.417663306 seconds)
    (71/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.388204098 seconds)
    (72/286) benchmarking ("sort", Float32, false)...
    done (took 1.5675017 seconds)
    (73/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.592782673 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.514463252 seconds)
    (75/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.486234539 seconds)
    (76/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.407549125 seconds)
    (77/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.132447092 seconds)
    (78/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.487214147 seconds)
    (79/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.403628843 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 1.635557512 seconds)
    (81/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.562658832 seconds)
    (82/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.462966197 seconds)
    (83/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.187574583 seconds)
    (84/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.485347593 seconds)
    (85/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.408247857 seconds)
    (86/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.502719998 seconds)
    (87/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.503152746 seconds)
    (88/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.485305838 seconds)
    (89/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.566313788 seconds)
    (90/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.456146962 seconds)
    (91/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.432495596 seconds)
    (92/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.41700971 seconds)
    (93/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.389701224 seconds)
    (94/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.568225713 seconds)
    (95/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.481711161 seconds)
    (96/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.608772654 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.518200421 seconds)
    (98/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.478475268 seconds)
    (99/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.598830482 seconds)
    (100/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.64538395 seconds)
    (101/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.182526573 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.611097255 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.426860606 seconds)
    (104/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.403472955 seconds)
    (105/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.469408518 seconds)
    (106/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.402757948 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.464609877 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.455299878 seconds)
    (109/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.492589533 seconds)
    (110/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.418752265 seconds)
    (111/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.415697119 seconds)
    (112/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.461928462 seconds)
    (113/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.41335479 seconds)
    (114/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.427087621 seconds)
    (115/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.498164353 seconds)
    (116/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.250910118 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 1.437161304 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.414882678 seconds)
    (119/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.428434392 seconds)
    (120/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.432636171 seconds)
    (121/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.516865941 seconds)
    (122/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.394447368 seconds)
    (123/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.661913649 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.459062601 seconds)
    (125/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.198612741 seconds)
    (126/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.42060737 seconds)
    (127/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.620081545 seconds)
    (128/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.427591129 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.506087804 seconds)
    (130/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.422655779 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.431336378 seconds)
    (132/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.423947969 seconds)
    (133/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.462939985 seconds)
    (134/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.462974612 seconds)
    (135/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.304672179 seconds)
    (136/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.441803509 seconds)
    (137/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.406961199 seconds)
    (138/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.198556517 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.533693989 seconds)
    (140/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.427748575 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.421989913 seconds)
    (142/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.422626064 seconds)
    (143/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.495676269 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.482138328 seconds)
    (145/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.48396189 seconds)
    (146/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.59089423 seconds)
    (147/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.420206617 seconds)
    (148/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.55063796 seconds)
    (149/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.570339205 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.525239336 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.415612474 seconds)
    (152/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.420343222 seconds)
    (153/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.458747013 seconds)
    (154/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.42549428 seconds)
    (155/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.422505528 seconds)
    (156/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.511531033 seconds)
    (157/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.43652344 seconds)
    (158/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.431878436 seconds)
    (159/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.554673919 seconds)
    (160/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.48758279 seconds)
    (161/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.455980753 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.590408503 seconds)
    (163/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.432049252 seconds)
    (164/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.428361376 seconds)
    (165/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.451268889 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.464356453 seconds)
    (167/286) benchmarking ("sort", Float64, false)...
    done (took 1.613596212 seconds)
    (168/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.446120217 seconds)
    (169/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.418304629 seconds)
    (170/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.518449087 seconds)
    (171/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.42739565 seconds)
    (172/286) benchmarking ("sort", BigInt, true)...
    done (took 2.409277321 seconds)
    (173/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.418683951 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.482778999 seconds)
    (175/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.415995134 seconds)
    (176/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.421992885 seconds)
    (177/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.546127973 seconds)
    (178/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.558753788 seconds)
    (179/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.460398914 seconds)
    (180/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.408514435 seconds)
    (181/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.678213604 seconds)
    (182/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.079448225 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.591610341 seconds)
    (184/286) benchmarking ("sort", Bool, true)...
    done (took 1.615607904 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.424457488 seconds)
    (186/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.416806725 seconds)
    (187/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.077738104 seconds)
    (188/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.409479978 seconds)
    (189/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.484959084 seconds)
    (190/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.510864312 seconds)
    (191/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.427801515 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.43569782 seconds)
    (193/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.409455751 seconds)
    (194/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.494140266 seconds)
    (195/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.610842286 seconds)
    (196/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.57400276 seconds)
    (197/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.586456441 seconds)
    (198/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.431486145 seconds)
    (199/286) benchmarking ("sort", Int8, false)...
    done (took 1.631341396 seconds)
    (200/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.415721826 seconds)
    (201/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.191389771 seconds)
    (202/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.632365011 seconds)
    (203/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.433339294 seconds)
    (204/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.588870003 seconds)
    (205/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.455963938 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.437294515 seconds)
    (207/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.33682063 seconds)
    (208/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.537958835 seconds)
    (209/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.649612471 seconds)
    (210/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.429332237 seconds)
    (211/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.4279073 seconds)
    (212/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.66076707 seconds)
    (213/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.706675236 seconds)
    (214/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.427318606 seconds)
    (215/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.8159149 seconds)
    (216/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.493797558 seconds)
    (217/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.798659716 seconds)
    (218/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.444218076 seconds)
    (219/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.629234285 seconds)
    (220/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.404600524 seconds)
    (221/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.49379088 seconds)
    (222/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.560063659 seconds)
    (223/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.438406816 seconds)
    (224/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.431834408 seconds)
    (225/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.067892549 seconds)
    (226/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.321068487 seconds)
    (227/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.451614705 seconds)
    (228/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.456623824 seconds)
    (229/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.499036976 seconds)
    (230/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.581945066 seconds)
    (231/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.409480361 seconds)
    (232/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.430624366 seconds)
    (233/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.068691177 seconds)
    (234/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.436425762 seconds)
    (235/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.618531303 seconds)
    (236/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.518421037 seconds)
    (237/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.495858103 seconds)
    (238/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.479312252 seconds)
    (239/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.534261179 seconds)
    (240/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.425349069 seconds)
    (241/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.423736775 seconds)
    (242/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.645772889 seconds)
    (243/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.575654886 seconds)
    (244/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.494529862 seconds)
    (245/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.555972564 seconds)
    (246/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.424221289 seconds)
    (247/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.509832965 seconds)
    (248/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.138490832 seconds)
    (249/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.425834042 seconds)
    (250/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.072603413 seconds)
    (251/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.428857332 seconds)
    (252/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.204816762 seconds)
    (253/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.524149239 seconds)
    (254/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.456181226 seconds)
    (255/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.402294765 seconds)
    (256/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.446247585 seconds)
    (257/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.434797799 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.52689284 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.440660251 seconds)
    (260/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.4299763 seconds)
    (261/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.427473437 seconds)
    (262/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.205845514 seconds)
    (263/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.621266014 seconds)
    (264/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.54689676 seconds)
    (265/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.453752608 seconds)
    (266/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.62460199 seconds)
    (267/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.45735468 seconds)
    (268/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.423043728 seconds)
    (269/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.416597039 seconds)
    (270/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.617117752 seconds)
    (271/286) benchmarking ("sort", Float64, true)...
    done (took 2.033724 seconds)
    (272/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.422488938 seconds)
    (273/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.404638278 seconds)
    (274/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.483763829 seconds)
    (275/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.415107299 seconds)
    (276/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.504424299 seconds)
    (277/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.4414211 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.424885032 seconds)
    (279/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.15107792 seconds)
    (280/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.417660723 seconds)
    (281/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.454419115 seconds)
    (282/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.616523482 seconds)
    (283/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.512623584 seconds)
    (284/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.418973523 seconds)
    (285/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.443990461 seconds)
    (286/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.430892051 seconds)
  done (took 494.927442352 seconds)
done (took 496.235112634 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.462137503 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.474575261 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.429508859 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.462662838 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.540394923 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.604520975 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.440588223 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.469409528 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.477051338 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.480080937 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.435516734 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.60448914 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.428438252 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.430712815 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.42960659 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.471228041 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.419306172 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.430330388 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.446490803 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.469044546 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.446366593 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.438108406 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.480412955 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.605663032 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.434298441 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.433608447 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.433207803 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.449954619 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.543396818 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.435792755 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.436125362 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.441965401 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.420225173 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.437164335 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.426188575 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.450624689 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.442668338 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.44172517 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.467727943 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.542968302 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.422435647 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.44483174 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.433917926 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.433973442 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.432719566 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.472055632 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.433556877 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.48956209 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.474211486 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.47452471 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.438151436 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.4461461 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.442141741 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.43524821 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.444900926 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.431744912 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.491654875 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.476672403 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.453303523 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.479850197 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.436834193 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.439435858 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.473196896 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.449139118 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.440207722 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.437295374 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.43198032 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.474562535 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.42480579 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.43807056 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.436100229 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.440470283 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.436282319 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.447495722 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.465515222 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.423359511 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.430539436 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.434644984 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.440346286 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.433347051 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.482941533 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.476827579 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.483829988 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.435489452 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.476332899 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.611499195 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.445465575 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.436232258 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.474175806 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.45561169 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.443012676 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.446794751 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.470588469 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.437517632 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.484826239 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.494240574 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.444511471 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.443421581 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.486209024 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.447586519 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.425740951 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.480194958 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.434107949 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.434527005 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.436119821 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.55783641 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.426763469 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.435849624 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.471270187 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.484953552 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.497062929 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.440943352 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.445760795 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.481845942 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.447415747 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.497302781 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.438760658 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.441666902 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.42565849 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.578636809 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.441680416 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.44995284 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.483643412 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.49945691 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.438562416 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.426985679 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.440462513 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.480279309 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.557942752 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.450030471 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.549778708 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.437231534 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.442900745 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.472960539 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.483042002 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.470177241 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.498953021 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.483513977 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.454249013 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.440355637 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.450297054 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.450805624 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.442068865 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.497481011 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.436352914 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.473673229 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.481331818 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.483244762 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.473091159 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.55997234 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.445237686 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.443578988 seconds)
done (took 239.533134148 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.499445415 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.435594904 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.538490552 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.437370404 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.549136807 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.542806968 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.434862437 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.43312344 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.432785021 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.813157118 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.434933287 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.434738705 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.437481737 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.435060157 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.520055577 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.439125181 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.435180973 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.800963774 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.4375374 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.512389006 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.437671448 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.436744551 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.438393565 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.819725697 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.438490383 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.43369162 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.512426156 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.439727406 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.787880914 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.433553583 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.43512627 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.784604064 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.532815846 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.455007866 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.44965558 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.446324597 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.555581868 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.460032763 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.522391932 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.521155183 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.541183693 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.476311668 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.435727082 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.43783538 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.440486389 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.439642824 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.43657843 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.466692559 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.436578214 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.438771654 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.782165761 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.449791336 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.448165814 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.437684503 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.437503913 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.459420126 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.43772831 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.442640145 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.539763473 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.444135752 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.50700646 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.826446479 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.819173912 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.444673839 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.440965209 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.441833286 seconds)
  done (took 111.598962151 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.514278517 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.522080118 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.569299786 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.448421448 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.49597702 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.574403285 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.448728002 seconds)
  done (took 11.91896835 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.451235176 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.44743754 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.496079837 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.496723745 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.444626218 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.66008582 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.445502163 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.456028624 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.443559939 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.522285401 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.44582364 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.447696546 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.451668566 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.443185774 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.495972021 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.457882282 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.564664008 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.447439948 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.446115372 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.600160531 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.445863032 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.452938001 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.525938855 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.457911108 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.445777216 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.45298011 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.403911558 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.44645391 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.443436694 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.446404116 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.444354167 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.5599597 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.447737512 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.443896496 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.4452945 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.610039124 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.447745696 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.44461123 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.447261411 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.44694785 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.447289436 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.447829178 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.447887446 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.446987848 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.44826544 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.471475736 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.448274523 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.44798107 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.448325414 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.448729004 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.528454291 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.449169682 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.445698496 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.446804642 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.527941648 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.454285621 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.448456622 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.446442843 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.449271106 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.44579882 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.601937588 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.497591808 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.449834824 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.496746215 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.4514232 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.450923691 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.450020756 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.449152385 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.544316552 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.452003814 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.499404556 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.447804296 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.676357682 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.474403036 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.453250621 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.451799105 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.454540387 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.449488477 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.445548913 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.455629229 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.448956325 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.451253126 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.457489496 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.448651479 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.447690026 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.636004493 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.610975316 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.448599989 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.463969603 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.459300425 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.448583887 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.528799525 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.451849649 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.449436405 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.503783028 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.571949787 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.529228058 seconds)
  done (took 149.430543814 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.456044363 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.462555618 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.45560208 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.474669018 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.454849561 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.453764423 seconds)
  done (took 10.110429854 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.454519667 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.454861706 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.452381731 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.453712367 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.45279273 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.453982101 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.454007372 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.455877887 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.457915504 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.455357034 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.453533834 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.455718409 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.453964052 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.452628925 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.453693684 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.454923977 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.454281607 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.451901156 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.45382317 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.453758127 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.453863754 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.453773841 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.453930417 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.45613264 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.459264561 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.455433799 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.463192762 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.457121235 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.455711309 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.461863587 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.477201684 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.456809761 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.458234816 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.464074292 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.46146926 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.458148698 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.461146775 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.456997423 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.455748869 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.455872827 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.457312218 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.456204204 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.456168272 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.458134525 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.460744861 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.464058606 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.463103089 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.466759223 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.456537775 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.458200338 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.459334115 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.459246471 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.456752881 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.457927431 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.462308001 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.483959408 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.462476128 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.456969488 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.457281469 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.458200043 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.459437441 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.45669725 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.45889106 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.46238214 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.455025438 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.458032282 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.462434602 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.462945438 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.458110535 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.45834572 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.459209195 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.457370624 seconds)
  done (took 107.337803548 seconds)
done (took 391.73328729 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.485871003 seconds)
  done (took 3.847076826 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.469130984 seconds)
  done (took 3.836192046 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.710706882 seconds)
  done (took 26.076715007 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.497992965 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.569255929 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.457245529 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.454025092 seconds)
  done (took 11.338675776 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.809344524 seconds)
  done (took 4.167994321 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.450800188 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.452503305 seconds)
  done (took 6.263623181 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.853401127 seconds)
  done (took 4.212314248 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.031447414 seconds)
  done (took 4.401143235 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.454387204 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.46582056 seconds)
  done (took 6.293765651 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.439899253 seconds)
  done (took 3.799349373 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.485292504 seconds)
  done (took 19.847911957 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.4586679 seconds)
  done (took 3.827059148 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.492126148 seconds)
  done (took 3.852687463 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.633704589 seconds)
  done (took 6.99207315 seconds)
done (took 110.114962815 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.450585663 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.457724023 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.456276351 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.454704681 seconds)
  done (took 11.177931092 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.493158152 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.491017975 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.493699626 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.503293623 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.495070497 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.495379699 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.500071714 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.485521664 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.505160432 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.49566113 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.494646723 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.499887712 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.492101613 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.496005917 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.493371988 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.496454183 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.504423131 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.496148532 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.493363007 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.497164056 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.461129577 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.505831549 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.501541518 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.460807132 seconds)
  done (took 37.218177809 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.977885047 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.53286052 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.614130041 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.513936049 seconds)
  done (took 8.001332297 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.522139959 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.535046299 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.541678506 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.58765554 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.605068646 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.539766481 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.483915042 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.483416349 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.470005736 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.529903165 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.591137877 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.524065529 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.610662854 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.460237608 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.652467376 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.461660091 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.463009144 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.539358144 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.577463447 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.594511258 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.4618361 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.530924976 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.542784517 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.52454015 seconds)
  done (took 38.19641065 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.462519083 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.474466522 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.461903088 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.461422831 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.472428275 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.462399146 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.462757927 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.463005847 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.461968101 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 2.058059318 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.486649583 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.475060625 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 2.026944316 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.488463615 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.468906661 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.464524024 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 2.040225673 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 2.055772065 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.487631357 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.469442433 seconds)
  done (took 33.068243406 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.456904375 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.45646224 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.806989843 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.714558075 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.458627233 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.456846003 seconds)
  done (took 14.716808724 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.549400479 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.710613811 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.462166723 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.89374336 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.975541985 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.467074843 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.466862455 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.754341773 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.147739483 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.140034054 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.536348224 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.544656041 seconds)
  done (took 22.019313611 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.458493228 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.4576268 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.460729914 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.477626243 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.531296693 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.469558757 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.473252693 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.458338673 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.536150812 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.534393034 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.468323795 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.531696137 seconds)
  done (took 23.225878246 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556315356 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.460089315 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.46917341 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.592304097 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463887886 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.310449109 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.481020099 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.23881846 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.48615412 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.733911956 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480733297 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562757701 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.719614777 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468947196 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.466544302 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.447625363 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699399531 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027569795 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463333942 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46174218 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497948298 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.476919778 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.481692923 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.723891192 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.466455606 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.462307223 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.723696243 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.460968676 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.806618604 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.482147153 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471475647 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.462859156 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.736004701 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218343334 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590912634 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.72147769 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471306394 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.48978529 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.48249613 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.467499606 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482349415 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.469597497 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473724817 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463623989 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.463033136 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.471409057 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253295053 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.493606802 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.462254219 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.462685557 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.786733417 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567827249 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.469714459 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.463933892 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.587514656 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468188107 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.46971344 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.462417879 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054309701 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46238503 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477988982 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.469539592 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.473253098 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490146879 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180487938 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.472837883 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.466563059 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.471701789 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463412963 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.481698994 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.484268726 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465065956 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.488984899 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464104528 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294790221 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.465731096 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490507875 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093085733 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476503821 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.468808297 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.700099082 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466160139 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465203051 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.464651428 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.46645166 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.313878723 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47811805 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.45137148 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.464647685 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.247884924 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.748386062 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489690142 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498910806 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.693206483 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.456860445 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468858592 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.467555761 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474595022 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489846274 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.249200391 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490640879 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.473683995 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.729421553 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.679160088 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474674703 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.461048542 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043618814 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500781364 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.488792539 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.475991945 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.731993903 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.17540865 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.490424416 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468447916 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507199106 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.469855403 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.361328627 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481821144 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.573997125 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.471148879 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.780862123 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.37429026 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471974909 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537406531 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476187843 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.471025083 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472357959 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477873165 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.471504662 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.719052075 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499661767 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.485024536 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.470861998 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47212833 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.473463565 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4717737 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.478013028 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.696415288 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472747856 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.746893529 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469931689 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472583789 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470334551 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.695523516 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.469515524 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.8123918 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.736181754 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471346688 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.471462662 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.482861429 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491476564 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575963571 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493826859 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.48486354 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.733954653 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.47566343 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.476740407 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474556349 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.476319181 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48103594 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.479723325 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500674344 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172202658 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450508933 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.480933824 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369766114 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.488211213 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542295325 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.479955964 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.735357843 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.477831551 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498430268 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.504162993 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.481860007 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.702523551 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.485367985 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.476866515 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.556916927 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.045908176 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.203212818 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491436005 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.474661883 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.471231565 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.469905466 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473948205 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473665325 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.475399368 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.732600653 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.494035 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.490524303 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.18448684 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477014246 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.476013886 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.48463613 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.490276418 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.482079686 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477038426 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.472796157 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47518256 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.480896581 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.488721596 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.620122024 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.488698328 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.47842964 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.995177964 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.481843052 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.477210125 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.476795688 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512011948 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.477823886 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364144967 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.741794584 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508154228 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824461799 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.483140962 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.497675528 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.475414275 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47949647 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483010136 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.49178099 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489716368 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.488766802 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.481331935 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48326737 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060229205 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321361063 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13514111 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483448028 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.493938909 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.483365782 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.29998885 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506155877 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479474195 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.749722105 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.311567539 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505882651 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057058629 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.504421488 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.380391758 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806153369 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.720218214 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482011494 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.488501715 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.812052986 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.699332063 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516143746 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.48334282 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485223412 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.467079451 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106209411 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501803069 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567751019 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265657735 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508151853 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.487362472 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.492438022 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.492174136 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978082438 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.507454751 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483960785 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.485993575 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.490702235 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371835603 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.489206885 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.481823677 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236548915 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.502735914 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.058757233 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510414616 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.744055479 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.497947164 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.488094711 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.478188282 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.500944953 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.73909406 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808619166 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488562505 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.496863283 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147694602 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.361210692 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.488534573 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484067878 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.339719875 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487889464 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836915295 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.490830729 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.488867332 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485988952 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.485028604 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485517961 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.481678684 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.489096396 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453575519 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052369151 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.542709763 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526989611 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.485766618 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489977761 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.74279077 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.498928811 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.172087213 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.717638792 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.533479042 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509029884 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.489482013 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496804076 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.478310997 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.486590653 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486141954 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547780319 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.712113038 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.503288891 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.473301823 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.488507801 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.700964266 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.486264917 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.491930932 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.78187665 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.490366542 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.514498922 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330573294 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521227556 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.492520538 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490273393 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.538850717 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.487016389 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56209454 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.749661145 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.519976303 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.498717045 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977434796 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513929057 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494621203 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.505043434 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586361489 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485786082 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.487838589 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.258883832 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175869648 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330385875 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.175506919 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.810648104 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.492402003 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48820139 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487283231 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649812472 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487175235 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.76663204 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487126425 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.535559955 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511722551 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49186232 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493937165 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.704692827 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.763519423 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48772449 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48909311 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493591413 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.490123881 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.497835591 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.701295133 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057081637 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120881849 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491375344 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.507103027 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.275868162 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.785629879 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489979372 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491367165 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488652768 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.511238587 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.499006276 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.495351818 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491845694 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639072428 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810333622 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225952085 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.523012253 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.519259177 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.263186699 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4893553 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.744204961 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503725353 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.756669454 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.196676339 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.333079963 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759693642 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560565092 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.748589056 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.496696175 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65498303 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.501204426 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.491002397 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490861829 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489659769 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.488966557 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.501969905 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195703743 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.766269571 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.495208371 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.50081418 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522538595 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.502015768 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.713489464 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.344690701 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.71889913 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.503137257 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.496622469 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.490844265 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.17012375 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.814493685 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497672587 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.495330801 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.773800596 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.49476266 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.515131004 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.181282424 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.488792884 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116308122 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.463324785 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516415361 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50811757 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306737017 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180412772 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.493915377 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059852962 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496810937 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509774714 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.76916792 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.498835171 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.510844921 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.774256974 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.497683268 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.511215813 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.761195205 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.180553115 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.392738543 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.511012044 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499588969 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.497449696 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49534145 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.554588451 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496839844 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49747067 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.995622886 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.52263004 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496055878 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.506334964 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.507373029 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508422844 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.497589356 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496372878 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.503518526 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.516966516 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.489784339 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.514082053 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.49861894 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121097613 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52030264 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.164691523 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.822099887 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.753220045 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.507684028 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.489199632 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.50002868 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499477173 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497619973 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497085113 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.526629232 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123194013 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.510980084 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.513332745 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.500276898 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.712669206 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.710928207 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.496265338 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.764740224 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511395362 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.516606067 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.484599263 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49869173 seconds)
  done (took 1038.79815507 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.51563877 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.552027182 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.522338247 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.574288448 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.554682767 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.514226097 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.529211715 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.562253965 seconds)
  done (took 21.72597892 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.502966741 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.513370139 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.500419634 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.512206714 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.508451684 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.042477075 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.518800703 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.511583671 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.511304104 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.503440579 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.515873371 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.487943891 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.508779819 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.50206906 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.491474605 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.508452832 seconds)
  done (took 35.050699658 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.977001993 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.80616523 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.34364159 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.516787971 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.552722356 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.51209532 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.923351942 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.523017117 seconds)
  done (took 29.55778965 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.51023529 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.512088073 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.513061827 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.51196987 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.512147706 seconds)
  done (took 8.961581926 seconds)
done (took 1323.080195296 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.50434577 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.505443562 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.502492378 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.50651025 seconds)
  done (took 7.422277383 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.488786613 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.492115129 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.493323854 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.505548057 seconds)
  done (took 10.383730676 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.342678991 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.240260631 seconds)
  done (took 5.986910205 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.06327864 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.067767421 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.027290715 seconds)
  done (took 7.560259218 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.808400617 seconds)
  done (took 3.213024561 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.498799136 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.442652449 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.257512161 seconds)
  done (took 8.604736673 seconds)
done (took 44.570203934 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.498921504 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.747930413 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.655734756 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.502348884 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.658708714 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.654882247 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.236111348 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.499266174 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.512331171 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.510487482 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.498626322 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.661381935 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.216083813 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.74952979 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.214906631 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.848865996 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.662711262 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.512470692 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.508990253 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.500418598 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.235925653 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.502130472 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.509669505 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.508154091 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.664161185 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.683452351 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.513195789 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.850033051 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.513714943 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.499455316 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.668807018 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.499770486 seconds)
  done (took 86.902425054 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.513665159 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.518261334 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.502003491 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.521255171 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.530101026 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.50557378 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.523046398 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.500526361 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.533644079 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.507057539 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.501386509 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.520431267 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.505206511 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.502420651 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.502797606 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.503373844 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.501015164 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.520345416 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.503222837 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.523876219 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.504878024 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.518347586 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.508225603 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.501954316 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.521544032 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.523561895 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.521814173 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.503368457 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.504249271 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.503508931 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.504070417 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.524568658 seconds)
  done (took 81.785548587 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.514128877 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.503025811 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.517354171 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.504634875 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.504323911 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.540965156 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.505946175 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.502794311 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.523696727 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.5268544 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.524786161 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.505977213 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.505948238 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.504187324 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.505466911 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.504490826 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.516601309 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.523304349 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.504269226 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.51695634 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.508380341 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.512897603 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.516164453 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.515110338 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.509493532 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.508296398 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.528476085 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.525236 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.535524567 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.503780347 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.533210079 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.527424639 seconds)
  done (took 81.887142617 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.785983418 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.512452773 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.513946224 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.496114313 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.513288518 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.513308345 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.507159721 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.790182096 seconds)
  done (took 16.040658719 seconds)
done (took 268.017895981 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.505098899 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.511024704 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.731975616 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.539044688 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.507610259 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.538093912 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.534752507 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.767029798 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.540077947 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.767917246 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.545054414 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.531547282 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.512516018 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.532892892 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.824211948 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.677428504 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.536785233 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.508084534 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.916922999 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.534575314 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.798920776 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.519535879 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.818849476 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.513416562 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.513874698 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.51639648 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.508033052 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.508613735 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.537150985 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.897839203 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.524429019 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.497910484 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.609114333 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.63675819 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.753386603 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.688806789 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.507954079 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.607184067 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.759734396 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.52458428 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.510231839 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.354615657 seconds)
  done (took 89.58215274 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.515632943 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.638726221 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.518145076 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.516791779 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.518123523 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.640829452 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.615055439 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.518686206 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.517655319 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.518583519 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.515052605 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.517647475 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.518392666 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.51733697 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.518332503 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.517221284 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.517771974 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.518853115 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.520529889 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.566780211 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.64709303 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.545136437 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.513316412 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.518953889 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.62552661 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.660928127 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.520045149 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.514584395 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.56504958 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.519967161 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.52025229 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.565752579 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.520192454 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.519282438 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.6363548 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.623784004 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.520081678 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.519316084 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.639188832 seconds)
  done (took 61.857379766 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.520964122 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.798180774 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.016796665 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.524833041 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.52163674 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.527665561 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.61758462 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.525378093 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.52553432 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.525151853 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.69439532 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.524462696 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.561247938 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.032302656 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.524647575 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.522096718 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.523141272 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.522744679 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.798476834 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.531184669 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.638506559 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.523347541 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.616840592 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.539166457 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.549588691 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.52434164 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.528887519 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.145256983 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.525419859 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.693939071 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.502490624 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.619257557 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.07452612 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.01128233 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.506741312 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.530381279 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.523163922 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.699285348 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.527840489 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.524665658 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.618727052 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.52982573 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.014387146 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.22302146 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.55200368 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.524674315 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.153277817 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.708152161 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.834431107 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.54014146 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.055908237 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.533962156 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.526374824 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.528601305 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.831962655 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.533464405 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.527023862 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.190222184 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.556343412 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.621404884 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.530972064 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.527412745 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.81026273 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.532884026 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.804382762 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.533739687 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.533791168 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.550441288 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.025137442 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.535030375 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.241516596 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.554480646 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.52660256 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.706839468 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.807512411 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.209831602 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.55686564 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.81524947 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.097307841 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.623593296 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.536973548 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.13654452 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.629364254 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.536651119 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.531171842 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.530935816 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.533008745 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.580875369 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.621374162 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.197059541 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.245929948 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.219440329 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.650482018 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.544537959 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.530864914 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.193315867 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.554478866 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.529538351 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.024142778 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.253621114 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.556316873 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.537981008 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.259703101 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.559635291 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.625777903 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.53926147 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.029269013 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.537274307 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.582321276 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.529456324 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.536359451 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.558687404 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.623740752 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.539844632 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.531500665 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.238671715 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.733720735 seconds)
  done (took 201.791853958 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.526254372 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.525257954 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.52539218 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.524710462 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.525187438 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.531191483 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.522553363 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.526093198 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.53022351 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.522693964 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.525904879 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.535601069 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.527877 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.528320546 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.537199746 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.531957706 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.524290814 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.527193671 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.525145133 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.525997277 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.525966157 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.532498867 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.525467064 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.525613671 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.529233528 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.524447495 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.530201605 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.528418775 seconds)
  done (took 68.197563185 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.534250518 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.236569235 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.53795535 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.69246013 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.563929923 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.530569132 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.69178898 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.60738608 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.53985199 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.532043654 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.531671057 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.892367703 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.534231149 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.174849907 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.774973388 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.697346083 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.148933751 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.556617137 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.531283632 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.532828101 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.693986568 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.553281536 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.907652719 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.2333832 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.541756463 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.201199288 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.526184702 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.535019465 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.532952564 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.203599669 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.532971208 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.892820523 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.629664917 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.607047643 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.244495511 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.150525322 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.170536621 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.713611291 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.53707684 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.53417498 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.534559903 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.52651312 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.205109477 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.537435353 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.538082273 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.201477641 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.557160958 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.53757376 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.554016711 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.533809627 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.606117678 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.60917552 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.900013479 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.213693364 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.626443906 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.580923123 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.697004892 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.923432639 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.537976406 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.153989019 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.528251274 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.212362501 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.55987236 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.529681089 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.536914699 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.542290385 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.716867439 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.699212312 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.190090113 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.565725851 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.189953478 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.740342959 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.536382857 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.536143406 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.53992798 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.212447186 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.192273899 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.740237542 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.69825468 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.778588875 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.537376311 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.538915267 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.530832155 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.631854485 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.542895601 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.243092744 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.216696252 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.565084319 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.541156852 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.540573638 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.540728113 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.757053011 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.23983547 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.630338681 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.192110637 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.945994442 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.926019259 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.547041123 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.610473732 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.564402164 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.923440417 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.547908144 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.608367775 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.988283935 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.923183363 seconds)
  done (took 184.868963232 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.824737101 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.561807536 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.64801556 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.714519834 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.251482633 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.163675059 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.535833052 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.679139749 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.671820185 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.849644059 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.545689801 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.633473992 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.78250578 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.627109115 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.300281306 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.622361963 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.654527013 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.721059804 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.695177893 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.556755562 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.293019957 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.88591033 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.748727126 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.56319148 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.687350176 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.452444336 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.181627784 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.154436789 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.749493552 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.544084368 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.100405921 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.549167257 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.559888372 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.332826088 seconds)
  done (took 71.278816282 seconds)
done (took 678.984716264 seconds)
SAVING RESULT...
DONE!
