cset: moving following pidspec: 1071
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.987697328 seconds)
loading group "string"... done (took 0.540667561 seconds)
loading group "linalg"... done (took 8.809254885 seconds)
loading group "parallel"... done (took 0.17130263 seconds)
loading group "find"... done (took 1.443401067 seconds)
loading group "tuple"... done (took 2.091369571 seconds)
loading group "dates"... done (took 1.36743502 seconds)
loading group "micro"... done (took 0.216539076 seconds)
loading group "io"... done (took 0.623864948 seconds)
loading group "scalar"... done (took 43.126614169 seconds)
loading group "sparse"... done (took 13.134662892 seconds)
loading group "broadcast"... done (took 1.065254545 seconds)
loading group "union"... done (took 14.647068487 seconds)
loading group "simd"... done (took 5.099448966 seconds)
loading group "random"... done (took 10.175463749 seconds)
loading group "problem"... done (took 2.179782054 seconds)
loading group "array"... done (took 25.580912354 seconds)
loading group "misc"... done (took 1.084170059 seconds)
loading group "sort"... done (took 3.642774939 seconds)
loading group "collection"... done (took 21.573802779 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.651633193 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.136444629 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150011555 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.19593848 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.207576897 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.146962588 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.164620233 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.561171157 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.001531644 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.215515144 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.1458522 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.54918954 seconds)
done (took 5.85983905 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.278272293 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.437354005 seconds)
    (2/2) benchmarking "String"...
    done (took 0.128118471 seconds)
  done (took 1.240376665 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077049651 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.178017036 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094160134 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.111556445 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.111473424 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110632781 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.110588432 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.094521501 seconds)
  done (took 1.486897188 seconds)
done (took 3.763816565 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.482368692 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.883619229 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.530264828 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.129641964 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.160813834 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.149219929 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.315061335 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.175071989 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.119663521 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.11392761 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.171235876 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.388274912 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.481342888 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.990073124 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.110177301 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.126677664 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.082776723 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.754316397 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080449185 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.13406885 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.533688992 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.112897923 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.122260022 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.140774049 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.203958293 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.116087143 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.178628121 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.110501651 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.67494069 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.101618961 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185811452 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099329114 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161655873 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.25012257 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.096318213 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.092770951 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.682213926 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.190257148 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.113208996 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.096484735 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.674868738 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080614868 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.19255445 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.108236916 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.113967205 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.192605372 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.115891074 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.07842416 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.102694404 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.101322143 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159808591 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.448994975 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106900061 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.146013928 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.108648117 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.695734411 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09658977 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.15642699 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.140676325 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.097697797 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.097403659 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.111613394 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157601351 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.110629245 seconds)
  done (took 19.769286262 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.117883452 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139743289 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094499376 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139009233 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.142137076 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098907868 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084517093 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097017138 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.128467543 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.189771679 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138583312 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.126172179 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092660768 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.079007785 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118314671 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247947282 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12043142 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105873281 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.098233704 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089059741 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139938202 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111689452 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.091966283 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110537083 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170300694 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205762183 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.124210176 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12620386 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.080737075 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.116078005 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143967407 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.164521489 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076601971 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.095883399 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.186028344 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122888004 seconds)
  done (took 5.209817995 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.198329407 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.116510595 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.190729065 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.17864323 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146284675 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.181853561 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117839666 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.251617149 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.191005927 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.188444575 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129255254 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095994365 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094442368 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080983519 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094268906 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.687931065 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.17868112 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148835749 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.122874525 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087492904 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098502113 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.374981028 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099647615 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080209031 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102134602 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.07205561 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.163770435 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.195047198 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084188294 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.266794718 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120823269 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087619536 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135574371 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.21121184 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135746692 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123510639 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102914014 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.097791222 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.219693273 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.109115123 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.081082798 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094943182 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107222596 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134760482 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132700012 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099430551 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.09304499 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.240775863 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082421803 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120218425 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.073231397 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.201537482 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.097724467 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098817936 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.352011433 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11959398 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084624205 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.099924658 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.288092195 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132195771 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081984778 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094654581 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085866886 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095159663 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.413418085 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.090044752 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.892048379 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.097956437 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158273634 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.099831027 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086765942 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100863364 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10249348 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084132923 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.119044192 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.098028723 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080451446 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094484224 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080715103 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.094305067 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084433164 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.115107669 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099765704 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080273433 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158114045 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.102560947 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118140712 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12443975 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084547241 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095972543 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11273549 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098220861 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099137244 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.129292554 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104487194 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.114256537 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099678929 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126954675 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09751108 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.189483072 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082185253 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126722282 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099817673 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11248691 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.119974416 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09763514 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083426765 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095054951 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079650249 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162509655 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079911548 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096076949 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080698614 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110942244 seconds)
  done (took 23.637491374 seconds)
done (took 49.297588175 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.443259412 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093157597 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.11187945 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.112015083 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.110164736 seconds)
  done (took 1.630467059 seconds)
done (took 2.357955216 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.351125364 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.176237789 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.119476794 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.178331275 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.103919455 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.185579932 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.165869867 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.118036205 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.196488725 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.101882238 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.175920291 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.100040939 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104258364 seconds)
  done (took 2.838675991 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095056906 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118782703 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0804757 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109478318 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075817029 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109183048 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091746756 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.129463597 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.091244717 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102169876 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075010538 seconds)
  done (took 1.800729392 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090763541 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113417056 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08075933 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106800627 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075367963 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105396163 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089496862 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116368697 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089676189 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103283968 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074977371 seconds)
  done (took 1.771596889 seconds)
done (took 7.12656533 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.047125778 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.331027224 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11898897 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.164866332 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.338166783 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.209593796 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.528512307 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.133623115 seconds)
  done (took 11.789938771 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.130943533 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.099962033 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.097843247 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.081860111 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100990163 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.082269552 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097095075 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.082508098 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101277857 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.081832039 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101680777 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083965117 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099508355 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081887152 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099752335 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081465129 seconds)
  done (took 2.295946503 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118932338 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116245165 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10333671 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.10844238 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.084050763 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102379774 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.085701245 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.102375787 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.10012721 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.086328119 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.108297254 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.089476339 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105547083 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.100114835 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.088254197 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110434829 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084652433 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106752251 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106891195 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089070059 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109381378 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.086493347 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.107581644 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108780272 seconds)
  done (took 3.251803978 seconds)
done (took 18.06551967 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.172398706 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086875166 seconds)
  done (took 0.991871054 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.103137881 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.121693285 seconds)
  done (took 0.96553377 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109220404 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099942266 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137947081 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.117037891 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083710973 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.100588776 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.133726674 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.083967306 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.100374927 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083943211 seconds)
  done (took 1.790606815 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088507919 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.105014577 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.091139031 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.12187733 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.112626518 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084907621 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.106150424 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086718202 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.106740728 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081522482 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.108156463 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.119855834 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089449974 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120421475 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106354357 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.088916589 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.110000997 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.104660955 seconds)
  done (took 2.57532971 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082712813 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.084461197 seconds)
  done (took 0.907344244 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085371396 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098845861 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084997289 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101889689 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081343394 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.098133797 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081185894 seconds)
  done (took 1.374627401 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.684735372 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.240732032 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.337110987 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.115695939 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.135479702 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.387904357 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.136833794 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.114162609 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.096943374 seconds)
  done (took 3.034434236 seconds)
done (took 12.376730629 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.215385205 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.189293567 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.529087549 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.119577832 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.078598404 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159308955 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.258734739 seconds)
done (took 2.302181204 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.358730201 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.12368708 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089231758 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.079028238 seconds)
  done (took 1.392783726 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081312995 seconds)
    (2/2) benchmarking "read"...
    done (took 0.106268808 seconds)
  done (took 0.935588324 seconds)
done (took 3.074350096 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08085451 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.128290438 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.077665617 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.094615562 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079090337 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.096695604 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.075505845 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.093963711 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.077938809 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.077908208 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095077522 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.078001479 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.095414242 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078301167 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093077674 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075855471 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.09234949 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078713551 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.092580452 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076275825 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076360582 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09602747 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.07545912 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.093801296 seconds)
  done (took 2.863555453 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100710821 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098649458 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.086412687 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.104721158 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103486526 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086329518 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104948055 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.081340476 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.104911269 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.083860182 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102162053 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.102846157 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083025423 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.100748717 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080845888 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101790082 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085553642 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097998671 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083048378 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102537276 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105417131 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08185881 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102780023 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087111153 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.101592213 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085288552 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.10238573 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099682324 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086828635 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.101791274 seconds)
  done (took 3.599500928 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.089332584 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.076624131 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.097023755 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.106875183 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076289504 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080020698 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.095187591 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.076835078 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095553276 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.07713832 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.098307475 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.078784678 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.097850716 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.07979214 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.099039164 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084905514 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.115135618 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078269542 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097217661 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079101571 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.102685609 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078818656 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099689772 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078179747 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095912246 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078193902 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079114216 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.096677944 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.079893128 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.096626847 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.083853182 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.103447492 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.077590929 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.109721327 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085564165 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096466027 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.087636354 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096838629 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079314403 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.09693136 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077831499 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095004302 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078037193 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.106528178 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.08134864 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.095518312 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077241181 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.077885028 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.095357016 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.080152062 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.093074104 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.076597314 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095925722 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078574162 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099884996 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.076076895 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095667288 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.075721104 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096299231 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076506172 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093924122 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076087874 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100629772 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.07750166 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.118837089 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087916365 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093788204 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078543056 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098723581 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084510749 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095782249 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.096289404 seconds)
  done (took 7.168100528 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083809386 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108210832 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079378172 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098655114 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077258556 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098748582 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.086904697 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097675997 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081297454 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115920893 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077448323 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097311077 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078841533 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099319455 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07781389 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097658548 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08689368 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093992439 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077815548 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098748727 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077691942 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.102391512 seconds)
  done (took 2.746316479 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.227431821 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107798805 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.148177813 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.117413688 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100116213 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.114795237 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105458774 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088245571 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105404083 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089764014 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109562933 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105974019 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099517555 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106070639 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107091988 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090089322 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102562438 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107614148 seconds)
  done (took 2.790426157 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095290045 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.104723716 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108137483 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101079416 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082506493 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103707846 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107484263 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.098324239 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.103274384 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.083006022 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.111916165 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085076722 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104002794 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08226166 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104076612 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100114116 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.085613392 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100811263 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092582933 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10756133 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089340294 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110790351 seconds)
  done (took 2.921393699 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099224765 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103681923 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.112459513 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.104987124 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096971873 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080541911 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107920476 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082160839 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107949919 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.084357575 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101998243 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080759785 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.107982481 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082479073 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106818983 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08266749 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104891618 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083171255 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102747366 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078122796 seconds)
  done (took 2.674298157 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126282748 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117012452 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098011154 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124719961 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114787587 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096800646 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124424988 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114833197 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097114216 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128314954 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115866063 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.097991242 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128537996 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.124538289 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099794259 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128825368 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129084045 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109867166 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.12009885 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117451555 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113155675 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116649874 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129184821 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099544908 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.120328164 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099826135 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119041239 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.124830817 seconds)
  done (took 4.001883606 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082192749 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.082161022 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.098455299 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.080803044 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.098858377 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.079425767 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.098960323 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.079271703 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100080817 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.080014025 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082322306 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101141545 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082753408 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100680763 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082475163 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100822112 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082443452 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099682306 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080345402 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098883783 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082301783 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081849178 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.101785941 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.080382692 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098457078 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.083261609 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098953873 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079977732 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100825401 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.080429205 seconds)
  done (took 3.446230442 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091647673 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107460755 seconds)
  done (took 0.967534164 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080591303 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119158641 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080174487 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10540622 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088904314 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.103784383 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.09287783 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107482488 seconds)
  done (took 1.54548476 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.108419331 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.122583426 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088448191 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112272815 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.099572499 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.118734415 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166315393 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.104909861 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090592752 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.103090855 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.103597971 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.102396205 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093846583 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108380125 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092933347 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117197897 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.080814346 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.112379874 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.091488814 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.105940225 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089443584 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119284442 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.114523784 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.092298866 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.106600306 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095328631 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113030533 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.111955598 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086174075 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.112343286 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088662194 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094199117 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.087799664 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.107638645 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081628463 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.121469413 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101416098 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108829495 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112636826 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089427268 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111834678 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.078717995 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114265446 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091470774 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115970313 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.089425954 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.108234382 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078688213 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.103327822 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088041225 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097325562 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087407258 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096282661 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093577069 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.111350575 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121417662 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086642716 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.1074052 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088911902 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106646492 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092919674 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107505153 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095310064 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.106772711 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112629518 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.09453577 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110898883 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079450865 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096394962 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082073704 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.114060971 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108348627 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110923663 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.08716267 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106073912 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079212061 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105244945 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106259427 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088703331 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111265364 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085736535 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106990542 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091805301 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102840348 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085098314 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107368173 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083421786 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.102692939 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081457836 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121023055 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.102509504 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081585217 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.104472361 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.095747783 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.108413898 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.088762727 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.104118605 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094769735 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.097013714 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.090491985 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108240006 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089752075 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113484267 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105466807 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088077866 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107664962 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.092435952 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104649125 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08474499 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095773919 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087820755 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101523648 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089985208 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094327576 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088972373 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.10751503 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.087024332 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.11053954 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082959388 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.1036146 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110578764 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092456766 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101189773 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.077564386 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103838892 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085205649 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108732441 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093345036 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102125288 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076723432 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094907275 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090167521 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103403275 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088618556 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104823406 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086369678 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093792555 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.079019362 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.113736694 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110681288 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084654725 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.106552544 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090992504 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106450022 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084623347 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.10949188 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084324636 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100669662 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.109166454 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08514025 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096155205 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093354132 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104893211 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084660349 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10516322 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090099092 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104830142 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.086580986 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102262706 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.085897728 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10600789 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081282214 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104654888 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084639523 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112579904 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086296263 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095741575 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079174365 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.10772291 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08504053 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.108058047 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084710767 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.109362629 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.090546612 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.103513393 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.087769457 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.107827189 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121305188 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098232549 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110585872 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093652423 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.116599245 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.089586238 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.111524824 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.088537808 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110052071 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.090519481 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.113780531 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.111519228 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088805114 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105160938 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081914767 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111259884 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095604634 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.10315205 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08394604 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.104454251 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08979517 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.115862909 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.09063036 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.110321773 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086983933 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112280081 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094426119 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.108307856 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.089818824 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.104743959 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089779807 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.114315092 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091298984 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111014478 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.116129613 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09142217 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.099989631 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094537372 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106367335 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093682738 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098842825 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086428664 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.104666274 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.091877849 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.106572307 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086889651 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094576157 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092452335 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111055742 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.087123491 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100902043 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086737515 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114622762 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085456162 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10866294 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086998503 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108273393 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120886348 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086337511 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.109996607 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.098525768 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.110157606 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079348037 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.112355292 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.088122441 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.104032774 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.088564375 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.107915606 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091188657 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111823959 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09152879 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.099507082 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089348932 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.108620857 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085870207 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.101096972 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095387491 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.111314065 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.109752221 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10012801 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111442173 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.091079174 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111365972 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.089322741 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.111129914 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.094538706 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110279649 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.090790799 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.109369398 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085620064 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.110871527 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.085298463 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.103351421 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089163933 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.111247451 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.110587457 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092467778 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.108551328 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095918364 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.110226439 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.091643566 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.128630002 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.106652053 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086856268 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110735987 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09350026 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.109709887 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089735672 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.10040725 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09659189 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.109166033 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096788201 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.109082127 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082267628 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.112214578 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089581227 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.111265152 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.091298007 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.11219358 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.108299494 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.090907209 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.109219524 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100353851 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.107231745 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097781233 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112628392 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09302698 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.110216504 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091016211 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.109340871 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085354609 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.110962748 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.111482526 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091580415 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.109011537 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.094173277 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.110569754 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089745432 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107912882 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.091930577 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.110892356 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.093307671 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.099038557 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086537518 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106449983 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.090614782 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114087295 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.091721498 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.108573558 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.089147207 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11150333 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.089253551 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.102390896 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095001454 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11290722 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.091721028 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120333527 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.105428783 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.091518785 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120775284 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080561595 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.107867644 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084324807 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.107077286 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096865073 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.111311088 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097175532 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111550692 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085738175 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.103470854 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.092022452 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.105480634 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076822467 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099134808 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089529679 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103422871 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085043346 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106579175 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089315746 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107413696 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090118701 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104660027 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087230172 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106720881 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.07911758 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.103876144 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082263938 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106499555 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.106578282 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.083085688 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.07894797 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.105577997 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.106691678 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087148747 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.104770853 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086100127 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11156964 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086552122 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.107171234 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095543348 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097503117 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091758451 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.109591294 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.090860584 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.106934505 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093006364 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112700912 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092910562 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.116419991 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.09123337 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11374949 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090867179 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.105460709 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08966592 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.109866644 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.090742753 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.107658189 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.091562994 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114449805 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.10064565 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087545098 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108031151 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08758996 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111387594 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.090985681 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.111955204 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094530015 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.108251523 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088106613 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110184373 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087694675 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107418664 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087823978 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105110219 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111449453 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083292781 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.116766975 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092524516 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.112802249 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090773386 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.107896273 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091474081 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.110493583 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09031512 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.117228966 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.091620618 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.105127901 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084084741 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100567886 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088100305 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11074402 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111754 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088029619 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107350799 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078578283 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098716912 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089347477 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102935346 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086545273 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.109193512 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092293349 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107132104 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085559446 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.105054891 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093499438 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111588776 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090112399 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.104326943 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108821309 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.090038343 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.106748183 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085888542 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.105359228 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089015835 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.109488242 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08685036 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102797764 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096510083 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.111182652 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088379408 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105893086 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.108551437 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.087035142 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097058535 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.089563332 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.10635971 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091279322 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.107391168 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087126697 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116778101 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082675924 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.10529017 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091861645 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106673139 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112904979 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079599575 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.106834144 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088762685 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10767706 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078888136 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101897734 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083852341 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107109756 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083417259 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097640678 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098191516 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111634487 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088253377 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105262038 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085963878 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097716312 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078685478 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102551875 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090075126 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106771039 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096616499 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.104196359 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084598621 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098504054 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087569544 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10949187 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090516135 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101164068 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.079008768 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.103747739 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087968584 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.114799804 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105641227 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.088326401 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108725233 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08908096 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100742272 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093965563 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098528832 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08959244 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117830771 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088399874 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109655328 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.09057053 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113661897 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.108226768 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079203221 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.108249703 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089035345 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.107431603 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089249772 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.109692593 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102479157 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109786918 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.082920287 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10616365 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087415351 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.10342225 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115036597 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089798998 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.107512836 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090674712 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.105551108 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089820102 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11398814 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09018274 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108385999 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107044702 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086820051 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106664693 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.086531009 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.105030085 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.091490896 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108629057 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087502264 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110106436 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084163986 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118539389 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.094908986 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.109786725 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080293641 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103845497 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.0851085 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.09956296 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.08987487 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101389001 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.086047991 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104907692 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087617873 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.109944475 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089827687 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.10755292 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.089138056 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107041363 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077669966 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111066159 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08888141 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110700073 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.082679977 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107520484 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.08902944 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.113160945 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110794051 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08665701 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.108187262 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086864711 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109958087 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079563577 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.1104109 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08690026 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.105700261 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.08437247 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107011128 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.090342832 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108756614 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089610734 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109228946 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088156307 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11205917 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090711616 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101541561 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.080741901 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.110587503 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.08153907 seconds)
  done (took 59.800318638 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.154727592 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086543614 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098426291 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080016727 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124759403 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080216242 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098703279 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080519299 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100184308 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112980692 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080302518 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098797109 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.101433562 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1262838 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123273848 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112952968 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078857088 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10042487 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078860485 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099526848 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119246554 seconds)
  done (took 2.95345233 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.107857296 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11726702 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115526535 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100642607 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110786712 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11600371 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115256039 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097529059 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.120507822 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111261155 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.100720891 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117384696 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.110544956 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110870394 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092493732 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114025645 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.121392224 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090160354 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117829997 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.115646446 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094261467 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115324326 seconds)
  done (took 3.225699113 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.09645043 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.086207416 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.112907783 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.08068112 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.107615271 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.080509717 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.111539397 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.083728358 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.112347245 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.107409424 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.085943181 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.107212889 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.092390508 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.100999329 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.086056068 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.084139504 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112925975 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.106249456 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.089573087 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.081279379 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.128175679 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101784345 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.082368774 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.104895679 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.097186999 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108882856 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.087789688 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.107564873 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.085544603 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107991814 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.083938882 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.1099854 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.09079096 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.105501673 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.085086825 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.107114563 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.087481192 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.101475225 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.084127091 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.110570518 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.082406801 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.108366747 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.093390953 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.104615567 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.084488718 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.10910377 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087512368 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.102203253 seconds)
  done (took 5.492070679 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.12365548 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157874017 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.092780807 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.155214613 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.125029306 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.122859058 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092020034 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14745444 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105888001 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087544289 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125825059 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122350868 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088548995 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.118590086 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111167378 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088000368 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.111628616 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.092824028 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.115681712 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112052831 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.09698896 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.111067982 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122278739 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.099952308 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113380934 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106427264 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088172276 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.11593731 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.11988941 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.094823461 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.11326542 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11719488 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.108859736 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.116238089 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109687201 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.091235119 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124826315 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.108532987 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092014052 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.104470248 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.091197423 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.116800723 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092503379 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.123845967 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107993047 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.090204498 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.11142234 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.089934823 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.125572821 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.113933592 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117192221 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101308828 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112418764 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107454594 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094004352 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125574451 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.10822261 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.087798503 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111383221 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098954793 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.108306544 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.117795866 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.106715023 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.113062771 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.116477028 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101761967 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110854736 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.11216684 seconds)
  done (took 8.430615078 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098836591 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.132364619 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12454512 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104071777 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113708646 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112354319 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093896764 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.112270669 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092708576 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120463118 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113424014 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.162505923 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086109196 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119112656 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11345818 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094025086 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113283839 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093057691 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.11420085 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11295118 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.093159454 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.1245472 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112042238 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.104117491 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126024925 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106779788 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093418036 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11533795 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123259215 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113504081 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106229393 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.113389629 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112322712 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103714902 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125897292 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.112449563 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084025187 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114075728 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.113203232 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09375378 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106478738 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103789728 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114946616 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106913698 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093431038 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113773325 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.124574921 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125249461 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099145349 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119985459 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113355276 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104757842 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113471611 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113134205 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104908953 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.132471182 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123781229 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124194001 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093277873 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125422905 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12501955 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.132003728 seconds)
  done (took 7.754892313 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089577647 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084349977 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.103363958 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.082390236 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105302878 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082784688 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105249853 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085004586 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104682563 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.085106621 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104256158 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083044537 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082360818 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105385817 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082703998 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103039987 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082315025 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10253638 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085226421 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102868722 seconds)
  done (took 2.689447904 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096574071 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125845353 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08572223 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113704128 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08708827 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.115366273 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107474271 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088668322 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106382021 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088749301 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118208546 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116949652 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08631272 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112342828 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097142188 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113514597 seconds)
  done (took 2.487778596 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.110927683 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119489713 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.131003085 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.091054029 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104533879 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.093108243 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105883558 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.081123321 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101900221 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.093650084 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.112930927 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.095369034 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106472619 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082984636 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10728939 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090254482 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102782984 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.109256844 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.085510954 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.130061063 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.09033744 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108566579 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.086461186 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108374407 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.08975472 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.112860799 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.113620686 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.083272948 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.104482886 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.086193593 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.108621396 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.093962859 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103187944 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.090680719 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.105683216 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082995566 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10636804 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085315975 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113150883 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105902444 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084859867 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.108472024 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086196342 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106861605 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08270264 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105877716 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.082959353 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.112754969 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.088461376 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.108054106 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.085362312 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.114116207 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.092602008 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118297545 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116108809 seconds)
  done (took 6.363292627 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104663005 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110182645 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090301715 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10423228 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089414746 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.115373869 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09037913 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.109199192 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087195677 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.103902766 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088195857 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110494439 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086881568 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111539056 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107859982 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091125969 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10126182 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.088353806 seconds)
  done (took 2.623650382 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095013202 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106260238 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093841955 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10615174 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085947753 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108763657 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082604171 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103906429 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084846998 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.105834436 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086280145 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.108565789 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084421808 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.108518072 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086316615 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105687802 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.089087263 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082973822 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106781035 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080476801 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109807379 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083441385 seconds)
  done (took 2.943674264 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.107661164 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.138983594 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.099613539 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.150691886 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.111576054 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.08901875 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.121810944 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.111386272 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.109145761 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.110333303 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.089545115 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.110903613 seconds)
  done (took 2.188675331 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115482817 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146709625 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083155914 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11117142 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11971138 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091624463 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111358994 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090246831 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124685563 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12599529 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112105162 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103302208 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123889163 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122586269 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119301625 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0990499 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112638567 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112149591 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087359663 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133106072 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111637117 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103127444 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11215694 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111828629 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092214827 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122676754 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124096457 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103483483 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112452904 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123273031 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120248941 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092981767 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123629888 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124667889 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089016751 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124423573 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111233621 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132788598 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099127559 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123381695 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10843331 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099688494 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125519912 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118835618 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103895833 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11281264 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119211369 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091367459 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112509148 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139046795 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119869162 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102942454 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120445475 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124106407 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123891931 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139384068 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125554524 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10267334 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119784149 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126107231 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12359221 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09971812 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123339687 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124999951 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12019818 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101062861 seconds)
  done (took 8.371547058 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129868741 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106386395 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11296648 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104222782 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123058505 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111680861 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09125055 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11346971 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111526917 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088338587 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159944532 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112430082 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122957108 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102493379 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111700983 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090405067 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113035804 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122811501 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087333541 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138836045 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113028218 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122783566 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123277738 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101226423 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125065229 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120086469 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112731738 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092275946 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112700547 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091998386 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120069307 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112260507 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102370218 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10748598 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122843547 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091947607 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11356612 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118842985 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092068177 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120073877 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122850842 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134237162 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09143519 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1124649 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126176367 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091197285 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112513222 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088069502 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114303019 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108811682 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104636839 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125500208 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126091809 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123390266 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11245612 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092731074 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112847005 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091745599 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112708425 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120195116 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101801823 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112315906 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139448623 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112702148 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092459465 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124154477 seconds)
  done (took 8.223257331 seconds)
done (took 159.019834332 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.109469834 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.145943285 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101075561 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171267309 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08622478 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.143055215 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118871555 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.124577611 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.08566647 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.108945821 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.086104683 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.112248378 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151592499 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.109464497 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087213352 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111198668 seconds)
  done (took 2.696903926 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.186877228 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.2950695 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105445865 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.114194039 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.092658548 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111625457 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.113384654 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.093675609 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109324933 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.100938876 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111479754 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.089977775 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.122024601 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.088541887 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109585937 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.110230239 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.100373427 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.10993935 seconds)
  done (took 3.015468089 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.124050456 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.15938106 seconds)
  done (took 1.132500931 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128262838 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.187291789 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.313320377 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.166250507 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.117427416 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131189617 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.164919892 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128772701 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197481313 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130360295 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.13055169 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094165473 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139355755 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.119262364 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098075959 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.114427197 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121395289 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.117604408 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116200148 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095853769 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138503458 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.094840209 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.121123924 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.116952214 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.186451086 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.129650635 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.095388826 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.115768728 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.096218186 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116203319 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.099405123 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130138028 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.129151043 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.191203907 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100395956 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.187984884 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.1021092 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114591237 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096204758 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.11414698 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119378614 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.097979654 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.130362252 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.093254568 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.115852819 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.122136452 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.095775735 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.355445986 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.101463758 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.124341281 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.121904558 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.098491382 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.189850698 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.123205764 seconds)
  done (took 8.024907502 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.861015047 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.133749533 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114813156 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.955733848 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120538969 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129675051 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.82874175 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.138542006 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.240536444 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.852046528 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13189751 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.126511835 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.213627485 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.280322892 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.152107062 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.340398718 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.715684172 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.131051225 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.118902628 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.155932844 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121496943 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142273019 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133257396 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.42208822 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.091946168 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113250606 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117603222 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105027236 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164422342 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.114578966 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116204392 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.186535948 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.270114078 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205778165 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091436457 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113879974 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089461167 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.196492981 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273984074 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.197547236 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.176498619 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109668369 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090857941 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126563313 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133252532 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087539706 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.190585764 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.180743608 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.177661248 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117066686 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124572403 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100487557 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12595158 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166149629 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.111326658 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.342440297 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.345882106 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091473752 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12258051 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109556646 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271302528 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.114706086 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232633986 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124333626 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221509677 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.114104019 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803161802 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.19832548 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093317714 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122340673 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120363598 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098743006 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124792612 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172573233 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.381136672 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127311951 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.095636397 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113351482 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.210589541 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.113011522 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090789569 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171089913 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118513924 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122466832 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107128258 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128178532 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.176179066 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.277947649 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.104923933 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123825852 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118398834 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103864528 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115263277 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.219223787 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226829813 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164572339 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.245295671 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104917624 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.194646952 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.17277549 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125877428 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.178771337 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121655053 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110071281 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127642062 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220742559 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148727995 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.113104596 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097417431 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121130925 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151432032 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.094754519 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.121179506 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.174768 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.475448865 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.177887844 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087618501 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.118319664 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121247172 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.169153963 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098341868 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268379666 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123515681 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.173521874 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121373158 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088852574 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123290057 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.169460125 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129051019 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122272762 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104485259 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122862852 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.256356382 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230023928 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.136356898 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.217055088 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182112771 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.124246818 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179145725 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12260017 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.17515314 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124905327 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125627051 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093616374 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.8110608 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.127131317 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099727692 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119917228 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198044836 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112885712 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.094183193 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.090565271 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112120181 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.815528288 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.097005911 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.111385451 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.093710846 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123506926 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.100143704 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121267354 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118293127 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168509847 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238367655 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125758934 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099649192 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.113955459 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.168865094 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.092701123 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.116606958 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.091324319 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.115189868 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122815954 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096673433 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.115202006 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.182578873 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.165211815 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22708891 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.537595855 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091718123 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.114189729 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236387577 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091908432 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.311364117 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120490294 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.206551431 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.197525394 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.088393826 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.342742028 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.198288246 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197053897 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.095739989 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.177174514 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111179673 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.097238852 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.190843805 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091845627 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120901386 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164793282 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131027169 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12853388 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.134349165 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115427705 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234791843 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.111549195 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.177925783 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116486031 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104352019 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.315309855 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114853598 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112090289 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.192506525 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095878022 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.115130471 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.601689658 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.11487347 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101569099 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125861853 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.231862859 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.177338492 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13121499 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127704822 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.106654044 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.193611469 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.224374419 seconds)
  done (took 45.214570611 seconds)
done (took 60.929899876 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.307457766 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271093574 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.309419297 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.223549678 seconds)
  done (took 2.068967419 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.186543435 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.156701021 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.150439298 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.090382886 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.159627132 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.111727936 seconds)
  done (took 1.729257889 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.495231014 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.402855869 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.347158647 seconds)
  done (took 2.121773792 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.265277993 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.283771983 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.366609212 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.41324044 seconds)
  done (took 2.319304275 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209380862 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130133745 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.10323686 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.142933982 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.175614632 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.179980486 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.147548517 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.156348038 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.133122721 seconds)
  done (took 2.308103309 seconds)
done (took 11.434443708 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.130502054 seconds)
    (2/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118675114 seconds)
    (3/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.122302189 seconds)
    (4/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.104730838 seconds)
    (5/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.122530372 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.251560919 seconds)
    (7/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.141087049 seconds)
    (8/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.141266091 seconds)
    (9/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119768383 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.094854816 seconds)
    (11/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.252898889 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.102729753 seconds)
    (13/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.136318884 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.118665943 seconds)
    (15/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.259036245 seconds)
    (16/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.228931894 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.162904861 seconds)
    (18/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.104869064 seconds)
    (19/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.144021018 seconds)
    (20/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.088909124 seconds)
    (21/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.128002731 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.118501946 seconds)
    (23/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.223037226 seconds)
    (24/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.23946527 seconds)
    (25/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.26263511 seconds)
    (26/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.222732767 seconds)
    (27/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.085454151 seconds)
    (28/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.152850414 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.228658019 seconds)
    (30/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.241216156 seconds)
    (31/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.213514334 seconds)
    (32/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.147133441 seconds)
    (33/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.169690889 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.10308647 seconds)
    (35/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.132131266 seconds)
    (36/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.196672341 seconds)
    (37/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.130386879 seconds)
    (38/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.211643269 seconds)
    (39/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.22501155 seconds)
    (40/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.106862152 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.146407618 seconds)
    (42/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.206667264 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.163773986 seconds)
    (44/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.205520133 seconds)
    (45/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.227879879 seconds)
    (46/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.22076595 seconds)
    (47/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.203755355 seconds)
    (48/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.106441863 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.122987553 seconds)
    (50/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.262075789 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.105648962 seconds)
    (52/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.233210269 seconds)
    (53/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.211079772 seconds)
    (54/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.155645826 seconds)
    (55/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.080116796 seconds)
    (56/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.101700137 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093033316 seconds)
    (58/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.141727601 seconds)
    (59/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.131577262 seconds)
    (60/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.091757068 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.145307827 seconds)
    (62/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.147152557 seconds)
    (63/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.106839939 seconds)
    (64/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.127771387 seconds)
    (65/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.09444448 seconds)
    (66/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.166497279 seconds)
    (67/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.205589494 seconds)
    (68/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.130059556 seconds)
    (69/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.080707004 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.146103135 seconds)
    (71/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.106217304 seconds)
    (72/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.206241212 seconds)
    (73/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.119794441 seconds)
    (74/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.081006929 seconds)
    (75/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.098823426 seconds)
    (76/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.10754056 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 0.112743211 seconds)
    (78/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.09542433 seconds)
    (79/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.207008521 seconds)
    (80/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.123615526 seconds)
    (81/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.094452013 seconds)
    (82/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.118988116 seconds)
    (83/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.088998665 seconds)
    (84/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.118982321 seconds)
    (85/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.078117687 seconds)
    (86/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.100547012 seconds)
    (87/286) benchmarking ("sort", Float64, true)...
    done (took 0.23512214 seconds)
    (88/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.077935729 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.118986218 seconds)
    (90/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.133412128 seconds)
    (91/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.128400599 seconds)
    (92/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.156690233 seconds)
    (93/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.208538861 seconds)
    (94/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.102494217 seconds)
    (95/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.117805895 seconds)
    (96/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.0972828 seconds)
    (97/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.113177732 seconds)
    (98/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.113924451 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.121644598 seconds)
    (100/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.126156043 seconds)
    (101/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.131095044 seconds)
    (102/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.19390157 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.128128324 seconds)
    (104/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.084908751 seconds)
    (105/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138455157 seconds)
    (106/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.162782906 seconds)
    (107/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.097533172 seconds)
    (108/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.118720606 seconds)
    (109/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.164421388 seconds)
    (110/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.208247732 seconds)
    (111/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.21530561 seconds)
    (112/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.177403995 seconds)
    (113/286) benchmarking ("sort", Bool, false)...
    done (took 0.193024694 seconds)
    (114/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.104158654 seconds)
    (115/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.126870505 seconds)
    (116/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.09550239 seconds)
    (117/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.143838151 seconds)
    (118/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119581745 seconds)
    (119/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.096814936 seconds)
    (120/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.108978153 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.127763071 seconds)
    (122/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.115296352 seconds)
    (123/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.09795568 seconds)
    (124/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.164314207 seconds)
    (125/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.124733942 seconds)
    (126/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.078766496 seconds)
    (127/286) benchmarking ("sort", Int8, true)...
    done (took 0.224766804 seconds)
    (128/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.192775078 seconds)
    (129/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.08651276 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.12060785 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090246933 seconds)
    (132/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.120045872 seconds)
    (133/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.164712424 seconds)
    (134/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096866758 seconds)
    (135/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.100872358 seconds)
    (136/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.123884208 seconds)
    (137/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.192443987 seconds)
    (138/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.07838868 seconds)
    (139/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.101045533 seconds)
    (140/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.103454741 seconds)
    (141/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.109655495 seconds)
    (142/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.178671459 seconds)
    (143/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.102305979 seconds)
    (144/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118898743 seconds)
    (145/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.097493517 seconds)
    (146/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.119683779 seconds)
    (147/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.206904146 seconds)
    (148/286) benchmarking ("sort", BigInt, true)...
    done (took 0.257948807 seconds)
    (149/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.090555231 seconds)
    (150/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.218119789 seconds)
    (151/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.21187808 seconds)
    (152/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.101364047 seconds)
    (153/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.219924622 seconds)
    (154/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.082041301 seconds)
    (155/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.100769909 seconds)
    (156/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.099406915 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.120025812 seconds)
    (158/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096463296 seconds)
    (159/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.109084844 seconds)
    (160/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.11552493 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.120723402 seconds)
    (162/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096383972 seconds)
    (163/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.126020286 seconds)
    (164/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.131194173 seconds)
    (165/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.197338631 seconds)
    (166/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.079633003 seconds)
    (167/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.127185515 seconds)
    (168/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.07865449 seconds)
    (169/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.130027474 seconds)
    (170/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.132824299 seconds)
    (171/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.100456206 seconds)
    (172/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095594813 seconds)
    (173/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.166694917 seconds)
    (174/286) benchmarking ("sort", Float32, false)...
    done (took 0.179561483 seconds)
    (175/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.107445136 seconds)
    (176/286) benchmarking ("sort", Bool, true)...
    done (took 0.228599237 seconds)
    (177/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.118348318 seconds)
    (178/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.1033476 seconds)
    (179/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.138680807 seconds)
    (180/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.102219084 seconds)
    (181/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.077804574 seconds)
    (182/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.192797405 seconds)
    (183/286) benchmarking ("sort", BigInt, false)...
    done (took 0.23320459 seconds)
    (184/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.115118987 seconds)
    (185/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.097525383 seconds)
    (186/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.116894521 seconds)
    (187/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.096147867 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.121615567 seconds)
    (189/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.195100463 seconds)
    (190/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103764635 seconds)
    (191/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.137790746 seconds)
    (192/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.079660625 seconds)
    (193/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.127952169 seconds)
    (194/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.106576228 seconds)
    (195/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.117800161 seconds)
    (196/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.129759693 seconds)
    (197/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.079094752 seconds)
    (198/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.085503869 seconds)
    (199/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.102339637 seconds)
    (200/286) benchmarking ("sort", Int8, false)...
    done (took 0.201602936 seconds)
    (201/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.122905938 seconds)
    (202/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.07944747 seconds)
    (203/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116818587 seconds)
    (204/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.168457563 seconds)
    (205/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.115114157 seconds)
    (206/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.111644376 seconds)
    (207/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.118938587 seconds)
    (208/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.07864778 seconds)
    (209/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.101625081 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.097590289 seconds)
    (211/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.145065779 seconds)
    (212/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.113948376 seconds)
    (213/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.107387683 seconds)
    (214/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.118968021 seconds)
    (215/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.254205263 seconds)
    (216/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.102703522 seconds)
    (217/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.122411549 seconds)
    (218/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.098011884 seconds)
    (219/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.126516478 seconds)
    (220/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136553289 seconds)
    (221/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.078122606 seconds)
    (222/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.077110983 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.122019652 seconds)
    (224/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.126235878 seconds)
    (225/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.07820599 seconds)
    (226/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.117090915 seconds)
    (227/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.095744095 seconds)
    (228/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.120986817 seconds)
    (229/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.121779164 seconds)
    (230/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.101406703 seconds)
    (231/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.078339834 seconds)
    (232/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.12045611 seconds)
    (233/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091365443 seconds)
    (234/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.118324999 seconds)
    (235/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079992852 seconds)
    (236/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.143973783 seconds)
    (237/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.078980415 seconds)
    (238/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.117497969 seconds)
    (239/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.095673604 seconds)
    (240/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.100495596 seconds)
    (241/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.094043774 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.119369018 seconds)
    (243/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.134327233 seconds)
    (244/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.104457742 seconds)
    (245/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.193598872 seconds)
    (246/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079795969 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.129386471 seconds)
    (248/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079312366 seconds)
    (249/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.119013897 seconds)
    (250/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.079420148 seconds)
    (251/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.120379584 seconds)
    (252/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.096702032 seconds)
    (253/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.103319849 seconds)
    (254/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.099130973 seconds)
    (255/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.102836373 seconds)
    (256/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.079700371 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.120932572 seconds)
    (258/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.079407014 seconds)
    (259/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.165586046 seconds)
    (260/286) benchmarking ("sort", Float32, true)...
    done (took 0.239117742 seconds)
    (261/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.080454313 seconds)
    (262/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.103829959 seconds)
    (263/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.107530515 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.126339918 seconds)
    (265/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.079292417 seconds)
    (266/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.114943913 seconds)
    (267/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.079505769 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.116017469 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.092300651 seconds)
    (270/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.101236576 seconds)
    (271/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.079437891 seconds)
    (272/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.10320722 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.106265402 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.121860176 seconds)
    (275/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.078697224 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.1185485 seconds)
    (277/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.079784068 seconds)
    (278/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.102582694 seconds)
    (279/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.078787352 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.121278541 seconds)
    (281/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.121496916 seconds)
    (282/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.102299651 seconds)
    (283/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.140751223 seconds)
    (284/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079627187 seconds)
    (285/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093118951 seconds)
    (286/286) benchmarking ("sort", Float64, false)...
    done (took 0.179432465 seconds)
  done (took 38.775064063 seconds)
done (took 39.658245593 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.110038609 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.158859072 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.104894472 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.14504244 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.127996765 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.107570427 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.124722794 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.102673794 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.129601354 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.129972289 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.106605001 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.110148954 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102624008 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.12607299 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.103741227 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.146110228 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.129969319 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.098168747 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119205928 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.095157741 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119505989 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.095235083 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.120701103 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.086019625 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.127593075 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.124539476 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.09818375 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.126027218 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.096623443 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.116325362 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093749693 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.123019105 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.092924795 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.145580522 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097538885 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118005457 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102907115 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.125464874 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.097848842 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.120090459 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.123103527 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.096113345 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.121153418 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.100166185 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119025941 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094687992 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117838659 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.105336012 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.146700155 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095047743 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.125079418 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.101458662 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.129131203 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.122974482 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094405311 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118613978 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.096211432 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146101003 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.093967073 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.120400823 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.099217315 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.125797941 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.093995187 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.120272253 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118427324 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.102305918 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125717962 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095540695 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.125716115 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.098127242 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.113855804 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.096070282 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.117338213 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.092756318 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.125523564 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.10232971 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.113756419 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.095667032 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.122549952 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.097685427 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.11970374 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093158202 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.121313951 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.096281017 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117163994 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086126364 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.117044246 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.097399024 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.119712294 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.118306258 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.098423784 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.122104964 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.097685485 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.126055946 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.095711276 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.119825195 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.095254328 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.119909434 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.097042946 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.11830701 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.090492038 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119521787 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.100211227 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.116824174 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096264812 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.128854641 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.117794862 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.098434652 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.1179268 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.095850825 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.131176001 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.102295369 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.119989714 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096626883 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.115775945 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.09962296 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.117442696 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.093669297 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.117620322 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.095398494 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.121164706 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.119456025 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094121746 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.121775597 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.104946256 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.115243114 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.093521786 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117688816 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.097043427 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.122489798 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.096900426 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.117136039 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.094984473 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.112774722 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094324243 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.116334621 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.09971839 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117524403 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.095132624 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.119858024 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094838648 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.121797539 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.096161835 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.120734452 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.116990066 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.088052739 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098324544 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.118615235 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.09709922 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.121242259 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.119296233 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.091075652 seconds)
done (took 17.800607222 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107693494 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.190019707 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151685063 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.155620705 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.153756706 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112895015 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.13036169 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.151509962 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.127387909 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124550572 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.150108037 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.141931214 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.155394072 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.103265976 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.136918916 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.126203625 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.101750174 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.136691127 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.161833142 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.122812196 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.152174315 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.128463164 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.14870191 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.123261544 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.126548934 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.156112215 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.104672129 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.126982904 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.128486248 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.109363772 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.143030723 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.129855961 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.10568929 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.139485316 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.108268251 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.127139834 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.136723522 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.098198722 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.12748339 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.126490716 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.11432238 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.137907697 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.122935982 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.110731499 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.127228533 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.105248188 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.127138788 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.125145129 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.10239125 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.121756112 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108492187 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.147970021 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.125288847 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.10422539 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.128035764 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.12713091 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105215239 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.130126044 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.128713565 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.10654683 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.126749332 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.10533213 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.132822994 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143411451 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.126115228 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.105423623 seconds)
  done (took 9.368584625 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.122994268 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.157772434 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.136602651 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109812722 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.131315317 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.117100146 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091608409 seconds)
  done (took 1.816019032 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.098875811 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.147519421 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.125750017 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.15153819 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.139067805 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.12887005 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137467374 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.117602418 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.117477316 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.127713416 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.146194532 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148016603 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.118827367 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.129981911 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.128420912 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.118096814 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.153029975 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.092757031 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.12530726 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.125701294 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123245237 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.115462313 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.132458359 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.118880864 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115339243 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.120426828 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.18730328 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.105680705 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117987041 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.099542057 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124620123 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.191009948 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.140719186 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.104906187 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116773326 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121512628 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.141266795 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.123707902 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.118952423 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.123387638 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.140622633 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.100269877 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.125377119 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.099215169 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.125521695 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.108411077 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.130430498 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.126891892 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.099395522 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.146937449 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.104317244 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.140722734 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.120127923 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.09800881 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.127985961 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100758576 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132511024 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.098754119 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.146943871 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125256667 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.119993253 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.144400277 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.139875681 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.119910787 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136562039 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.140514101 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.115620054 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.125245446 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.101777866 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.126314971 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.145806911 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.097677545 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.129445836 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.108528638 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127469313 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.120449677 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.146145897 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123160846 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.10723302 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.123261073 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.097002484 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.118958996 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.110067371 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122792801 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096545467 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.137098564 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.131337627 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.09947759 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.122500594 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.141559003 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.098878786 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.130596393 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.10662816 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.122847007 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134172126 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122419751 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.130102523 seconds)
  done (took 12.996994733 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.100646181 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.094171355 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.124930846 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.121415869 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.095647822 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.119925522 seconds)
  done (took 1.615255816 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.130818848 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.123315935 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.110048801 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.127559786 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.162985009 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.117812052 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.144695844 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.129214501 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.114761978 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.134707194 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.143540321 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.120365304 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.149277922 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.102329408 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.144476779 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.127758909 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.11843438 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124128191 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.108702389 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123578717 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.134911324 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.102350745 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124200048 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.117628755 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.127480576 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.102307901 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128030151 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.135154934 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.10934142 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.13012452 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.102016022 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.128528306 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.125779365 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.104436861 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.14319589 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.12674643 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097526696 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.129322397 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102919972 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.129887076 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.120391851 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12357545 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.107401769 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.130791235 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.128850468 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.102486867 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.129031052 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100471212 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.143961435 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.128643979 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.10466483 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.127028063 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.102530214 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.129853098 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.101818905 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129696237 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.128957731 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.119384297 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12660035 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.102430697 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.124690472 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.102012377 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.130408197 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.126983745 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.102287745 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.128402711 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.102328761 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.1239921 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0987121 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.127984185 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.103750441 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.126274364 seconds)
  done (took 9.702956107 seconds)
done (took 36.443598301 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.701698152 seconds)
  done (took 1.656875895 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.889080644 seconds)
  done (took 1.845715945 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.873618602 seconds)
  done (took 18.867089614 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.562283701 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.638151674 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.980341682 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.169412816 seconds)
  done (took 3.306919397 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.982840152 seconds)
  done (took 1.961430706 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.321621167 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.269106593 seconds)
  done (took 1.553738017 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.852002022 seconds)
  done (took 1.821662625 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.581405448 seconds)
  done (took 2.551388834 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.360080982 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.204883123 seconds)
  done (took 1.544054791 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.608892134 seconds)
  done (took 1.581677805 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.807842426 seconds)
  done (took 15.791042717 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.245654475 seconds)
  done (took 1.234797519 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.313627048 seconds)
  done (took 1.28959929 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.675039967 seconds)
  done (took 4.652854625 seconds)
done (took 60.623589363 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.110867024 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.132842133 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108208192 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.131517774 seconds)
  done (took 1.454916568 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.119684826 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.133178892 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107104526 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.128268351 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.110383549 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.128934645 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.126342292 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.108853599 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.128507357 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.104733801 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.129189769 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.102374386 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.131133058 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.125252662 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.100827276 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.129213472 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.106220926 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.129175602 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.102233166 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.130560267 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.12691911 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.103672692 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.13181409 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.103334951 seconds)
  done (took 3.82786536 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.110778711 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.124066031 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101986334 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.122831207 seconds)
  done (took 1.447061359 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.115642622 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142314157 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.115333308 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.13524739 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142106291 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.116324829 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.125322434 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.098760475 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.126874199 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.108018453 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.127138076 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.144875887 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.116414235 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120126847 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.109838019 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11911935 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.094947953 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.143457316 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.134432306 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.110889295 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.125511928 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.10852595 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.132579999 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.13781422 seconds)
  done (took 3.928933266 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.218859563 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.112244595 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.14882531 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.105661415 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.178382961 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.150805877 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.122711405 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.124407766 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.124948636 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.1107432 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.129160797 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.179127358 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.108881154 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.128911348 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.125287379 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.106311325 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.135698725 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.135347461 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.101445159 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.137747095 seconds)
  done (took 3.665756735 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.111290524 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.124272975 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094807939 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.123620325 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.106639015 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.126722733 seconds)
  done (took 1.672154528 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.100627747 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.093350188 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.119976181 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.093851586 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.124431706 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.094250153 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.11834425 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.093867596 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.118732644 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.09444867 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.119219101 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.092890112 seconds)
  done (took 2.252230154 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.55718327 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.097417404 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.127838949 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.124106043 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.103930186 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.12319911 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.113519726 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.124098264 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.180570244 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.098063477 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.140791698 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.180838972 seconds)
  done (took 2.964473528 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228603312 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108460622 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285384853 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.437835728 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16655324 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173280714 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.356205605 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173876382 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.193064457 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117354012 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239855727 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164479158 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160626726 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186093497 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121074704 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.193213113 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186755507 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235396999 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129313382 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251496867 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172749893 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174496482 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198008832 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160938728 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144695309 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166101438 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099007905 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134252679 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180937356 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176410057 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180568559 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156630102 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147772167 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210675178 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250800312 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19116839 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.398497151 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115229491 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.200126293 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.224667294 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263806614 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151675233 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20330384 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163475421 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138862416 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188784841 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164389033 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.185836686 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.139064738 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121758205 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223531029 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186685072 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.190791641 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146627571 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.371930472 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128192809 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.15271613 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191794829 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225136268 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210010788 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177337461 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.103592008 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.256177495 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198359691 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189313719 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152247605 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.17789994 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135291963 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187291074 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215556918 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189604111 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18155086 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.22843672 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143525902 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17409688 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186956509 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161177852 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186722754 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168476102 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.101187165 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157268301 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144146297 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107591431 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195682766 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129616405 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222880257 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14467651 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.298451571 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218644935 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168445366 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169704851 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176114671 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177721887 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154671584 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.12620861 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126222535 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.180515335 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164639161 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140585294 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166017317 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151979943 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.106087729 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160080687 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.129770035 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165654693 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.114490284 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174732328 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173131594 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.135814043 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172077287 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157115636 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.138326311 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177491297 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232326903 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112007253 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14107751 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211748707 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166296603 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.14433517 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193248697 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20652132 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.182054988 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145655149 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177522363 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203683268 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149741216 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207587463 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151064704 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141185503 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.129349095 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165416134 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163748001 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.163381105 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136302034 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158105994 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210227084 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.134172372 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116258514 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18518458 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134796298 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108342054 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153925575 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144078774 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.148213782 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.130847973 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.148092553 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164542202 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166765546 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161041246 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16734563 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150287384 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203817046 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141789753 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.167964775 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127007907 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.126707049 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.187116246 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205309718 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140470388 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196670591 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.177724711 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268485494 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172040285 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109462632 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187955117 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140156156 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.126404798 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174701967 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167594708 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168939586 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.202766758 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272232454 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.175351044 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.131575156 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158955123 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173194573 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.192530172 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163494949 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.154197709 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172929102 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177610366 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.131027242 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.102315697 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134727935 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147317181 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109934324 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14090247 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19034653 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171730117 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.259969672 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170203289 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147236658 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201226367 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105190261 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175437887 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.183183073 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149894692 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.204614456 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231945609 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174010808 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122306531 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178961676 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.12915948 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104855208 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142403368 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176608074 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142526767 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113120025 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15142968 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203840659 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212969048 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128700255 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27493102 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173029469 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240599495 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.104763767 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171940179 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189870981 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165168281 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.170554384 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139215946 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.169444586 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196501384 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151908358 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201058768 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171014268 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179286066 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241003099 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.164166046 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11057872 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157934335 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176455306 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149364715 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181348805 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153469965 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114855847 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164379657 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.144857165 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104677791 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218260945 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120722464 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219270452 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.175198215 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184384472 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134921469 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122715493 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169806961 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154981315 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.124958712 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180676209 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206501832 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154069989 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167374364 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192773435 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137585453 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.359095289 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206764187 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225825459 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116004501 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151420005 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17064724 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178870553 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172170104 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19203534 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152935913 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188732462 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16666337 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.151427925 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114847453 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15625341 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158993671 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.159077429 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.111925193 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.162725221 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.154850111 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191242925 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154012146 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166969846 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173390865 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.155285133 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.136186643 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149863303 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220599328 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1703068 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18968767 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.164285768 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.18369927 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196236077 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133373405 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105956319 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.138836592 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1909226 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140806253 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166442996 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.229231777 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279854852 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167255439 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17770662 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144384371 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.102794601 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169780086 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157375684 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267436857 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122743707 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.1433556 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236132398 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129160169 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139599871 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173036419 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.346359372 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150747649 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194612403 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.129509912 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.320667516 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133309153 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111920558 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180025926 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179895319 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.140023377 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.190036125 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173349808 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124166358 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178982688 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146306664 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.260667761 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227238388 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180156817 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182888925 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.152285923 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166948012 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174292464 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195485738 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154730467 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.157099556 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142947535 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230469061 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206407409 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.140622074 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172381356 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141788714 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171001495 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215023887 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117060024 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196129813 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139542869 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172481686 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148840624 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101586351 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166008267 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.257693353 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141723207 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193152951 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164864875 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110810943 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134592308 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161341992 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165713282 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123181976 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.138419177 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187672288 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.138007703 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17086967 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18917821 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110434089 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162183162 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154593787 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109130966 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151718466 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153048694 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142359037 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.152389988 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197167689 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.141381676 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196165915 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181674382 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172743139 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169326757 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155087212 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670197276 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.106203992 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229730517 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125947975 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224000451 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127977178 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177511614 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175606507 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161023505 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17667563 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157361333 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229663303 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174464753 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.166753686 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109599748 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15338597 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154271513 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.138980133 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1330852 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173518772 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149532526 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.144087982 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.164280909 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125206938 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.153541812 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147373018 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203289159 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155488062 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19232115 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192926697 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146324563 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173691045 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18395996 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137258426 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.138698181 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209687739 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120886428 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15913332 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.137937075 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.113468737 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188781633 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.133022289 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169870073 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167918679 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170021306 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171027179 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113583801 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170138039 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152068511 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169331775 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104066642 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.165277348 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166700603 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139830721 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10517371 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166501286 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167296537 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.167450141 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135311333 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.153636334 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195030492 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.135643425 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142667981 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.331638719 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165448743 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20173145 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.161764637 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145712948 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12266458 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164561185 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.161671326 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170822375 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.141066167 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110694269 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.140984722 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.193845007 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.172585866 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16716057 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195399981 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168241104 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197014636 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.113755418 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27412483 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148007088 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16289239 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.109187808 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.13709173 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149217798 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112581872 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153567443 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.25896954 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188902202 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.159057238 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.122787166 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133819108 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.134191618 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112237825 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179248349 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1611767 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167126834 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150828339 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.096483886 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152174663 seconds)
  done (took 82.657405946 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174151605 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149695179 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.156749735 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203535657 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17510087 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26382808 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.213574376 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23503121 seconds)
  done (took 2.649126844 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.112882945 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.14378253 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.14759659 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.131782408 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.098525578 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.377586643 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.142686824 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.104209506 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.158758656 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.140857519 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.123495202 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.598632646 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.130162255 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.128982513 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.118291512 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.097554743 seconds)
  done (took 3.82688365 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.424164607 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.556147809 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.075984487 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.256829732 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.236268932 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.184737677 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.766175679 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.17153016 seconds)
  done (took 12.751990772 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.136624515 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.148394558 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.146094921 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.174045838 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.158966077 seconds)
  done (took 1.850466478 seconds)
done (took 125.922023455 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.108262784 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131784838 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103024745 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.133833142 seconds)
  done (took 1.54608266 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.121309858 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.086229779 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.117862044 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.08574838 seconds)
  done (took 1.490526194 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.440638368 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.117714746 seconds)
  done (took 1.676039619 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.136462273 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.152326305 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.119817614 seconds)
  done (took 1.495356593 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.116606277 seconds)
  done (took 1.202897111 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.118643975 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.140189957 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.121887167 seconds)
  done (took 1.464839625 seconds)
done (took 9.954516469 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123483431 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.442777221 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.391987455 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145729431 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.732059664 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.386274564 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.065008964 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165835646 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174399068 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09957401 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145998216 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676870155 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.083749083 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.346301316 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.067909145 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.373794021 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.681222272 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126792848 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104571139 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127600872 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.011409277 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124701079 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098710569 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.127820238 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677163662 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.430871894 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097760191 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.387715865 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096281883 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131502997 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.413939498 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098422762 seconds)
  done (took 17.230977354 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.105751395 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.189718434 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.105444891 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127989341 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.101909782 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.129674333 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.135977757 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.112307991 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18801526 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126358641 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117996478 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126240463 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101841516 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.127023003 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119577507 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126620215 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.099466603 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.128658216 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103844072 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.130180757 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.145761188 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097448379 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127639423 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100349144 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12556715 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111513266 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126346413 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.111479877 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.127000239 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102635583 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.132614628 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098598848 seconds)
  done (took 5.000018146 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.153206779 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.200576483 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135149066 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13262784 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.18213618 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.128808089 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.213399806 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.166087421 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191991209 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099096781 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145857261 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.097538091 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.164970524 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098064438 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.150016106 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097293757 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.130866973 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12870399 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.105535138 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127943856 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118460894 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125678932 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099664325 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.129585036 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097823387 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141674379 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098175246 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.140792382 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.124864668 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104235818 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.131645468 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09916728 seconds)
  done (took 5.354660484 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.11255351 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.135699514 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.115228734 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.143998864 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100801594 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.135147417 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.107062321 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.130312795 seconds)
  done (took 2.074408392 seconds)
done (took 30.745615945 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.122705807 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.132177092 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.113455974 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.141020092 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.109421317 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.163109761 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.097199172 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.138097596 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.112160308 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.13510567 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.115038691 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.127708842 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.100708307 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.125638545 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.1125353 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.132257632 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.114326992 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.136201116 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.120107412 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.143142524 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.099318287 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.139762284 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10788126 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.148697917 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.14789214 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.120097296 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.143468421 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10546859 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.127531192 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099021579 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.144223355 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.124375712 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.130358903 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.114970262 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.134026424 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.10244884 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.127913059 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09920508 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.142494135 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10976854 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.134932194 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.108455795 seconds)
  done (took 6.285777548 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.1320111 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.172419201 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.096180546 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.125226187 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.095907778 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.166937386 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.163038458 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.095725954 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.125778294 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.123445562 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.154954988 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.124051566 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.097129398 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.096174169 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.126369042 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.095734912 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.152880001 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.151805146 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.129063266 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.15894398 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.174539098 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.130546276 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.16401596 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.152512824 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.141457497 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.164472199 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.14912213 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.163781449 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.127192069 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.124867315 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.130215345 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.162359012 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.095354601 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.125949261 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.168810988 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.135122008 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.155790935 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.169523806 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.130555774 seconds)
  done (took 6.451653521 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.11366577 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.146678621 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.130114035 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.271187725 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.139413151 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.146350728 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.113739988 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.147065482 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.159813695 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.09901495 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.140146534 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.131473518 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.145064153 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.111747877 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.135271086 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.142439851 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.118702947 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.129514823 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.108484018 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.147778374 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.117537637 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.14306409 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.116928878 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.140528184 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.099412804 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.139113194 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.136810173 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.115087422 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.138364745 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.109810871 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.133097448 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.103634031 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.13147885 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.110716148 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.133844806 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.135119463 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.121686203 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.140987606 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.114051668 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.163457566 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.139437186 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.103339578 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.152853812 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.17904988 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.103421945 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.134915883 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.110794953 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.140951099 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.099950103 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.148976911 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.115305953 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.131864583 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.143387151 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.099215786 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.128208923 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11003973 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.131338717 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.102789701 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.139736052 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.104184935 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.150123412 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.110132219 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139707029 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.103714674 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.139817653 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.12720647 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.100230834 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.133920919 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.126147906 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.137810727 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.135728038 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.132954117 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.135536769 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.110779851 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.137967762 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111208921 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.128782325 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109397669 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.140025835 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.107131957 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.140782643 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.102012448 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.13303553 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.117521532 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.144722957 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.137253821 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.104998986 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.135947262 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101864016 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.133315434 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.117722758 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.130981035 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.103904713 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.14360072 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.130479701 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.10288451 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.13500873 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.104143913 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.127810778 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123564673 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.134537747 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.099499823 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.151834136 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.102273094 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.134565947 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.107675992 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.14253538 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.128214153 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.114563913 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.134688742 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.098435045 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.138015145 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.102724628 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.129275995 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.112566743 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.145439071 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.106009655 seconds)
  done (took 16.023411849 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.254906212 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.229616545 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.203017146 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.315186545 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.152622063 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.15602748 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.227047623 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.149727094 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.131226986 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.170415662 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.186188073 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.197459286 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.185763206 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.198761082 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.187589501 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.129680571 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.134993649 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.183284014 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.22845832 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.311536715 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.166656 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.114549301 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.173015134 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.170307808 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.149787875 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.146559147 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.124011965 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.152530359 seconds)
  done (took 6.24511523 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.12214282 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.170599016 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.137568471 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.129990804 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.157308558 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.131021651 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.105153799 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.100175247 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.146045138 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.147120223 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.100599245 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.137322011 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.106211139 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.140770299 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.099635281 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.140454879 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.109681106 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.139253444 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.132262227 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.105185774 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.147647031 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.116889142 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.137616118 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.10498777 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.147302522 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.137028476 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.100695746 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.15060764 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.140230996 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.12901584 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.129065393 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.108986859 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.146198153 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.098843234 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.138319849 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.13215403 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.102076739 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100922827 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.135293293 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.0968635 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.129817275 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.09072951 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.136539104 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.145142094 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.107719885 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.131243156 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.106198527 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.134883747 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.101101402 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.126583764 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.102902863 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.132197687 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.104856649 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.147476544 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.103144513 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.131429618 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.103889095 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.130240148 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.110087559 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.133264243 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.097221351 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.134714875 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.106869646 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.136181348 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.108780568 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.137940983 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.10403556 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.133605584 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.105513984 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.139334347 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.102458949 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.1436914 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.096202865 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.134176833 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.110375112 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.144212061 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.134220864 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.105558588 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.137684007 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.099755711 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.119955949 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.099601172 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.086366447 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.135207663 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.098657386 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.136481582 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.102980469 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.136250642 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.146972039 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.109716825 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.13980935 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.100546547 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.137443723 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.105405917 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.127703057 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.103576267 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.148714641 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.150972316 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.098351077 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.127575016 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.121538516 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.131885477 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.098018802 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.118707817 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.110411438 seconds)
  done (took 14.000399969 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.134784197 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.169529138 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100509984 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.149732424 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.167321985 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.128738704 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.146355654 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.108765887 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.131975399 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.120576202 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.139758635 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.109288979 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.138606353 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.146025371 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.131459676 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.144752734 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.100789496 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.146145873 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.105211229 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.17283043 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.150592308 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.127353074 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.163806229 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.142850755 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.106318904 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.156212022 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.131805641 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.146395934 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.112478632 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.164216354 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.146081738 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.132539829 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.16579881 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.136506205 seconds)
  done (took 5.806145714 seconds)
done (took 55.898941542 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.213939802 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.436882858 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.190902289 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.193512385 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.248071476 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.227888079 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.195248268 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.397273969 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.958900958 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.185934614 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.196719411 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.195415225 seconds)
done (took 27.760696119 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.236862865 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.815718157 seconds)
    (2/2) benchmarking "String"...
    done (took 1.50985158 seconds)
  done (took 4.444962326 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.195652978 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.196775577 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.440674983 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.1983229 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.216160297 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.213838207 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.214671606 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.199266439 seconds)
  done (took 15.798340395 seconds)
done (took 25.792616357 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.271771612 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.410466271 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.457168368 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.210573444 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.21134743 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.193241449 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.213936167 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.234715 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.207996684 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.19915106 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.209663942 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.471136597 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.212080757 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.568803205 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.196646734 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.196511946 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.210658866 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.447929091 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.193240217 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.244164871 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.179941277 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.202851363 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.196712438 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.221204671 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.208500165 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.19704355 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.218496225 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.199588312 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.432153704 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.195779258 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.244303438 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.196017665 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.219500589 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.212356677 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.307017497 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.227265612 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.404122281 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.209060724 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.187950144 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.195529287 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.398632722 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.620322208 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.200405175 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.206670288 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.209430202 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.202950865 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.195274085 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.024265481 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.20511288 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.20108147 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.229872051 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.591767844 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.205617183 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.200209078 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.21215896 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.44267259 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.204341967 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.247260927 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.243002706 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.207700826 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.206969332 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.196624455 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.252530259 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.203455523 seconds)
  done (took 143.446372483 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.202402377 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.201591362 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.202754745 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.221509012 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.201440652 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.204797257 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.202667201 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.201723706 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.203236848 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.204344485 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.202580744 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.203074955 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.203898699 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.179338608 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.204762096 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.226678634 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.202844404 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.222043569 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.22286105 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.202609624 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.212633931 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.201823135 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.218408259 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.204217895 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.211239357 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.284415222 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.248913199 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.211282708 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.202926209 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.201234264 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.206378823 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.207755728 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.841590185 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.0559676 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.215871796 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.236513036 seconds)
  done (took 80.203632555 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.2022057 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.201798022 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.203236883 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.23499925 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.201417952 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.80151945 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.78741518 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.927799386 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.409455848 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.657693172 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.535023282 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.204909072 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298650918 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.211118697 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.198907508 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.217529866 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.226730175 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201780125 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202153945 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.79967918 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.216387806 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.423780383 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.391253265 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.212298934 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232529284 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.599119726 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.196470697 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.1994 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.233388564 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.535726404 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.248392089 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195388422 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.62230293 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.558833553 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311139616 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.19701361 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232298779 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.200458912 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.485781258 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195712589 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.198524869 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.199050984 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.200742757 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.909870295 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.199485104 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.78415571 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.197857249 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.195733354 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.196547627 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.198786389 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.236559305 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.929864945 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.208689905 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.187155805 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.188634161 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.190514668 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.189412812 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.221803662 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.215506869 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.309316563 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.190057168 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.195259728 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.218672369 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.19120134 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.237757294 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.188672347 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.918698905 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.272363107 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.293283554 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.189530646 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.186739996 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.775298491 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290997631 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313230669 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.1887731 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.191349612 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.192324898 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.191643893 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.189060002 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.301797989 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.190997504 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.611087446 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.363777003 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.208148179 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.592553928 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.292868431 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.189976166 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.594751739 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.194446884 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.190094451 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.006707354 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295804653 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.19127142 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.191104591 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.194005152 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.614437495 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.757917832 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.461952475 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.194568903 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.497981865 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.192131238 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.621640805 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.750333589 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.870516839 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.194192565 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304709072 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.368517904 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.20872552 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.191543729 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.588071589 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.195589113 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.250030846 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.195090893 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.591563638 seconds)
  done (took 365.574588686 seconds)
done (took 590.344143614 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.910960062 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.857436836 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.988490781 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.883761006 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.854107227 seconds)
  done (took 10.605560664 seconds)
done (took 11.718322891 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.383845915 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.384536884 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257440482 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.391983458 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.230663142 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.407539106 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.368584806 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.214335366 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.300692775 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.277702711 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.300405965 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.245663583 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232382432 seconds)
  done (took 18.108466103 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.468118892 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.192301824 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.274802935 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.471103005 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.235012579 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.472822701 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.496873189 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.19658886 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.32033564 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.210249694 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21060108 seconds)
  done (took 17.669997466 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.461550291 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.198143438 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264077476 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.437850733 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237542159 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.462196619 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.494762988 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.197231344 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.342879058 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.210279434 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.20882681 seconds)
  done (took 17.632984187 seconds)
done (took 54.528550417 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.233921143 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.360446447 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.225609997 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.205278345 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.204203421 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.203103134 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.206480634 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.202808101 seconds)
  done (took 10.962264604 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.203220494 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.205766383 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.199705497 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.203220138 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.202803319 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.202931582 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.202178051 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.200072528 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.20455647 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.20102379 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.204047682 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.204371267 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.200426072 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.199487207 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.200641538 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.200644564 seconds)
  done (took 20.355281316 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.201660601 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.201124476 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.203792673 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.200848258 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.200663228 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.199606453 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.200906439 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.200258182 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.202323846 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.199395754 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.201014164 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.199745922 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.201693198 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.200665639 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.200114685 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.203445472 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.202738251 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.200575926 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.207652133 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.201731398 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.19883582 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.201614126 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.200567233 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.20257823 seconds)
  done (took 29.953722575 seconds)
done (took 62.388393959 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.197088797 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.215506393 seconds)
  done (took 5.532826281 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.26291794 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.266157809 seconds)
  done (took 3.650985459 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.203842201 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.205126118 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.206111872 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.207080343 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.202823435 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.204637996 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.20363092 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.205422125 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.204666531 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.204456105 seconds)
  done (took 13.170149244 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.20605705 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.204749555 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.20146432 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.205235939 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.204874033 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.202195864 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.203808384 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.208671815 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.207777596 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.202221069 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.207067184 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.20313789 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.207526589 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.206828751 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.2070848 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.204861658 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.201732438 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.202745149 seconds)
  done (took 22.806821082 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.22014516 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.226760042 seconds)
  done (took 3.569439209 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.347561452 seconds)
    (2/7) benchmarking "second"...
    done (took 1.24636146 seconds)
    (3/7) benchmarking "month"...
    done (took 1.319327212 seconds)
    (4/7) benchmarking "year"...
    done (took 1.310893262 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.24609225 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.227332908 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.247016359 seconds)
  done (took 10.069438828 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.207045807 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.400631534 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.506550221 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.763932043 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.20634797 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.214582635 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.09256944 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.213945392 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.213954276 seconds)
  done (took 13.944880642 seconds)
done (took 73.86411304 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.196854025 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.272308987 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.206225745 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.212011696 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.536873839 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.201289099 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.195699439 seconds)
done (took 15.943750377 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.192330097 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.188603133 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.197659761 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.20133828 seconds)
  done (took 9.895437477 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.216218615 seconds)
    (2/2) benchmarking "read"...
    done (took 1.550489847 seconds)
  done (took 4.891706344 seconds)
done (took 15.904462512 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207554537 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.20617322 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.204933136 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.208426338 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.21399994 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.206701285 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.204907125 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.206928127 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.205991694 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.205711802 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.205489887 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.206267745 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.207971447 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209976229 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20625282 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206020425 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.206072116 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207383371 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.204645499 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207077314 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.202619433 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.206847392 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.203838886 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.20614165 seconds)
  done (took 30.083359313 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.210458831 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.207048752 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.212014092 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.207576631 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.205162759 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.207047137 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.208400669 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.206405238 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.209199943 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.208735651 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206759374 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.202721394 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.208593353 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.206437436 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208258852 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.205893521 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.214784301 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21032478 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214060738 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.209098033 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.209126424 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20777009 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.207839535 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.206453393 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.207947727 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.20815403 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.213591719 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.207112151 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.213083087 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.213476219 seconds)
  done (took 37.390137764 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.215520635 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.216880995 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.214621584 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.210269586 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.210350134 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.211005998 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.206366451 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.209204617 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.209932147 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.212174573 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.210928009 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.209735266 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.209026132 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.210224976 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.211460955 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.207351991 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.212334597 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.211765488 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.208222261 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.210873882 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.208425786 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.20975389 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.211997322 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.210019908 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.208617353 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.210750084 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.20981937 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.208759014 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.211909509 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.210778997 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.209663358 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.206339524 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.207215891 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.208220206 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.203698806 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.205785637 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.213727063 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.218545642 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.206783828 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.207053135 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.210729541 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.209796273 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.206526236 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.210793905 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.207138984 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.209071771 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.208185003 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.212248148 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.212370367 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.210702454 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.209881138 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.209939685 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.211147709 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.210162744 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.21263848 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.210877617 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.212403844 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.207885672 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.209957936 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.206400208 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.211704405 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.20803162 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.210705911 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.210146077 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.216942454 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.210308088 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.209506027 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.208085545 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.213044432 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.2111667 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.210473715 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.215497926 seconds)
  done (took 88.269236548 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.213413507 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.208433339 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.206693539 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.206610835 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20541945 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.207798804 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.209589858 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210480679 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206113489 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.206660283 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212707208 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.208808587 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206955961 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.211030166 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.207735361 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.207165572 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.213662715 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.208978063 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.212778782 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.213019116 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.213159843 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.209246484 seconds)
  done (took 27.740663579 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21044158 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.211653229 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.206952856 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.215165728 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.210849207 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.21081216 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.211563196 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.213957546 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213409983 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211661236 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206850056 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212232488 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.682014252 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.203557079 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206261868 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.205205243 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.205806493 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.209941246 seconds)
  done (took 23.37200612 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.203841861 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.206062146 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.207667168 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.205841765 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.204754655 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.205217743 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206909388 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.204670199 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.206786513 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.206133532 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.206663623 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205683619 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.206811087 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204087897 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20702251 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.209489753 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.205635766 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208433341 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205266344 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.205209955 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.204116231 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.207143334 seconds)
  done (took 27.65231874 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.209016922 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.205927505 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.203937758 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.202714183 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.201335286 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.205982919 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.203854852 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.204640767 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.210871791 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.2055229 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205362901 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.206737884 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.20517345 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.206120311 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.204348777 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206973871 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.207061604 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.206182038 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210202844 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.204019717 seconds)
  done (took 25.235722735 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.207534442 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.20852663 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.207055166 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.211554432 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.213081488 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.209213746 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.211620599 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.205719448 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.211856017 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.205554451 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.211310548 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.209917584 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.211347637 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.20506065 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.207454417 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.205431955 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.210795208 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.207146113 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.210039222 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.204793562 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.206909625 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.209655071 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.208787432 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.207775297 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.20753727 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.204699699 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.207740478 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.207144077 seconds)
  done (took 34.954315691 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213048147 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.210467913 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.20904285 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.205472841 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.209349564 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.205940069 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.209170113 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.207638055 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.211179723 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.208799521 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.213934813 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.211329173 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.213143736 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.2130781 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.214789828 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.208061349 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212584153 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.21448423 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.210499076 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209680402 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.213824886 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212960987 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.212304254 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.211095606 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207746849 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.21575608 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213739389 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.215660201 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215557803 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.214489523 seconds)
  done (took 37.465580499 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.255649271 seconds)
    (2/2) benchmarking "in"...
    done (took 1.260636326 seconds)
  done (took 3.645253773 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.208331744 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215041347 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.214232359 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.211086522 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.211516033 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.215908253 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.21640908 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215115155 seconds)
  done (took 10.835482942 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.211357898 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.211479179 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.2151703 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.214082484 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.212811846 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.211182524 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.220606545 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.232594193 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.212131019 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.210139442 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.217014597 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.217370116 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.215037021 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.212117468 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.209195846 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.21540719 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.212672817 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.21237287 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.21225735 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.213781875 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.215223373 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.214823518 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.215183795 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.212088459 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.215200228 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.22238418 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.220675451 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.214662833 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.215325877 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.21808301 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.213802239 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.212601524 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.215684931 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.214272471 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.216513431 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.216619812 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.224010172 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.235051252 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.22151135 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.215490319 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.220178542 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.213699093 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.216694519 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.218189107 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.217698446 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.216901493 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.216877454 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.214524138 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.212736961 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.219964758 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.22227701 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.216220816 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.214139872 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.219795942 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.217834486 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.224994083 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.23552532 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.221487019 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.224065721 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.226856294 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.230359923 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.23894064 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.221317428 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.221486829 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.226500981 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.236457036 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.225931257 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.234604204 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.216353777 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.219291626 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.226235704 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.228271452 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.240908573 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.219780332 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.220068686 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.223585276 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22321627 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.2233893 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.228056909 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.241163701 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.221078388 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.222699261 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.230488393 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.239171832 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.221036243 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.221781429 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.221244308 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.222583641 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.222931438 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.230170554 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.239092665 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.223701051 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.220650847 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.221520124 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.222189072 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.221588755 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.222259304 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.22146355 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.217854919 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.223001274 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.223312281 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.224054715 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.229797763 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.221696294 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.223288339 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.229035042 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.225231345 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.222600633 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.228477248 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.224016067 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.220396228 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.223468771 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.229568506 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.21979336 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.228281114 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.229574296 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.223369521 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.225410966 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.223258341 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.224186051 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.233082448 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.246909324 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.225933661 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.225014423 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.229540617 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.235385334 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.224730038 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.22774269 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.225368382 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.22192644 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.221910143 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.225850924 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.226045911 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.224922423 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.225085627 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225857403 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.222647252 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.225845357 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.225889032 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.226457096 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.226269583 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.226662991 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.226063569 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.228707082 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.226185597 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.228736586 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.230855357 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.227022497 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.225376598 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.227734559 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.22466668 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227215383 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.228214624 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.225717503 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.226744843 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.226432089 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.227969674 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.226553939 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.227365417 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.228037601 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.227132854 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.227513876 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230045947 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.226716274 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.230619815 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.228315117 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.223069136 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.22674233 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.228492587 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.228251828 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.228933141 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.225370789 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.232075258 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.23411842 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.229297113 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.225864389 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.229732122 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.228800672 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.228777492 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.228805264 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.232888492 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.237066 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.228973486 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.234816927 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.229147282 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.230019486 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.228568628 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.228038481 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.22703294 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.22853708 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.231411675 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.235812829 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.240195879 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249703175 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.230650035 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.233447857 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.231708449 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.232367795 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.235312304 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.231131112 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.232088327 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.230340465 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231555039 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.229858243 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.231954193 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.229473427 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.230400034 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.231152689 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.234185718 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.230923973 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.230906867 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.232269494 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.232417105 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.2274104 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.231239762 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.229825836 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.232659141 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.229362917 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.229842541 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.228659549 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.232489326 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.233864837 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.236748975 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.229414972 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.230989164 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232393783 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.231729037 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.230904013 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.23340179 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.233405997 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.232482094 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.239771633 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.251472107 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.233602193 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238283872 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.249277137 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.232233678 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.234972129 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.232793663 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.229774022 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.233756552 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.240166211 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.233566619 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.229952919 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.233311465 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.233719358 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.233956422 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.238437911 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.229789225 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.232058945 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.231870935 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.232447696 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.232097503 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.233698097 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.231040686 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.235215855 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234202428 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.232494005 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.234210882 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.23283925 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.23294669 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.233691819 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.234592507 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238530721 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.239928323 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.238919721 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.234273408 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.233631467 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.235893386 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.238247831 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.235968546 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.235447906 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.234975253 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246268867 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.255848528 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.241041151 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.2531681 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.235802938 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241001459 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.251662955 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.238107189 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.235510791 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.235076578 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.234322769 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.233879265 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.232404436 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.23699257 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.236673472 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238635436 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.237704715 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.239532431 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.237724154 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.237882049 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.235563341 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.235801275 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.237836703 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.237623506 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.238230423 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.237843608 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238279459 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.238142347 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.238128827 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243390409 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255614801 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.237114523 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.237936083 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.236828866 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.236546416 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.239937243 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.236956631 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.242577332 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.245954262 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.239949839 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.246336147 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.241000368 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245670468 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.238950098 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.240394234 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.244341009 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.237079461 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.237701405 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.23656348 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.238351553 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.243816022 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.254705796 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.239744674 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.242911654 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238968381 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.238001469 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.239613637 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.236033839 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240581698 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.241320717 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247149201 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.259104297 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.242932104 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.240066857 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.235991214 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.239277548 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.240963155 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.238507567 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242656688 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.240157574 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.239913291 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.238773047 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.239614457 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.240025859 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.240614038 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.23967315 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.23802449 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.240284569 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.248405589 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.260441251 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.242528918 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.240511215 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.249173558 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240024479 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248137889 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.260551321 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.240373541 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.239428803 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.241355775 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.243866577 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.239351962 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.241988444 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.242223884 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.24091148 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.244981644 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.242536962 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.243619773 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.24169234 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.240239856 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.241062666 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25053479 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261646371 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.242689202 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244036274 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.238998678 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.241772421 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.246498282 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.240715596 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.240184312 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.244687909 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250789722 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250093727 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.241092482 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.242886056 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.243404951 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243546725 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.243123297 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.243554261 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.242449257 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.243704738 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.242578561 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.243471669 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.245426652 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.242666547 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.243357571 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.242611945 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.24334516 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.253046847 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.243271915 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.244569475 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.241555913 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.243635548 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.244447461 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.242939819 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.243271013 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.244743875 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.243171693 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.244612855 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250660794 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.248729934 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.245856947 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.243940109 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.245778949 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.243851469 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.246171258 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.243881826 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.245235517 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.243886979 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.245784896 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.243599308 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.247437591 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.243876226 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.244117445 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.245982283 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245192436 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.246261575 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.249150374 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.245458479 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.243783011 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.245131208 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.244949241 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.243900873 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.246975606 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.254064719 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.249751881 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.255790481 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.25453089 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.250702261 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.248251788 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.24749451 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.255054853 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.246462708 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.24693179 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.249071718 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.247329037 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.247806084 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.251079704 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.248935428 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.253613181 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.248111543 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.247628161 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256228134 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.26882645 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249456905 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.24864993 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.251945784 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.246898189 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.246153662 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.250799237 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.249732687 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.254992504 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.267528336 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.248109532 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.249934448 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.247043746 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.249956639 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253298494 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251444235 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.247085392 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.245787615 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.247589097 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249423824 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250042562 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.246496067 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.249354599 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.24808105 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.250544317 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.255341186 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.248010104 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250759423 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.249869684 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.247083835 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.247780147 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249641793 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.246261021 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.248029572 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.247853563 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249289732 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.249199834 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.252145121 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.249827107 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.24867654 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.252277585 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.251273982 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252515845 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.259642697 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.256843255 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.247599184 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.250035745 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.250058796 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.251806631 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249352614 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.251950396 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.250629608 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.251717063 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.25343567 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.252719155 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.25360535 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.254149117 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267977365 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.271789543 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252020154 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.248470963 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.253690344 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.249614754 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.24932637 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.251865757 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.252733349 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.252766139 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.25845176 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.251428751 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.256095762 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270414954 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.25127343 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.257093863 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.253378335 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.257914175 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.253579588 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251683899 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.251499108 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.256463954 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.267808625 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254052474 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261656434 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.279414903 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.271717686 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.253051952 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.253090715 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254310879 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.251524019 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.25320251 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.252550264 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.254609393 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252521986 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.253264806 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.252221127 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.257922308 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.254932259 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.254953687 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.254140847 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.250747304 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.252790932 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.250786919 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.253802885 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.253989409 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.252213808 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.253273815 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.25352146 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.252937643 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266050029 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.276514404 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.255931777 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.254057816 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.252326486 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.259597376 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.256080534 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266053342 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.263042842 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.25582005 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.256271267 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.256541778 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.255183966 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.254559025 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.254757397 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.254591974 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255683676 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.255267515 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.2667915 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.27813752 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.25966529 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.254967639 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.25794545 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.256385564 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255396252 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257190433 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257869671 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.255924097 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.256383911 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.2594257 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.256217495 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.257820905 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.259585629 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.264854171 seconds)
  done (took 739.271467865 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.25506629 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254106787 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.254336467 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.254495923 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253823759 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255428418 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254788628 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.254729663 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.254669412 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.255044383 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.253878105 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.253452766 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.255671256 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.25440335 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257497962 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.255529679 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256184896 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.25470564 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.255652757 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256136761 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.254001887 seconds)
  done (took 27.516658393 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.256802994 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.254064282 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.256497078 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.259669218 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.256483183 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.259415762 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.2568042 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259150592 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.25784916 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25632064 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.259826772 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258868351 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.257148018 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.255817903 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258852408 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260091148 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.261854906 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.25538323 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.259584383 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.256763384 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.260479748 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.257385035 seconds)
  done (took 28.840739809 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.258509519 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.259441249 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.260217012 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.256300462 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.260824322 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.257984004 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.259153686 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.258797573 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.259491136 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.260519034 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.259400324 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.259502992 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.264733089 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.263766606 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.261166809 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.260714119 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.259233675 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.262369935 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.260148617 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.25655857 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.264758425 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.274442776 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.258878113 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.258700476 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.261635835 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.260897033 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.25982041 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.259296575 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.262301081 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.265980562 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.262328 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.259089108 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.261299484 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.258050473 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.262637048 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.26365865 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.259992118 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.257896513 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.261226007 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.269487249 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.278991418 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.261281278 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.267647235 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.279907018 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.262820599 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.264398181 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.269859129 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.25910256 seconds)
  done (took 61.751637295 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.850821197 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.874334589 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.863728269 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.88577474 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.880391633 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.896127383 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.905764424 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.92237963 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.901717214 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.851826058 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.852628721 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.850784791 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.875318135 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.847384288 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.84483766 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.925002481 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.880298559 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.893513995 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.903168775 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.869616016 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.904626552 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.863688225 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.905799346 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.845548464 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.860534982 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.864515503 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.866299427 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.868871192 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.922518262 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.859172296 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.883866376 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.845351493 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.874428765 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.919049113 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.889695003 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.886136472 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.941584615 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.935883009 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.901108136 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.919519947 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.906283908 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.875990922 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.903119313 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.884169599 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.931555694 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.906442927 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.904501313 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.906719489 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.937196751 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.86074803 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.852576107 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.880578996 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.869764094 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.881029016 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.892419849 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.87822566 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.877583421 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.955393363 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.93976561 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.884374055 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.848744852 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.868024714 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.855119249 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.884485472 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.84881166 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.88047036 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.895181072 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.901598067 seconds)
  done (took 129.415607588 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26710432 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.266942314 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266143258 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266572725 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.268555005 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.267480647 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.267706247 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.26732818 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.268041754 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.267081694 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.267210036 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.266768196 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.266456259 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.268142159 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.269047644 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.265280234 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.266470628 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.269467925 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267094813 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267968183 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.270409574 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.266289998 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.267523672 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.267253034 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267203543 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.268711104 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.267019759 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.268059413 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265922687 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.267915343 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.269601461 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.266919144 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.267002378 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.268626157 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.268773839 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.26799284 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.268042759 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266185841 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.268434653 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.266473062 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.264984977 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.268538795 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.267632116 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.266757933 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.267060959 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.267804857 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.272061995 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.267174095 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.268849165 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.268444068 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.268455544 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.270755631 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269174667 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.269100198 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.270489559 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.271071944 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269935156 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.269638004 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.270063618 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.269401524 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.26814853 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.270813444 seconds)
  done (took 79.792841854 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270921141 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.27090424 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.27040707 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.268551071 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.269656411 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.26761221 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.268361365 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.273392066 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.27251561 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.271402484 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274267549 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.269320601 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270229339 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273571903 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.270858899 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269076943 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268448734 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.268002221 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.272606709 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.269964285 seconds)
  done (took 26.587214255 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.26809369 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.272567686 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.268825568 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.269232697 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.271703126 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.270503416 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.273693117 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27099222 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2685554 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27146107 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.272458496 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.274315719 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.270771804 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.270232797 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.273092528 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.271391755 seconds)
  done (took 21.514345895 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.268524784 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.272166515 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.273100884 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.273767262 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.271044271 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.270338022 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.273314582 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.270014527 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.271875702 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.274459118 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.274523995 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.275221875 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.275737455 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.274299095 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.271605465 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.27548427 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.271052174 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.271443521 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.275627314 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.272817285 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.270826739 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.271632517 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.274470052 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.274153074 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.270609259 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.273656996 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.271292414 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.270948375 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.270529309 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.273016792 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.272154465 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.27191712 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.274323421 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.271169912 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.274073377 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.271675465 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.275803184 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.274264919 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.276990703 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.276341053 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.277913011 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.27313128 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.275878277 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.277224748 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.274021784 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.276512885 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.273837638 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.277095866 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.274672578 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.272585889 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.274993148 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.276436228 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.276027636 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.277622152 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.276080823 seconds)
  done (took 71.228961846 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.275818194 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.278072109 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.275287233 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.277528996 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.27772591 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.276591349 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.278682079 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.2763237 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272566747 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.274410656 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.273219023 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.27826606 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273553049 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.277036929 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274353503 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.275262022 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.274074347 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.27507964 seconds)
  done (took 24.145282138 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.273802485 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.275002397 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.276678867 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.273677597 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.275543464 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.278387499 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274219694 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.277700079 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279466763 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.275663416 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275728678 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.277754447 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276772477 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.279032106 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.276561305 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275605115 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.277084369 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278339164 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.275748861 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274158598 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.279503736 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277967859 seconds)
  done (took 29.265107519 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.272573344 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.275218504 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.277240014 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.292502975 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.294749132 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.277180379 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.276930365 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.277799446 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.298055268 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.327790717 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.321303744 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.29424288 seconds)
  done (took 16.667776679 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273241091 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277705661 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.276885011 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279687416 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279138474 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275665365 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275272658 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277018327 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278291802 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276820029 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275928738 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279666228 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27958094 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276663471 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277903353 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281660306 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278572067 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275554122 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276382235 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280387331 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277947175 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282038769 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277371648 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276149676 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277646656 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277198001 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281581921 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277317303 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27813012 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278783636 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281973443 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276393965 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279051097 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278106159 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280855919 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281380549 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277154436 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28078772 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28149066 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277781431 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.280621635 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279891664 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279786672 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279001193 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282489796 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27791263 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277146064 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277755844 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280474133 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281592732 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280508807 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280379552 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280520143 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280000176 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282650827 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2824027 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277065986 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278456617 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28117431 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279303275 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278627361 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281966485 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279578419 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281148414 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280685215 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280051247 seconds)
  done (took 85.596002038 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279947819 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280058687 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280086419 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279196988 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279371647 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282296087 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280891261 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2814226 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279595275 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279843587 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283939541 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281576153 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280897046 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28326186 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282126347 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282328003 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280299973 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282452258 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281324764 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285883512 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283695073 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282321424 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283280736 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282210853 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284187536 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285346785 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282775436 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283607793 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282077236 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282006281 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282917758 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282342446 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284355061 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.281895486 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2833896 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283240296 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282400823 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284546993 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283321073 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284850063 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283297099 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284957526 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28405945 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280820038 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283417114 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284386712 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282165291 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283577615 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282336393 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281713905 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281990957 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283213186 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283974736 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283134785 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28290276 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282638495 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284866844 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282127869 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282388759 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287276415 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284931713 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285375382 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288770747 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284535587 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284750326 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285697627 seconds)
  done (took 85.8588757 seconds)
done (took 1775.218546264 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.452307016 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.403974351 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.288014977 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.298117451 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.283469344 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.282170881 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.288019846 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.281041102 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.284368518 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.284054055 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.285848873 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.473288385 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.280528569 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.283154769 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.287237586 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.383849384 seconds)
  done (took 26.33203395 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.310705758 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.2938432 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.398726676 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.306723393 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.314377292 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.469238736 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.342752827 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.295173571 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.452967071 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.332589722 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.288330631 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.316094538 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.294307679 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.284571833 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.310051086 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.470213261 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.533070007 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.288369723 seconds)
  done (took 28.49396464 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.708386086 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.284648769 seconds)
  done (took 5.184600086 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.310931024 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.292694138 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.295781238 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.29589528 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.286176301 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.286096366 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.292027468 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.289104537 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.281024406 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.411368901 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.298621993 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.305630329 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.314706204 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.295561569 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.292652629 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.332342153 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.462427813 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.293577132 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.292114834 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.300766769 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.294702288 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.375983165 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.334336042 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.294151135 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.410796343 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.289886484 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.295852626 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.303278567 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.422873182 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.294607485 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.295010081 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.296665154 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.297608054 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.195957486 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.72551838 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.287596497 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.336321745 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.306136469 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.293813991 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.433868605 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.297362251 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.303858737 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.287612084 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.709077223 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.43100833 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.406263019 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.304681739 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.311871455 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.299465275 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.358521088 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.298716782 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.299053442 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.34262472 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.087790915 seconds)
  done (took 82.957081717 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.293796265 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.289058681 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.471382305 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.312301048 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.286745156 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.289982556 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.28985971 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.561160209 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.307747558 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.292444979 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.576004387 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.845961369 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.310781548 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.341883195 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.160414952 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.353638098 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.291378819 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.306545419 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.29245831 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.287272215 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.827128033 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.293779484 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.287252492 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.388512283 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.326928626 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.798132618 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.291803779 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.292247688 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.294548273 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.285300769 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.802838339 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.314241472 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.377654597 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.286410071 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.558088654 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.661751407 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.622140272 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.30044984 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.344033013 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.290412382 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.312641861 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.783265875 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.642624572 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.288336675 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.293225353 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.794791347 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.292348885 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.299232239 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.293977732 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.538370043 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.291080458 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.291586905 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.305693544 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.292460711 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.291460475 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.299187043 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.377540777 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.799711916 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.2912585 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.305815134 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.319576942 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.292598239 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.302550745 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.296546426 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.302540052 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.641527441 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.516099165 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.296702098 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.645087051 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.798072326 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.308248677 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.865367003 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.310317254 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.297399095 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.484492341 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.295138473 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.311605244 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.815145756 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.300306226 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.290382893 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.629402451 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.300015171 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.579270891 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.312766649 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.297245243 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.842928792 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.304928829 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.299061102 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.296412657 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.313416068 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.296434457 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.298148809 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.587332065 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.327385144 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.296781488 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.299504871 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.336186837 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.292463186 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.298783944 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.302483267 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.865181574 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.323921656 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.298533343 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.303914986 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.296447266 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.299967541 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.298253767 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.301187247 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.5609593 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.308359799 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.300392059 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.29960695 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.293663313 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.321508472 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.386530726 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.308399655 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.598919124 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.297986255 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.294473932 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.303312528 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.297080887 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.347606017 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.292645611 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.302488595 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.161000613 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.561404494 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.315456169 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.31207492 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.300365216 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.297201412 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.296602489 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.297347707 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.3307635 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.300549781 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.040522091 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.311817928 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.304814683 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.29762733 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.299764983 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.296494999 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.295513779 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.297889378 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.58772065 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.568952364 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.507749908 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.290065907 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.298466131 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.060885606 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.345417371 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.478947801 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.315155301 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.294750495 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.547926946 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.511139281 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.300719284 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.292635733 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.29667178 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.553891833 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.298627318 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.616205899 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.833884344 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.314714648 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.302113125 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.052405614 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.021888803 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.301355042 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.300035872 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.57563652 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.316424594 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.297619385 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.299764502 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.299623407 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.313011937 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.315821023 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.304273029 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.298446366 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.298051043 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.618403221 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.492869603 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.315502385 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.303627531 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.799968806 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.32576926 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.294453003 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.309443797 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.302771489 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.29878515 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.35981979 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.301696294 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.310966997 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.303991825 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.31159208 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.822114643 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.301462111 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.300815882 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.495228285 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.981889792 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.316616331 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.302588608 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.318144251 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.195696028 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.822878043 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.348815938 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.603929728 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.303937625 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.338272139 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.301573343 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.351918316 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.822031241 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.305500779 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.319541898 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.952575646 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.31577876 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.726256135 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.298618145 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.302586508 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.902732499 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.316402583 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.306940699 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.296793606 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.303583012 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.596175985 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.302949313 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.311435257 seconds)
  done (took 489.861240844 seconds)
done (took 634.01656242 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.302256674 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.303819043 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.291727428 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.303596313 seconds)
  done (took 10.410153415 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.310949521 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.309978467 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.311875905 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.311046368 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.312837544 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.311818863 seconds)
  done (took 9.078419932 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.305647834 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.303601703 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.303896598 seconds)
  done (took 8.12422976 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.505239979 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.329996554 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.61725307 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.325809606 seconds)
  done (took 8.989427577 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.311236551 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.310197294 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.308962749 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.310194218 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.316426483 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.311704325 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.315031987 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.311395006 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.315237503 seconds)
  done (took 13.019381287 seconds)
done (took 50.828159573 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.317479207 seconds)
    (2/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.320956725 seconds)
    (3/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.37191288 seconds)
    (4/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.318523337 seconds)
    (5/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.324677093 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.349113839 seconds)
    (7/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.305577777 seconds)
    (8/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.500451465 seconds)
    (9/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.32149556 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.342284682 seconds)
    (11/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.353170272 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.315853618 seconds)
    (13/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.389109531 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.317942397 seconds)
    (15/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.390814256 seconds)
    (16/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.443977014 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.370029941 seconds)
    (18/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.336758333 seconds)
    (19/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.497848159 seconds)
    (20/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.957739486 seconds)
    (21/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.320181099 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.359593541 seconds)
    (23/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.450710614 seconds)
    (24/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.438713664 seconds)
    (25/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.359324821 seconds)
    (26/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.449203083 seconds)
    (27/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.393315502 seconds)
    (28/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.327837975 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 1.718340927 seconds)
    (30/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.44538276 seconds)
    (31/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.113054488 seconds)
    (32/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.388655686 seconds)
    (33/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.293586247 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.318957604 seconds)
    (35/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.308730142 seconds)
    (36/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.431473004 seconds)
    (37/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.338581359 seconds)
    (38/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.436019193 seconds)
    (39/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.328279285 seconds)
    (40/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.324028161 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.375851815 seconds)
    (42/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.961266139 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.461960169 seconds)
    (44/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.322190614 seconds)
    (45/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.420916198 seconds)
    (46/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.297020535 seconds)
    (47/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.292435215 seconds)
    (48/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.307658116 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.363217253 seconds)
    (50/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.384578671 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.339414069 seconds)
    (52/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.437430498 seconds)
    (53/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.488655678 seconds)
    (54/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.376399535 seconds)
    (55/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.049254151 seconds)
    (56/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.447208148 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.320470765 seconds)
    (58/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.501511754 seconds)
    (59/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.315657687 seconds)
    (60/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.328329487 seconds)
    (61/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.41169888 seconds)
    (62/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.315961385 seconds)
    (63/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.31821353 seconds)
    (64/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.32531413 seconds)
    (65/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.309189567 seconds)
    (66/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.405004003 seconds)
    (67/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.471953238 seconds)
    (68/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.505501533 seconds)
    (69/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.060076115 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.421310031 seconds)
    (71/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.490947661 seconds)
    (72/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.398550961 seconds)
    (73/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.366501277 seconds)
    (74/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.006343958 seconds)
    (75/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.449473444 seconds)
    (76/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.323997115 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 1.491606262 seconds)
    (78/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.33268059 seconds)
    (79/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.470885488 seconds)
    (80/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.336809199 seconds)
    (81/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.322153759 seconds)
    (82/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.345947514 seconds)
    (83/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.356068849 seconds)
    (84/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.322314822 seconds)
    (85/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.015781561 seconds)
    (86/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.29721602 seconds)
    (87/286) benchmarking ("sort", Float64, true)...
    done (took 1.927097696 seconds)
    (88/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.375494077 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.423017618 seconds)
    (90/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.340008448 seconds)
    (91/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.324679564 seconds)
    (92/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.362227324 seconds)
    (93/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.497915385 seconds)
    (94/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.31539736 seconds)
    (95/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.341370724 seconds)
    (96/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.338908828 seconds)
    (97/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.365052668 seconds)
    (98/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.512072276 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.377123475 seconds)
    (100/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.320944616 seconds)
    (101/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.325873443 seconds)
    (102/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.432503666 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.350713181 seconds)
    (104/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.359547594 seconds)
    (105/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.324083985 seconds)
    (106/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.356556614 seconds)
    (107/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.314385833 seconds)
    (108/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.311375283 seconds)
    (109/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.389457149 seconds)
    (110/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.52799489 seconds)
    (111/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.957118534 seconds)
    (112/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.184631609 seconds)
    (113/286) benchmarking ("sort", Bool, false)...
    done (took 1.364691699 seconds)
    (114/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.321149356 seconds)
    (115/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.340194812 seconds)
    (116/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.323431093 seconds)
    (117/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.413436228 seconds)
    (118/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.327897206 seconds)
    (119/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.396250344 seconds)
    (120/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.635438268 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.358091245 seconds)
    (122/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.320350779 seconds)
    (123/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.448750828 seconds)
    (124/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.312598351 seconds)
    (125/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.32616424 seconds)
    (126/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.472185143 seconds)
    (127/286) benchmarking ("sort", Int8, true)...
    done (took 1.730171374 seconds)
    (128/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.062162069 seconds)
    (129/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.461609674 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.374600476 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.396939306 seconds)
    (132/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.328293134 seconds)
    (133/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.441722648 seconds)
    (134/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.344407035 seconds)
    (135/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.387385343 seconds)
    (136/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.313022796 seconds)
    (137/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.07413287 seconds)
    (138/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.416545424 seconds)
    (139/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.451845732 seconds)
    (140/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.337517168 seconds)
    (141/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.406102905 seconds)
    (142/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.489875813 seconds)
    (143/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.354136824 seconds)
    (144/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.329354022 seconds)
    (145/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.337479433 seconds)
    (146/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.327170421 seconds)
    (147/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.307162413 seconds)
    (148/286) benchmarking ("sort", BigInt, true)...
    done (took 2.310382022 seconds)
    (149/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.451567689 seconds)
    (150/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.300614394 seconds)
    (151/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.320248246 seconds)
    (152/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.390910573 seconds)
    (153/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.422797747 seconds)
    (154/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.18003535 seconds)
    (155/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.348471947 seconds)
    (156/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.398937589 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.431455619 seconds)
    (158/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.329385946 seconds)
    (159/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.54789339 seconds)
    (160/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.611330782 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.374975942 seconds)
    (162/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.329759658 seconds)
    (163/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.316604722 seconds)
    (164/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.343086216 seconds)
    (165/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.013904681 seconds)
    (166/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.302316079 seconds)
    (167/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.354072745 seconds)
    (168/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.054259395 seconds)
    (169/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.539018711 seconds)
    (170/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.337224655 seconds)
    (171/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.058768905 seconds)
    (172/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.333241583 seconds)
    (173/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.35717539 seconds)
    (174/286) benchmarking ("sort", Float32, false)...
    done (took 1.50218204 seconds)
    (175/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.354582267 seconds)
    (176/286) benchmarking ("sort", Bool, true)...
    done (took 1.516264529 seconds)
    (177/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.32967221 seconds)
    (178/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.331928848 seconds)
    (179/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.334361913 seconds)
    (180/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.304899451 seconds)
    (181/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.435618698 seconds)
    (182/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.985252942 seconds)
    (183/286) benchmarking ("sort", BigInt, false)...
    done (took 2.319829625 seconds)
    (184/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.354400716 seconds)
    (185/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.333301354 seconds)
    (186/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.32932543 seconds)
    (187/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.323614224 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.479560863 seconds)
    (189/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.462478663 seconds)
    (190/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.414828779 seconds)
    (191/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.666108859 seconds)
    (192/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.481658197 seconds)
    (193/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.356100377 seconds)
    (194/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.409989432 seconds)
    (195/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.33134722 seconds)
    (196/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.316016097 seconds)
    (197/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.505207764 seconds)
    (198/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.380440957 seconds)
    (199/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.312694697 seconds)
    (200/286) benchmarking ("sort", Int8, false)...
    done (took 1.443239935 seconds)
    (201/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.335979031 seconds)
    (202/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.313231944 seconds)
    (203/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.323282642 seconds)
    (204/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.399057382 seconds)
    (205/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.421343625 seconds)
    (206/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.450327522 seconds)
    (207/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.349112859 seconds)
    (208/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.396774402 seconds)
    (209/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.399313079 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.495933413 seconds)
    (211/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.421346541 seconds)
    (212/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.393884889 seconds)
    (213/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.346804137 seconds)
    (214/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.334071875 seconds)
    (215/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.319298388 seconds)
    (216/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.359950887 seconds)
    (217/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.337757232 seconds)
    (218/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.398405787 seconds)
    (219/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.452912398 seconds)
    (220/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.352902076 seconds)
    (221/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.384403911 seconds)
    (222/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.339216565 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.377591732 seconds)
    (224/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.410745849 seconds)
    (225/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.427812597 seconds)
    (226/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.319754917 seconds)
    (227/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.419301348 seconds)
    (228/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.330783654 seconds)
    (229/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.347600333 seconds)
    (230/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.362390466 seconds)
    (231/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.322991038 seconds)
    (232/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.333555713 seconds)
    (233/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.360324794 seconds)
    (234/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.342763699 seconds)
    (235/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.643137182 seconds)
    (236/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.355428484 seconds)
    (237/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.965440408 seconds)
    (238/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.347328508 seconds)
    (239/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.332783491 seconds)
    (240/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.439993688 seconds)
    (241/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.335707909 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.328803006 seconds)
    (243/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.317677835 seconds)
    (244/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.208060026 seconds)
    (245/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.066514566 seconds)
    (246/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.309317246 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.376713338 seconds)
    (248/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.366513585 seconds)
    (249/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.322409886 seconds)
    (250/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.302451522 seconds)
    (251/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.350665081 seconds)
    (252/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.335782195 seconds)
    (253/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.964579255 seconds)
    (254/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.323677902 seconds)
    (255/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.401195069 seconds)
    (256/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.307927978 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.415483938 seconds)
    (258/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.192574869 seconds)
    (259/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.482972979 seconds)
    (260/286) benchmarking ("sort", Float32, true)...
    done (took 1.907894953 seconds)
    (261/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.411816152 seconds)
    (262/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.081209389 seconds)
    (263/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.547570022 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.344759754 seconds)
    (265/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.307959646 seconds)
    (266/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.390310642 seconds)
    (267/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.970350113 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.342147239 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.345415707 seconds)
    (270/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.432666412 seconds)
    (271/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.307894517 seconds)
    (272/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.407027508 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.520188912 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.397511373 seconds)
    (275/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.981558631 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.334450625 seconds)
    (277/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.426170479 seconds)
    (278/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.06997235 seconds)
    (279/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.41236709 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.439598241 seconds)
    (281/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.346891752 seconds)
    (282/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.144667074 seconds)
    (283/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.330710243 seconds)
    (284/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.395948277 seconds)
    (285/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.346293808 seconds)
    (286/286) benchmarking ("sort", Float64, false)...
    done (took 1.516068844 seconds)
  done (took 464.987017595 seconds)
done (took 466.196883553 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.365948466 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378296676 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.332748996 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.364546455 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.447414253 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.508194213 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.347110783 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.373148574 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.378616465 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.382279931 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.33964028 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.509259271 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.335640742 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.334638412 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.334340445 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.375195857 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.331340286 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.334398195 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.35382419 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.368364176 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.352283122 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.344078791 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.385488579 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.509952816 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.338637879 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.336346127 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.33680439 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.35699623 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.448151625 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.337739271 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.337443911 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.345873106 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.33093171 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.340094512 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.331280598 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.355978666 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.349059076 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.345787031 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.368396304 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.44659554 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.336867939 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.336403751 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.337011149 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.336488289 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.334446351 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.376609015 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.335477887 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.39467998 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377978589 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380467008 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.326074487 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.34393309 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.345872203 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.340208412 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.346599715 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.33641339 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.394452142 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.384570723 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.355773756 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.383601748 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.327655018 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.340160121 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.375322752 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.355959773 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.347919468 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.335345122 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.336083833 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.377422093 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.328979412 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.341526122 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.33347798 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.346364918 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.337974808 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.350930644 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.369853042 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.341748328 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.330312071 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.337034932 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.347543798 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.338223593 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.386434471 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380931889 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.387818704 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.338783498 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381913986 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.514005108 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.347119629 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.340898038 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.377298546 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.357950175 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.347000388 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.350943645 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.373626682 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.343395794 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.391057037 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.396453227 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.351224067 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.359291984 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.394987316 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.352101651 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.331758421 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38569606 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.336458838 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.336478355 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.33838464 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.463493962 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.330837319 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.339396596 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.37422751 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.384316275 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.399054506 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.331070475 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.348664086 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.388944995 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.34783655 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.399971222 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.341954824 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.333478862 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.329060036 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.455389869 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.343256485 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.348456696 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386872681 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.400007594 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.340939288 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.329788208 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.340445522 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.383548462 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.463922743 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.352528858 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.454210028 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.341393164 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.346059512 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.375393159 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.389483213 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.374551029 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.401485842 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387737075 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.358980282 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.34268388 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.352991872 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.352089406 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.342741493 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.39896124 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.340948197 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.376761384 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.384365695 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385034102 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.378755935 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.465731103 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.347637544 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.341289159 seconds)
done (took 224.727864009 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.40494832 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.3392834 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.445282842 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.340668797 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.437895008 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.450102466 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.337898796 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.339623489 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.338762765 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.715554551 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.339566191 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.34052217 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.341260499 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.337771577 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.42531532 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.342062645 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.340375033 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.715695551 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.343114925 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.413372139 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.336294947 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.340272083 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.341131766 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.734319419 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.338483684 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.337276523 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.424028035 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.34181066 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.685185065 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.340904233 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.342195403 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.69459466 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.447938738 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.362417053 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.354733062 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.350976277 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.452869991 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.363405438 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.438669085 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.423689041 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.450160669 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.382077817 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.339951127 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.342589737 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.344597216 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.344593071 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.341438269 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.371476973 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.343548074 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.338853167 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.681227382 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.357992174 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.342862523 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.343379087 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.342464217 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.374661924 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.343914385 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.346070023 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.433170365 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.345988853 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.418992716 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.724830178 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.731747906 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.346072297 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.342484221 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.343957269 seconds)
  done (took 105.198669615 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.412836679 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.420629399 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.455098653 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.359576711 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.396898649 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.459517731 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.359439032 seconds)
  done (took 11.103208025 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.350425387 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.345308033 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.394396212 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.394492431 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.34736051 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.558252675 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.346587826 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.357561611 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.34412466 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.422548616 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.347342454 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.350202637 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.353663036 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.34575598 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.39467435 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.358987331 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.462678178 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.349142887 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.350429807 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.502085989 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.34601592 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.356012662 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.422886722 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.358324897 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.350073416 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.356247976 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.288857946 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.35043042 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.347308737 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.35105758 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.347340442 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.458447873 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.34918452 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.347782957 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.343722039 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.505901751 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.348529424 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.345076319 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.348179973 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.349918489 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.350221308 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.34918414 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.350257568 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.345422087 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.351825975 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.373974417 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.35115132 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.348493168 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.349226911 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.351386484 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.421614753 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.352739154 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.34693848 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.345269336 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.425462698 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.357313905 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.348864268 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.345530653 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.352029568 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.348154947 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.5036197 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.396586577 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.352536231 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.398179285 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.350365159 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.350463969 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.349162843 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.351486001 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.440910799 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.34995536 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.398953316 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.347678087 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.572804298 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.377986491 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.353992797 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.354249059 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.353068824 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.352692648 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.35038924 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.357645061 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.349089433 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.351864858 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.357914091 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.351764224 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.351293861 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.535308709 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.511240054 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.351475108 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.365593377 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.358819622 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.351162214 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.427663238 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.354606259 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.351527267 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.404859746 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.467790015 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.429588265 seconds)
  done (took 139.691488155 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.35699886 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.361476782 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.358976231 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.377063093 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.352165905 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.354660849 seconds)
  done (took 9.406725914 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.353454111 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.353310492 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.35399804 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.351901745 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.354904484 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.352725365 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.35402303 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.357482194 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.358115266 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.352785132 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.353933799 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.355322257 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.353957917 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.351608515 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.352081411 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.354533911 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.352706127 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.350525308 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.355049372 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.350847278 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.354636817 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.355892836 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.356238861 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.355548596 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.360357528 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.35553859 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.363182341 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.355891093 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.355200104 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.357891808 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.371987796 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.354294523 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.359392319 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.359718698 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.358243895 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.354023335 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.359113707 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.357847056 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.35293401 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.354481612 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.356644257 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.355325981 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.357925736 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.357496023 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.358656431 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.360592158 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.358513353 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.365544028 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.356396913 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.358884236 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.357846859 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.355960868 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.354859221 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.355572789 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.357914457 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375169674 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.362354726 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.357143389 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.358288354 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.357835581 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.360233419 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.356335879 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.360879804 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.361593606 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.357232259 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.358648063 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.361041763 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.362534754 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.356445841 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.360695341 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.357360994 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.355092166 seconds)
  done (took 99.963376371 seconds)
done (took 366.598983081 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.779976403 seconds)
  done (took 4.031937782 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.448799655 seconds)
  done (took 3.703914938 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.318459163 seconds)
  done (took 22.581476376 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.409539187 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.365266658 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.348577152 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.350150488 seconds)
  done (took 10.729061756 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.636317078 seconds)
  done (took 3.890040422 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.362062698 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.353368615 seconds)
  done (took 5.970981549 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.660768619 seconds)
  done (took 3.913523644 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.826755908 seconds)
  done (took 4.08954196 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.372944109 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.366017741 seconds)
  done (took 6.000995357 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.336512465 seconds)
  done (took 3.589296796 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.351224798 seconds)
  done (took 16.607210427 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.355106832 seconds)
  done (took 3.611009219 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.381611996 seconds)
  done (took 3.635217123 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.889211202 seconds)
  done (took 6.142176181 seconds)
done (took 99.748199237 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.353881207 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.353990979 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.35171955 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.351256767 seconds)
  done (took 10.664418548 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.392797483 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.394423745 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.395449917 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.403253366 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.394950915 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.393134121 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.386070512 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.384113344 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.403411752 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.395723711 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.396178537 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.396239868 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.395712137 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.38752082 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.397144012 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.396898446 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.40604432 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.395439244 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.384628757 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.397147399 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.362123156 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.405432166 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.398990907 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.362561711 seconds)
  done (took 34.680627553 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.877190728 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.43083645 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.516507148 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.41211048 seconds)
  done (took 7.489236831 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.422447187 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.431002766 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.439337602 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.480293251 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.503144635 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.438851861 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.388109827 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.381957023 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.370492639 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.430822627 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.490887869 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.423288573 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.527820085 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.362202278 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.572142198 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.362657165 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.359654308 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.440765403 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.478039536 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.492414206 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.363587669 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.421366093 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.440838049 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.423268418 seconds)
  done (took 35.701303646 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.361940778 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.377248721 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.361547456 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.359861595 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.371369624 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.363787662 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.361172367 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.364489837 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.362525532 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.907608438 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.377420304 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.376609987 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.879008252 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.379924795 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.367739886 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.36731008 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.879640233 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.886835476 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.378322923 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.369862777 seconds)
  done (took 30.710617293 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.357768233 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.359843905 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.711748665 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.614818748 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.359734925 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.356626834 seconds)
  done (took 14.017350001 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.432383902 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.58812604 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.363566889 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.71430575 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.793932663 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.358168256 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.365303085 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.608982837 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.919178316 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.897205144 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.415536258 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.433181468 seconds)
  done (took 20.147706117 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.364876422 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.355489161 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.359232824 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.374199876 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.418545432 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.3812977 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.372679515 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.361934011 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.418496137 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.438190963 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.380644892 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.418962021 seconds)
  done (took 21.903843895 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456130419 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360996163 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.360653874 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432128169 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360490567 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.201661303 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.411987539 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.092915165 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.378275012 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636056989 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362774808 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458794217 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616134193 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358973295 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.360949564 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.346807606 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594129059 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858716286 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362654616 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375833031 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39122066 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.359784877 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376160338 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.575315187 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.363203381 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363603411 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.625650249 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.363847669 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643399839 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376346281 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37280572 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361244162 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638818555 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020777374 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479708056 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.568770878 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368885649 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365035262 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.357594896 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.378961237 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368529417 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367486285 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374444331 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362556324 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.362179439 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377376112 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106130798 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.384472391 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.360336043 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.363672141 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618903298 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460480743 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.368606171 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363917317 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506349172 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365282855 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.37039201 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.362439585 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946748132 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366649624 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380519632 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.366538943 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40004473 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380537488 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988417098 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.371860382 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.371401377 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367640793 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364144643 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37249336 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376127872 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368061961 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.38541223 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363456347 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087146447 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370577737 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366445928 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922100767 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365096793 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.368194393 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599140342 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367802952 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368018625 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.365380555 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.368335352 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.082287571 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375627046 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.351599691 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.383363382 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.10472098 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.593286266 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386642846 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399495195 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.590082351 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.350226543 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370040721 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.36282752 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367527279 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384056125 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.107609096 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38424744 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.366207762 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625791192 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.579985301 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380300339 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.352799723 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846962052 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383668912 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.38482901 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380648922 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.579985466 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.948615725 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.383175434 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368087115 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379644889 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.369630304 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125821877 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368650554 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.470835338 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.372162896 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638246407 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.154722926 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370346024 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439449795 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37240163 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370532077 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37080608 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383282278 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.371327072 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.569318397 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38689297 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.398427012 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.370290174 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369998337 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.361110854 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380393215 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.367983796 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.593337974 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379947341 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645763026 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371643296 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372443192 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364863532 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.590576917 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.371927679 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.707310282 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635198653 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385174766 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385380669 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.381783056 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392219119 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475249895 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395893039 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.38797177 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.628264553 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.379912503 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.37882227 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37383336 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.370087426 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381753443 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.379728151 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382838942 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952245433 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350202086 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376464598 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.262631895 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.388321521 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441804338 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379774701 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.585267506 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.376582351 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382881635 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.380270264 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.378382884 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592996376 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384718977 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.37308985 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444494055 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.854675136 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.969686346 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387398635 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.373199135 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.372818575 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.37030016 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373768026 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372703115 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374131077 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585100981 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38911627 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376719872 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.959510522 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375573994 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370444853 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.390294372 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.386804712 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.382540853 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373356711 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.37031977 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36797269 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390743829 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.38478129 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520534779 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.387770195 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375421314 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.893756283 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.382262078 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.375880312 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.374225386 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41065843 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377394006 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182924988 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648217374 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395599746 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636802162 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37480093 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.403972775 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.37649481 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377658519 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388535766 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.375824775 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387475314 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.387892157 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.377112656 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370551914 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946787466 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125372276 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912403007 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378362717 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.385041841 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37476059 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.107360623 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390800225 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378115105 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611610823 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.108076283 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389454638 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857777137 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.388203264 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134893827 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635927226 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610876687 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378166846 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.378651113 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639711353 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592400345 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411953518 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391139405 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378026346 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.35651319 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936782771 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389702469 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456622083 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099600075 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392682101 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.381913301 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.443994651 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.380093453 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783919404 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394889921 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379887594 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374016826 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412831656 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192144515 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398205052 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379256055 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020396965 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385924495 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.858439549 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392599582 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.59408083 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.392897885 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.383739771 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.389318374 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.372989713 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.631817226 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641328654 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382529038 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390596991 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922262866 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.25077077 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.387140015 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38207011 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137222184 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384837417 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.664004588 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.396649978 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.389830665 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379310513 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381529426 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382035093 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.378613802 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.388927648 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362013824 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87826614 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.397865871 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397393058 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384509479 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381241272 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.636526881 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.397230348 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.968320771 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612950314 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405763641 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404774903 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.389408538 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393866541 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.365838651 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382528977 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384179095 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476850349 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.607533101 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.385745713 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.369449997 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.441733385 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.598304286 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385087224 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39648873 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.619153812 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.381354321 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.395699879 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136931601 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416751336 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385700688 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399378726 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385071349 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.386037064 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457726073 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599564206 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.396852854 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.395862063 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790303719 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400798893 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403488143 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.398545187 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482479348 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387697547 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.398073413 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.153385003 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969806878 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132946147 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.974031167 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64689794 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387155125 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395321028 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386225201 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543812169 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386194185 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658037773 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38672656 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.387659546 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409007675 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39979679 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391112209 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592518603 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663236704 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387329636 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386384385 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379734147 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.386823403 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.399073873 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.598483875 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888783933 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957011995 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388382945 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38689453 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.124320015 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671993087 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388522016 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386978695 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385876331 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.39934307 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.388966119 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.393569418 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389253718 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531511894 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.650457614 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055418026 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.408792135 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.416253114 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.162131835 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389341332 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.637674905 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383830573 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.604246195 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976396872 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.091701785 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654830027 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457915992 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605026975 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.386328045 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550590963 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.392898134 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.386615737 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391938317 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402031937 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.384721538 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.398930971 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979744142 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656655751 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.393182154 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.392711648 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421292326 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.397504895 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.614885955 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11889452 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61640393 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398834447 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394655566 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391055866 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978540788 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.653182143 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391458098 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.390022756 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632322277 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391838407 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413650963 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.907899504 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.389224349 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967044972 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.366934908 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415337991 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391566324 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.099409365 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983338127 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.38897051 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894613284 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39288304 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393028391 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665145762 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.396351447 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407953833 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669829258 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.394707292 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391287684 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623297139 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.978762783 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.160744075 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.396773779 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399175088 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.394215198 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391820195 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451214215 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393497493 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385412533 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.812335368 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409339171 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393018146 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398534599 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.399160731 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393053099 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.390187376 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394354564 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.394579147 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.400966305 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.392615049 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388923714 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.391404256 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956761879 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406492182 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.083191021 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.718862029 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.650916705 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395160332 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.376725336 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.399787006 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394772428 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393986581 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38926089 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39254049 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963207195 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.398586653 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.405988094 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.397631781 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.61122443 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60728237 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394500097 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606481735 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397820233 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41228418 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.378908288 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396538741 seconds)
  done (took 981.831050961 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.427609924 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.43182892 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.419815394 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.445586372 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.445227127 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.509497499 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.496837709 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.41952938 seconds)
  done (took 20.887511507 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.407675347 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.399564521 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.400619323 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.400166366 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.393046609 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.86735285 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.408276151 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.401604317 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.406372176 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.396064102 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.390200722 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.374764946 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.403433961 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.399318297 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.383504829 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.403823528 seconds)
  done (took 33.137291763 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.354730381 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.536880208 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.259286772 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.433724285 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.401937809 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.399852814 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.61402936 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.406667797 seconds)
  done (took 26.702136404 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.409378443 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.40891388 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.40708645 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.409192596 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.408880909 seconds)
  done (took 8.337482914 seconds)
done (took 1247.463554087 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.405185816 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.404055516 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.40139125 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.403431597 seconds)
  done (took 6.907208123 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.386233135 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.381192606 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.38205619 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.395991085 seconds)
  done (took 9.836877291 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.093677683 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.039638749 seconds)
  done (took 5.427966047 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.930108691 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.937523278 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.898203566 seconds)
  done (took 7.061222189 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.692197231 seconds)
  done (took 2.987704709 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.317165196 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.284349003 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.095877617 seconds)
  done (took 7.99457132 seconds)
done (took 41.507683434 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.397546185 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.657892014 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.55540274 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.39795497 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.574628381 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.556790153 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.138293059 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.403175325 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.401267104 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.398031713 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.394276995 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.570757534 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.183414465 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.650311647 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.186804801 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.648777685 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.56086508 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.402872422 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.391127213 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.394567274 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.133496764 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.407051832 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.405215195 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.394093423 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.554921532 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.546885114 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.39817902 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.643742389 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.409071318 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.392216477 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.572497117 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.408388951 seconds)
  done (took 83.425713767 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.399309987 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.407652643 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.395296774 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.42625971 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.413805803 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.399991116 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.414195799 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.411280342 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.392773412 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.400847988 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.39518321 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.411920867 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.41291788 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.397077153 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.396702766 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.393412909 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.393408981 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.416854379 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.399442814 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.415337893 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.396522663 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.403669134 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.395865705 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.433546927 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.402086029 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.404188681 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.419680564 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.395052998 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.402969867 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.41321329 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.403626683 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.422707582 seconds)
  done (took 78.283376689 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.414329377 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.402507936 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.403237424 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.400508797 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.404280627 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.40218874 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.404298426 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.402069036 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.403570355 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.401581719 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.419195804 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.401303549 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.422552259 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.401100141 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.406817385 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.408753697 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.403796044 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.404049716 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.423082509 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.419954956 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.402913346 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.40271559 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.402240805 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.427707851 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.405125654 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.405296413 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.40381135 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.398892564 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.403217613 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.410472073 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.403315879 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.405485918 seconds)
  done (took 78.320795533 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.684922978 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.4119208 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.415263317 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.389688898 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.41163918 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.413613364 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.405701471 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.687484671 seconds)
  done (took 15.119547205 seconds)
done (took 256.442023085 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.410550243 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.408500595 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.610455409 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.428010002 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.410863038 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.431638161 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.433144728 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.633483193 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.372954679 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.648871589 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.419768306 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.437833073 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.405523992 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.424070384 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.687926804 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.554671551 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.335034167 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.414451486 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.748803696 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.433979958 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.673643022 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.405427461 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.675640729 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.356603294 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.428930991 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.40342684 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.401523079 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.315314939 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.449326948 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.756052685 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.421293793 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.392523556 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.490551917 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.509323141 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.621097609 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.567520831 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.409376801 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.493708805 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.63187543 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.408507776 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.414975035 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.197287447 seconds)
  done (took 84.37615588 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.412226858 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.529285345 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.414528723 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.414568536 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.414198331 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.532329428 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.510310678 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.415878017 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.414708861 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.413742221 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.413622759 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.415319528 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.414773828 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.416087064 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.41694329 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.417533408 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.414236522 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.414695533 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.417545083 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.460926196 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.536121603 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.439806814 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.411199178 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.415953018 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.518599631 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.549292739 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.416310222 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.407226274 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.457173386 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.416300075 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.416153235 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.461498716 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.418220808 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.41752557 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.531331305 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.513456802 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.434902573 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.413914488 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.536674428 seconds)
  done (took 57.689033092 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.419175189 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.666419211 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.844216958 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.415076778 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.418266712 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.423575502 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.495025461 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.417975784 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.422633898 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.421049616 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.574497572 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.417283959 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.451608659 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.873192747 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.416757007 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.420638111 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.419389795 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.418767206 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.675476169 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.423160354 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.513670153 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.414471636 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.495595106 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.422640025 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.437221724 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.422091937 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.424012554 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.012193913 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.415926843 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.574855829 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.205035901 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.493274052 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.965582277 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.857700718 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.207813204 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.423433895 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.420024508 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.578908352 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.42158843 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.420617286 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.496223802 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.422527431 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.860159119 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.075994084 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.432497437 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.422914232 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.030294992 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.579805457 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.662973321 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.430756325 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.885387414 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.42562716 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.424842233 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.4238109 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.665751744 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.424151164 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.422368214 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.062927467 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.438772986 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.49878601 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.423176567 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.422661287 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.676323564 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.424215568 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.673034235 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.425799944 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.430998568 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.442069785 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.862083024 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.42249243 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.109549931 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.436722989 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.423830095 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.57865873 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.671284703 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.062568124 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.438431308 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.679914765 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.980269722 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.494667707 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.42724153 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.99973284 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.496677544 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.424727846 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.425511874 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.427463119 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.423706281 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.469257006 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.501004437 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.037244445 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.099418141 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.045287003 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.515760633 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.432703818 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.42347514 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.04250632 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.436860956 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.425091535 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.854046799 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.085904025 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.438109049 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.433587529 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.102884855 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.438965084 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.505649496 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.432045332 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.8714444 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.421691092 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.483153677 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.428664323 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.433849021 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.44821071 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.50320609 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.430971857 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.427857117 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.083386588 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.598235906 seconds)
  done (took 187.113697082 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.420657766 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.414494112 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.419055673 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.414817385 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.420036567 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.42617455 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.418119825 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.421399647 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.426352782 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.417037359 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.420567656 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.421705041 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.423104788 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.442361072 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.429426966 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.428254339 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.421367669 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.420996337 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.425865881 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.415019588 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.423209046 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.421281455 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.426415434 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.414797443 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.420667117 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.422709073 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.422100285 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.425472937 seconds)
  done (took 65.137702386 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.431686537 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.984307366 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.428032849 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.56086024 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.452678892 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.427848403 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.556315765 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.480186298 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.430948603 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.426870301 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.427111782 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.732151952 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.431055916 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.943651595 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.620317331 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.566729437 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.944065029 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.446875037 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.428337668 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.427913954 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.558913442 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.439227316 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.734127835 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.995983791 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.43062692 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.994764629 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.419461395 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.431836539 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.42604315 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.996679342 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.44714867 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.736477268 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.507228529 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.490478087 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.000725886 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.94747835 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.963837802 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.57651302 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.432450308 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.430995973 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.431902737 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.422342642 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.000032578 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.431247437 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.43398183 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.993778845 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.447213108 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.434015811 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.437975574 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.430901655 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.491893314 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.489061339 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.73992891 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.075995698 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.505877969 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.446143865 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.561350715 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.804699699 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.435155927 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.949985597 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.436195401 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.004350672 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.450298402 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.420627955 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.434157365 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.438345374 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.578902634 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.562894341 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.950594901 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.450635931 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.951120945 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.59286829 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.432345409 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.43202275 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.435093486 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.002101602 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.951919487 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.594721528 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.564976773 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.623871308 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.423989794 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.433614056 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.42304529 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.510128951 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.433520176 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.007056047 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.966784619 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.449895844 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.43314375 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.437590347 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.435280392 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.608724328 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.019403232 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.51088677 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.945272321 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.756904792 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.738692098 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.435545191 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.492206541 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.447632444 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.807161654 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.434761898 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.49291946 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.877180634 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.739217824 seconds)
  done (took 169.959793623 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.669512069 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.444774033 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.52707574 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.582123625 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.043243485 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.022070965 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.427273262 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.554857056 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.539265 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.685831872 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.440654345 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.517982953 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.649306364 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.510986243 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.14448909 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.505857014 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.532808072 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.576436555 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.578991981 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.428653183 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.092578812 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.748309732 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.619128658 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.453913231 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.551026603 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.194504654 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.012828469 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.997459169 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.598155342 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.429798659 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.96811457 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.432114058 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.383846598 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.105962649 seconds)
  done (took 66.292500911 seconds)
done (took 631.868133768 seconds)
SAVING RESULT...
DONE!
