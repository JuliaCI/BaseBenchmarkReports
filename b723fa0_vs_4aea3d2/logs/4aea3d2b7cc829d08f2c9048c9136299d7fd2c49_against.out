cset: moving following pidspec: 21724
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.320602323 seconds)
loading group "string"... done (took 0.471689175 seconds)
loading group "linalg"... done (took 7.746447215 seconds)
loading group "parallel"... done (took 0.17454768 seconds)
loading group "find"... done (took 1.195951398 seconds)
loading group "tuple"... done (took 2.144411777 seconds)
loading group "dates"... done (took 1.345106539 seconds)
loading group "micro"... done (took 0.248900459 seconds)
loading group "io"... done (took 0.673344418 seconds)
loading group "scalar"... done (took 42.378728785 seconds)
loading group "sparse"... done (took 13.333956862 seconds)
loading group "broadcast"... done (took 1.105603184 seconds)
loading group "union"... done (took 14.848513682 seconds)
loading group "simd"... done (took 5.208252642 seconds)
loading group "random"... done (took 10.111786651 seconds)
loading group "problem"... done (took 1.999293372 seconds)
loading group "array"... done (took 22.67021042 seconds)
loading group "misc"... done (took 1.433984397 seconds)
loading group "sort"... done (took 3.621871461 seconds)
loading group "collection"... done (took 19.367075567 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.45395418 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138855106 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.144149606 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.13479116 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.20447912 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136903885 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155831694 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.106852298 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.964977336 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.184598963 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14002813 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.493502003 seconds)
done (took 4.998821318 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.215095444 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.080293971 seconds)
    (2/2) benchmarking "String"...
    done (took 0.093202154 seconds)
  done (took 0.85675131 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.087703187 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14119608 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.088894869 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074004997 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073098654 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.091244114 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072817565 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.089639512 seconds)
  done (took 1.315890165 seconds)
done (took 3.169967497 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.724362686 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.266974916 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.200846399 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.507087079 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.175746147 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.205076399 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675747208 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.389280211 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.243254843 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100178077 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.128891656 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.395979704 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112649981 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.701629358 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.086903284 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126027116 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.179645429 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.468387882 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.089119972 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089833645 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115009475 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.151508479 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.109415642 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.084396475 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.179721948 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.076014159 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.18250312 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.106180258 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.077011572 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.281782643 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.196893303 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.70008543 seconds)
  done (took 10.849110196 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113422501 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135735808 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075819348 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.154688575 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132587953 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077657469 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.097604158 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076399317 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121327479 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177248423 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114868679 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.139211517 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090732067 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.078544741 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114389445 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.227454895 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.116222644 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.115186457 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078972109 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.085107379 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.133997419 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.10767296 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088277684 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.105254771 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166748727 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20286424 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107102387 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123304892 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.077127523 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.108563944 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141544324 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.155351551 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.07317155 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.074804991 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173762329 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120650467 seconds)
  done (took 4.993266318 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190355112 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.100189106 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169993874 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.16328085 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143386224 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.153189787 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108245654 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256133223 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.182515931 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160693347 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142654934 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110995885 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075936684 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.09683067 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074568137 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.606016705 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161979635 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.131510497 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.095906984 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096384243 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08304167 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.369621705 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098865482 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.074490494 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101089408 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068884377 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159476712 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079298384 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.18475571 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.096682875 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09583362 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113121073 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.209739993 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10731995 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134127621 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095163427 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.156033482 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07259805 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.178222551 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.078893855 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09407916 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103135378 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093241655 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130085697 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117922656 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.091548776 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.076691059 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.225777847 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.075173894 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.090159525 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.995035837 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.176726873 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089052574 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073546375 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.331235524 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.111516735 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073776248 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.090581973 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.275767939 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.12457371 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.092963403 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075874933 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07687622 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.096223393 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.381996026 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.074782328 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.741889916 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.078351267 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.085905907 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095132695 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.093465689 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.075677608 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083289253 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101631266 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.094636014 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.094247469 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077675788 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.092286128 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.0748954 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.075760991 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113656282 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.090574775 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081086194 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.092578472 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144938055 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.075392739 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.112092515 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122584628 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.080011647 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.073940242 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128279907 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093244161 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.07479043 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132041197 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.076519113 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111999278 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.091162246 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.121437607 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.091072055 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.186499369 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08877631 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.108055479 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098012151 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127182868 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.106135534 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078031485 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096180224 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.075224173 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.073041115 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.1605903 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.076542495 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.093522242 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.07663996 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.104912668 seconds)
  done (took 22.1884904 seconds)
done (took 38.714605762 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.351601238 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107392846 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10770684 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108011815 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105951963 seconds)
  done (took 1.55179699 seconds)
done (took 2.298007176 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.280701679 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.166938528 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070594053 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.181522267 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071554636 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172525722 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.154990814 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.10633684 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.177495778 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.070481623 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.174556739 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071418965 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072276499 seconds)
  done (took 2.543881454 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091736387 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11248224 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078583575 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090452978 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089834975 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090278017 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107113057 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096807886 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10724924 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080490098 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071849367 seconds)
  done (took 1.760771039 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090386693 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.093842665 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095598986 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089040192 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090185231 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090065372 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106210854 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096164118 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10777306 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081815118 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072719272 seconds)
  done (took 1.757863344 seconds)
done (took 6.798826582 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090366169 seconds)
  done (took 0.828587958 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.000086371 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.212027909 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.099429514 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.159839844 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.303986672 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.209103828 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.58631975 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130045867 seconds)
  done (took 15.65471431 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.109950179 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.096126979 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076826949 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.112566427 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078920983 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099021253 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077654185 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095398361 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.080443003 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.080742818 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.096979392 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.078336005 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094318412 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.081221658 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095103022 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.079576067 seconds)
  done (took 2.236244403 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.114927236 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11419539 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.102217862 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.085760497 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.100530486 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.081604128 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103413147 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08348873 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.097668414 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.081276062 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.103926844 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.085155549 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101243785 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080435376 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.101073085 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.088066032 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.097543453 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.083676334 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.102248319 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.101249276 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.085954661 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099603871 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.084076241 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.102419406 seconds)
  done (took 3.132057707 seconds)
done (took 22.596604801 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.151149245 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082327856 seconds)
  done (took 0.979295867 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097401485 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116162802 seconds)
  done (took 0.966809797 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.104349201 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094871861 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.132667088 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094568529 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.096203306 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.077828498 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.127165229 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079261549 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096007407 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.07976575 seconds)
  done (took 1.731341233 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082149271 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.082239175 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103586318 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.11612832 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.089191122 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098345375 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.082738701 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099334888 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.085229174 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094713328 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.086425247 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112263056 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085485609 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.112847518 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.101177893 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084377888 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105104984 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.082714372 seconds)
  done (took 2.453788386 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078194966 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.080374294 seconds)
  done (took 0.912950706 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080970684 seconds)
    (2/7) benchmarking "second"...
    done (took 0.077222443 seconds)
    (3/7) benchmarking "month"...
    done (took 0.097670335 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097029477 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076512266 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076733591 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093831274 seconds)
  done (took 1.349294673 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.48415663 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.141497371 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.265826295 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.080988133 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118914793 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.331101009 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.075398459 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.100309519 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.081479294 seconds)
  done (took 2.46916157 seconds)
done (took 11.607380486 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.088643832 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.097441658 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.127062235 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.47180223 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.113465935 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.075194393 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.155804872 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.254798852 seconds)
done (took 2.137752045 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.144425291 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.334972785 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.12088676 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.070592016 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091868646 seconds)
  done (took 1.379174687 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075166187 seconds)
    (2/2) benchmarking "read"...
    done (took 0.079331037 seconds)
  done (took 0.905071857 seconds)
done (took 3.187169597 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076390005 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.075574442 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.125563071 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.073759433 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.095697879 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.073354985 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.094061534 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.0756361 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07600329 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.094713682 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.075720388 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.093289493 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075784598 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073728415 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090701947 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07591477 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090874377 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.073281926 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073946034 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.093125289 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073782128 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093560776 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.073391001 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.073413488 seconds)
  done (took 2.775646625 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105705971 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096657917 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082455237 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100086134 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.081078906 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.100287241 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.083349576 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094320546 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.082009161 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.096744572 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08013963 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.098327334 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.077987725 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.098506729 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078393342 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.098647652 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.082619172 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095025485 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078814476 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.09928491 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.082619392 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094497657 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.08007377 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099909284 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.079860229 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09812596 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.077954366 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.094502052 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081930806 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.098588739 seconds)
  done (took 3.456474434 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081273785 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.073856641 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.0921395 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.080377193 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.09308989 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078443298 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.073516071 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09262639 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.074652343 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091851637 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.075024565 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.073280994 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091775507 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.074981019 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093710198 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.077791893 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.105272671 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.074389973 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07339227 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092780003 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.076730205 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092143849 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.077356134 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.074101149 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091721297 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.073716023 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09306381 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.073926408 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.075356236 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.092184549 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.07656676 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095840301 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.074219518 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.080912781 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095714432 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.073632396 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096714638 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.074346448 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.187180579 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091037775 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.073409922 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.091839798 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.073951791 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.081102431 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094896053 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.076188888 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092715116 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.075836087 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.074336475 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095436398 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.073656056 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.092159498 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.076303347 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093373784 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.078748049 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.073095252 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092937932 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.073614617 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09394733 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.073938265 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.073112139 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.091836708 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.076364588 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092852945 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.090425675 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.081149004 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091347536 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.0757919 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095940009 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.076639914 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.076117641 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.105990104 seconds)
  done (took 6.868852105 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.079488009 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103487825 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.076147463 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.076369853 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090998787 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074573097 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099473381 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074354041 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094228884 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092487507 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092804649 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076337419 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076461378 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096379869 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075559748 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.094012063 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084514883 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091135165 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.074443697 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097251385 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075619592 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099057801 seconds)
  done (took 2.664711423 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.211530107 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103202873 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139058328 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092651917 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113291401 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09167625 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100458434 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083632791 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098501781 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085521896 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102740503 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098942916 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094108875 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102192464 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085095442 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.103546999 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081975934 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103760205 seconds)
  done (took 2.661981066 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09081451 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096143308 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100241774 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096090294 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.077796183 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098520487 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083516001 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111447294 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.080283522 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096535443 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.087407535 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098524643 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.079833822 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096286423 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080229294 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077975814 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098818699 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077905517 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106366845 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102195106 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084240414 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107221574 seconds)
  done (took 2.799975269 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094000769 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098768915 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097808627 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099428109 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075757227 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097350288 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.084589463 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096022778 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.086511435 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.079323166 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096349616 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078827908 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.102409152 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07710259 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.101233563 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077825639 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097554903 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.077504622 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097160613 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076209628 seconds)
  done (took 2.55949059 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118148844 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111465467 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092001121 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121592601 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09289321 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110589069 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121463257 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.0938738 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110735856 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105189102 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110718023 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092934074 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121276448 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118136611 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093242423 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122273038 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103352241 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120772402 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111325587 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092823347 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124076261 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093256821 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120347195 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092550254 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.11016123 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092436776 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110630061 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117519567 seconds)
  done (took 3.797816831 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077328654 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076573266 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093578992 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.074341588 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.074786407 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.094112902 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.074549153 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.093145975 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077363681 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074972107 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.094824246 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.077915735 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095341606 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.076643929 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077442275 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.095549515 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077312451 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.093504106 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076856629 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074578339 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.095854642 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077498445 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095780668 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075476879 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074870446 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.095857045 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074971326 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093011847 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077813333 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074851677 seconds)
  done (took 3.257068947 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.08590884 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10162425 seconds)
  done (took 0.960794978 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.075575439 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112739505 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.075361816 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081222085 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102194321 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.078912791 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105889754 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082765705 seconds)
  done (took 1.485274934 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095063415 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114547792 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083896889 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.109245251 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096636163 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.112938834 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138390159 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102538968 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.084277985 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.095005757 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.094561351 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.096391324 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083598273 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.079315844 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.103757009 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084456154 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097947088 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089302403 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104601872 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080942111 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102734957 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089843947 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.080936407 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104291841 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.079554902 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108042352 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.087551654 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.109294997 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081178009 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106709063 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.084830199 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090450207 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082816584 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102087495 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078480339 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.114024242 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090552641 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103047728 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.086923938 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083780326 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106236441 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.07617336 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.102574164 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.084807479 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107512625 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084219738 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102257763 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07699169 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.094607488 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.081287824 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.0769961 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096897457 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.072537209 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10426786 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.082960205 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111299117 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08110659 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.098991849 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.081922866 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.081341818 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.104205643 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.080957061 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099048027 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082172791 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104620384 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.082335265 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104532794 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076686465 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.072304134 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099089553 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.08746022 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.119965051 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.087618225 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.10275393 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083914924 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097806754 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082563001 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103354589 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085951921 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106511207 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083084751 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.1042232 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086952917 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097532588 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.081355541 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.0866219 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099322387 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.081763355 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.094609001 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094652005 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100055681 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079118913 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.094688874 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.087906725 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.081610777 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101486238 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.076533193 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104641251 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.072844677 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103018598 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084147813 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098063192 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.088426829 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102921173 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084591153 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.086450905 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.108243475 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078834714 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.100547892 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.075329561 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103012498 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.080917649 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.104336102 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.073030413 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081676665 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099609184 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.084196146 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.106187755 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081180069 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.10299301 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087228202 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105471072 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082693524 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.075331642 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.100141658 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083209551 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106674502 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.08704945 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100515094 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077175563 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095926138 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.083021393 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101967254 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.083583274 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084379928 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100654 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.073393969 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098524829 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.083967484 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.105639463 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.079059365 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.097834229 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.084372536 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07986804 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100296432 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.085251302 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.099792912 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.077845683 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.10244622 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080237944 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07723698 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107108807 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.082068105 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099790553 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08250914 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107199904 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.081925144 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102818878 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082441147 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.103579535 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084486606 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.077961363 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097665676 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08134861 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.107601117 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.081448823 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095735373 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.076543937 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.104178298 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.076880482 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08262008 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.097368781 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.082402001 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103035672 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080317312 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100999084 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.080768023 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09498089 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.111314617 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084374143 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.104291194 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.088820143 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.102423535 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.081027595 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101595189 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0852252 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102785147 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.087037065 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.103738988 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085156795 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.081887801 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.094462532 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085794926 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106087084 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.079085465 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.099193414 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.077895724 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.102537054 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.086103519 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08374502 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102901677 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081582565 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098328704 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088016992 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.101214364 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083035871 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.097003649 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.083557996 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.088630945 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.104012164 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085836948 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.107766072 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083107643 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096965298 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088521612 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101103532 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.085439571 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09647583 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.077355185 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.078112313 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105062725 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083030185 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.101467045 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.073229957 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10619129 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087739331 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.079500003 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.097370973 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083797374 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108026779 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.081391275 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102144238 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084381169 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.104152378 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093376484 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.097714368 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.082549109 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.108241216 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.083813374 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.073395009 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.104073628 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081857568 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097885156 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082403521 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099594042 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082290593 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08633683 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104002219 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.073065991 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.101138617 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081744118 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.096972763 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077792449 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.08690253 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.102644001 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.081679026 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108020305 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085457469 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103279426 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08422366 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.102291443 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.085158014 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104418251 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082648131 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104500906 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.081729631 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.079102515 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.101344343 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.078612085 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.100212019 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.081327279 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103509441 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081181347 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086037725 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102463955 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.079650626 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.10354866 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085086127 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10000948 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.080708122 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.097992281 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083505951 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080413365 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.099306619 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.082733743 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097272844 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088252108 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102932552 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088672593 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.098465238 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.076227614 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.085183267 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.101469103 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.085742966 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104392013 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085890791 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.100717013 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084689115 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.082601431 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108509203 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.077902807 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.107964909 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086288681 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099708053 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.083129571 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.098723688 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.081418934 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.098033572 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.081531463 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085073896 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.099727043 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084634648 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.104497735 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.083570452 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.099146662 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08147955 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.085236561 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100283105 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086132079 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.093270924 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.07894776 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.098438224 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084360505 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107801525 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.085405888 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.083451074 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101880021 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086336921 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102238024 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.077109848 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.106767738 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086781284 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104602738 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089221551 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087604095 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.101224398 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090151013 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.093578299 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082289988 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100303593 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.078209335 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108214461 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085535649 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.088716003 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.09969564 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.080342729 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097245007 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085715211 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102094688 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.075218173 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08126957 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103268475 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082976729 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10232751 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085525298 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.10286975 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086626508 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107811176 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.083803308 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08238968 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.105107772 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.077944688 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.099177509 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.079666663 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.083311306 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10516496 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.077992665 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097720983 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.085163871 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101505396 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.081493237 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084078735 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102225053 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088467982 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104149755 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.083795916 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10969638 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.075905043 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103285033 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.084955657 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.104140148 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.079678784 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.084232867 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103574746 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087226477 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.107813275 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085242794 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100214005 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085241741 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101934059 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.084093494 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.084866336 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.10463171 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.079908182 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106051322 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089486832 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101416128 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.083440806 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100108397 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.081270171 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.085575879 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.106106556 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.083896935 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108003767 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.084188271 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.101687478 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.087230444 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104561609 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084609356 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086020097 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.102419478 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087291793 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100027021 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090152762 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101097725 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086522884 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102087542 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.078329396 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084868856 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.104964964 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084447501 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105481345 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.086577325 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.099996425 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.079718779 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081643224 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102824573 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090191417 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108748424 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.083683968 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103459155 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079372341 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097670765 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086328663 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.078087455 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.102576706 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.084464078 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106888021 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.083859771 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.10193187 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084048378 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109370128 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087695532 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106409678 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.079073043 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086005105 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.106190765 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.083451877 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102494339 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.082496363 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106918624 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087132368 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.10220716 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081156957 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109140287 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086096104 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087411725 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102237175 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.081509634 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101338615 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080328967 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106740913 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.083498811 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10785012 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.08417674 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085412584 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11069044 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080849306 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101115466 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090898903 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104283678 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.0887217 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.10000025 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.082255027 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086762298 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10738798 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079342463 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.099882886 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.079123263 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.10381687 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081060286 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079709664 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111079224 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.088770572 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104252382 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08446856 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103807026 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079739686 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100195495 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.080740639 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086920288 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10315513 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.090680791 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.099876207 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.080700295 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099986826 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085559856 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103738209 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.085124682 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.07825959 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100439342 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.079874239 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.103704382 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089055312 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104320047 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085930927 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084988559 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10382871 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082366614 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110424438 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.078686281 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105448064 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092654086 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.106679869 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082330395 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.107516289 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08991359 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.106548005 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080109419 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086888467 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.103521004 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.081750782 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106873397 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087512902 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116554768 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084961953 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101249711 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.08461295 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104145363 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.081143499 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.089448169 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10721657 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087333924 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107021152 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.083903132 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108506461 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08426332 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10801661 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.083847882 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.103851046 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.081499949 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081369934 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102730392 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.079526577 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107293337 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086944607 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105411928 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.089330795 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.080772075 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112519686 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.090323641 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.107320911 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.078716521 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.101243864 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.081628124 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079741179 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.109038841 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.080042774 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.104158235 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083737049 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103977057 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.082890905 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08781818 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104060232 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087434005 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10617798 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.076037706 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.104068921 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.084634711 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082850404 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099537886 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086121698 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.107559984 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088221061 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111062105 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.082757222 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105613583 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.082971474 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082744424 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101972668 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.088105608 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104584508 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.084438883 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101087875 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083796602 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.087596058 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105943129 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087400957 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108845327 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.084492148 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.110943732 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089020152 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099514203 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.079709378 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107892091 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.08092586 seconds)
  done (took 55.799047526 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125331512 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10488093 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076902657 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097515204 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122499158 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078874564 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07680499 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101648341 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081508387 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111740874 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077312986 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097157579 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09920897 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125318174 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122002932 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109049301 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074555281 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102343491 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077195667 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081651327 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118119097 seconds)
  done (took 2.892895661 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104117277 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113400546 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090323707 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115569879 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105297227 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091568835 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110139676 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110170967 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094410735 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105878564 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114811699 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091677001 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.10548647 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.086398614 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105709292 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107912641 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095832743 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104248774 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.092406987 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109397583 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108492583 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.090288894 seconds)
  done (took 3.083123661 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087942293 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.085029828 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.106807876 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.077001614 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.105409025 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.075538822 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.110680141 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.079737807 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090381534 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101146415 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080658862 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.100640414 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08661548 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.076754549 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101527002 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.079854917 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.153142686 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110415634 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085799584 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107886259 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.080192038 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.083698044 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.100882403 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081307189 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101042142 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.094943171 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107688349 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.086392001 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.085453682 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.101878341 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085781793 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.099880461 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.08334437 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102496538 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08076006 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.081047077 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.106204856 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.08561524 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.100467706 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083686268 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.082074467 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100914373 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.087018578 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103462731 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082044698 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.099511314 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083597648 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085474164 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097456652 seconds)
  done (took 5.385674092 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.115588144 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.151223591 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102033245 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140619305 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.095934676 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112475754 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.081924134 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.119866557 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.09713752 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081627003 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120071258 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.117312829 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083983207 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.110416045 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.088560212 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105340498 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087364905 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101583388 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091511251 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101519506 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.09100072 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.107298368 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11636026 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.094625653 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107189991 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.081693961 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.099295808 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.087239037 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113382441 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108034831 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.087701405 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108790738 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.116432936 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.084814732 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.098224345 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.084857432 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.117897507 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083103648 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104867945 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.077678403 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.104752304 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087628804 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105638136 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.119721282 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084388377 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104698758 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082983096 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.095711318 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.093836035 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.104765298 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.091956674 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.1160971 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106817687 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.083213203 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107726029 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.096477619 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103032846 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.080738457 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106034002 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.113840327 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.076845634 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106796321 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.096015114 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104110688 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091307224 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.115255043 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10414236 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087134114 seconds)
  done (took 7.823044822 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111582621 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107837755 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097546733 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118521974 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107209398 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.087012307 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107707529 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.087431725 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109355862 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093794378 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107107905 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.153771511 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085364892 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112608596 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087501661 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107923057 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.087178566 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106475168 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086999695 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107796269 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.087013418 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117476544 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107195686 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.097626731 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120692782 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105083118 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087907063 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108052294 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097631582 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107253545 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1192958 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.087557101 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108010468 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.097837722 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12066561 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106967884 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081952354 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107085585 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.08781758 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.107988484 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084852805 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117908108 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107525358 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.085184909 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107693403 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.088434733 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117838505 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.119896414 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.092602086 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113989462 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.088305459 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118953668 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107261665 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087621472 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118293636 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.124557811 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098255012 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118291752 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0873899 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.118163915 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118019637 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.125491669 seconds)
  done (took 7.316483885 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111310788 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11373102 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.120640233 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.075349136 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076643576 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108483653 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077071115 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.097322669 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111982377 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092980784 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115251079 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088204097 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111854693 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115513095 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087332032 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11112907 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107100977 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087562844 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113318664 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087699702 seconds)
  done (took 2.849460276 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.08895332 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119752325 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080363131 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107589419 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.083734045 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106692131 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.082359976 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103557138 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08136409 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102637641 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092039353 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.112014982 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081142765 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10660077 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091818046 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106969469 seconds)
  done (took 2.390694097 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100481961 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120297762 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.103535465 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.106332654 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.077050357 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.104538871 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.082182204 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.096296456 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.076254663 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.116247158 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085812243 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106553289 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.08276443 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.097896624 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.080825817 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.085278601 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.095900259 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083253419 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102829779 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103532009 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105302475 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.084961387 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104161167 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.081324729 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103171789 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.085634171 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107252361 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.077409939 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.0982703 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.08298326 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102778477 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.088943797 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.096548384 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085058147 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099626547 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077416878 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102400779 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083028275 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.105978178 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.083675214 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.078355812 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103102167 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.082742048 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.100989291 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.076089238 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103250197 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075939724 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.105821997 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.081827398 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103213391 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.082336388 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086933706 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108018131 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.111591643 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090046261 seconds)
  done (took 5.998264399 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093993959 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103781667 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075164978 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078016569 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103243001 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.082302283 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105620169 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.083047895 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101765234 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077564644 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10213375 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.084899504 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081936947 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104580963 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08177664 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10408155 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074997829 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.101619364 seconds)
  done (took 2.488828767 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085735706 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079558286 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108704923 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079982821 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100469543 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083094348 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096083051 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.079246318 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077854693 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101343412 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080205701 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102743363 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079608992 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.102902314 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080640688 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100331963 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.083702819 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078257655 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100957378 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075479764 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10305405 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078537758 seconds)
  done (took 2.805098286 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.116555998 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.121894523 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.08768277 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.207183611 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.120482383 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.105826232 seconds)
  done (took 1.610919687 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10511769 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136751554 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080729642 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103470768 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092555218 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105626593 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084710171 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10524492 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095781114 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118437272 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105497654 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095782905 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117057165 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115507972 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092312948 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113223687 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084192177 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105573885 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080760734 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125441845 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105145839 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096360814 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105818073 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103982631 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084616805 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115563635 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096178622 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119095391 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105717237 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097055105 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11314582 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084476908 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11796101 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118031482 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082577173 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116846017 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084187891 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126001744 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11333471 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116319752 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082831045 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112885699 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096311598 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111889651 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116882231 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085422204 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112191746 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085245009 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10534406 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132693902 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093066074 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116397437 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11270661 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096877423 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117009243 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132907691 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118503676 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095299017 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112593509 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119088776 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095814362 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113469771 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116196625 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09836164 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113909216 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115651814 seconds)
  done (took 7.8303855 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119192863 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102997659 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084714351 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119976059 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116889347 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085831087 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105488181 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085115519 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105688301 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081816564 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150237592 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10610151 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096077624 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117133835 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10544269 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085677692 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105326993 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095411007 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103306305 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132715035 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085253823 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116341025 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115613646 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09567779 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119380884 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113087306 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08556705 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106226175 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085507207 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106235128 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112660039 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086314208 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116331726 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08212021 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116785481 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084979684 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106527869 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112513934 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085583582 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113235306 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096305065 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127026534 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105688933 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085800302 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120328787 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105516094 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085598841 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102612931 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085465034 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102397926 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098475613 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120018602 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119136799 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115550542 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085618353 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10570848 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085732886 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105391892 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085499695 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113077689 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096347205 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106386184 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132163856 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08606978 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106522533 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116535974 seconds)
  done (took 7.701460507 seconds)
done (took 150.017696034 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.096478205 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.1343345 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094233124 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.16295757 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080944028 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.113580827 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.134817803 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.095981217 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.101864532 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.080979744 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.101571966 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.082639167 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.145002952 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.102364152 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.080318715 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.103466856 seconds)
  done (took 2.563910508 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.175179694 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.287190359 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099161822 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.1000671 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.085148071 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080524099 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.100583927 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.088796226 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.10289828 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.080865729 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.08002921 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.102926934 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.080287874 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.102620918 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.082799348 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.100868899 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.081016029 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080187955 seconds)
  done (took 2.768417513 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.108952733 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146748139 seconds)
  done (took 1.12132146 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.115334676 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172784521 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.267465277 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.150558492 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.130974626 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095498761 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149904897 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.121547403 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199367702 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124563503 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.102830231 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.108723685 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.112876395 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.111268875 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.088495569 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.109497925 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.136231373 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.088454582 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.109664115 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.088982991 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.133991266 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.080726281 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11427682 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.088240256 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183228225 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.123634756 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.08055291 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101655637 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.089800229 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.110036255 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.087381502 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115153146 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.122415113 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.144976159 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.093754815 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.14678312 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.108606402 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.086503066 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110042297 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.086719073 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.112019341 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.090980094 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.116449978 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.088190275 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.10156538 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.087941098 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103357671 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.080609171 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.108977576 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.089369798 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.109035344 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.087432456 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.145000373 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.110111601 seconds)
  done (took 7.087109393 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.800560759 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.147189191 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086902706 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.87572739 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135234953 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121473343 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.768987675 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132636684 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226788275 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.783134659 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125888001 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117024246 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.201114673 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.221852997 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.912354453 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.302149339 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.906602268 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.095139336 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.138824448 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.143746154 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.089970405 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132155355 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.124694237 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.420949688 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.08680727 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107170982 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.090159651 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11545281 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.153148292 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085991833 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.109148305 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17073349 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.235328775 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.195111695 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.08691697 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.083254957 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107818493 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.158123942 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260624359 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.188565366 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.170716782 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080685552 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.107017246 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.093997364 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126224279 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102858849 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.155274811 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.163213504 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.163573171 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086807771 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11614771 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113295999 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.09353296 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.153359935 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104639124 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.281915973 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.303861834 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106166443 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092938481 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121442351 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.231141593 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10623837 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.193690505 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132446773 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.204634077 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08468182 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784076929 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.157423184 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.083741663 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.112735172 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.090463351 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111724197 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.092211486 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15853771 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.382583567 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118782479 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.08803563 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105249632 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.199251162 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084529749 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106579527 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.154933467 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.085166427 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.113691616 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.117500356 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095556658 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.15934669 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.215335788 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.117992498 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112552832 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.089867761 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117359531 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.085823254 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.204027356 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.211733755 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.152318635 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.20338909 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115891497 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.156589314 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.156889993 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113793285 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.160387821 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.090860533 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120242614 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094060378 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.209463054 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134557261 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083462398 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110548015 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.090022513 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.137378951 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108183344 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.091397201 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.158782348 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479985178 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.15795158 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.081379662 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086680454 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114140696 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.153878081 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112659919 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.230263567 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114409882 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.158066227 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088676803 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.104157435 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.089936105 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.175737221 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095870416 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.114326318 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094444601 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113181811 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.220683902 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.209548919 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097475361 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233593915 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.15108726 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.113074202 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.163110383 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.114251051 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.160151219 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.091691367 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115472098 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085109986 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.770400249 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116738498 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.091810347 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109789827 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.155899312 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10685272 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084204219 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10648375 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.081822299 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.765018885 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087533085 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081451608 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.107734846 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090758267 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.113585547 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.089201757 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.110409555 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.15392827 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220239003 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093158601 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11335061 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084409484 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.152035385 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.109090122 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08467803 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10781137 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.086491745 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.114166886 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.087520252 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107529634 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163146066 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.152636939 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.211297803 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.5677771 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.083895926 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108514181 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219280711 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085697759 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.27725357 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091000038 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.219682611 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.158268194 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081509766 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.301999627 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.159403073 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.179681892 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.109054901 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.163139697 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083073988 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111983461 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.154987646 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084500374 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112695405 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.152149049 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.097320998 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119354732 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.953783314 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085746496 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.218091489 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.10354403 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.160371905 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.086802917 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116207358 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.259773216 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107407124 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121424643 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.154492877 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.088210492 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.106930485 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.706294791 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.086248286 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11689787 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091446558 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.21499526 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.156525264 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114501871 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090222076 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116989999 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.154499566 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.200816827 seconds)
  done (took 41.622810375 seconds)
done (took 56.021881956 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.259871447 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21255126 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.265068175 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.165398549 seconds)
  done (took 1.886253528 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.17353165 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.122362512 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.141423381 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.079102529 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.14807223 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.102185701 seconds)
  done (took 1.654272903 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.368788549 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271286153 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.214823217 seconds)
  done (took 1.742266451 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.244896361 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.242039686 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.346817841 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.389773346 seconds)
  done (took 2.21115842 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207139232 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.096547955 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.119527207 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.111702825 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.165024474 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.20367991 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.13720209 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.146839618 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.104329799 seconds)
  done (took 2.226075632 seconds)
done (took 10.611305534 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.266687565 seconds)
    (2/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.163662937 seconds)
    (3/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.106092699 seconds)
    (4/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121598857 seconds)
    (5/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.095588227 seconds)
    (6/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.113900622 seconds)
    (7/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.268658009 seconds)
    (8/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.170438963 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.210546132 seconds)
    (10/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.199704041 seconds)
    (11/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.213061942 seconds)
    (12/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.111559118 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.121243088 seconds)
    (14/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.212162918 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.080710837 seconds)
    (16/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.168476258 seconds)
    (17/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.213730468 seconds)
    (18/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.174780025 seconds)
    (19/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.110593175 seconds)
    (20/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.200802755 seconds)
    (21/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.250991562 seconds)
    (22/286) benchmarking ("sort", Int64, true)...
    done (took 0.230846853 seconds)
    (23/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.177343692 seconds)
    (24/286) benchmarking ("sort", Float32, false)...
    done (took 0.152299034 seconds)
    (25/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.110484803 seconds)
    (26/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.089241144 seconds)
    (27/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.09074552 seconds)
    (28/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137608159 seconds)
    (29/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.088480384 seconds)
    (30/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.116940248 seconds)
    (31/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.254628378 seconds)
    (32/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.251711034 seconds)
    (33/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.097769192 seconds)
    (34/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.187109801 seconds)
    (35/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.132711456 seconds)
    (36/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.088981746 seconds)
    (37/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.202275937 seconds)
    (38/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.090648929 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.145260261 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.146507529 seconds)
    (41/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.095152773 seconds)
    (42/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.191176785 seconds)
    (43/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.213809052 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.088693104 seconds)
    (45/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.11677253 seconds)
    (46/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.193097321 seconds)
    (47/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.131465173 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.088868374 seconds)
    (49/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.133266658 seconds)
    (50/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.209074158 seconds)
    (51/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.108263622 seconds)
    (52/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.107999377 seconds)
    (53/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.079656676 seconds)
    (54/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.106233177 seconds)
    (55/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.071215295 seconds)
    (56/286) benchmarking ("sort", BigInt, true)...
    done (took 0.240177973 seconds)
    (57/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.083162545 seconds)
    (58/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.115347553 seconds)
    (59/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.094695543 seconds)
    (60/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.225249291 seconds)
    (61/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.086420532 seconds)
    (62/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.111139576 seconds)
    (63/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.185794417 seconds)
    (64/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.072242866 seconds)
    (65/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.116436331 seconds)
    (66/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.096458885 seconds)
    (67/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.092296836 seconds)
    (68/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189901182 seconds)
    (69/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.172913373 seconds)
    (70/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.161086643 seconds)
    (71/286) benchmarking ("sort", Int64, false)...
    done (took 0.081908571 seconds)
    (72/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.166711332 seconds)
    (73/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.111573924 seconds)
    (74/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.106463593 seconds)
    (75/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.085241305 seconds)
    (76/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.154954298 seconds)
    (77/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.0865028 seconds)
    (78/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.187247497 seconds)
    (79/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.184190404 seconds)
    (80/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.172206731 seconds)
    (81/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.104165149 seconds)
    (82/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.088272088 seconds)
    (83/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.199663689 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.080624794 seconds)
    (85/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.183583686 seconds)
    (86/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.110435838 seconds)
    (87/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.176003507 seconds)
    (88/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.117112315 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.105863864 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.105102442 seconds)
    (91/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.18283094 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.081386934 seconds)
    (93/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.076476765 seconds)
    (94/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.114025448 seconds)
    (95/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.080285593 seconds)
    (96/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.092281624 seconds)
    (97/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.08291868 seconds)
    (98/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.072080544 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.10423781 seconds)
    (100/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.087884221 seconds)
    (101/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.092538464 seconds)
    (102/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.088191949 seconds)
    (103/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.109910815 seconds)
    (104/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.10731519 seconds)
    (105/286) benchmarking ("sort", Bool, false)...
    done (took 0.183022224 seconds)
    (106/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.09180092 seconds)
    (107/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.112221608 seconds)
    (108/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.136555522 seconds)
    (109/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.095047227 seconds)
    (110/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.088177173 seconds)
    (111/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.091785697 seconds)
    (112/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.107627807 seconds)
    (113/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.111505476 seconds)
    (114/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.123976955 seconds)
    (115/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.08283747 seconds)
    (116/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.104313772 seconds)
    (117/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.092782212 seconds)
    (118/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.181059014 seconds)
    (119/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.103765341 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.081685289 seconds)
    (121/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.089605897 seconds)
    (122/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.176721539 seconds)
    (123/286) benchmarking ("sort", Float64, false)...
    done (took 0.173871465 seconds)
    (124/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.094496994 seconds)
    (125/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.150319556 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.081488363 seconds)
    (127/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.121715864 seconds)
    (128/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.089476799 seconds)
    (129/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.07874839 seconds)
    (130/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.106059179 seconds)
    (131/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.152303142 seconds)
    (132/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.115813598 seconds)
    (133/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.152176668 seconds)
    (134/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.080716081 seconds)
    (135/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.162607235 seconds)
    (136/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.086228816 seconds)
    (137/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.074810303 seconds)
    (138/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.097805113 seconds)
    (139/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.083148017 seconds)
    (140/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.189679307 seconds)
    (141/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.136310479 seconds)
    (142/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.136589596 seconds)
    (143/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.156793084 seconds)
    (144/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.072493561 seconds)
    (145/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137024456 seconds)
    (146/286) benchmarking ("sort", Int8, true)...
    done (took 0.224736934 seconds)
    (147/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.06979888 seconds)
    (148/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.069562474 seconds)
    (149/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.193496466 seconds)
    (150/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.105179064 seconds)
    (151/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.094744914 seconds)
    (152/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.088699365 seconds)
    (153/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.1102354 seconds)
    (154/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.096920099 seconds)
    (155/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.106814118 seconds)
    (156/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.090120527 seconds)
    (157/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.115623464 seconds)
    (158/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.137813264 seconds)
    (159/286) benchmarking ("sort", Int8, false)...
    done (took 0.192899864 seconds)
    (160/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.194642392 seconds)
    (161/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.069113488 seconds)
    (162/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111574878 seconds)
    (163/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.08412615 seconds)
    (164/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.106165631 seconds)
    (165/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.072330783 seconds)
    (166/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.093032322 seconds)
    (167/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.092869392 seconds)
    (168/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.099759474 seconds)
    (169/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.183835049 seconds)
    (170/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.085893919 seconds)
    (171/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.151153252 seconds)
    (172/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.069750876 seconds)
    (173/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.096901802 seconds)
    (174/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.070270553 seconds)
    (175/286) benchmarking ("sort", Bool, true)...
    done (took 0.225193747 seconds)
    (176/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.075063858 seconds)
    (177/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.104421603 seconds)
    (178/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.133662142 seconds)
    (179/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.136917381 seconds)
    (180/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.157079572 seconds)
    (181/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.083333033 seconds)
    (182/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.079131455 seconds)
    (183/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.093191229 seconds)
    (184/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.14837479 seconds)
    (185/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.115391267 seconds)
    (186/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.104357869 seconds)
    (187/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.106015127 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.09284486 seconds)
    (189/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.187723489 seconds)
    (190/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.1211144 seconds)
    (191/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.07227604 seconds)
    (192/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.094252784 seconds)
    (193/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.108597053 seconds)
    (194/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.071018976 seconds)
    (195/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.095820812 seconds)
    (196/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.08043504 seconds)
    (197/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.177577002 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.081927304 seconds)
    (199/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.071537084 seconds)
    (200/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.098262585 seconds)
    (201/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.090069722 seconds)
    (202/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.105006263 seconds)
    (203/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.086335742 seconds)
    (204/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.076959038 seconds)
    (205/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.094501642 seconds)
    (206/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089614456 seconds)
    (207/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.114940095 seconds)
    (208/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.088469087 seconds)
    (209/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.098071359 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.105490164 seconds)
    (211/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.080605971 seconds)
    (212/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.094799472 seconds)
    (213/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.069923912 seconds)
    (214/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.071728847 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.105266446 seconds)
    (216/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.08234029 seconds)
    (217/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.111800292 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.082232807 seconds)
    (219/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069917307 seconds)
    (220/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.093082462 seconds)
    (221/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.078537716 seconds)
    (222/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.069952234 seconds)
    (223/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.10436519 seconds)
    (224/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.153399506 seconds)
    (225/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.119688013 seconds)
    (226/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.088362818 seconds)
    (227/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111506495 seconds)
    (228/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.073508025 seconds)
    (229/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.113423535 seconds)
    (230/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.108110171 seconds)
    (231/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.090247427 seconds)
    (232/286) benchmarking ("sort", Float64, true)...
    done (took 0.234181099 seconds)
    (233/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.114840354 seconds)
    (234/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.070854633 seconds)
    (235/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.107116434 seconds)
    (236/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.071286662 seconds)
    (237/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.070557449 seconds)
    (238/286) benchmarking ("sort", BigInt, false)...
    done (took 0.223072507 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.106222401 seconds)
    (240/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.073274991 seconds)
    (241/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.106542297 seconds)
    (242/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.08557749 seconds)
    (243/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.070566731 seconds)
    (244/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.122506161 seconds)
    (245/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.106137969 seconds)
    (246/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.094020578 seconds)
    (247/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.070506766 seconds)
    (248/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.07001178 seconds)
    (249/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.105575837 seconds)
    (250/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.083647044 seconds)
    (251/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.168077029 seconds)
    (252/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.088919679 seconds)
    (253/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.16984417 seconds)
    (254/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.089636457 seconds)
    (255/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.10601248 seconds)
    (256/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.081337701 seconds)
    (257/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.083596959 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.105718422 seconds)
    (259/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.082832662 seconds)
    (260/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.113887481 seconds)
    (261/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.072246598 seconds)
    (262/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.132604812 seconds)
    (263/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.082687385 seconds)
    (264/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.082564187 seconds)
    (265/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.09594217 seconds)
    (266/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.084367563 seconds)
    (267/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.10744358 seconds)
    (268/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.100743128 seconds)
    (269/286) benchmarking ("sort", Float32, true)...
    done (took 0.235573808 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.084914873 seconds)
    (271/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.109481042 seconds)
    (272/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.082494205 seconds)
    (273/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.094214376 seconds)
    (274/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.084673056 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.08107474 seconds)
    (276/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.238643237 seconds)
    (277/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.103112043 seconds)
    (278/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.079247894 seconds)
    (279/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.069898658 seconds)
    (280/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.09525873 seconds)
    (281/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.079394213 seconds)
    (282/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.079506658 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.105056095 seconds)
    (284/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.107606168 seconds)
    (285/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.106825945 seconds)
    (286/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.073171732 seconds)
  done (took 35.281674122 seconds)
done (took 36.181583164 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.095640795 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146418235 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.0926766 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.13428989 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.09564536 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.119988064 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.091079395 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09299924 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.11939163 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.09601243 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.118074553 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072410978 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.116235209 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.093932676 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.1161617 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113899289 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118797922 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.089513675 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.109096143 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08117069 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.084813322 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.10547446 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.083907382 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.095386754 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.093907641 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.090322617 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.111954477 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.093167764 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.105799411 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.08271272 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.080267868 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.113364162 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.081819748 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.118880606 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.088855789 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.108762004 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.094371074 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.091405613 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.108085128 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.082252279 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116151175 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.082445966 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.112855221 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.089790499 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.083029792 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.104469488 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.085879087 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.119674527 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114971322 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110616747 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.090692329 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.09175601 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.1153177 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.088235962 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.104971509 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.085712445 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.105182963 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.1138485 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.108873218 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087337938 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.089561261 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.113762224 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.08136371 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.108659147 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.086141782 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.115411838 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.093706511 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.080732137 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.115834803 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.087704368 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.1053447 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.086760649 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.080811341 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.106499755 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.091983039 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.11690615 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.081475264 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.082588882 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.113431447 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.087456912 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.105656772 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085182874 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.107331745 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.083550889 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084595372 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.095912924 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.081362881 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.087513174 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.105490216 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.085443499 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.112013384 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.08870449 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.107401948 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.093800341 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.081084965 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.105962371 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.082577284 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.105862576 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.083669872 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.081520585 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.105715894 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085002698 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.114326636 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.083319994 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.08326851 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.11905201 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.082803672 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.112300798 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.081453478 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.081207338 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.12167878 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.092098723 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.106235317 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088009944 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.080094855 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.108006502 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.081927638 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.105727305 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.082259839 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.08145069 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.107834 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.082637174 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108824683 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.083608173 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.095358852 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.106177221 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.081700014 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108362678 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.082394373 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.087088914 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.106833009 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.082834812 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.107375297 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080808282 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084625688 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.106836661 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.08401797 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108407884 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.086668849 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.082698675 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.110582695 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.086509759 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.107452708 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.082105436 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.080424454 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.101097904 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0884307 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109220734 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.084307141 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.081677286 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.107856434 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.082437764 seconds)
done (took 15.674606013 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.083128483 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.180523545 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.141958636 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.11617849 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.128036873 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.083014492 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117749278 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.114462006 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.108837704 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.137907445 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.106120438 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.126013315 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.122299073 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.105236945 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.083146001 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.086165968 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.10852571 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.098158458 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146706806 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.10262779 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.141173326 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.104973183 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.113442011 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13105055 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091708346 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.124479209 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.083769325 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.110851618 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.086620822 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.131923259 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.103448359 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.110328167 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.083385969 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103816643 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123887585 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.090337588 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.106970742 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.089564411 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106046401 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.082986361 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.129775558 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10489527 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.112536254 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.088932194 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.109816064 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.086177994 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.083540953 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.116458186 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093705268 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.111444325 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.097213802 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.137416276 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.109228057 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.092756928 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.080736728 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.117390083 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.092351525 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.109587234 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.083855265 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.10961171 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.083214523 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.103181643 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.122587549 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.13185147 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.087391237 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.116258667 seconds)
  done (took 8.077599521 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.100577706 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136233365 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.100793215 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.124761184 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.082466322 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.082419915 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.10836072 seconds)
  done (took 1.693478024 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.083677968 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.109458069 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.134016679 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108845262 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130665571 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.134569227 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088524724 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.083598053 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.127525086 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.085115771 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132863292 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1253318 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11401719 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.091447315 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136049341 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.085070137 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.135821014 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.083523895 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.110363812 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11086859 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.111330963 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.1028721 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.110619005 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.083231497 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101244122 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.108843931 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.15761159 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088821256 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.082116753 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.112437268 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.082099288 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.147858243 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101658958 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117231773 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083965875 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12758595 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.1023563 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10596258 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.100613047 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.113384493 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.101947436 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.084263339 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.110247262 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.082930009 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.112431415 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.097506828 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.087748983 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.109733356 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.087166431 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132147614 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.085151843 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.125770056 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.084481765 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.087485141 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.110464018 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.086890054 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.11830635 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.08487172 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131987094 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.082230736 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.128832272 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104258814 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.125530137 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.103352348 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085922785 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126429207 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105988301 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116452009 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.086166787 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.112119159 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104246896 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.0812727 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.111427015 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.097516977 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11151914 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.110609786 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.135365829 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085330615 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.119735245 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.084732726 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.083840325 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.109034172 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.110201555 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112930178 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.084242627 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114989838 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087718616 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.108645022 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.083347531 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.087374018 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.108800411 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.085775801 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.111152957 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.084926896 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087195017 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130767851 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.086211559 seconds)
  done (took 11.135962359 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.085208347 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.085376818 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.11356027 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.085950265 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.109622968 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.086103704 seconds)
  done (took 1.540766272 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114173519 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.110143828 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.098364569 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.113312963 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.12512078 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.13296144 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.109299556 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118732753 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.101810428 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.120568015 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.111331994 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.134759789 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.114113127 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.113851 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.108162093 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.112954671 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.109195833 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115251893 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.095370916 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115099814 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.101185292 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.114744228 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090394767 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.12859495 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.094335708 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.113761924 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.091103432 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.120749067 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.09583667 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.118933728 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.090107318 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119132267 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.091448673 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.118619173 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.109708137 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.114490861 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.088875741 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120931105 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090850015 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.093840371 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.135794592 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090021775 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.1209506 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09569816 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.119383561 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.090409594 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121356218 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.090581214 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.133189417 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095609653 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120865375 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.08923256 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119280152 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096527001 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.115824867 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.094122971 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.120986724 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.109269356 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.115744714 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.089849011 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.111649373 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094535633 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119142203 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.094538832 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.118675187 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096143512 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.116313459 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08992526 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115048644 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.090026484 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121065693 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.086888291 seconds)
  done (took 8.777432892 seconds)
done (took 32.183284605 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.682777614 seconds)
  done (took 1.650233128 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.861347275 seconds)
  done (took 1.83161245 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.001485972 seconds)
  done (took 17.997370247 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.467345907 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.569280247 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.966482889 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.161369872 seconds)
  done (took 3.131905433 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.943130658 seconds)
  done (took 1.930591289 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.281265006 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232163635 seconds)
  done (took 1.487320345 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.772477919 seconds)
  done (took 1.762922094 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.433548029 seconds)
  done (took 2.414680325 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.326216792 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.156896699 seconds)
  done (took 1.471571582 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.563725288 seconds)
  done (took 1.554350405 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.239188645 seconds)
  done (took 11.227539186 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238999507 seconds)
  done (took 1.236691421 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.28543996 seconds)
  done (took 1.272376953 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.553534588 seconds)
  done (took 4.540008921 seconds)
done (took 54.490143311 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.094911164 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.096833898 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.123355604 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.094065392 seconds)
  done (took 1.39070194 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100359253 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.0905887 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.124684768 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.089488667 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126190832 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.090427871 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.119338917 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101129746 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116886989 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.092245682 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117538831 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.090262617 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.120319766 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.092970109 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113600132 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.094778721 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123221146 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.091360176 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.093968989 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.116997122 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.088763189 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.118112274 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.094246283 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.115483558 seconds)
  done (took 3.518603264 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.095817748 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.089394151 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.117589393 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.089484622 seconds)
  done (took 1.385328811 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.094929385 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.101204264 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.127075881 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.09498116 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128194487 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.100557945 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.113825244 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.087596842 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.114906739 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.095814265 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.084686155 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.134772528 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.12708795 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.09537498 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.096962864 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110333854 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.085764411 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.127458387 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.095009847 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.121665191 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.088376037 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.119553405 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.086235257 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.101675185 seconds)
  done (took 3.53229204 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.167183492 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.122868208 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.108729296 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.11617681 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.129159132 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.136712419 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.083418569 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.136114222 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.083264766 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.124934757 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.087982898 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.156320511 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.096389919 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.1089484 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.083650203 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.083136808 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121612978 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.095492293 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.112599677 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097032783 seconds)
  done (took 3.252214463 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.092893782 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.087837089 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.109494875 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.086367189 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120596415 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.091201233 seconds)
  done (took 1.590662901 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092092657 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.08511215 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.114763744 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.087642899 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.115760261 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.084042055 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083643644 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.111462978 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085148356 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.109721992 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.087111997 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.084127775 seconds)
  done (took 2.142539367 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.507357812 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.086136947 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.112182133 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.108519655 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.095237358 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.083290978 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.126866123 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.085894946 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.138932803 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.083703696 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.111681675 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.087416252 seconds)
  done (took 2.629906635 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205171867 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09462544 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25982205 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.347089605 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1536715 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163055774 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.271784554 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162459322 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.180757772 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110194787 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216135463 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127253981 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150799583 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174779513 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110237568 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.152726455 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171046489 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196103609 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145068633 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200084326 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158842013 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164388884 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17617158 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149638694 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10833377 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154256298 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.116306575 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099088683 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168971116 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165365129 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169921396 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145814904 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136008097 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195584943 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203447311 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172947342 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27590848 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128648045 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.152349084 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.160192356 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247295098 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110077904 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217843188 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124164133 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127807592 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178735867 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153050028 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174828331 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102212159 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138077115 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177990206 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172485074 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.175080682 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134211835 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295226923 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143844906 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116656751 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177048758 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18243966 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185654999 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164435722 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.116493864 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179533139 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176176705 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174772521 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114755534 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160788302 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122520893 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170166336 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191711442 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174691128 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16085279 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180787518 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132453684 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160082669 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165967658 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122357451 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1736272 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157064858 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.116907181 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119944796 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13516765 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0984607 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.191265866 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120183166 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199010613 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105529301 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.170053967 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197883011 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155302758 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158884301 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161870544 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16243764 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116364953 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.114011039 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143339418 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121944885 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153093118 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128199543 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126536138 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139383596 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.123187066 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120610404 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.120303395 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155503371 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09804844 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160586642 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1609558 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.095312525 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162252991 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147864356 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.12030572 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165026136 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179808253 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130681937 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102562269 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189254639 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15418749 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131966286 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172253389 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182259379 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.152299532 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107387241 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162943612 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188485645 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13943627 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184625649 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137843021 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104695377 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.137766843 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154713645 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126263114 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155630257 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127292309 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.148461648 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186733771 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.093975343 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134039326 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172124301 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096979062 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126408759 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110974105 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132764338 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.1053714 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.13879802 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133052212 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150731468 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128420488 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151423887 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152106616 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138129217 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185558134 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102084468 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.147963597 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145584877 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.08958198 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.171977621 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181009298 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126884975 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192219783 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161473183 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190103353 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15978032 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100408626 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173962029 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125865098 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.088110199 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160122069 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157454668 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159167647 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.176583179 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187544865 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.159811722 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.14951387 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144698149 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132930453 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.159608258 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152268213 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.132749336 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129567446 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154582514 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.119241271 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093099884 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125657644 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110650323 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128518457 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128487949 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177478109 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159522308 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182314283 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156272575 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110433988 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177971609 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123138835 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161356577 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.166386441 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107739199 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.179102419 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176409586 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163125386 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14006144 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170087967 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.089072659 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120379976 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.102580893 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160855467 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129712298 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103380894 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139552504 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178269442 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170406273 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145131774 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196686468 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161873811 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188217773 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.090728895 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.165761126 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164105224 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154120955 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.146662141 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129754811 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.120214891 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17355646 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140101841 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18490832 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15725975 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164277099 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19046495 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.147613843 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100066111 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146728489 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161759652 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136840535 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134288556 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142147751 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132282947 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120347669 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.124133229 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09471881 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168058182 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141606206 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171846496 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144413313 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165204472 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095940445 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140566072 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157999388 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142648834 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.085175581 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162168022 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179195148 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140622736 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153990836 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139318503 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127865388 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.305953342 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182245414 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179253643 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134286923 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111239775 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158764759 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156783563 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15828244 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175792521 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11492578 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17433571 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154735659 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.132394012 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104498236 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144726281 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147543223 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109856337 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.130222246 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150170585 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.106097232 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172519369 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139204354 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155452539 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160054657 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.117640522 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143317636 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110478418 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223708649 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126764773 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173542206 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.146738124 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.158927448 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194078758 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092992337 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126297252 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.095474168 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175157131 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130259188 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154493202 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.179955779 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190619026 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156171597 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161717055 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1070389 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.116292875 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154891789 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116162547 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219966866 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11205715 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13322154 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182601437 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.140406731 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100296525 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16003072 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279294177 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141928479 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167963001 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.082963921 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.2737004 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094862525 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127419669 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157377102 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167016278 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.10444932 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.171295179 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159056686 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11205021 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157474717 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134866373 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183373409 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198933275 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165174743 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169179139 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.129150877 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127102908 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158104955 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171988742 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141932889 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.105127526 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160258974 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178815951 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.182412222 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130159482 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128896931 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158295564 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156065185 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164810931 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131863282 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193499737 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099207781 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160395724 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137548905 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120645429 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126385312 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.181076162 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129513787 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1683181 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154321726 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101313663 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124044192 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146951805 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126352265 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139508753 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.122760338 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167473012 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.092718097 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159639147 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175888227 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099441677 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151142275 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141510805 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103876652 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14049423 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141006048 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104065509 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.159416137 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177571902 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.097954944 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170362193 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169960003 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159037095 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155688946 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113054126 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665309548 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.125159183 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177044504 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116172805 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180314155 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145845974 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162345893 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15726065 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117501651 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161965857 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146537922 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.226538934 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161138869 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.12510368 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12913194 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14268683 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110749027 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.129067453 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148250475 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128469178 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137568022 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133224929 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.124107347 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14116963 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.129946357 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107056987 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17925981 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144978661 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172988536 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178047447 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105879078 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162116627 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1650775 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128337829 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157281328 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168469572 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110088994 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147839824 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.127689985 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102952013 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176557872 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.091789531 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15702877 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157218885 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157832915 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158517898 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.102318253 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156997803 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139412434 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159345417 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099453789 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149082899 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154053686 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099123726 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.12526492 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151314858 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121555995 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.147725149 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121986294 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.133534604 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177647639 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.090942172 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13128226 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275812385 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153940376 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187478361 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.111683062 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133166036 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110894521 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144299415 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.14934251 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156574509 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.096940745 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130345734 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.098284638 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.162503165 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139393104 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125330715 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181136933 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152935867 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193989059 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133919966 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276136239 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108259726 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15252303 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.091310971 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.126261342 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111030909 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131394029 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140951928 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185061015 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175888868 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.113939105 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.131761978 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094739291 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12210799 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101182958 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159428064 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150978587 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154424181 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110194219 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.112930012 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140096895 seconds)
  done (took 72.944323372 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.156322988 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130567548 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.144048828 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.198075852 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162761289 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248310833 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.205441283 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233312019 seconds)
  done (took 2.562897212 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.088608031 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.139039018 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.123304818 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132542228 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.11205875 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.08812147 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.323341746 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.12978407 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.085808288 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.142220744 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.12950285 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.112628477 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.489966213 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.115121007 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.112630757 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.081866451 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.112233856 seconds)
  done (took 3.596886166 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.194605643 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.474576001 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.978654401 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.18967697 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.175127654 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.090323575 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.710207513 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.089924864 seconds)
  done (took 11.987201071 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118892043 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.112010713 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.159536117 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.158704838 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.116647792 seconds)
  done (took 1.764632575 seconds)
done (took 113.280649066 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.092907564 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.095330684 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121674475 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.09632212 seconds)
  done (took 1.485754357 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.09988387 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.072979519 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.105735118 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077035935 seconds)
  done (took 1.451255552 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189280234 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.16509732 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.39805388 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074353209 seconds)
  done (took 1.589088663 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.10998451 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.12746228 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.100193 seconds)
  done (took 1.43708423 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.101871676 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.097202495 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.126240762 seconds)
  done (took 1.422046818 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.099932734 seconds)
  done (took 1.187985546 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106272033 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.134845259 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.10823023 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.133256158 seconds)
  done (took 1.577422124 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.093152545 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.095451939 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.135405138 seconds)
  done (took 1.414806364 seconds)
done (took 13.012587494 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102715365 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.418245659 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.38516108 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133421071 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.714605107 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.405116937 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.008217851 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142285195 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.162946942 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088360788 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.103682124 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.717166862 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.033632723 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.367792533 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.020141496 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.366489613 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.668569233 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115425728 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087123929 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.086719512 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.996540098 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086892682 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116031316 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086537401 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.698740302 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.39283603 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115751233 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.342942213 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.086597565 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.1236762 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.373931399 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116318621 seconds)
  done (took 16.768303587 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093294948 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173449052 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098071161 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117240903 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.09508719 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.088288737 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.119835662 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088670942 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178651197 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.115906501 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105263795 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.086837424 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.120720233 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.08803215 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136172947 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.087323037 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116464503 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.087668447 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087024476 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116440362 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.106209717 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11590448 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.087654508 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115758343 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088197609 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.128395221 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088714299 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.087274354 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117095341 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095148356 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118329433 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088449048 seconds)
  done (took 4.533340314 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139238449 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183321376 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098685388 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150671659 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168580166 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089523251 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.195086132 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142268092 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153978754 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.116849866 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104790458 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.116741417 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.121038324 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.1180407 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107612822 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116452882 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.088664528 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115650881 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.088009898 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.087201026 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136797811 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.08724456 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116907598 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087544646 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116497111 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102694017 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117837451 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.088407427 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087258343 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124300618 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090584705 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117426959 seconds)
  done (took 4.880523034 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.09214289 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.092921565 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132211666 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.103137293 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.11814199 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.091700917 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.12027052 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.09018172 seconds)
  done (took 1.941601512 seconds)
done (took 29.220294628 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.106019831 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093392338 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130366658 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.100913023 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127007359 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.100719666 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.115255085 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.09966816 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.099615215 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.126196051 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104775656 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.116400569 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089659955 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114738727 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.102105054 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092620543 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130217831 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096799023 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.131549512 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.101181855 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.118797007 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.099537328 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.098027455 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.130912148 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.102020747 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132737658 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.104394794 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.123168476 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.089161978 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.119470253 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.100960108 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.137739018 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.090031194 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.131711169 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.093563571 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.091679142 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.118663828 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092169506 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.130510944 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099527865 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123449472 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100259938 seconds)
  done (took 5.694707231 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.113219722 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.145118485 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10999709 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.083182544 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.119487813 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082933868 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.142708968 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081307625 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.11288578 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.112733959 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.10515716 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079313664 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080923365 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.104000382 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079090323 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.077407217 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.11146934 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.078006626 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.10697551 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080371741 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08141271 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.104676222 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081810876 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080592744 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.107080871 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083769699 seconds)
  done (took 3.657711965 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.095866664 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.103057701 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139003535 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.170680818 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.121665074 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.12531875 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.097027249 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.105010503 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.133882047 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.086950612 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.119627324 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.116257629 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13477044 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.09476451 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.119605024 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.102700021 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.101312365 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.119488223 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.092905997 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13690843 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.103061111 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.127862279 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.105689485 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.128105563 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.087771249 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.088842817 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121936758 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.097709956 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124020015 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.096527849 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122033289 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.090933435 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.089173845 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.129045518 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.093744908 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.118071791 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.106601638 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126524633 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.096837226 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.118105458 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097289727 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.089955836 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138941601 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127593765 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.117624184 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.094707817 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.120959509 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.097502178 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.119101364 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10739209 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126109196 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.088432141 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.09110847 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.118779404 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.089166031 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132440489 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.089804726 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.088872244 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.12906218 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.092767944 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.129825022 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.091934494 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131730468 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089405399 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.09372342 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.118775138 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.08804949 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.115974733 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.111537636 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122932766 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.128286617 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.118235864 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.089119085 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.09542677 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123729907 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093781437 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.118146829 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102402382 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126962022 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.091495637 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127663944 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.09072767 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.090450503 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.136337281 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.090603813 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.11924845 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.089246801 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.093876454 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.120067907 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.088754676 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132428783 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.087887315 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119746932 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.101925298 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.087785069 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.11877117 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.093336119 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122743213 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.087098466 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.130414779 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.094022063 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.117461783 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.098672919 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.088041909 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12105453 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.097444208 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.123069382 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.0878691 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.122393778 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.094761894 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.088123258 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121476685 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.090112344 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.120710026 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.098357996 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.123945136 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.092076051 seconds)
  done (took 13.855245702 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.22941134 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.212983358 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.184885357 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.262026822 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.130982703 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114457403 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.20976833 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.15508302 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.08990525 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.15635431 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.167273112 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180969568 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.167229213 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.177224703 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.167883496 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.088180757 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.136900679 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.133826478 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.211329315 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.28810363 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.10814043 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.127305661 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.126533853 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.155628717 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.132870213 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.097077796 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.135060723 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.099901738 seconds)
  done (took 5.577188895 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.104845267 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150297763 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.094238182 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.140889605 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.114702922 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.11871181 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.092653861 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.119425999 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102187302 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133369898 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.088511429 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.093867791 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.126044109 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.097199335 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.119142121 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.097758451 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.127747803 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.090261652 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.121319852 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.093080971 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.098578683 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136016924 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.092291957 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.118468664 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.097552449 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118624671 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.090433987 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141315944 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.088259604 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.14050285 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.086127439 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.127797588 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.102018966 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.120010549 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.089420303 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.090611214 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.121129218 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.090550264 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.120390619 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.087803177 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.087663455 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.111778748 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.088177119 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134374223 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.095166699 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.11327793 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.09547879 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.123082411 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.08982893 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.08606531 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.121727176 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.091690423 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.121246233 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.096917972 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.090600938 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.119887937 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.092201703 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118730524 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.095252479 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.090539327 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117397942 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.087270366 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.123347984 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.092868118 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127157516 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.094108503 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.086989857 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.121019714 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.093463121 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.125784732 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.091237923 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.094430889 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.117777716 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.090985797 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.12177778 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.095358652 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.092484045 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.117804092 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.088486368 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.118842861 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078500738 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.08812833 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.107353517 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.091555991 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.116695816 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.08772629 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.090402182 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125885591 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.104886821 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.120206008 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.097143452 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.120163394 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.087841397 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.121127083 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.086505593 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.091737965 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.135375154 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138259818 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.089119026 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.086822125 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.134052853 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.090782421 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.117692655 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.078999338 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.096894964 seconds)
  done (took 12.271072366 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.12964323 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.149650785 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.090604682 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.13705013 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.122880394 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.153840671 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.096291844 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.127859468 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.091558659 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.137585786 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.089254494 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.097817294 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.119179476 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.103062651 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.153404507 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.099173665 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121760449 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.10423858 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.124155817 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.135169098 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.137929197 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.107248125 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.137558072 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.088895625 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.124970093 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.106433474 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.15576291 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103640115 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.132226607 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.109026161 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.133953005 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.125861493 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.139136957 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.09326746 seconds)
  done (took 5.229451881 seconds)
done (took 47.391932931 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.20746775 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.427858828 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.198600767 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.109075753 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.221682337 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.208389601 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.212041228 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.202360114 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.267962461 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.199541385 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.455576345 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.790785999 seconds)
done (took 58.634174096 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.218412159 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.365972287 seconds)
    (2/2) benchmarking "String"...
    done (took 1.504170381 seconds)
  done (took 4.001284436 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.74319151 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.173358747 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.464731761 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.204997565 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.206397769 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.496298838 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.928845129 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.611000525 seconds)
  done (took 28.216538165 seconds)
done (took 42.311764384 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.226169856 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.254759769 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.244204576 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.185221393 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.310402588 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.226033362 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.621415453 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.261789886 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.221438493 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.189520186 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.220196273 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.20948032 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.216500033 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.571055311 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.20756343 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.206406837 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.224666433 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.748001136 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.627773573 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.214118233 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.21448646 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.25902106 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.223205694 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.204577896 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.255573962 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.200666998 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.211565435 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.211463275 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.78206723 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.205798687 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.218617677 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.741748867 seconds)
  done (took 191.046953615 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.206698741 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.227825606 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.350280825 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.267891638 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.857461772 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.399855624 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.346092235 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.918269157 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.217480798 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.231197643 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.534597958 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.203428209 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.581208584 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.221128173 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.239516326 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.273674877 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.397714138 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.556179124 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.237605868 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.344627671 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.21974888 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.434766566 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.363234816 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.452762729 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.238758472 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.23705403 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.219007938 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.203660122 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.398127458 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.36314949 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.212634909 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.215331812 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.832525109 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.061936067 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.235999202 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.207651062 seconds)
  done (took 150.643401105 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.208231599 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.206918742 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.209738511 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.244892453 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.206327762 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.782137977 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.77561777 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.733309552 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.689596759 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.661591006 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.538709918 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.209109096 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30649338 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.217768928 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.211276975 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.226008249 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.239089725 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205693036 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.211461945 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.804741899 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.223108542 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.208342266 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.381527511 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.220478439 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.243775102 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.608146819 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.204024726 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.243398462 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.544012771 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.254135082 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204164106 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.615071796 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.82866598 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.32113336 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206397291 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240387251 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.208788492 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.208894936 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.491652324 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.205975401 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.210769752 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.213132797 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.209397488 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.921652952 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.212933184 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.785244955 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.20682347 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.206006326 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.209542058 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.210491889 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.547575189 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.960311679 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.208589347 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.208832453 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.213700212 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.208764723 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.20981221 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.245005882 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.482245124 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.307373698 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.209818035 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.21144984 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.243512739 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.211182785 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.4318944 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206382026 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.475044549 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.263773429 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.427897617 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.7896475 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.208320422 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.212875695 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310606569 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330627592 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.209616648 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.209881107 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.211979584 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.21042792 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.323117005 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.208286184 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.636003023 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.208055538 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.390409202 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.225408654 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.663596477 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.309530906 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.208927467 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.649903705 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.211997085 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.210492458 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.039931334 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.30815584 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.209268416 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.213312988 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.213582459 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.639913968 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.803078427 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.49563143 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.211297255 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.899483714 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.215133451 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.651018629 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.780153446 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.922385146 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.214843828 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32567127 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.386396728 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.226464428 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.211795981 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.6708962 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.213401895 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.270829808 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.213495837 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.612240684 seconds)
  done (took 368.239137465 seconds)
done (took 711.061532524 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.840617051 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.832226526 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.945901513 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.823383005 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.790528356 seconds)
  done (took 10.373370607 seconds)
done (took 11.513553411 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.406238973 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.403014841 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273510807 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.40612689 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242853738 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.425446324 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.381687654 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.231500639 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.319663992 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.293386607 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.315143798 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.261436695 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.247557553 seconds)
  done (took 18.348704872 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.544100233 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.544284836 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273144034 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.540668697 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246107213 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.553941066 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.414656934 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.432382821 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.415433429 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.224697112 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224729669 seconds)
  done (took 16.556171291 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.557798294 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.54296413 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.278106412 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.544394911 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253595823 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.565804792 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.425672307 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.438663131 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.416991578 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.226021005 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22417626 seconds)
  done (took 16.616757308 seconds)
done (took 52.663780175 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.221731058 seconds)
  done (took 2.363268033 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.266328377 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.42190745 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.240033435 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.225380729 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.220941738 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.232539916 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.230983473 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.223276677 seconds)
  done (took 11.203622625 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.220087972 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.219913451 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.217727816 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.222928817 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.220904241 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.222478547 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.222780796 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.219424283 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.222667276 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.220016094 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.222480539 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.223131758 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.217658683 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.218304363 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.216160944 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.220185972 seconds)
  done (took 20.671689006 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.219566674 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.213346669 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.21505217 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.218573148 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.217793402 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.215186813 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.217488576 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.214038254 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.2162111 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.214116689 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.216437661 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.217729488 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.216718007 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.215513711 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.219343384 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.216407008 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.218603905 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.218944428 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.221316003 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.216865437 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.218837074 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.216846559 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.216444363 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.221270395 seconds)
  done (took 30.359525307 seconds)
done (took 65.741365968 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.863965258 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.932889314 seconds)
  done (took 6.940957605 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.284520833 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.28515881 seconds)
  done (took 3.718359294 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.225193209 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.225334448 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.225292465 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.225511826 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.22815861 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.225095925 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.225738991 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.225664839 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.224464657 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.2267494 seconds)
  done (took 13.402715177 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.225547171 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.222992178 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.225571322 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.225943516 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.225875723 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.224540217 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.22847692 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.223615404 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.22577951 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.222913091 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.227746911 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.225030045 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.225685333 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.222883851 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.226422729 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.222869678 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.222887167 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.223949107 seconds)
  done (took 23.195655042 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.237732334 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.246455203 seconds)
  done (took 3.630998154 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.351326176 seconds)
    (2/7) benchmarking "second"...
    done (took 1.264706609 seconds)
    (3/7) benchmarking "month"...
    done (took 1.334043888 seconds)
    (4/7) benchmarking "year"...
    done (took 1.32129727 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.264268359 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.244875348 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.263904894 seconds)
  done (took 10.190803762 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.2260862 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.414013808 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.510633401 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.833220986 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.225760593 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.22946915 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.111385659 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.229977807 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.232597685 seconds)
  done (took 14.162412208 seconds)
done (took 76.387377364 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.26475862 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.21791673 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.518271125 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.229266183 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.230315067 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.563573443 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.259872164 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.353566658 seconds)
done (took 37.790433286 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.232396989 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.222011449 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.077705344 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.225873397 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.322755653 seconds)
  done (took 18.997862799 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.318926615 seconds)
    (2/2) benchmarking "read"...
    done (took 1.558101958 seconds)
  done (took 5.024949983 seconds)
done (took 31.405836692 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229913883 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.230379143 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.228456549 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.229311809 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.230410279 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.227522574 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.228830058 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.231439908 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.233072624 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.230385446 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.229816606 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.233978614 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233123192 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228938457 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229097803 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231838243 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.230130321 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.228519374 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227814445 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.23200615 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231264055 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23240483 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.22760579 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.229123388 seconds)
  done (took 30.673958558 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.231614183 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.230272366 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.232640154 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.232437511 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.229977722 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.230333319 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.232301999 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.231085097 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.231090934 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.235972094 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231472732 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.231579682 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.232195389 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.231513446 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234666892 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.231969594 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.234685452 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231486192 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231233037 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.230680084 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.233161299 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231569393 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.230146276 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231767747 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.229084691 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230052645 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.23171287 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.227934595 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232677003 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.229291976 seconds)
  done (took 38.098525837 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.237935556 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.23722238 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.232065876 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.232750339 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.235439074 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.240271637 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.236323381 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.235414046 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.233835294 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.23341608 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.233303228 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.235939547 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.234992455 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.234560545 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.236522056 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.236010994 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.232098245 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.234094606 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.234499548 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.23430962 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.235514533 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.233464826 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.234253008 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.234334974 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.238507036 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.235368267 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.235046446 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.23546725 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.234037615 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.234440544 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.23683639 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.23495907 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.237176665 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.237086544 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.234306559 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.235523474 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.24113971 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.243029044 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.238420675 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.237701437 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.23692534 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.23788608 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.239163024 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.239430389 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.237595868 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.238180782 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.236692851 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.237949867 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.236091363 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.23740078 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.235061137 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.237353084 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.236046209 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.235830948 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.236850342 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.237367455 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.237261585 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.237566421 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.237169021 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.236896329 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.238732011 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.23811203 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.238769802 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.23903836 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.240170996 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.238542031 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.238623016 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.239109864 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.238810995 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.238610356 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.23848744 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.240477006 seconds)
  done (took 90.195894088 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.236178119 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.2352336 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.234686895 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.235630242 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234881823 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.240178629 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.235249276 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238725709 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237958913 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.238901972 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238794119 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.233511669 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237101817 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.240261142 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237922688 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.235879206 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.237889919 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23786234 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.236575924 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.238104387 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238201514 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.236692652 seconds)
  done (took 28.372227188 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237223687 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.242064793 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.237359923 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.237766094 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.236635107 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.240225255 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.237484557 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.242206299 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240971767 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236371778 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235254414 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23840512 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.238877366 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236730155 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237800627 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.237438882 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23912002 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.238979473 seconds)
  done (took 23.448026696 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.239703304 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.233815342 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.242488219 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.239551974 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.23655035 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.241295841 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237661981 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.24234395 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.238900318 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.240578053 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.239929022 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242763352 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.241987842 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238598044 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241793085 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.23796978 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.240777512 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237566954 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240937022 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.238544576 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.238001153 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241300417 seconds)
  done (took 28.432517133 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240661163 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.240120592 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.241092811 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.237775082 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.239994667 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.241900502 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.241389549 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.241209011 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.707980433 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.241822785 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237170054 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.240606881 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.243318339 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.23828797 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.240051081 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.240236695 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.24214404 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.240641523 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241361265 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.237450079 seconds)
  done (took 26.436270079 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.240665561 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244540095 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.239639828 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239993278 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241517407 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.242461876 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245541793 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.244045448 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241891141 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.241532908 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.241787582 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.240880147 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241973423 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.244639366 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.240980995 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244956554 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.24389779 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.239859743 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.243716707 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24778443 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.246117002 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.243396262 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.244213647 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.240175354 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.243693335 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242353077 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241809745 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.240249743 seconds)
  done (took 35.955520439 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241493336 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.24209597 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.240607187 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.239851606 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.241152171 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.243669878 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.240740561 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.239239775 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.244309844 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.241143689 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.247048252 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.243768425 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.24381234 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.241825551 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.242654334 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.241173025 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242048445 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.237828727 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23860766 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238054328 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.247598748 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237785604 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.23947486 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.232927736 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236015802 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.238386545 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235359724 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234623723 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238023995 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.233623456 seconds)
  done (took 38.366609708 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.280198574 seconds)
    (2/2) benchmarking "in"...
    done (took 1.271823811 seconds)
  done (took 3.711018248 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.232877882 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233120439 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.236853386 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.231517327 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.231092113 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.23486959 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.234482724 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232816843 seconds)
  done (took 11.024278945 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.234627091 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.235644815 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.234804472 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.23478479 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.235773579 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.234948771 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241621621 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.255540435 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.23540874 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.235860532 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.243834271 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.242233314 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.2385182 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.235284689 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.234358874 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236587139 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.235148945 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.237075006 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.237679606 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.235639323 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236360549 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237909379 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238543391 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.234229492 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.236939992 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.246165762 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.240808883 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.236288979 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.235921184 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.237857112 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.235587693 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.232416115 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.237157378 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.237716934 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.23634332 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.23597868 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245685174 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256106404 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.241834978 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235728047 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.236823226 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.233546937 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.237139641 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.237661274 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236845447 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.235171189 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.235828747 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.234096812 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.235028305 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.239211191 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.241393625 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236428213 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.233850191 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239121626 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.237177095 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243364026 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.256295869 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.239391967 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.246510965 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.247882531 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.249118961 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.245081321 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.238171226 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.23860559 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247921988 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.261368589 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.244252365 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.253948489 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.234908359 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.237710989 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.243422549 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250091166 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.262002336 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.239066188 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.237984254 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.238503575 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.238627788 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238298574 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24352136 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.258987584 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.237876306 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238791063 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.24795403 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260806673 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.237300718 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.239595343 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.239969691 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.239590466 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.239546184 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249404296 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.259006211 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.238654145 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.236900853 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.238419266 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.239360391 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.238955821 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.237469092 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239444612 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.236723014 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.239178168 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239096522 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.241779002 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.248255781 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.238893547 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.239941815 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.245769793 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.238862209 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238138521 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.244864969 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.239359831 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.240698527 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.240913965 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.245957808 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.236122259 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.242267067 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.248342334 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.240454114 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.240362599 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.241508919 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.241004611 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250066264 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.267226193 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.24081394 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.240590047 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.244713132 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.253780933 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242020387 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.242839322 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.241317552 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.23742855 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.238602353 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.242107656 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.240872224 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.241469496 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242391206 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241752821 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.238948353 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.240617918 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.242069349 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.241104913 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.242260575 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.241328366 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.241530585 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.244020729 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.242080904 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.243272974 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.247858367 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.240932578 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.24317254 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.24273017 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.240019644 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243295635 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.242389524 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.243685728 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.242694654 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243774193 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.242800262 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.243346205 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242292788 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.243835715 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.243013377 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.243534219 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246663452 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.243432429 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.247062385 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.242147228 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.240202001 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.243507791 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.243077308 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.242208281 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.243307357 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.242299792 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.24672947 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.252415985 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.244011386 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.244292751 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.246079574 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243663415 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244437963 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245320379 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.247455045 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.252255299 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.244874443 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.249855537 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.24475885 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245527409 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.245140597 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.243726166 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.244222099 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.245020261 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.247913202 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.252991882 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.257871712 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270434967 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.246300102 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.249085434 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.245891787 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.25021157 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.248432889 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.246086531 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.245931784 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246485195 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24490461 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245851487 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.246557952 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.246011991 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.244752853 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.246339537 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.247130266 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.247849054 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246696783 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.246295669 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246907429 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.243793999 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246088056 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246550721 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.245628571 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.243151987 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.244895658 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.24637182 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.247117325 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.248628059 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.252729219 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.244980692 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249045947 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247742093 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.247390522 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.246513407 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.247331515 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248528472 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.247520817 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255634919 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.266436632 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.247982824 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254018168 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.26623709 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.246211555 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.249148285 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.247289903 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.244295981 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.250423902 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.256887704 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.247550161 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.249404685 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.24852012 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247967095 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249093957 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.255653625 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.245683773 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.248312243 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.248743264 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.24929235 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.245407079 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.248757772 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.249540546 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.248741009 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250388418 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249038593 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.249158176 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250021268 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.250665696 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.25011513 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.251411751 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251223948 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.258119632 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.254000555 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.248275882 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.251137347 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.250216473 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.254171477 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.249571816 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.250675709 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.248747762 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26127297 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.274983504 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.255775452 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.250475027 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.25089957 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255488612 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.25153136 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.253873972 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250097168 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.251476526 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.251294527 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.250220791 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.248582596 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.250402057 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.251117362 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251581193 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.252649064 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.256274139 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.251512873 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.25069561 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.252314251 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.252460244 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.252102146 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.250729664 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.251696088 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.252762058 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252494719 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.251186524 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.252514237 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.259167567 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270246577 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.252218043 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.251498492 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.25226887 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.250973091 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.253296707 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.252879413 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.255631058 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.260834021 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.254599759 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.26239301 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.254118712 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.262792445 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.252743085 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.256266786 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.262016237 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.251318681 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.251278845 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.252600564 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.25359461 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261711224 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.2735052 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.255312379 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.258621823 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255245632 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.255326352 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.253747617 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.254748246 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254381025 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.254519349 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262902416 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.276418445 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.258175078 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255218942 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.250367611 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.255083559 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.253749189 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.253456189 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257646433 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.254845824 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.254178318 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.25452632 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.253647613 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.254562533 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.25508738 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.253886124 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.252652544 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.254195708 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261742271 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.275886047 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260662221 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.254960744 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.261861766 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256124996 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262528295 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.276353119 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.255334806 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.256683381 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.256244796 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.257534881 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.255229525 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.256309503 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.25740732 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.257797393 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.259616489 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.258221961 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.257265021 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.256454655 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.256588177 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.256100205 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266992283 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280644329 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.25753248 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260971982 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.255115072 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.258456856 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.262419334 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.257814305 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.256463325 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.26067582 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268449464 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265812564 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.256851096 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.257414541 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256927502 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258702043 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.258131445 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.257869133 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.259626953 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.258591074 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.258682146 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.258804219 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.259534188 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.259044172 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.25804426 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.259217574 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.25843806 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.269159588 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.258845359 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.258366847 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259922127 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.259360815 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.25797769 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.25913653 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.259967386 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258523327 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259311276 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.26029502 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266129827 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.265059962 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.260825739 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.259306949 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.259539758 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.259475388 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.260146764 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.262200615 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.260021282 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261019962 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.260431588 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.261266122 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.25936567 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.258350129 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.26024875 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.259062297 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261172581 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262936946 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.267645055 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260923237 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.258370342 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.260631021 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261407182 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.259420834 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.259709934 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.268083415 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.264148899 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.270999337 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.269327136 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.267000877 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.260737738 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263830394 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.268442304 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.260421638 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.261657359 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.263093736 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.262657501 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.26215092 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.264807951 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263212493 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.267986638 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.261996667 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.261900238 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270959499 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.285250382 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263289614 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.26416043 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.267520609 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.261779794 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.261227548 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.263267737 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.263744507 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271009157 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.28237706 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264291349 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.263388753 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.26277537 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.264669255 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268387015 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264016248 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.263868474 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.260867292 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.263517906 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264055027 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.264370452 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.261517248 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.262620858 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.263049168 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.266849931 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.270001714 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.261371779 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.264863579 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.263783852 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.26382399 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265466416 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264530788 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.26196112 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.262214665 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.263484228 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265881966 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.263728214 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.265961993 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.263940307 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.26606231 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.266021737 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265546136 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.267795754 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.274912137 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.273056925 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.262567606 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.264695536 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.266101493 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.267200306 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265680953 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.265945809 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265411502 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.266104043 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.265346154 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266796107 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.26613403 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.268685067 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.282676952 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.288107899 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265615755 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.266330501 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268286048 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.266763411 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.264011487 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.266334677 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.267960326 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.269252428 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.274337316 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.26750064 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273384021 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.28622067 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.268459928 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.270882045 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.270364727 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.274029001 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.269120235 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267657294 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.268129782 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.271223529 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.283812651 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267194865 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.277770515 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.298673048 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.286666934 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.26803754 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.268904224 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266448829 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.268833845 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.269515281 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.268839802 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.26711371 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268897959 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.269650838 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.269901917 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.272543646 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.268862074 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.270153638 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.268225684 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.267685109 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.267958799 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.266362712 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.268751103 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.268562722 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.269570257 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.269292213 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.269856889 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.26988882 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.281526553 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.297023432 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.269606447 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.270776335 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.266709925 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.272792162 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.272310475 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280886923 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.277497821 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.270257404 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.271518237 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.270598213 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270518782 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.269310888 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.269799374 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.27071077 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.270437531 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.268047641 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.283002501 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.27999698 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.275712555 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.270597301 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.27237076 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.271679712 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27055364 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27208588 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271152142 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.271114356 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.273314055 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275501094 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.270740026 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.271939834 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.274171842 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.278750493 seconds)
  done (took 748.900736911 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.269442237 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268534027 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.269241382 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.267337235 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.268702033 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268514254 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269188338 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.269547075 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.269444287 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.269534812 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.269857316 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269940818 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.269839427 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.271055347 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.270104871 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.270337694 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26853385 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.270406933 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.269053905 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270553474 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.270153196 seconds)
  done (took 27.848927243 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.272810727 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.270449068 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.27064475 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.273309175 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.270822959 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.273952619 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.271443148 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273801416 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.274878829 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271317188 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.274103397 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273749097 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.27108966 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.271296895 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271213449 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.273526705 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.273964918 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.270945091 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.274115736 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.27058826 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.273649692 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.271241837 seconds)
  done (took 29.184008676 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.274311095 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.274581547 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.274123705 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.27102049 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.274470248 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.272056506 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.274744544 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.274964813 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.274572596 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.27457605 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.27335278 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.275710229 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.281311636 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.280593152 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.276479812 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.275284732 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.418568009 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.276299968 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.276095702 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.275430944 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.273148809 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.280345196 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.273097842 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.273751145 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.273578282 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.276646187 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.275997455 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.275365848 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.276537703 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.276323631 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.280499953 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.276069169 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.27439594 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.277065544 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.274957239 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.276822432 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.280747844 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.276890237 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.273729639 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.276989644 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.286738457 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.299602702 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.278320132 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.282678784 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.276577345 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.277315687 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.280964829 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.285511293 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.274722055 seconds)
  done (took 63.907795072 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.277368821 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.277752175 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.275960997 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.276367833 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.277308832 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.276772986 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.277430645 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.277895561 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.274419901 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.275024482 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.278807911 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.276479435 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.275383974 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.276796842 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.27861352 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.275042265 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.275845046 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.276223253 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.276838077 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.276412231 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.275446815 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.278780645 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.279350776 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.276621495 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.278133403 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.276002359 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.276227574 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.277332585 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.276041882 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.276958019 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.278953013 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.278874158 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.279535064 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.277283094 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.276411065 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.279318796 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.27981146 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.276854964 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.279643152 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.277507978 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.27937855 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.279459481 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.280919124 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.280798895 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.27774078 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.278695529 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.277983036 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.276634942 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.27832187 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.279809058 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.28059195 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.278021786 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.278844804 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.277722188 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.28009437 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.281042015 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.277386498 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.279306942 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.280607949 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.27958936 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.27863427 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.281572535 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.278401638 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.280141724 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.281230711 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.279716945 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.278278205 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.282173637 seconds)
  done (took 88.108017623 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.281378486 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.281788258 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282320827 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282597959 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.281252468 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.283323021 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.282811394 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.282882244 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.283482944 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.282494844 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282725662 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.281640418 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.282272143 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.28240566 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.283305074 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.282645402 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.283775115 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.283026474 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.283418797 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283292645 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.28313711 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.283675109 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.284126153 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.28337614 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28359177 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.283313112 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.284164677 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.282663173 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283949113 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.284473005 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.283894978 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.28406752 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.284967294 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.285131867 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.284059667 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.283456888 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.283070555 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284175987 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.284599227 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.284796249 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.284043467 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.284854616 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.284568751 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.284627223 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.285382542 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.285400981 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.285417699 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.285017726 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.283760831 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.284941247 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.285155394 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.285526941 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28503022 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.285604333 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.285263613 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.285143179 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.285087983 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284790712 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285257023 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.285551924 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.286162801 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.284473539 seconds)
  done (took 80.803504803 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285139087 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.284770871 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.284009589 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.283067995 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.285259966 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.285135358 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.285657799 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.285535446 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.285842573 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.285871978 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286764056 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283964686 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285679091 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287593226 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.284644869 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286281878 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285113811 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.285090363 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286045158 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.284508278 seconds)
  done (took 26.908354334 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.283670233 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.287451374 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.284161242 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.284489582 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.28667205 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.284552456 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.286900897 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286529395 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283888508 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286693859 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.285985942 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.2882614 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285139131 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.285605677 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.288054494 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.284726019 seconds)
  done (took 21.776834724 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.28560974 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.287860383 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.289035617 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.288741715 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.285782407 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.285144115 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.288167947 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.285530935 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.284791639 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.289335936 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.289011162 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.287412644 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.287698068 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.289665835 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.285790972 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.287345943 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.285569013 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.285300072 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.288760413 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.289893605 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.285625134 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.28505875 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.288206776 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.28919076 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.28590782 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.28705479 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.286453627 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.28666973 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.286794819 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.291679466 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.289831524 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.290247019 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.29151759 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.29038059 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.295224309 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.288647552 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.289422933 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.289915857 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.290052694 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.289517469 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.289677006 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.286472584 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.289762097 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.289573096 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.287340291 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.290709783 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.287933902 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.288733625 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.288067052 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.28873342 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.291123158 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.291663102 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.291257414 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.291813122 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.291220555 seconds)
  done (took 72.073626368 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290969069 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.291874251 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.291546237 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.29346058 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.293852366 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.288429304 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.291038942 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.290745566 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288289927 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.291528064 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291338471 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.292585274 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.289146914 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29186954 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.290843396 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293104784 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.289850097 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28977163 seconds)
  done (took 24.448782967 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.29037114 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.293374413 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.292758555 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.29009479 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.289653636 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.293350768 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289725811 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.292088266 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293207626 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.290117656 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290291039 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.295610441 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293245608 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.293287084 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.290583455 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290888805 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.293668936 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293189016 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.290920833 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.290414722 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292962345 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.293879639 seconds)
  done (took 29.633259383 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.291950126 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.29130301 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.293019871 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.308391768 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.312246432 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.315683535 seconds)
  done (took 9.02471374 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301874023 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294201789 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291519005 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294759004 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292735302 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29249207 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291953837 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293019547 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294401797 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292048193 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293776125 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294343375 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29469818 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292472005 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295023836 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295121701 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292638765 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292667466 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293959893 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29564863 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293531731 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296279453 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293520399 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2928475 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29372593 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293275409 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295393062 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29282457 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293088681 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296861291 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295070771 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294019754 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296230058 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29420156 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295666145 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296631809 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294171418 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296177098 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296223883 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293217375 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295512215 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296240201 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297223668 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294713175 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296496944 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294585764 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294369922 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29491979 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294806643 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296678559 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298000808 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296215313 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29680955 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297514728 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298076575 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298093346 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295618034 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294726329 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297933381 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294941879 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297101172 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297417743 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295279295 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296314175 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29748944 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296011243 seconds)
  done (took 86.711178535 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295386678 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29527704 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296498727 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296889627 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295563358 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295972193 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296209726 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296014141 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296560148 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296170856 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298536015 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296290695 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297612555 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296344844 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296585753 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296641449 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298052684 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298893538 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299859986 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299822472 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297419184 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297062099 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297536091 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297537773 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297799398 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299113923 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299343542 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29924626 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299943381 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299803956 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299365366 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29899545 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299680189 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.299423354 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30074786 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299626811 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29950487 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298688402 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299191714 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30220677 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30029361 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301608288 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299815323 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298701239 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300766016 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300643051 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298709978 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298547711 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29952316 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298264869 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298419005 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299208074 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299503175 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299879897 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299758608 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29969943 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300493848 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300959219 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300091612 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302451866 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299278318 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300648109 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302344872 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299006031 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300742586 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299949452 seconds)
  done (took 86.937037116 seconds)
done (took 1752.131864231 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.462574655 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.419029124 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.300847125 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.307745012 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.300416234 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.296792444 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.313961013 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.300731499 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.300549665 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.300050527 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.301099958 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.488589221 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.302607188 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.302111782 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.300188911 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.393710433 seconds)
  done (took 42.610572399 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.330654508 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.307420902 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.427286609 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.327144739 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.329441164 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.500799093 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.366481787 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.310877751 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.493908935 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.354215944 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.040023404 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.329837597 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.306711393 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.549269062 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.328293953 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.500237806 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.574291504 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.958123698 seconds)
  done (took 30.55459795 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.795673831 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.34721818 seconds)
  done (took 9.363652388 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.32642122 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.306859266 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.307870132 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.305266152 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.298715428 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.302939716 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.305525527 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.297746897 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.242666024 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.445690785 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.312909418 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.316835314 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.327130158 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.308390203 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.305051675 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.345753765 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.452948907 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.305246634 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.303858236 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.313719233 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.307167844 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.394847727 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.350251464 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.308845547 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.4428068 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.261234396 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.313558942 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.314504468 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.436320619 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.306099768 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.308173663 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.308221883 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.309052858 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.230893572 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.785761041 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.306228481 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.332093092 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.316018916 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.30586056 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.448087833 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.308395399 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.315186283 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.307589949 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.762574805 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.479063463 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.433454465 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.638602597 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.313963446 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.311012444 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.370978467 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.309815844 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.310490895 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.35392722 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.10241037 seconds)
  done (took 111.069068328 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.330519108 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.695331577 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.470552568 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.323257924 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.000542263 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.95816353 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.320143189 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.619976455 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.350155893 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.303883317 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.593008076 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.838574376 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.332296271 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.349569215 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.476072262 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.338854601 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30350185 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.05981737 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.327335191 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.308701627 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.824072141 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309746039 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.30395085 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.467715303 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.342373791 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.79683389 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.842580358 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.737915026 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.326471255 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.303451855 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.786419625 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.329810985 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.384693593 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.305762688 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.574017871 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.700478338 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.664142691 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.304754364 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.319275104 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.307696791 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.340667817 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.787476189 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.667972989 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.304297958 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.304993129 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.792465435 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.304973975 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.310584407 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.308425904 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.507080132 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.915653999 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.306577839 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.834480728 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.311406784 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.642988148 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.368715619 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.391856737 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.806981662 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304576941 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.356374669 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.367772889 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.306784319 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.313018292 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.308784914 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.308083783 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.670655679 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.56749433 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.308916139 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.669654065 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.787241675 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.323998908 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.853446104 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.147943711 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.310314885 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.361113757 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.305846224 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.932400301 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.821326558 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.331665979 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.307287108 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.658033158 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.309403611 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.595831766 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.322739182 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.308122953 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836043369 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.320044401 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.348826319 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.30831562 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.312185018 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.973236788 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.308665455 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.584523334 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.379441783 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.307357997 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.308037525 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.347395475 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.307459766 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.307431928 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.308945007 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.856752481 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.332447065 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.442554448 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.327501657 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309282675 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.31392674 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.309105772 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.308900886 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.526402212 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.872892301 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.315277715 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.310795723 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.308589284 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.319995272 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.472590806 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.313721126 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.63248096 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.309556068 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308690129 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.315552827 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.952196931 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.362299641 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309823565 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.31071676 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.249836248 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.515761757 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.330444507 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.328085219 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.317625632 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.320215058 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.707367456 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.333058817 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.357808943 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.312116331 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.033631443 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.364829084 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.332657151 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.579988736 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.320235936 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.326256124 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.318689614 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.311333905 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.601755572 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.592313147 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.430711687 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.312109962 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.327985968 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.002736632 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.353006426 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.450192307 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.333772469 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.350703725 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.50910377 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.495334997 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.313313477 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.916731261 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.313649313 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.524188849 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.31201713 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.616209004 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.817339555 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.329502175 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.317566765 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.033254119 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.055119781 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.998990849 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.314327748 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.606204532 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.293435543 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.79010182 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.313255731 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.311873784 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.784873564 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.314580054 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.318766551 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.313243999 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.312824326 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.479029907 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.48912253 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.529040254 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.31848462 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.781503933 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.320384684 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314117075 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.339869102 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.316720004 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.661118137 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.331010137 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.313916257 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.334591636 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.314401817 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.322647317 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.798652871 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.159048829 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.317770726 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.466673913 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.962903063 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.332201185 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.314733548 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.071854837 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.010111459 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.84270979 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.361366676 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.639968841 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.318101047 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.353842903 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.929602219 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.391668546 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.805736307 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.313720173 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.315369404 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.923033071 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.332422003 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.367032677 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.315526394 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.31560431 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.862459678 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.332915463 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.318251403 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.650887843 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.334506932 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.564490262 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.314801537 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.365601209 seconds)
  done (took 1106.443191108 seconds)
done (took 1301.261300825 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.316327514 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.318628557 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.418379443 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.319935109 seconds)
  done (took 26.611166744 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.328403216 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.324486663 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.325240856 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.322690533 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.330046924 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.324217975 seconds)
  done (took 9.19902637 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.672443428 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.320948947 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.319484505 seconds)
  done (took 19.553370994 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.541750406 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.659038571 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.67159503 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.661615111 seconds)
  done (took 10.773924247 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.329696861 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.325418098 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.325241072 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.330416711 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.328958622 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.329110198 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.330795718 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.330540377 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.329985545 seconds)
  done (took 13.199658074 seconds)
done (took 80.575416673 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.802481212 seconds)
    (2/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.586122475 seconds)
    (3/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.396926005 seconds)
    (4/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.359012764 seconds)
    (5/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.358772246 seconds)
    (6/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.347803714 seconds)
    (7/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.417875149 seconds)
    (8/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.100455279 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.233680031 seconds)
    (10/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.418376453 seconds)
    (11/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.627793961 seconds)
    (12/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.346847531 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.734908681 seconds)
    (14/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.476634015 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.292967706 seconds)
    (16/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.050400063 seconds)
    (17/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.69467083 seconds)
    (18/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.324359053 seconds)
    (19/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.406374508 seconds)
    (20/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.429408093 seconds)
    (21/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.002875159 seconds)
    (22/286) benchmarking ("sort", Int64, true)...
    done (took 6.339310294 seconds)
    (23/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.430713383 seconds)
    (24/286) benchmarking ("sort", Float32, false)...
    done (took 5.334657713 seconds)
    (25/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.541555135 seconds)
    (26/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.420118553 seconds)
    (27/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.421813954 seconds)
    (28/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.879707709 seconds)
    (29/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.346831642 seconds)
    (30/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.404353579 seconds)
    (31/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.456776308 seconds)
    (32/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.423191199 seconds)
    (33/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.475603296 seconds)
    (34/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.423622949 seconds)
    (35/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.389823486 seconds)
    (36/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.340838484 seconds)
    (37/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.420260498 seconds)
    (38/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.362283479 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.932858036 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.077382006 seconds)
    (41/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.428537231 seconds)
    (42/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.421913629 seconds)
    (43/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.831379349 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.432840809 seconds)
    (45/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.347091036 seconds)
    (46/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.053536976 seconds)
    (47/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.350010841 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.56834404 seconds)
    (49/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.953305715 seconds)
    (50/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.421051953 seconds)
    (51/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.33761246 seconds)
    (52/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.38463186 seconds)
    (53/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.378575253 seconds)
    (54/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.326440726 seconds)
    (55/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.426483138 seconds)
    (56/286) benchmarking ("sort", BigInt, true)...
    done (took 6.325962959 seconds)
    (57/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.409533962 seconds)
    (58/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.340604117 seconds)
    (59/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.354978404 seconds)
    (60/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.681273772 seconds)
    (61/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.801695728 seconds)
    (62/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.348851893 seconds)
    (63/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.422973136 seconds)
    (64/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.423654311 seconds)
    (65/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.323311701 seconds)
    (66/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.355108821 seconds)
    (67/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.263938765 seconds)
    (68/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.559182278 seconds)
    (69/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.421981475 seconds)
    (70/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.441506903 seconds)
    (71/286) benchmarking ("sort", Int64, false)...
    done (took 5.626899694 seconds)
    (72/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.423319532 seconds)
    (73/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.372228324 seconds)
    (74/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.426673603 seconds)
    (75/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.395514165 seconds)
    (76/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.434171683 seconds)
    (77/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.965092976 seconds)
    (78/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.425140666 seconds)
    (79/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.459832906 seconds)
    (80/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.977845397 seconds)
    (81/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.351359832 seconds)
    (82/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.350508093 seconds)
    (83/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.085976345 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.985784546 seconds)
    (85/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.546587107 seconds)
    (86/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.823150847 seconds)
    (87/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.423583418 seconds)
    (88/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.334439264 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.744241135 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.70459987 seconds)
    (91/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.44603866 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.728517043 seconds)
    (93/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.441920454 seconds)
    (94/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.566035776 seconds)
    (95/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.443693798 seconds)
    (96/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.682950663 seconds)
    (97/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.96369777 seconds)
    (98/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.424689155 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.736006449 seconds)
    (100/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.147766866 seconds)
    (101/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.425692561 seconds)
    (102/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.352640202 seconds)
    (103/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.841650189 seconds)
    (104/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.389225345 seconds)
    (105/286) benchmarking ("sort", Bool, false)...
    done (took 1.841070161 seconds)
    (106/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.350201801 seconds)
    (107/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.585203853 seconds)
    (108/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.425719879 seconds)
    (109/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.522369996 seconds)
    (110/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.15448961 seconds)
    (111/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.329937822 seconds)
    (112/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.97064904 seconds)
    (113/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.587124535 seconds)
    (114/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.466038754 seconds)
    (115/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.3892973 seconds)
    (116/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.829329213 seconds)
    (117/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.32550075 seconds)
    (118/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.431880425 seconds)
    (119/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.828763149 seconds)
    (120/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.999475828 seconds)
    (121/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.434401391 seconds)
    (122/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.438057843 seconds)
    (123/286) benchmarking ("sort", Float64, false)...
    done (took 5.671036514 seconds)
    (124/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.449648966 seconds)
    (125/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.11760707 seconds)
    (126/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.144132585 seconds)
    (127/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.72523457 seconds)
    (128/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.353797847 seconds)
    (129/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.833100237 seconds)
    (130/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.336744828 seconds)
    (131/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.881134358 seconds)
    (132/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.349856332 seconds)
    (133/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.840996808 seconds)
    (134/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.429157619 seconds)
    (135/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.56604212 seconds)
    (136/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.51166276 seconds)
    (137/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.764871323 seconds)
    (138/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.138540103 seconds)
    (139/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.162494432 seconds)
    (140/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.314533827 seconds)
    (141/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.832286056 seconds)
    (142/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.339597194 seconds)
    (143/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.83121349 seconds)
    (144/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.43339566 seconds)
    (145/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.466763359 seconds)
    (146/286) benchmarking ("sort", Int8, true)...
    done (took 6.331599409 seconds)
    (147/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.229507551 seconds)
    (148/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.122703161 seconds)
    (149/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.429840286 seconds)
    (150/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.340230709 seconds)
    (151/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.342007299 seconds)
    (152/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.35790549 seconds)
    (153/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.427455816 seconds)
    (154/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.74499492 seconds)
    (155/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.381111928 seconds)
    (156/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.412872931 seconds)
    (157/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.378544042 seconds)
    (158/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.259943081 seconds)
    (159/286) benchmarking ("sort", Int8, false)...
    done (took 4.354797962 seconds)
    (160/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.4337462 seconds)
    (161/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.636999073 seconds)
    (162/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.355873371 seconds)
    (163/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.454483922 seconds)
    (164/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.439137503 seconds)
    (165/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.429542565 seconds)
    (166/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.371991799 seconds)
    (167/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.947429066 seconds)
    (168/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.988435694 seconds)
    (169/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.573059311 seconds)
    (170/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.34930055 seconds)
    (171/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.665601256 seconds)
    (172/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.295318705 seconds)
    (173/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.430928961 seconds)
    (174/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.639709146 seconds)
    (175/286) benchmarking ("sort", Bool, true)...
    done (took 5.392947928 seconds)
    (176/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.464979853 seconds)
    (177/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.386998434 seconds)
    (178/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.018538139 seconds)
    (179/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.78658594 seconds)
    (180/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.705119811 seconds)
    (181/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.350663195 seconds)
    (182/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.258372195 seconds)
    (183/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.276680746 seconds)
    (184/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.45041212 seconds)
    (185/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.382465707 seconds)
    (186/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.543179807 seconds)
    (187/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.348448462 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.251190212 seconds)
    (189/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.433218655 seconds)
    (190/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.960397133 seconds)
    (191/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.486194631 seconds)
    (192/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.331242544 seconds)
    (193/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.420495044 seconds)
    (194/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.440700765 seconds)
    (195/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.434090708 seconds)
    (196/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.371963023 seconds)
    (197/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.20985318 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.103816752 seconds)
    (199/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.430851217 seconds)
    (200/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.432518885 seconds)
    (201/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.383946559 seconds)
    (202/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.376842472 seconds)
    (203/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.100301672 seconds)
    (204/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.450477581 seconds)
    (205/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.282118699 seconds)
    (206/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.454539725 seconds)
    (207/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.438945974 seconds)
    (208/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.358309441 seconds)
    (209/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.075900513 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.340594164 seconds)
    (211/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.435239175 seconds)
    (212/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.671353263 seconds)
    (213/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.870664162 seconds)
    (214/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.990977652 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.113726289 seconds)
    (216/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.332889194 seconds)
    (217/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.238537538 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.304723025 seconds)
    (219/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.114238596 seconds)
    (220/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.719965822 seconds)
    (221/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.847375608 seconds)
    (222/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.616948134 seconds)
    (223/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.575916056 seconds)
    (224/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.452015756 seconds)
    (225/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.782647546 seconds)
    (226/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.359722352 seconds)
    (227/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.35940468 seconds)
    (228/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.464101013 seconds)
    (229/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.252031999 seconds)
    (230/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.215877339 seconds)
    (231/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.46378421 seconds)
    (232/286) benchmarking ("sort", Float64, true)...
    done (took 6.333344679 seconds)
    (233/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.735924672 seconds)
    (234/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.41461669 seconds)
    (235/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.333323525 seconds)
    (236/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.49242985 seconds)
    (237/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.270500637 seconds)
    (238/286) benchmarking ("sort", BigInt, false)...
    done (took 6.333657827 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.30591903 seconds)
    (240/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.435578439 seconds)
    (241/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.462107179 seconds)
    (242/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.333601824 seconds)
    (243/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.851588327 seconds)
    (244/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.443940743 seconds)
    (245/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.351521962 seconds)
    (246/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.70245987 seconds)
    (247/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.331845898 seconds)
    (248/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.436438379 seconds)
    (249/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.150151561 seconds)
    (250/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.360897345 seconds)
    (251/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.464209674 seconds)
    (252/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.424932836 seconds)
    (253/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.336593529 seconds)
    (254/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.446478199 seconds)
    (255/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.2819123 seconds)
    (256/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.416860574 seconds)
    (257/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.605678062 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.469071654 seconds)
    (259/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.334746711 seconds)
    (260/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.173605439 seconds)
    (261/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.434803869 seconds)
    (262/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.887529292 seconds)
    (263/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.346681435 seconds)
    (264/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.470836989 seconds)
    (265/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.949460548 seconds)
    (266/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.35843833 seconds)
    (267/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.424789798 seconds)
    (268/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.874370645 seconds)
    (269/286) benchmarking ("sort", Float32, true)...
    done (took 6.341257871 seconds)
    (270/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.376666811 seconds)
    (271/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.345514029 seconds)
    (272/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.418435575 seconds)
    (273/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.107376376 seconds)
    (274/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.352655186 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.760378303 seconds)
    (276/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.353713563 seconds)
    (277/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.152205658 seconds)
    (278/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.850394744 seconds)
    (279/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.734102349 seconds)
    (280/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.533422908 seconds)
    (281/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.928459148 seconds)
    (282/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.133620723 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.377064346 seconds)
    (284/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.217128852 seconds)
    (285/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.4450915 seconds)
    (286/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.436985914 seconds)
  done (took 960.969330571 seconds)
done (took 962.211282514 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.369506545 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36597887 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.347628025 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.368833264 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.459306032 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.524275203 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.358026713 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.350821822 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.395790513 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.397963123 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.347013972 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.522702308 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.3480375 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.347439813 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.347708836 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.36346262 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.511935135 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.350070063 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.364745183 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.35869297 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.365568734 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.347402617 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.39766795 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.523905987 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.352454935 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.352015169 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.354092827 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.368563779 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.461123822 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.352293761 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.351253634 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.360382071 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.515572396 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.350129354 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.344330448 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.369086681 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.360162927 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.358727769 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.354725766 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.382642857 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.891435444 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.349331048 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.352003692 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.351320633 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.352073454 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.357287009 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.35127093 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.356782667 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.36380185 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365323444 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.967111383 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.369233019 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.353683006 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.352160735 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.361415458 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.349768651 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.354788208 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.368496333 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.36989686 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.36975628 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.508509278 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.359401929 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.353681095 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.367762948 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.358933799 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.929709461 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.347647028 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.356287929 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.97186177 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.360208722 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.922616482 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.360333049 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.353318025 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.365434913 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.383613546 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.470828971 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.347837614 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.352738556 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.358535766 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.351223866 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.36314012 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366391446 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.359015636 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.354452731 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.369066669 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.528635203 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.363765409 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.35411161 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.361424784 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.373089838 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.360104727 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.363682908 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.356681974 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.34895374 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.363829673 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.35774381 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.356296667 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.356309127 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.360111404 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.36563649 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.898850756 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.37265565 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.350662889 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.351106805 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.352685142 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.367064284 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.896128819 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.355537159 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.376362294 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.402626403 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.355149084 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.453006699 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.358286803 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372899551 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.363634112 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.358220643 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.351258568 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.459787439 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.889818255 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.370026775 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.357206107 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.35289829 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372377729 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.356892625 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.351863595 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.470336845 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.357574281 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37112633 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.476294572 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.366931095 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.387369034 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.353201736 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.359127961 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.387109761 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373543746 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.387865451 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.359459539 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373726037 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.371671662 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.353572611 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.367233644 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.366843984 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.358634464 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.363155274 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.351202001 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.386396818 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375253875 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.373872173 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.378059367 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.478014885 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.355579582 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.457675754 seconds)
done (took 230.763606774 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.414683956 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.352809846 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.446486326 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.354111877 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.456449635 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.455542014 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.352190191 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.351828695 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.351463839 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.731437803 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.352310569 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.353110517 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.348147955 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.352684542 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.437236834 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.355147694 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.352933 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.69564795 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.355626543 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.424244872 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.348308289 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.352880096 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.355430909 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.734976507 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.351681349 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.354920986 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.424730178 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.355201614 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.699563422 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.353714873 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.350603101 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.701287959 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.444569782 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.372931494 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.365950123 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.363215758 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.457549893 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.376319264 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.437368195 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.437918827 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.447323067 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.394970987 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.355855738 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.350413553 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.358210747 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.358068014 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.353723991 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.382577716 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.354275285 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.35426334 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.697323386 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.366357618 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.364106225 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.3559711 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.355435583 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.377550635 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.354513847 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.358932982 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.446932581 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.358832591 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.419498471 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.735776461 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.734986931 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.357661786 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.351752532 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.355251451 seconds)
  done (took 149.902227115 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.425051111 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.429450764 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.477289857 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.361685053 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.406324874 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.482184845 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.361228607 seconds)
  done (took 11.21310779 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.364242475 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.358917798 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.408224854 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.407189422 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.358934354 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.536725735 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.35924332 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.370667182 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.357333498 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.409378761 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.363815377 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.360316881 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.365291238 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.358865506 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.40662674 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.370593876 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.473803721 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.360606477 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.361760071 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.510998817 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.358069583 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.366319585 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.411698419 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.370717268 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.365268238 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.36583928 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.17809648 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.362240603 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.357525272 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.360184445 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357410734 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.435383607 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.361809903 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.358472259 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.357575754 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.474796682 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.360796187 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.358309175 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.361858527 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.358613126 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.36105579 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.361273808 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.36105183 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.360044083 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.361634468 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.384535189 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.361929564 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.361311622 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.361728697 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.362664597 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.41263566 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.363067027 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.358319915 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.359648816 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.41391781 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36845776 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.36445872 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.359277873 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.361972376 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36037682 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.515717247 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.40917588 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.362329851 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.409065824 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.363947521 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.36324172 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.362593738 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.363142615 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.425621994 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.363133764 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.411723135 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.360296702 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.54195062 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.387126905 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364693326 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.366107494 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.365666021 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.364045172 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.360483725 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.368720357 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.361119248 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.363357356 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.368983061 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36114069 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.361643982 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.529269004 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.468051321 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.361765859 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.376259185 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.371570069 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.361693734 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.415788226 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.363874381 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.360879267 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.415187752 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.477739445 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.417069079 seconds)
  done (took 156.340888886 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.368557524 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.37201408 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.367516438 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.388200714 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.364640209 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.36527201 seconds)
  done (took 9.501344397 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.366326262 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.367490019 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.365545031 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.364638807 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.366688106 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.368685264 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.367317485 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.367147105 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.370187456 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.366034185 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.368749979 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.367510975 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.370979358 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.366783555 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.367110088 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.367001831 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.368261831 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.363719311 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.36604156 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367001811 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.460370031 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.367558728 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.36670219 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.36828915 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.374907651 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.36708749 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.374198753 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.366955819 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.366915498 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.372562401 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.374494165 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.373978701 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.369424688 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.373371869 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.373103965 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.367986999 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3728082 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.368420097 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.365656039 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.372005547 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.369919921 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370257747 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.367352657 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.36984544 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.370588345 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.372625529 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.375290638 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.375418659 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.370045487 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.370412011 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.369821065 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.369302811 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.371658612 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.370685062 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.370159384 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.391117717 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.374399806 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.369921437 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.370241271 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.370239677 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.371932545 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.373225314 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.371866316 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.375138517 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.377047726 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.371610078 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.371856127 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.375957243 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.370427807 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.371721178 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.372200807 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.368166991 seconds)
  done (took 101.028705026 seconds)
done (took 429.252591675 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.526986746 seconds)
  done (took 7.808376163 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.570719364 seconds)
  done (took 7.854577994 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.325624903 seconds)
  done (took 23.61432047 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.383730208 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.427371045 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.382949052 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.367583653 seconds)
  done (took 26.843762861 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.468358209 seconds)
  done (took 7.749884866 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.377930145 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.363518987 seconds)
  done (took 14.02439871 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.53653032 seconds)
  done (took 7.818144112 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.429909086 seconds)
  done (took 7.719699016 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.376082426 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.404273483 seconds)
  done (took 14.077146064 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.366398166 seconds)
  done (took 7.649015761 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.016455394 seconds)
  done (took 12.303097866 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.367251764 seconds)
  done (took 7.65162286 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.438741261 seconds)
  done (took 7.721497855 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.204963035 seconds)
  done (took 10.487227545 seconds)
done (took 164.605154748 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.364943106 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.36745571 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.367676126 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.365968076 seconds)
  done (took 26.747646135 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.405353237 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.406253255 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.407111111 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.417134129 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.408381701 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.40614755 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.397896139 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.398507548 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.417387384 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.4088144 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.408161095 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.409214325 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.406453868 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.39821262 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.409032376 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.408007263 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.41760036 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.40884456 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.398774591 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.409122245 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.374062996 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.417698774 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.409170496 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.373666421 seconds)
  done (took 35.006240353 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.899135395 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.446270219 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.528242329 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.426855877 seconds)
  done (took 7.584821538 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.42463639 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.427296385 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.443936852 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.479811485 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.508743535 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.437560689 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.401101256 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.396454567 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.382083435 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.428266009 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.504269263 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.44403476 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.511836979 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.372734304 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.558701073 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.374630654 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.375498095 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.426110424 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.478641429 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.498476427 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.375332621 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.42665563 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.431273763 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.444155283 seconds)
  done (took 35.836876136 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.374754915 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.393332295 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.374146926 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.373788939 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.38241849 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.373911328 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.375658431 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.376269073 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.375244818 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.382080426 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.373632029 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.388088538 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.373785521 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.374825355 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.381630741 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.376230712 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.381327678 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.374695191 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.374843697 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.381549785 seconds)
  done (took 28.848612235 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.368520895 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.231321323 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.720820478 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.625709188 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.368096795 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.368901518 seconds)
  done (took 27.970522231 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.454080429 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.596364773 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.376224103 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.771262925 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.848176688 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.378951745 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.378456174 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.638869113 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.993089757 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.991884543 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.440500788 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.451672785 seconds)
  done (took 20.611320851 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.37105345 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.373202586 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.388654342 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.388842677 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.436716591 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.381876962 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.385406278 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.371474808 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.439362031 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.441679075 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.381902034 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.440213745 seconds)
  done (took 38.088755183 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459551464 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.420006701 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.402119882 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.483249636 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.10049032 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.585618983 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.418647475 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.181862751 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.379540291 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646685267 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372223326 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46229243 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.629342783 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372477958 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378287168 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.448582023 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598233985 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913445238 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378383403 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.802228242 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401394653 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378440384 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.761989873 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633118498 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.589270856 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.351570675 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.634202597 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.149394115 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.694282556 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391323433 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384966017 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374609235 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649860075 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083351624 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474129951 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.61417809 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399230013 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.921133347 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.384031437 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.79947618 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.383566858 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.377241242 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385749209 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375485015 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.308767454 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392100191 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119890561 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.381022951 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.086697642 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376491778 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667624234 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474159294 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.379266833 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.949155818 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402516598 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.38381944 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.380046808 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474787029 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949512038 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.180844242 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380002838 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.330968518 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392031947 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.812211856 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063344953 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.387132775 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.380308083 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.381523608 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312308843 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.796711466 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397139024 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522700921 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.402065335 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.070995289 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23344884 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.385371922 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.308091856 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989501278 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380885449 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.313312729 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606919909 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.154526949 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314007802 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.325502268 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.312590826 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105268158 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387674571 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.842786348 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400255731 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.165474517 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.625296755 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39975107 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403153359 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.604722994 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.268768967 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378485319 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.379514739 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506981852 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402029686 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.118672584 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313711748 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.384453094 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63552451 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.591301567 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382095966 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.463676154 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907807375 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397799778 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.399434038 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.37942611 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.622221669 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.026839569 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400454393 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.133281433 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40141002 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.158339311 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147432373 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395391415 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.387295967 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.385407255 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673432466 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.190908448 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.264780661 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449175542 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385713558 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380985195 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.848730339 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.235130301 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.264080375 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.614905546 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410124997 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.391744978 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.382933826 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342058637 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.386736606 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397791623 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.159267989 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.605959485 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396257114 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657973363 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316499186 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527177938 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.43069234 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.606104241 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.719875624 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.389896475 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641696201 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387990942 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385405853 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393465586 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401276596 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483329879 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405678292 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.395477652 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.641264159 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.387187934 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.38822191 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.856684162 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.163479709 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384101021 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.388604699 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400032135 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025372857 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375435098 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390816417 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.277196305 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.397701663 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450978597 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.389456815 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.627053803 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.853520688 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390648704 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.392043504 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.381886291 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63470913 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.394026389 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.713217125 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464560458 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.925853006 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.026676023 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401337652 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.31961545 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.095758756 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.076921309 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384837268 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.58134439 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385190472 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.62784697 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402772934 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.401982943 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.032854149 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391030476 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.715561685 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.391086535 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398188494 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.390566834 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387046695 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.848885843 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.046641387 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393857753 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.39859772 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52949736 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.401726645 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.319541365 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.902802672 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392192186 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.387971442 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.160839381 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421516874 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.721070351 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235813855 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646988575 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387123239 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683280811 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.810688087 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.421676129 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.387724371 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402834696 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404820081 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.396131205 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417280345 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.399398333 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.72568447 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.870129426 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955838061 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21223022 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955899482 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.759709522 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.394684584 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.286234369 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.134272938 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32339796 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.044163605 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645021184 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.13587091 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34438168 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934116403 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.686217597 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.250997057 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.687960679 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620390903 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.759985154 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.389746506 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.685696001 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604249889 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423502979 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.394810152 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.319995058 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.677642236 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995015721 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388414834 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48491298 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140959252 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388750429 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.168747927 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.394714799 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.193585933 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85257836 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.937332279 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.788147364 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.408240989 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.393479352 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254113545 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398670566 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.915354409 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061979709 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405544144 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.905151512 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325506409 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.634029434 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.403971063 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.394516713 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.221483431 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.390348234 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.64439751 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.686099765 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328458794 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.398847103 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996789082 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.249592898 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.397478186 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392703386 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155776137 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402497528 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.716496173 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.411163934 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.864677583 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401161318 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.325108482 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326094105 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.085071504 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400437967 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376619508 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9209068 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.416803732 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415035824 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413541661 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243844694 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.64777438 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.407063386 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.047200941 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.619701842 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396375794 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415648162 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.39652446 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396418679 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.381942479 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.289593774 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.628458087 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.452430277 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.640837003 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.446504828 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.301411239 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.439282761 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606096298 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.2764949 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.394211416 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.687880864 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.107092725 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.409443747 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204948705 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424189651 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.394264805 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.459188909 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.395662518 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416580946 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464848914 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639031845 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.4088324 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.406363975 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85753509 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406878806 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397708201 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.409113699 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48908211 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.020198677 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.873685602 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.171101249 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060038788 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281619222 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.053569324 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.697410362 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400630165 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399619808 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329866998 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543849058 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.92070685 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669260199 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522817678 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.407438739 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419631188 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396498008 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40172251 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610246596 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671612193 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.266180133 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39991759 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.060565402 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.276906661 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407202343 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.608417577 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914850783 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971574844 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.782987791 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.396812834 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.165700551 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671360445 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.488242927 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397408045 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.991406355 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.40168417 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.240836413 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.404879735 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411892711 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545668341 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.694299682 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103771528 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.408770576 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.55761426 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.172220237 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.773506502 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.654234836 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.963445663 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.648191014 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050362052 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.187234427 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664664925 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469079666 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645577355 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.51345386 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546159403 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.401417859 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.283445845 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399832495 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248581349 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.109374369 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.40922798 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042337198 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662391256 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.403850697 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.404567877 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426620356 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.409594997 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.624654699 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146872883 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626147171 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.411328409 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.40934975 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.973251985 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051840259 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702914211 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338046358 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.404077905 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675668072 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.638182003 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425640269 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.852801304 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.113275544 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996902156 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.376963769 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423518884 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401325971 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.211739431 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065941679 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.899583231 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94355641 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.059921705 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403000362 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677137609 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.407391501 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.417752744 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681167929 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.408148326 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.416022259 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652215839 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.056613108 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.277140416 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.412706819 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.787266047 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.340518219 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.631553971 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.45422982 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340748122 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405101385 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.882400788 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.428217665 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.531720778 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414578747 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.408402131 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406076415 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.138393357 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.720371426 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.407927146 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.392333336 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.391614903 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.440017624 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504739405 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009772902 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407766494 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.079650968 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.755331148 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.660853077 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.404902673 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.393955946 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.409215493 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404431878 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.128966449 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.38243788 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.406781657 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982821369 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.407045682 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.438711071 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.408976272 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.622494687 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619201957 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.412162536 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.654150731 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411115255 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426923856 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.314560469 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.209276669 seconds)
  done (took 1696.714169688 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.405054155 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.440733414 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.441147933 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.464907084 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.437763593 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.445247319 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.462444422 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.461745538 seconds)
  done (took 52.880047756 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.42781833 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.568725669 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.440952138 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.410570239 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.41859541 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.409969476 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.903137398 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.407604207 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.415874184 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.417542369 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.420882912 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.413755313 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.092494947 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.417342715 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.414346758 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.414767115 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.420910712 seconds)
  done (took 66.747481266 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.105027778 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.824118952 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.948068709 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.485142591 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.438339814 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.412643582 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.903823786 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.438635929 seconds)
  done (took 55.884329153 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.421587258 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.421734526 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.419849101 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.421867251 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.41981348 seconds)
  done (took 8.430592982 seconds)
done (took 2102.636271406 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.416823209 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.419361826 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.413260749 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.414408248 seconds)
  done (took 6.989212982 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.396865704 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.105642731 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.403143298 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.419394873 seconds)
  done (took 18.652264606 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.426530056 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.437798739 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.206785598 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.106589834 seconds)
  done (took 5.642213602 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.162748897 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.174421821 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.157613504 seconds)
  done (took 7.822666949 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.413561929 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.414034825 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.4122081 seconds)
  done (took 20.568621955 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.728131072 seconds)
  done (took 3.05817105 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.556856105 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.613398813 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.79474409 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.757016439 seconds)
  done (took 8.046983105 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.804183015 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.803304085 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.607558118 seconds)
  done (took 6.543867166 seconds)
done (took 91.513731551 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.589992284 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.435645072 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.611618809 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.56140343 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.652387214 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.608092799 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.747440653 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.527380794 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.076196488 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.060492785 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.564275116 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.652505089 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.910392499 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.436306602 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.906456014 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.434904054 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.816785678 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.637116197 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.259380148 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.426280925 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.746667012 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.200126628 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.398255849 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.225877212 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.761312247 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.56887427 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.786123621 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.43674674 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.427920092 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.805769017 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.568751377 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.415303845 seconds)
  done (took 198.585127957 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.415587962 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.414800484 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.41436024 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.412232818 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.419619786 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.41619622 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.415202159 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.431268961 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.417083751 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.424070844 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.4123331 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.415248792 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.415099201 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.424848242 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.413496748 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.424855691 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.416026142 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.4130917 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.413116506 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.413767045 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.433751481 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.433185167 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.423668705 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.417066497 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.414311197 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.416545393 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.424939044 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.414515603 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.416599689 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.414478665 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.43478628 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.414551973 seconds)
  done (took 206.731500279 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.41590916 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.425379565 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.420896517 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.414781894 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.441736009 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.417820566 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.417947918 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.436854123 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.416608917 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.431172097 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.417049555 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.416939213 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.418519747 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.415908113 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.435328855 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.426576058 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.430472381 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.425321565 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.417428093 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.415761963 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.420728883 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.443449476 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.430172699 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.419156199 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.428272084 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.418809845 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.418271892 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.418306936 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.421285954 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.420764221 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.437265685 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.427426669 seconds)
  done (took 206.894712215 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.622432409 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.426681198 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.427440371 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.362054438 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.427094053 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.42704296 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.421693534 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.616204004 seconds)
  done (took 15.062058023 seconds)
done (took 628.602652195 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.980880961 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.597800248 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.644096982 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.447239954 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.26823943 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.467131902 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.446374576 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.643248487 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.384460676 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.64670181 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.793247874 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.44271018 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.942267427 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.444400707 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.732051425 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.557818951 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.350272763 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.452445362 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.801017209 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.116456136 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.741572374 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.007041633 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.651556638 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.392850631 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.02771038 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.010152565 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.220012666 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.365419945 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.448616828 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.806859324 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.342062875 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.538937371 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.495662776 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.505097911 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.560982298 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.561927759 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.475407841 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.517365057 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.64710531 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.7669068 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.084115922 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.197168769 seconds)
  done (took 97.857173111 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.420970437 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.418944069 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.418586661 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.419639166 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.419915249 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.420038617 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.418482121 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.417223494 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.417926017 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.41764458 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.417376671 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.419510134 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.417582173 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.419462874 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.421399217 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.417956526 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.420381595 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.421349336 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.420308066 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.421024249 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.417552861 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.419221748 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.420171428 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.419938978 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.420832668 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.421937704 seconds)
  done (took 38.242658134 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.432343996 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.694333206 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.887657037 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.439370323 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.432065722 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.436879668 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.518648693 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.43701144 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.437667621 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.437345063 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.614408561 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.437500112 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.472110325 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.916531376 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.437883911 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.433426993 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.432487221 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.43395926 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.713567267 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.443531712 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.545400919 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.437793499 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.523005415 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.445778043 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.459867568 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.433249294 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.438446337 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.013458264 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.438865189 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.615702328 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.3295791 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.522471834 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.958656904 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.901471338 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.32737092 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.438384109 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.434686787 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.616382247 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.433409904 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.433564621 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.523974079 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.435829426 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.896719016 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.13664619 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.456819944 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.433269607 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.034077475 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.618356424 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.717243254 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.445171078 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.930748453 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.437907972 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.433727441 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.434615235 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.717643564 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.445295675 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.434103629 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.040157443 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.459391856 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.521932086 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.438100195 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.437524588 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.719617905 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.434687874 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.704811846 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.438651905 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.442862163 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.456330667 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.900017592 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.438137399 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.140605769 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.456102941 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.436659386 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.618148067 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.707031003 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.070838676 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.443904328 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.724425809 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.971681085 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.524921433 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.442295691 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.999182473 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.531284322 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.44185199 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.438253211 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.438394904 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.436943132 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.489383474 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.525734414 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.093097998 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.147774754 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.073470428 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.550584195 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.447789824 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.437697901 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.04311762 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.462960846 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.439322889 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.900528859 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.149212891 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.458363683 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.446162805 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.159851932 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.461788375 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.528705973 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.4456975 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.906315273 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.441516453 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.489612903 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.437378484 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.445671099 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.461445194 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.531012313 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.44393161 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.438064918 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.124356859 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.647684097 seconds)
  done (took 189.995798867 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.432159361 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.43400284 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.431578106 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.448660619 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.430196292 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.437183663 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.430978227 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.434000338 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.43626621 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.429170424 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.433314425 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.433683856 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.435764582 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.446580586 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.443985203 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.437859039 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.043659784 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.433837558 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.433160397 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.452747106 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.252941922 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.436231106 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.44139901 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.431075756 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.43395149 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.434403945 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.450067764 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.436498339 seconds)
  done (took 155.003392698 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.442012926 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.106538829 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.445978985 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.589450773 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.4657469 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.437709616 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.58980287 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.510536222 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.442229026 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.437343659 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.439394351 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.773195105 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.442710167 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.014923293 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.655301778 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.591254136 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.013573627 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.460930998 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.442321549 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.440647377 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.590042424 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.453410668 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.796575821 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.111672695 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.445011208 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.112470122 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.437386699 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.444356022 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.441070607 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.113768917 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.443100347 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.803061188 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.533071818 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.512502974 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.117566932 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.019878483 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.075819974 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.619688218 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.445407846 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.442919375 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.439274468 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.434413051 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.076363122 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.447007535 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.44716889 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.069078368 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.462502965 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.44857555 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.451195104 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.441404838 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.513185043 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.521169984 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.788956959 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.078203502 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.529919846 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.453379121 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.591592524 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.846860265 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.445088959 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.058194089 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.438100613 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.076840606 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.466074012 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.439130371 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.446929482 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.4498112 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.607840343 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.596372044 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.058922174 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.467434014 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.05873075 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.633810548 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.441677528 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.44576881 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.447609463 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.080386146 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.05837838 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.637047358 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.595577997 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.667477254 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.440793311 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.444401708 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.435887721 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.530568273 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.443564258 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.076959145 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.079063604 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.468354446 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.448209695 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.446913073 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.448249994 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.645581997 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.081641758 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.536402844 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.018619974 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.812242171 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.785947775 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.447597413 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.511419763 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.467937515 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.788263795 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.446759333 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.517600667 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.918204328 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.789690038 seconds)
  done (took 173.743164791 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.717490419 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.732367579 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.546209912 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.613503456 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.078466867 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.035709856 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.820861145 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.602751769 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.570912467 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.734409059 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.686497002 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.535347589 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.675353423 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.532930905 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.19067939 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.530182137 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.549469577 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.602759544 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.596482585 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.547526799 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.141899902 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.761650847 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.646691651 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.444535764 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.554059063 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.269995033 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.054092484 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.024830235 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.649683349 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.83648531 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.985865505 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.633244477 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.473490538 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.183111921 seconds)
  done (took 69.91508172 seconds)
done (took 726.096388595 seconds)
SAVING RESULT...
DONE!
