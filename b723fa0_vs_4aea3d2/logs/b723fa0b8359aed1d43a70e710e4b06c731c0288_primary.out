cset: moving following pidspec: 32194
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.259712313 seconds)
loading group "string"... done (took 0.464289105 seconds)
loading group "linalg"... done (took 7.76141478 seconds)
loading group "parallel"... done (took 0.174553304 seconds)
loading group "find"... done (took 1.19678396 seconds)
loading group "tuple"... done (took 2.150300514 seconds)
loading group "dates"... done (took 1.348760636 seconds)
loading group "micro"... done (took 0.249895464 seconds)
loading group "io"... done (took 0.681018868 seconds)
loading group "scalar"... done (took 42.395516713 seconds)
loading group "sparse"... done (took 13.341436191 seconds)
loading group "broadcast"... done (took 1.10691307 seconds)
loading group "union"... done (took 14.710828522 seconds)
loading group "simd"... done (took 5.236543769 seconds)
loading group "random"... done (took 10.469537919 seconds)
loading group "problem"... done (took 2.105902135 seconds)
loading group "array"... done (took 24.661839581 seconds)
loading group "misc"... done (took 1.53612103 seconds)
loading group "sort"... done (took 4.017406689 seconds)
loading group "collection"... done (took 21.182141435 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.463057102 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142189379 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.14559501 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.134565427 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.20354451 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13771014 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160551584 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.108631145 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.005598293 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.183591846 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.142908161 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.503750869 seconds)
done (took 5.079426803 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.217244182 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083107964 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09490684 seconds)
  done (took 0.872068546 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.088869772 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144026619 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.090087931 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074644707 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073680545 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.090733458 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.073861832 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.090653238 seconds)
  done (took 1.331967005 seconds)
done (took 3.21404182 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.736023351 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.265966691 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202110155 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.520120254 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.176787993 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.209434711 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.657135248 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.343173702 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.245507061 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103027789 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.130285465 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.398748347 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.115814342 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680817756 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.087419959 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125677455 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.170941147 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.444456095 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.090196658 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089804696 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115358154 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.151293041 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.112417295 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.084642182 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.179869761 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.078949919 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.187589943 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.105835696 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.07697704 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.286297852 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.198712294 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.680935499 seconds)
  done (took 10.785828325 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113064419 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13639509 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075026212 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.154679019 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134053382 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078408759 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.09698766 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.0756292 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122030869 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178066242 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112586794 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.138397415 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090728683 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.079945898 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114598117 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.229621807 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118729661 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101120978 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.0964694 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.085379087 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.135282668 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.109460922 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.090055463 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.104426947 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.164862055 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202565797 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107222494 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122942393 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.076984644 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.108312417 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139938179 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.154967268 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073681365 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.075613222 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173830215 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120023547 seconds)
  done (took 5.00138734 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188769882 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.099811969 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170279092 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163382355 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144125662 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.153940538 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11035842 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.259668003 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.124061704 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16050635 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142439604 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113220809 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077133647 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097368542 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.153506965 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075498643 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.681809887 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.121803447 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.152863399 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093509171 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099120597 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100083067 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.369381525 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086765788 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.073200209 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09803921 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067986176 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159160513 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096825862 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.181126753 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.097099755 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099145069 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129941615 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193310177 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106825008 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134012837 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095030951 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.072902757 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179555789 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080898292 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.093943967 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102925464 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.092058359 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115412271 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.092938831 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.092342096 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.207730182 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118853859 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.090931566 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.090151497 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.005642963 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.17526525 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088466182 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.0722512 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.334404559 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114702026 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075835248 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.09574202 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.266390622 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.122970545 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.093036011 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076328188 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076097427 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095263214 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380833433 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.075910236 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.733626212 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.077993688 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.084595765 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094849157 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09315571 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084032292 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08316931 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.112578548 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.075477174 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09585728 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.075116697 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.091994782 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.077285363 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113216176 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081959779 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.0925873 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144176942 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.089712377 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095741414 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123207923 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.0786621 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.091861165 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125844832 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079242259 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.075075775 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.134355519 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.075433383 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.114969989 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.094054315 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.138153973 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.077705588 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.178130213 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073971745 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.072246155 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123556142 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.095986102 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113520777 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.107269378 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07703418 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098912935 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073815585 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.09195681 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144303379 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.076101547 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.093090795 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.076875619 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.089705891 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.089737187 seconds)
  done (took 22.191347232 seconds)
done (took 38.672138441 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.349679677 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107518708 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.108021195 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108882702 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105272474 seconds)
  done (took 1.547402423 seconds)
done (took 2.291579489 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.273809996 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.175933396 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07220741 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.16805464 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092576235 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.17402779 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159860996 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.108503603 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.184504178 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.072663851 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.18175448 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073026899 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072710449 seconds)
  done (took 2.577396114 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091559566 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112335618 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078868768 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089841341 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089670436 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090486873 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106693812 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096710095 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107250901 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080872728 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07178648 seconds)
  done (took 1.752497542 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090073459 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.093087136 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096270349 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089376346 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090228997 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089431016 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107048378 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096050257 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.1069527 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081182745 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071811856 seconds)
  done (took 1.751742526 seconds)
done (took 6.812877879 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090513497 seconds)
  done (took 0.824420308 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.035140523 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.283104903 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.099220963 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.162227243 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.304253792 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.207645027 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.599114047 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126772569 seconds)
  done (took 15.767632534 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.109246656 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095814623 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.093247333 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.097606869 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.077578881 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096125938 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07680172 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077998129 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.096578743 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.080269574 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09730675 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.077524096 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.094269662 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.079540954 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.097232045 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078721049 seconds)
  done (took 2.223386583 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.113939952 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.112591593 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.1012069 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.085569338 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.100014923 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.081203258 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102474295 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081799244 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.097046354 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.080681882 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.10322905 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.084362315 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101574437 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079137763 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10020707 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.087038836 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.098279123 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.084152182 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.100837701 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.100406752 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.085664368 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098221143 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08346407 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.102630134 seconds)
  done (took 3.114121369 seconds)
done (took 22.670521308 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149991338 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08201056 seconds)
  done (took 0.975151866 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097590691 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115904559 seconds)
  done (took 0.962161624 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.102992806 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095602088 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13189011 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094136176 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.096843288 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.07828724 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.126216149 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079209602 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095560674 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078485961 seconds)
  done (took 1.728733277 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.0826021 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.082607554 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10394755 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.116034165 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088301628 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097979398 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.083364029 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099433114 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.085505088 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093968395 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.085807616 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112625278 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085272892 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.113880189 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.100393136 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084052819 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104925385 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.081977881 seconds)
  done (took 2.455660452 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078473274 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.080015807 seconds)
  done (took 0.911304936 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080383964 seconds)
    (2/7) benchmarking "second"...
    done (took 0.077475752 seconds)
    (3/7) benchmarking "month"...
    done (took 0.098022818 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097989596 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076861199 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076099493 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092891814 seconds)
  done (took 1.350838558 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.493224458 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.140214318 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.267380849 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.080812072 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118886177 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.328818677 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.075079716 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.100049075 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.080898455 seconds)
  done (took 2.477571066 seconds)
done (took 11.608202129 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.088301071 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.098446117 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.126834586 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.471778925 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.113655653 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.075244618 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.15594588 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.254475479 seconds)
done (took 2.140095494 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.142921643 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.334891621 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.12063557 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.070190497 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092131849 seconds)
  done (took 1.373791001 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075577935 seconds)
    (2/2) benchmarking "read"...
    done (took 0.079153987 seconds)
  done (took 0.909349102 seconds)
done (took 3.181549736 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076476047 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.075707794 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.09133616 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.075625736 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.126660246 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.072275046 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.093372754 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.07599755 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.073930489 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.095005443 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.075712056 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.095559335 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.075753705 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07607925 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091911186 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073724992 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093687332 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.073545755 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073322066 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.093236887 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073419442 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093367269 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.074017338 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.073106767 seconds)
  done (took 2.782648405 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.104456517 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094664628 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.081583951 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100219977 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.080734053 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.100252056 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.081267017 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094861522 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.081840439 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.096312909 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080394016 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.098455389 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.078682545 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.098100017 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078277595 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.098815716 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.081314089 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093833331 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077715067 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.098347557 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.082575886 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094374024 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.080435719 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099217975 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.080097638 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097453048 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.078801404 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.093858469 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081472804 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.098502182 seconds)
  done (took 3.445801309 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.080722268 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.073448206 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091825859 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.081400663 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.091967317 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.078298531 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.073040695 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091819172 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.07463816 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091596399 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.075563496 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.073226632 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.09099408 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.075755177 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.09321589 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.076990433 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.105077885 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.073892696 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.073418559 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092375976 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.076496963 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091718476 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076590641 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.073527285 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092038423 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.073680387 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091728311 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07394297 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.075306141 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091814539 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.076049756 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.09555354 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.073352896 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.079990347 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095287168 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.073007531 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095504739 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.074155662 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.0744858 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090986699 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.185503645 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.091351358 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07330675 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.080690443 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095273091 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.075306157 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092245644 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.074994533 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.073829485 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094997373 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.072824362 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091167191 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.075296978 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093344027 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.078514002 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.073191691 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092124167 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07300718 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092755939 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.073529762 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072989561 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.091524775 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.076645527 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.09214468 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.089611452 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.080186831 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091171931 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07507601 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095906205 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.075542592 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.075445223 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.105913093 seconds)
  done (took 6.839652759 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.079257924 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103684328 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.076439806 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.075860688 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09042214 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074307833 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100098868 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074851104 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094538193 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092832479 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092894982 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075868181 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076167072 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096500576 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075581044 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0945198 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084717209 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090945884 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.07481442 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096634365 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074961257 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098823794 seconds)
  done (took 2.661292924 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210159453 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102008773 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139200627 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091693248 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113174617 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091828552 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.099031299 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083173535 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098953305 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087173394 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101860532 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099275455 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093630809 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102254622 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084683899 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.103944891 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080649114 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103939668 seconds)
  done (took 2.654126984 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.090601166 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096396283 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100015476 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09569476 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.078510431 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09842112 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084447393 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111046759 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.079734808 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095830439 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.087220958 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098268739 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.079914458 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096010355 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079818263 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077893676 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.097573797 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077752769 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105736913 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101367177 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084175498 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106309945 seconds)
  done (took 2.79182736 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092766991 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097371582 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097516289 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09901011 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075861683 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096316401 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.084519639 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094877905 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.085654895 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.078860697 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096257157 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078568299 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.102230311 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076627185 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.101272418 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077333114 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09745861 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.077586813 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097742289 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076707178 seconds)
  done (took 2.555658936 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117400718 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110617518 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091280158 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120564487 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093152576 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110392924 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121644376 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092435712 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109945067 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106357866 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109865325 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092633632 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120335914 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11798682 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092485272 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121815296 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.1023755 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120062242 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109944246 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092431575 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124210562 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092393764 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120754622 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092420961 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110803176 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092309399 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110348307 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117246299 seconds)
  done (took 3.791307849 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077383967 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076986804 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.0928169 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.074373566 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.074656264 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.093140367 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.074062008 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.093151636 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076814327 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075055909 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.094790998 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.076382758 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095702388 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.076305213 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077241454 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.094634757 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076402049 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.093183327 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077063706 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074417063 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.095398801 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076367344 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095172647 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074091629 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074658887 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.095426484 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074302005 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093433253 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077164227 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075422438 seconds)
  done (took 3.252050618 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.085698611 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101605399 seconds)
  done (took 0.966596102 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.075414118 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112359896 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.075115762 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0815684 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101740684 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.077921662 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10588642 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083840147 seconds)
  done (took 1.490709622 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09553565 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114802034 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083491459 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.107864798 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095678338 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.113177757 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138118467 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102255163 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.083849218 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.095010871 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.094397657 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.096161179 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.08289364 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07748413 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.102273862 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083680551 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097240807 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.0888262 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103706165 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079852893 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101993025 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088615785 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098915303 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.086025117 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.079226273 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.10765803 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.087209038 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.109220988 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081662417 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105887992 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.084069322 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090115416 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082077428 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101744576 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078703659 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.113728616 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090506186 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100402769 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.090467026 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084779015 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106539789 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.076873077 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.102760703 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.084671216 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107729814 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.08377338 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103200839 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076366401 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.094240041 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.081099207 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.077400396 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096476963 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.072718289 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104223486 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.082589765 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111694836 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080791728 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.098799729 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.081776973 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.081094498 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.103490828 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.081154527 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09920941 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081717594 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104475769 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.082475249 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10515508 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076491266 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.072345697 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.09782192 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.08715858 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.120403131 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.087083927 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101742202 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083989332 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097471283 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0824412 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103434044 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085344154 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105279247 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082742385 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104087631 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085610125 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097569484 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.081145394 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.085656765 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099086025 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.081557747 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.094681031 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095060752 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099786788 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079084109 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.095265989 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.087429673 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.081713798 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101075772 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.075965215 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104658869 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.071743767 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102936513 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083336842 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097577611 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.087556936 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102327001 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084085403 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.086550183 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.107841982 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078177115 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.100537013 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.074677167 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103168466 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08031165 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.105204888 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.072487607 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081476652 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.098705296 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.083347491 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.104248928 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.0798033 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101723338 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086212148 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.104888722 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080833493 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.074731552 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.099421946 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083156254 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106309972 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.086585415 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100371568 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076803498 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095987285 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.083002467 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100892011 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.083350495 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084201593 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.099684937 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.073491313 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098652431 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.083839903 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.104824434 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.077948447 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.09759138 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.083563645 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.079314044 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100661258 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.084372869 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.099898198 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.077098107 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.102954627 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080722601 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077402049 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106484667 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.081756836 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.09968086 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.083023168 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106091189 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.081564222 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103710154 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082122612 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.102549746 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083861901 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.078069219 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096927171 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080604674 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.107355401 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.080787203 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095731629 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.076007576 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.103306547 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.076752402 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082716115 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.096587016 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.08058248 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102881665 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.079721505 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100886529 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.079564018 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095193112 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110863337 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084339566 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.103944759 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.088792364 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101346771 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.081431333 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101591851 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084653821 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103530379 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.086441517 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.103076266 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0843169 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.081258579 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.093952453 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085460939 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105216182 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.079019677 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098511027 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.077720988 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.102508092 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.086116014 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.083954671 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103051515 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080995271 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098673685 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088680321 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.100657594 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082589724 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.09650888 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.083943664 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.089036582 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.103543445 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085428419 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.10744912 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082702546 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.09687083 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088950864 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100581028 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.085232979 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097385182 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.077124707 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.077305044 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.103956771 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081464243 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.101288815 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.073102865 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105821135 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086945786 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.079563404 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.097164819 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083975831 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107071241 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.080780169 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101693765 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.082715512 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.103904801 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092714284 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.097293471 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.082792518 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.107908944 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.083856165 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.073134251 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.103639587 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.082462715 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098246365 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082278362 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099837441 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082346841 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085348101 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.103239021 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.072782892 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.100538728 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08123133 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.096821166 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077826891 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086094972 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.102618936 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.080867687 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107184834 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085063494 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103288748 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083843458 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.102055632 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.084962446 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104394617 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082326754 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103926887 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.081701449 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.078765174 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.100681998 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.078502553 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099220668 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.082100862 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102799639 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.078948867 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086044676 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102340333 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080311988 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103577504 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.084405014 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099476791 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.07937473 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.097937183 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083524839 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080251973 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.098888777 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.081688527 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096461458 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086531717 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103149144 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087537742 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.079398152 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095477128 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.084461923 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.101654847 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.085149021 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104081828 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084883024 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.100001958 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083354316 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.082000333 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108540459 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.077240242 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.107953561 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0853293 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0997699 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.08343692 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.098675478 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.080989195 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.077978559 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.101537687 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085510106 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.098684743 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08359944 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.10450223 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.082149276 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.099033371 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080644031 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084790496 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.099820941 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086126639 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.093517876 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.079269047 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.099048159 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.08448654 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10774963 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084809658 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082565756 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101359772 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086814381 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102470448 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.076272993 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.10732288 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086802764 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104415133 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097863249 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.078816501 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.101196468 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090558668 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.093156527 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081980328 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100484635 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.077554788 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107678223 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085062777 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.088583672 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.098052784 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.078457793 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09646463 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085163698 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101236917 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.074124349 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.07990612 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102517347 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.081639481 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100818568 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084892469 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.101941421 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085641573 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106091509 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082984744 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.081608673 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103503421 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.076176356 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.09799429 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.078313791 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.082631749 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104975555 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.077491051 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.096018977 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.083391632 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.101255969 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08025142 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083956863 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.101709283 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086410717 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102957622 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.082800467 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108385109 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.074325167 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.102121032 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083969383 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083450445 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.098200951 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.08390043 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103201073 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085999211 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.107036526 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083236608 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100042109 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083840209 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100597473 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083402748 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083861395 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103661578 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.079501281 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105693627 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088285239 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.10035297 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.081945456 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098807902 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.079848493 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.085276202 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104962772 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.083035994 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106560874 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.082714386 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.100458693 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.086323351 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103494997 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083897997 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085076123 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.100532764 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086280581 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.098394764 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.088917021 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.098966687 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086202143 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.100766211 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.077226294 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08433893 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103918455 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083634951 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.10510079 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.086062319 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.099484785 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08049711 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.0812258 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.101412026 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089330271 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108060419 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.083097321 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102843277 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078954173 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097019512 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085995443 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.077924307 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.102161565 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.08341443 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106248418 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.082970715 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.10017697 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082689215 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108610881 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086834984 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.104529124 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.07790097 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.084986489 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104756341 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.083201073 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.101319565 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.080501153 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105916049 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.085464982 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.101346698 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.079420284 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088902549 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.104031887 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086665066 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.101094511 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.080757938 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.100667023 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079050799 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105449405 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.082303009 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087912958 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.102687394 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083942504 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109589948 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080398623 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.099590087 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089430147 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103268641 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.087692353 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098692902 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.081389972 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086727476 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106261701 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.07876934 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.099616364 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.078104722 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.102463732 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.079243366 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078375204 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109436812 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.087526668 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.102341114 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083950909 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102466827 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.07869489 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09951877 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.079990938 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085767253 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.102356676 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.089482223 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.099419656 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.079546738 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09840688 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084815021 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103071024 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.08368296 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.077865267 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09851597 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.078812074 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.102722849 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088249344 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103171851 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.08491806 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083752729 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10221775 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08198931 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109747637 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.077441377 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.104460629 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092939915 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105757163 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081448751 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.106088425 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089239164 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105208873 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079303521 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085938691 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.103181054 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.080951915 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106100597 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086879007 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116189854 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084365318 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.099176586 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083719707 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.082131675 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.100655099 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.088632501 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106051268 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086535423 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.105330311 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.082117048 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107511876 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083661475 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107175991 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.083483399 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.082693471 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103747981 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081687795 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103512992 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.079495658 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10714086 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087371613 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084180028 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.107774424 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.080044505 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111131016 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.088912305 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.1061339 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.076889347 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.100115016 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.080351542 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079781568 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105953926 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.07979587 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102772177 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082638375 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.104015955 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.08108048 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087319014 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102552085 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087622385 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104152272 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.075658835 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.102567495 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.083939784 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080991555 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097053714 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085556767 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106108525 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.086888172 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109786838 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.081768585 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105043963 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.082632502 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081472454 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099336419 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.087154722 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104346254 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.083838774 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.100263546 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085971493 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085938927 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104936085 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086178338 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107518469 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.083093493 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.109836996 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088970059 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.098177568 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.078978904 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107298724 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082272531 seconds)
  done (took 55.450379507 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127009713 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10614719 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076331785 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096830015 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122212935 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080812447 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076932524 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101210417 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080723913 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110924376 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076709656 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096526618 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.097419764 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124266404 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121368913 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111225498 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076279559 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101095645 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076832127 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080532862 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117800531 seconds)
  done (took 2.887740764 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103820269 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115727265 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092588532 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118591066 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107655785 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09452941 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112682969 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113266658 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098872798 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109129426 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117990263 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094290087 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.108178193 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.088278249 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108849824 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110415976 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.098853152 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107139593 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.094212244 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.113731489 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111143786 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094036443 seconds)
  done (took 3.141095945 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.0891623 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.084023003 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.105147343 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.075587308 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103529691 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.075814898 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.109823722 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.078047839 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.089213647 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.100312083 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.079288605 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.100046628 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08456935 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.076555304 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.100359449 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.078126404 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154095794 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110018156 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084598333 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106886913 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.080165731 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.082808837 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.100820413 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079713658 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.099739395 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.094291498 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10688368 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085463032 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.084053204 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.100751005 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.084604804 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.098886223 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.08255748 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102152238 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.080086875 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.080005898 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.105458474 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.08471013 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.099360661 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.082050167 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.081053946 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100835806 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085793992 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.102343974 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081341591 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.09831583 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.082635067 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085118558 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096898189 seconds)
  done (took 5.344606973 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.115169001 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.153849791 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103983441 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145311664 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.098522207 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115070688 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.08460303 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.123652837 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100589642 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083105313 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123118544 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119931679 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085817468 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.110300677 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.088294962 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105261594 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08698787 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100491437 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090079861 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101392537 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.089819621 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.109980242 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119302706 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.097361863 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110050141 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084005086 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101058232 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.090442392 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.117491129 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111204957 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091051158 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11231151 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120727086 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.0842167 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101482212 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087684624 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122711301 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087010139 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108718623 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.080109217 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.108350024 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091259212 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10972922 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.122570714 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086147857 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107468755 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085360833 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.078490954 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118774817 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.108691794 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095296765 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119680786 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.11038545 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085904467 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111630366 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.098928445 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.1052877 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083378338 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.109216972 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.095699218 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100216137 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089339267 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117634019 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107982816 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.09426533 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.119658037 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107297555 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089664394 seconds)
  done (took 7.997616405 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114005126 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111514338 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100743819 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122884588 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111875539 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.090644529 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111314783 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089863572 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111231777 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09694635 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110651511 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.159870068 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088638767 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116541633 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.090754449 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111067488 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.090010939 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110721545 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090063354 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111310001 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.089784392 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122501102 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111224589 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101182018 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124546159 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108902422 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090781069 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111415633 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10127683 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111076226 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124409271 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090357232 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111174598 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102043343 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123971449 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.111462701 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085076137 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111587676 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090961608 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111716334 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088092074 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122357695 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090351954 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.109039691 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11117566 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091191811 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121664031 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124453994 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095093923 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118607464 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.091025814 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122025853 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090396377 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112464851 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122135427 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.130011112 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102301557 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122200669 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090295557 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.122887788 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121623061 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129401903 seconds)
  done (took 7.546208722 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115034435 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116621572 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.124549806 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.077625378 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079660791 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112628787 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079005301 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101115685 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.117402467 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095651248 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119989808 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090477778 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115175697 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120418126 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090616162 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115394626 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110471545 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090714526 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117373732 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.090909193 seconds)
  done (took 2.920638889 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09151585 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123745777 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083247581 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111764812 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.086151696 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110855575 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.085254334 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106588987 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083540339 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106759383 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095650755 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116589171 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083888024 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111152139 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094650812 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110972312 seconds)
  done (took 2.447818396 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.104987642 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.125136961 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.106643544 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.110430837 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.080193645 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108532867 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.085563304 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100122956 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.078779324 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120707796 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08963144 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110333819 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.085847401 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102102808 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.083685731 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088609371 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099915739 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086453478 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106321927 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.107256276 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.11010774 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087809613 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107575102 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.084722647 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107334222 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088923021 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111293401 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.080605094 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.102392716 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.085996914 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106895331 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.091711046 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10088859 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087846612 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102147921 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081288718 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106936362 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086872946 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.088629518 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.107572279 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.081458795 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107145682 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086044196 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105221155 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079235407 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107126735 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.079137346 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.110726337 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.084984134 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.108069148 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.085762379 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090287504 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.11171948 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.094585471 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.115317635 seconds)
  done (took 6.202891724 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098050041 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108775599 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078453449 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080170718 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.107992009 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.085434338 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108419136 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.085672251 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107131038 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081155807 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106195237 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088503222 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08495834 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109184676 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086159697 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108859239 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078555746 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105382531 seconds)
  done (took 2.560783853 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089081276 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.08294701 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.111869776 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084347198 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104581418 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086457917 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100344141 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.082200166 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081718807 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.105016827 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083128178 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.106425267 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082229484 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.106677641 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083454176 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104301945 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.085725258 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081840226 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104597702 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079409717 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106895335 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082172553 seconds)
  done (took 2.884780907 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.120572663 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124861073 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091356339 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.212921642 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.124500061 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.110250903 seconds)
  done (took 1.637909519 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109008024 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142166991 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084611896 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106974803 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096522582 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110213542 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089115479 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109391243 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09989305 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123341363 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109591792 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100563059 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121166784 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120290782 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094945137 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11685413 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087738752 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110914455 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083766343 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130968169 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108907433 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100597386 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109610023 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086881771 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109617134 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119585565 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100616731 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123243929 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109984957 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10048809 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116711664 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088859215 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12098268 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122832169 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087004944 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122181173 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088580543 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13037288 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116750879 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120905896 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086502679 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117096493 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101199367 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116400145 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121715746 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089178706 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116567035 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088441311 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109429224 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137365419 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097588367 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120293257 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117549708 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101034257 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121526627 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136753348 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12329316 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099576677 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11726404 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123362119 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099359637 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117447279 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119877251 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102394875 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11709171 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120778835 seconds)
  done (took 8.109347311 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123956348 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105327798 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088389842 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124476473 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121517534 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0892785 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109656493 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088175035 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109504229 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08605998 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155041303 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110164573 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099042411 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121822143 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109940081 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089402898 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109750508 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099471387 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107217103 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138147484 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088913303 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121244508 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121248283 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099875032 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123507032 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117674455 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088753572 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110743328 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08822179 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109839385 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115948713 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088941857 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12115177 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085322287 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121297269 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08900023 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110464069 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116587645 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088847006 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11749766 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099869375 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130539881 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110596749 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089717489 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124179819 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110255021 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088898256 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106516651 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089309522 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102301247 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097679404 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119423448 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121124731 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097110701 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106803911 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108310551 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088355757 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110724507 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08962466 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117381171 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099419922 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111081289 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137333724 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090187084 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110849958 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121638237 seconds)
  done (took 7.947427072 seconds)
done (took 151.06881976 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.100240325 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.139422863 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098520568 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167588329 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080288355 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.113180628 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.134459736 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.094467356 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.101826393 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.083883662 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106264084 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086428791 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.149901785 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.100957784 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.080050165 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.103631283 seconds)
  done (took 2.596509482 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.181082376 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.295175896 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102457432 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104632983 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089469868 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.084439739 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105263395 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.092673426 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.104171254 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.080172125 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079911937 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.104520287 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.079520224 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.101824648 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.084760489 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.105678488 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.084108976 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.084752604 seconds)
  done (took 2.826297121 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113375519 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.153573102 seconds)
  done (took 1.134553626 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.11959798 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17839777 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.30130343 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.150716252 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120549523 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.098570754 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157281884 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.126857007 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.203085619 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125763148 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.10605591 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.113752639 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.117893459 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115353356 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114731822 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.091752069 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.140010026 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.090694009 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11320007 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09203513 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.136483827 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.079667118 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.110875245 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.087814293 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183202697 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.122840789 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.079376666 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100906822 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.08836717 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.1090407 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.087171991 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113872567 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.120443851 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.144732268 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.09355193 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.14636546 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.108332313 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.086333015 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.109389405 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.086359939 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.11121132 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.090512917 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.116273887 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.087091726 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.100700126 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.086984424 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104514725 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.080347725 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.108598594 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.08867139 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.109115389 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.087222655 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.14494423 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109234555 seconds)
  done (took 7.163135096 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.808453222 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141062861 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086013063 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.882321378 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134495321 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120079201 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.783114492 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13166959 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230217759 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.791506209 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12654547 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121965178 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.205446563 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.238706172 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.983695109 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313895073 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.912288876 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094219363 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.135900499 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.144185243 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.088915368 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132579451 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.123892459 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.421553434 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.08576109 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107059314 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.089707116 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.1147078 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15403663 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.089601748 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.109842908 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178562146 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.248706951 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.196687794 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091835835 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.087250289 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113085734 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.166216007 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269306435 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195181723 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.175481852 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085306799 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112366765 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.098617159 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131634203 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106608779 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161489969 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.169977083 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169448235 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091032819 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121045504 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11543883 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.095957815 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.157947136 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.108558002 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.29729043 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321337247 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111152842 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097630945 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126412675 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.239536595 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.11132936 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.203466371 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136699239 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213455343 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08934646 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780855047 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.166271542 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088963308 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117477388 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.094003552 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115706079 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.096215537 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163712377 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.40531025 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123022829 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.091303889 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110378336 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.205644758 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.088107736 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107547354 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160986465 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.08973354 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116362962 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099362877 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118722353 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.162935187 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.228769855 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122726131 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095101356 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11541583 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121515537 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.091469211 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.21006198 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217259749 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.158528572 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.209893114 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11502495 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.158894861 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.163155108 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096645385 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.190641143 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.095993238 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125546543 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098118352 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215525444 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14042585 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087466823 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115148714 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.09376895 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14280704 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.113948348 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096028227 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.16617476 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479683162 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.16444116 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.086261096 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.091236628 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11352 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.155056705 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110744946 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.238071258 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113855968 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.163255612 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094158728 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109259623 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.095339782 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.182323514 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10151137 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118108672 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099008253 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118390114 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235373458 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216812353 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101388599 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235874724 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.152402352 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.114508036 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.165355848 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116168228 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166987686 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096819118 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120817683 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.089260722 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774344057 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.094822675 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.113946663 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109923542 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.157448821 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.1069061 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085150332 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.105398059 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.081277039 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.800915116 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08795017 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081233906 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.107459634 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090557865 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.113715319 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.08902446 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111180034 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161135984 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230406704 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098728084 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119574161 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.089503326 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.16001472 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.113925558 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.090058737 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.113304843 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.091124824 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119986405 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092522197 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.113403041 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168633652 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.157674282 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220268307 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.571227226 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089553007 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.113724229 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229844684 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090571378 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294688554 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091196522 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.220175514 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165180813 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.085824302 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320629488 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164734474 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.18403101 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.114509696 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.163728358 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.082388922 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111969221 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.157316051 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089829635 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117105487 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.159485562 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.102255153 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124193321 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.013748049 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085055687 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.219500357 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.103383604 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.166706219 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092213558 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120698829 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.270962558 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.106897339 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1040489 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18359629 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092464474 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.111410052 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.851197084 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085439493 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115512798 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090782541 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.214961867 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.15952878 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119582235 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093261983 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116475218 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.155395494 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.20125491 seconds)
  done (took 42.877981273 seconds)
done (took 57.459936168 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.26719387 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219370777 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.274810399 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.165466568 seconds)
  done (took 1.918117469 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.17981188 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.127370889 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.139842505 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.081793607 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.14760283 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.101625602 seconds)
  done (took 1.658507824 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.349257525 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.297730995 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.212778249 seconds)
  done (took 1.745733697 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.250595302 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.245022507 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.345338912 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.389972268 seconds)
  done (took 2.222371943 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207825911 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.101189236 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.118519562 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110099455 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.164051788 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.2018314 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.138523109 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.151107582 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.109074917 seconds)
  done (took 2.238931677 seconds)
done (took 10.676910076 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.254049561 seconds)
    (2/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.224575426 seconds)
    (3/286) benchmarking ("sort", Int8, false)...
    done (took 0.245922348 seconds)
    (4/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.204421831 seconds)
    (5/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.12219204 seconds)
    (6/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.088247898 seconds)
    (7/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.272913421 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.194473763 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.090201816 seconds)
    (10/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.11474491 seconds)
    (11/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.17677529 seconds)
    (12/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.186387655 seconds)
    (13/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.177113621 seconds)
    (14/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.222984457 seconds)
    (15/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.235647671 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.11799084 seconds)
    (17/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068895745 seconds)
    (18/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.173544992 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.121536716 seconds)
    (20/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.229251576 seconds)
    (21/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.111168614 seconds)
    (22/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.211852794 seconds)
    (23/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.093891106 seconds)
    (24/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.14542662 seconds)
    (25/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.178202012 seconds)
    (26/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.165263698 seconds)
    (27/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.218445049 seconds)
    (28/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.122263914 seconds)
    (29/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.212265647 seconds)
    (30/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.105738371 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.142811519 seconds)
    (32/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.162203239 seconds)
    (33/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091853711 seconds)
    (34/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108713251 seconds)
    (35/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110077568 seconds)
    (36/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116144391 seconds)
    (37/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.091868132 seconds)
    (38/286) benchmarking ("sort", Int64, true)...
    done (took 0.226890324 seconds)
    (39/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.071618394 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.147353256 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.089531173 seconds)
    (42/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119832566 seconds)
    (43/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.092672438 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.145125762 seconds)
    (45/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.181727371 seconds)
    (46/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.172917605 seconds)
    (47/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.089363569 seconds)
    (48/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.208466448 seconds)
    (49/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085708897 seconds)
    (50/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.220334098 seconds)
    (51/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.104256562 seconds)
    (52/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.097848062 seconds)
    (53/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109468129 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.088416808 seconds)
    (55/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.170040691 seconds)
    (56/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.088119479 seconds)
    (57/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.133870328 seconds)
    (58/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.083756199 seconds)
    (59/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.113208232 seconds)
    (60/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.110428214 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.078834553 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.104090842 seconds)
    (63/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095855833 seconds)
    (64/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.173681015 seconds)
    (65/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.133560266 seconds)
    (66/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.112890848 seconds)
    (67/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.09230297 seconds)
    (68/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.097376832 seconds)
    (69/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.182399502 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.08061747 seconds)
    (71/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.112481537 seconds)
    (72/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068870187 seconds)
    (73/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.148883732 seconds)
    (74/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.143444523 seconds)
    (75/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.127974954 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.080020045 seconds)
    (77/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.112757384 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 0.08075785 seconds)
    (79/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080715437 seconds)
    (80/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.222117112 seconds)
    (81/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.187458331 seconds)
    (82/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.082504107 seconds)
    (83/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.107606654 seconds)
    (84/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.104762289 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.130833765 seconds)
    (86/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.130267613 seconds)
    (87/286) benchmarking ("sort", Int8, true)...
    done (took 0.222096841 seconds)
    (88/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.092912327 seconds)
    (89/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.09110189 seconds)
    (90/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.175420527 seconds)
    (91/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.161812014 seconds)
    (92/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.106852788 seconds)
    (93/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.105362196 seconds)
    (94/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.081944225 seconds)
    (95/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.131860661 seconds)
    (96/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.070467349 seconds)
    (97/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.191371311 seconds)
    (98/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.197334549 seconds)
    (99/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.094684896 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.088018265 seconds)
    (101/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.115904966 seconds)
    (102/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.081681751 seconds)
    (103/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.20602482 seconds)
    (104/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.183219384 seconds)
    (105/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.194474932 seconds)
    (106/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.126410125 seconds)
    (107/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.116669923 seconds)
    (108/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.083515705 seconds)
    (109/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.10908764 seconds)
    (110/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.070078047 seconds)
    (111/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.180006879 seconds)
    (112/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.078531382 seconds)
    (113/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.090131777 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 0.18061999 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.115375137 seconds)
    (116/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.083814183 seconds)
    (117/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.107148472 seconds)
    (118/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.15931735 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.111747923 seconds)
    (120/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.078187634 seconds)
    (121/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.12164202 seconds)
    (122/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.197815718 seconds)
    (123/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.088339054 seconds)
    (124/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.088155299 seconds)
    (125/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.106296498 seconds)
    (126/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.081189693 seconds)
    (127/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.111662994 seconds)
    (128/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.081793841 seconds)
    (129/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.082596997 seconds)
    (130/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.106986168 seconds)
    (131/286) benchmarking ("sort", BigInt, false)...
    done (took 0.228976743 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.085702904 seconds)
    (133/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111831475 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085948682 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.092221442 seconds)
    (136/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.098700434 seconds)
    (137/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.074027037 seconds)
    (138/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.095637558 seconds)
    (139/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.11113742 seconds)
    (140/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11073337 seconds)
    (141/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068841688 seconds)
    (142/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.06709674 seconds)
    (143/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.104902312 seconds)
    (144/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.091916539 seconds)
    (145/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.129198396 seconds)
    (146/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.162317364 seconds)
    (147/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.129771555 seconds)
    (148/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.081324489 seconds)
    (149/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.151240301 seconds)
    (150/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086291168 seconds)
    (151/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.108637382 seconds)
    (152/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.158813069 seconds)
    (153/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.091057099 seconds)
    (154/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.087835746 seconds)
    (155/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.147888613 seconds)
    (156/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.182854419 seconds)
    (157/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.07078049 seconds)
    (158/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.073076081 seconds)
    (159/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.16842724 seconds)
    (160/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.072391253 seconds)
    (161/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.093359151 seconds)
    (162/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.190697334 seconds)
    (163/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.087362858 seconds)
    (164/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.163744031 seconds)
    (165/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.123519276 seconds)
    (166/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.114085112 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.081082159 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.080539651 seconds)
    (169/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.120248981 seconds)
    (170/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.067733235 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.114587109 seconds)
    (172/286) benchmarking ("sort", Float64, false)...
    done (took 0.149542647 seconds)
    (173/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.091731054 seconds)
    (174/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.068370902 seconds)
    (175/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.112081137 seconds)
    (176/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.089788059 seconds)
    (177/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.071078803 seconds)
    (178/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.091825405 seconds)
    (179/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.082870263 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.079453746 seconds)
    (181/286) benchmarking ("sort", Float32, false)...
    done (took 0.17503731 seconds)
    (182/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.104627872 seconds)
    (183/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.079670234 seconds)
    (184/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069379666 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.103884743 seconds)
    (186/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.098051547 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 0.223876225 seconds)
    (188/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.078104884 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.103478987 seconds)
    (190/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.081254604 seconds)
    (191/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.111372174 seconds)
    (192/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.08151552 seconds)
    (193/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.087431481 seconds)
    (194/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.18717123 seconds)
    (195/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.10086464 seconds)
    (196/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.153309656 seconds)
    (197/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.091555943 seconds)
    (198/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.089157928 seconds)
    (199/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.1300389 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.090903007 seconds)
    (201/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.11209283 seconds)
    (202/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.070170916 seconds)
    (203/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.084353252 seconds)
    (204/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110323952 seconds)
    (205/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088796876 seconds)
    (206/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.165492093 seconds)
    (207/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.152397998 seconds)
    (208/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.093063482 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.078495871 seconds)
    (210/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.128021104 seconds)
    (211/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.071327727 seconds)
    (212/286) benchmarking ("sort", Float32, true)...
    done (took 0.233543373 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.103110933 seconds)
    (214/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.088171469 seconds)
    (215/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.103602925 seconds)
    (216/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.081310067 seconds)
    (217/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.190540647 seconds)
    (218/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.069413876 seconds)
    (219/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.177115294 seconds)
    (220/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.069739741 seconds)
    (221/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.106830769 seconds)
    (222/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.087978723 seconds)
    (223/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.08296962 seconds)
    (224/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.092062772 seconds)
    (225/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.082426524 seconds)
    (226/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.079426212 seconds)
    (227/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.092854221 seconds)
    (228/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.068988462 seconds)
    (229/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.133125504 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.082264903 seconds)
    (231/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.069586637 seconds)
    (232/286) benchmarking ("sort", BigInt, true)...
    done (took 0.237972128 seconds)
    (233/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.095719031 seconds)
    (234/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.083181265 seconds)
    (235/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.093510295 seconds)
    (236/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.068995609 seconds)
    (237/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.087985347 seconds)
    (238/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.151312519 seconds)
    (239/286) benchmarking ("sort", Float64, true)...
    done (took 0.234403116 seconds)
    (240/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.069629905 seconds)
    (241/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.114952072 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.081328592 seconds)
    (243/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.082203542 seconds)
    (244/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.093456889 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.087350722 seconds)
    (246/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.10981004 seconds)
    (247/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.069523084 seconds)
    (248/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.083728919 seconds)
    (249/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.105753918 seconds)
    (250/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.069251197 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.112342442 seconds)
    (252/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.077685923 seconds)
    (253/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.23757684 seconds)
    (254/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.076248129 seconds)
    (255/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.112977421 seconds)
    (256/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.089236996 seconds)
    (257/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.095928308 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.107300142 seconds)
    (259/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.080720538 seconds)
    (260/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.097664685 seconds)
    (261/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.071034087 seconds)
    (262/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.081634482 seconds)
    (263/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.096564152 seconds)
    (264/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.071150618 seconds)
    (265/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.072929862 seconds)
    (266/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.095716872 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.090880545 seconds)
    (268/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.168578038 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085587388 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.107566649 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.090438136 seconds)
    (272/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.077315297 seconds)
    (273/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.134237795 seconds)
    (274/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.081746482 seconds)
    (275/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.106675004 seconds)
    (276/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.071792298 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.104128603 seconds)
    (278/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.070112063 seconds)
    (279/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.080508789 seconds)
    (280/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.174251567 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.103123631 seconds)
    (282/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.079108763 seconds)
    (283/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.083364734 seconds)
    (284/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.092397001 seconds)
    (285/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.159242639 seconds)
    (286/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.093329855 seconds)
  done (took 35.119871305 seconds)
done (took 36.02477973 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099070112 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147740736 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.093999719 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.133093699 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.094499093 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.11835346 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.089985 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.093010433 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.117468362 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.095371351 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.116205669 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071491064 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.115428612 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.092757519 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.114158693 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112930926 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119194226 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.087869291 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.107857826 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.080053539 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.084498373 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.104243205 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.084364804 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.097008802 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.097920741 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094986012 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117286063 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.098377329 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.111805846 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.087187711 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.08482737 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.115708647 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.081405296 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.11810197 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.087607319 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.108225927 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.092936442 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.089861678 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.106833009 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08106937 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116480221 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.081398997 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.111572958 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.08867381 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.083019723 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.103672076 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.086178582 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.117842375 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113722453 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113207785 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.092665645 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.090334501 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.115374058 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.08779573 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.103817536 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.085617599 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.10358256 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113405008 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.108388875 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086744462 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.089154172 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.113200713 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.080443847 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.108472451 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.085533437 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.114418864 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.092816258 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07953164 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.11446515 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.086711822 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.104217825 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.085876854 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.079883815 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.105304477 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.090640552 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.114921338 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.080188534 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.082415849 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.111861198 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.086975064 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.103983338 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084170702 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.106391463 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.083372526 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08465818 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.095040519 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.080229867 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.08675569 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.103509935 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.08510572 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.111101429 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.088434068 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.08238052 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.116208873 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.080896519 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.104146312 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.081828263 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.104315774 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.083643073 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.080139815 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.106973739 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085845178 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.115581208 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.085631169 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.085121889 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.119389294 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.08175887 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.110469809 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.080614029 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.080158206 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.121040755 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.091870055 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.10471047 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087725703 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.080700252 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.107496396 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.080888143 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.103961554 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.0812493 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.081308863 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.107821934 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.084873414 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115236353 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.089263893 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.101004989 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.112273004 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.087284166 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114634915 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087194759 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.091576263 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.113083086 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087459551 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113551997 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.086241922 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090160619 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.111949892 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.089426505 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.1128996 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.088580787 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.086839864 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.108357157 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.086534041 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.106201615 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.081022819 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.079349979 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.0997826 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087368574 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.106752656 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.083774586 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.082615718 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.10863749 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.081409762 seconds)
done (took 15.721790727 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.08717361 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186856336 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150148897 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.121907811 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.133455881 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.086753074 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116321044 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.114571175 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.107903467 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.137620728 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.105471009 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.124843509 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.121608722 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.103947471 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.082002271 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.085523237 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.107660002 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.097008065 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144332441 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.102016189 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.140977181 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.10377042 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.112023397 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.130285995 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091663467 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.133192523 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.082578012 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.109099289 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.086081773 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.122083564 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.10247788 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.10874041 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.082390946 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103453887 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123503307 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.089359789 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.105367542 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.089200291 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.104962842 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.082161698 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.12816945 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.104032008 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.111618015 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.088104198 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.108638036 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.084938471 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.083134954 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.115356472 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092348942 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11007092 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.097378921 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135968438 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.107909982 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.092926424 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.080189672 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.116672815 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.091099754 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.109457332 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.083307915 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.107935019 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.081691017 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.08459601 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.121755787 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.130961624 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.10557634 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.114648332 seconds)
  done (took 8.049488285 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10444124 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138908525 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.100450078 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.123033529 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.083406996 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.081278103 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.106552643 seconds)
  done (took 1.691046187 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.0887641 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112427795 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.134334998 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.10854298 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.129781809 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.133798108 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09504424 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.083712888 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.125789792 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.084693455 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131086832 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124703281 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.113940824 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097219445 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.141615451 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088534665 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.142267114 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088805414 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117288869 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.116295004 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117070862 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.111420508 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116401616 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.088469792 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106928947 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114779783 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.167754831 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094267385 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090230245 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117265185 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.087221158 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151375114 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101159108 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118473997 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083161284 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126413011 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.102103728 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.1045512 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.099185814 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.112379367 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.100559497 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.082762495 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.108567214 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.081616793 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.111869107 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.096441888 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.110249065 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.084053605 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.085399639 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131590871 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.084113822 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.124187458 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.084226106 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11178762 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.085417083 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089123121 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.117906437 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.084606701 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130418558 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089519437 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.127968878 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.103177659 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.12407405 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.102747328 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.111944615 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.101108901 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.099739815 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.111015476 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085567652 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.110421393 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.103780308 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.104547027 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.085024914 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.09615497 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109435213 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.110680643 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.134540334 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085959566 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.118363224 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.083620155 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.106923779 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.083840764 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.134904911 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089309884 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08342724 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11154637 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.086802303 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.105049243 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.082242022 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.086863581 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.10778695 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.085714733 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.111903304 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.083659098 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085777909 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129327201 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.084604331 seconds)
  done (took 11.194576322 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091826991 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.086625007 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111424671 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.085370459 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.10886941 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.084639481 seconds)
  done (took 1.539395471 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119205298 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11104846 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.097361927 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.113390244 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.124284776 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.132697777 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.111246856 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121644062 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.102366828 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.119167814 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.110385953 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.136394099 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.117884255 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118407481 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.106967994 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.112538398 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.107749024 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113691432 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.094572788 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113708414 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.100160758 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.113569906 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089144383 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.127956387 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.093602085 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.112913979 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.089914122 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.120214685 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.094933893 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.118389745 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.0896774 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118046467 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.089205922 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.117212048 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.109476311 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.113668843 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089064005 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119484892 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090260401 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.092247735 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.135140474 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089378236 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.1192498 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094504117 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.117486125 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.08953442 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.119923458 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.089287464 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.131837474 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095083331 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120518146 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.087719283 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.11746745 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095555165 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.114210352 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092566277 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119620686 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.109057167 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.113916768 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.090417495 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.111165959 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.0937257 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117918638 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.094310101 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.117637393 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.09619013 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.114574723 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.089819819 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114611402 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.088631952 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119082868 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.086946555 seconds)
  done (took 8.732602381 seconds)
done (took 32.158110058 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.685834021 seconds)
  done (took 1.648870632 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.825597318 seconds)
  done (took 1.791540206 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.983726665 seconds)
  done (took 17.981945069 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.464651857 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 3.409114788 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.970902243 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160442561 seconds)
  done (took 5.974795368 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.939535452 seconds)
  done (took 1.920670753 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.284650163 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.2308631 seconds)
  done (took 1.484499453 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.774523128 seconds)
  done (took 1.75943912 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.442277069 seconds)
  done (took 2.426513685 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.330347721 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.151730215 seconds)
  done (took 1.472555547 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.576453798 seconds)
  done (took 1.562585846 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.118494286 seconds)
  done (took 11.108052317 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.244484802 seconds)
  done (took 1.245850292 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.294659024 seconds)
  done (took 1.283883869 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.509417477 seconds)
  done (took 4.496263153 seconds)
done (took 57.13434538 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099022121 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.096029977 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.121908446 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.094462096 seconds)
  done (took 1.39366051 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.105340405 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.095959855 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.130607249 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.092398967 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124597021 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.089763873 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.117307767 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100462782 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11453791 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.090853083 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.115217012 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.089268873 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.118409295 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.092548239 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.112190271 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.093521625 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122172643 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.090392436 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.093706477 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.116038449 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.08710475 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.117129665 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.093798638 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.113770685 seconds)
  done (took 3.512785084 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101107817 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.0931081 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.115960014 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.087919049 seconds)
  done (took 1.389588418 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100929971 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.107336102 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.125657109 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.093579078 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.125802296 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.099536983 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.112295808 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.086182828 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.113398431 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.093972076 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.084060178 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.13346765 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.12558402 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.093809091 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.095886051 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.108216163 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.085179523 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.125144804 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.094919774 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12038609 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.087361043 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.118600042 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.085413601 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.101189562 seconds)
  done (took 3.51942272 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.173427472 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.125074802 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.108244411 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.115596772 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.129514315 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.135194688 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.082382074 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.135207078 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.082032755 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.123936354 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.08678299 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.154513429 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.095888145 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.108453459 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.08258223 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.082144801 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120587219 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.095489051 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.11192689 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096869582 seconds)
  done (took 3.247477806 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097170016 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.087118379 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.108482337 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.08660353 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119073689 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.089797152 seconds)
  done (took 1.592096975 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096453459 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.0861845 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.113261671 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.085699143 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.114029897 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.083411842 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083229089 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.109636833 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084096078 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.108598561 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.086062811 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.083289333 seconds)
  done (took 2.137953792 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.516661062 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.086277543 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.11200682 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.107496118 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.094575072 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.082409059 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.125404719 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.085426448 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.138184048 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.083168806 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.109363789 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.086365985 seconds)
  done (took 2.632358534 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213309819 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09894729 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259278912 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.346603427 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15920338 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161237558 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272520721 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165054039 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.181855201 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109464951 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213483514 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126721386 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150314055 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173739835 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109174455 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.151774188 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170401228 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194484888 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145090352 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198678291 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157898576 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163482316 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175017256 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149938987 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107887499 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153134309 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.116070418 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098449337 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169176874 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164522337 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169345171 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145036812 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134776403 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195425191 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205519125 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17817222 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273847371 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129315537 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.149048432 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.159545294 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245957431 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109905264 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216811946 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124645915 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126393532 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177108453 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151729843 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173690228 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10126228 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137918516 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17665256 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171447138 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.174465441 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133065635 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294468622 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147349926 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114362786 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176655092 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179715133 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182626717 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162734236 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.115085503 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178776516 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175635241 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174212582 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114694173 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.16157782 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120665068 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168487346 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190065472 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173564087 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159448339 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.178454229 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131531689 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158510412 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163782728 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1206822 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17332276 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15501058 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.116648784 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118505939 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132903085 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096442441 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.188934416 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120204518 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198564647 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103382727 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.167503022 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196937913 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154045965 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157209066 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159639731 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160525969 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116396279 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.112604748 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140305183 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120839274 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15154089 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128007631 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125218403 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137349029 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.122437104 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121229907 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.11937284 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155175812 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.096647851 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159449644 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160321305 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.094461143 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160899459 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146910577 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.117943273 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164722738 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177314723 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128733106 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127789239 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186202456 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126297227 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.129174844 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170282522 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180090234 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.150856813 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105915174 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161154922 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186645658 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13795837 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181705231 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136046814 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10292573 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136756339 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154024313 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151329052 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.125697537 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125814207 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.147821401 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185247562 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.092520858 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133096477 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17197186 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095971338 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125524172 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109679978 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130614252 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.132044084 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.110616917 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131830741 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149881893 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126658507 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148627955 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149315524 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138043396 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184630377 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103617114 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.14626537 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14298634 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.088860019 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.170107469 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178647326 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125482799 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191449077 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.1600419 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188606402 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15782233 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126283006 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144614712 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124746463 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.087301779 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158427104 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155892279 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158579025 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.175687034 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186376827 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.158218782 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.14875899 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143041514 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158702491 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131278258 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150369844 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.133021405 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156717263 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126206763 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.117503648 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093412626 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.123543462 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136856618 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100527127 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12821872 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176023932 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157590168 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180524775 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154883231 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108599752 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176565946 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.122547999 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159096942 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.165532123 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106336138 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.17543448 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174962852 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162533913 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138557434 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167992901 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.08746466 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119844199 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.101181505 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159065675 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129255488 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102842499 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138384656 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175648254 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168379989 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144616881 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194082701 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159270633 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185703838 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.088809825 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.164573381 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162183306 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153474382 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.147153323 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127914904 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.146185069 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143580465 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137780761 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18185272 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156028591 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162584734 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187201969 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.146318283 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098448661 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144818476 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158683569 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136134437 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159592455 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113515048 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132081795 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144216301 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.096326073 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121098496 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166110158 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112490209 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168331293 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143406622 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163647843 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122163555 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110444371 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156719816 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142058022 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.083533072 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160316926 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17697457 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139289698 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150562359 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165161359 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098268853 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.301061088 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181858842 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175962043 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132819267 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136733708 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129434052 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155199982 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155997487 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173537895 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142512224 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172606885 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12501517 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.130735592 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10495116 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142897866 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146211251 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.107521861 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.127570519 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.147247736 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.103840517 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169881321 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136712404 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154231629 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158565429 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.117016575 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.141910511 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137630225 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19194614 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125800918 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172055081 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.145630762 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.157762547 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190379956 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11960421 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096384816 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.122885528 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14616342 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129413825 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154393891 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.177540286 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188705889 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153668929 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160319873 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133357564 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.087178408 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15338781 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116146937 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217904723 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110534116 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.129951556 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180344421 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.1394195 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098267584 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158313193 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276755174 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139646748 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167193219 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081237037 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.270042532 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119771273 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100797392 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155177037 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164718099 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.103573345 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.169787552 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157841369 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111489528 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156041483 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133506648 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181797072 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197715901 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162971728 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166226876 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.127147446 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125023546 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156291086 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169150058 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139657347 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.103629263 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15777406 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176609973 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.179887591 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.129249764 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155926307 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12758583 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153273643 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162093486 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130114632 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192283242 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126009277 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130284776 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135478442 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120064379 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125109835 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.204277359 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101971993 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165416583 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153057282 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100152444 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124203016 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146135188 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153862848 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109410629 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.121611487 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166174476 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.091760917 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157798906 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175232142 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098693466 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150828296 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139871416 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103463928 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139946783 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140284304 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10408405 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.157719105 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177910472 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.096660406 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16887498 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1682842 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156889391 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153390671 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139603678 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636095046 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.124960953 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174884688 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114830068 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177252271 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145262284 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160606915 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155737628 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115925426 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160130019 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145498552 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.224401734 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160751647 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.153305663 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100189445 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140889048 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109307902 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.125963272 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147012493 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156335032 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107564937 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131795054 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.15065618 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11191986 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.129131962 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105855488 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176913572 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144521311 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171235331 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174881831 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104806754 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15941508 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162551957 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126000778 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.155239827 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167255981 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108239525 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14561863 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.127130526 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102130271 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174881238 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.09032526 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1556282 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155076494 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155184597 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158416715 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.099582378 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153636096 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138309158 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157627177 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097561521 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.148253357 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152894419 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098885361 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.124201531 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151195512 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120340076 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.14590234 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121404313 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.133758463 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175515167 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.090472822 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129665379 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274364955 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151895031 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18531592 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.109775254 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131598921 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138760582 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114830276 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.148676188 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154845872 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.096825978 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128716733 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.097564275 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.160715306 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137771057 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123650337 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178068449 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152099403 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192425672 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132313999 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.272973608 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107161679 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15065268 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090121507 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.125596046 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137454304 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102222585 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138316343 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183640781 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174076618 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.112703477 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.129650509 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122218087 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.092311934 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099954097 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156901894 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150175753 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153846208 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109238618 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.110638333 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139706304 seconds)
  done (took 72.296055613 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.157881158 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.14275543 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.155793069 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.211869278 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176578803 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271801266 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.228267137 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24884484 seconds)
  done (took 2.674498073 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093700596 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.138576714 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.122357208 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131031331 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.111104027 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.086684772 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.320433513 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.127910385 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.085071397 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.142226925 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.128565893 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.11170543 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.530408336 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.085069835 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.11282655 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.080828072 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.111042668 seconds)
  done (took 3.60231852 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 47.639537767 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 5.539218832 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.048278026 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.188741432 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.80636573 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.120980943 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.687645285 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.162482035 seconds)
  done (took 61.281594059 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.126310714 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.119812045 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.169148277 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.166877327 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.125244024 seconds)
  done (took 1.794084161 seconds)
done (took 162.058633319 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.091584304 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.093618589 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.119899152 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.096375789 seconds)
  done (took 1.479891337 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.101284299 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.072943595 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104999307 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076007395 seconds)
  done (took 1.451715516 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.187323314 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.166589503 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.411633765 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072905037 seconds)
  done (took 1.605668319 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.109595144 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.126615046 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.099601463 seconds)
  done (took 1.435605895 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105197666 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.095675767 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.124913225 seconds)
  done (took 1.422903454 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.101500172 seconds)
  done (took 1.192258484 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.112147108 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.141593621 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110945702 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.132959682 seconds)
  done (took 1.595479086 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097962492 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.094054299 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.133825222 seconds)
  done (took 1.415054364 seconds)
done (took 13.048969028 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.106431178 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.424805824 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.385015674 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139931232 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.693616061 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.40429792 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.040057296 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.141937747 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.162270933 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.090762424 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130758859 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.669656319 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.019748578 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.343538316 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.005543785 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.342320846 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.669181752 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114904163 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.085977775 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114590513 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.024073868 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.113194606 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.08715507 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086768074 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.69745546 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.39080785 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115269505 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.342272325 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113960954 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094886564 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.373136338 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.115118797 seconds)
  done (took 16.72246185 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096767436 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173734682 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097921777 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131169118 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.094640371 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.088122689 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.119047386 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088292505 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17675131 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.115498743 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104179724 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.114502356 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.092159724 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.087639741 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136413436 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.086724733 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116129922 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.086566926 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.114885833 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.088325855 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.106332903 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115237246 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.08697514 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114802624 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.087028118 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.127663633 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.087966052 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.086732122 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115364814 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093975888 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117957828 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088352841 seconds)
  done (took 4.532734834 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140013222 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182105813 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098061658 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151427006 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168348661 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089501142 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.195057862 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.141269596 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152827351 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11536547 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.103961225 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.115647377 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.120876974 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.116534409 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107597058 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116012664 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.088016398 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114696908 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087656388 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.08687676 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135296463 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087059603 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116458799 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.088070304 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.114933036 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101993784 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115761729 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.087522557 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087341846 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.122951484 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090972221 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117089298 seconds)
  done (took 4.860456597 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096956579 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.092456005 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.130918695 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.103033642 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117476474 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.090961616 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.119289047 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.088980231 seconds)
  done (took 1.939734672 seconds)
done (took 29.152851757 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110377169 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.098784495 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130178409 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.099736644 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.12650409 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.099846508 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.114274439 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.099377407 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.099791239 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.125467696 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102657088 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.115315404 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089278992 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114066518 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.102025409 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092496207 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.129535417 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096073018 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.13156631 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.100341398 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.117724693 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.099181349 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.096730062 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.130735642 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.101696751 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.130220116 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.103246195 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.123708221 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.087970402 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.118140878 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.100325259 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.138132636 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.093202751 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.131506057 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.093922538 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.091629386 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.117758915 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.091293857 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.12978709 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.0993203 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.12297978 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099958238 seconds)
  done (took 5.68387286 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.116706052 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.148848172 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.110553247 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.115008446 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.089980724 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082233191 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.14228038 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.084265783 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112185345 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.11277036 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.104600397 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.078763268 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079200186 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.103713898 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078164928 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076936165 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.11042012 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07704624 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.106756515 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.07903729 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080913338 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.103406007 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081440644 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079506267 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.105867523 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082755914 seconds)
  done (took 3.653351065 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.09867439 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.101585916 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138136339 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.169611179 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.122720699 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.125197654 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.096042215 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.104334765 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.133955278 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.087337207 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.119504963 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.115649594 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135008957 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.094839455 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.119422891 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.102804665 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.100801846 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.118730398 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.091977261 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136443739 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.102894518 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.127218598 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.106252479 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.128183325 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.087222117 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.088989853 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.122364444 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.096210299 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123863264 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.095779448 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122180018 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.090861018 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.088111958 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.128400797 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.094049807 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.117967015 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.107132697 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126451732 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.096473958 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.118169486 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.098166454 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.090328 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.137667676 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126472746 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.117441195 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.094150031 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.120397906 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.097270115 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.118041263 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106260843 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125296553 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.08906083 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.089661512 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.118116365 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.088944271 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133110085 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.08976681 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.088536587 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129738893 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.092177689 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.129310272 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.091924816 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131252291 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.090835379 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.092805624 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.11770157 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.087559972 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.115365817 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.110376968 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122995477 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.128899697 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.124861527 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.088512276 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.095167177 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123702895 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093623843 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.116891103 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103023039 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126079825 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.092160494 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127324077 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.090241932 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.090350731 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.135646002 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.089894057 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.11798351 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.088351995 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.093711137 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.119981085 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.088187355 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131979568 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.090316777 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118644372 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.101644369 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.087245244 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118714138 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.093771732 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12184418 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.086400041 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.129839495 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.094134539 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.116343163 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.098960852 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.088036333 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119591548 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.097162449 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.121459259 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.087210055 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.121027325 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.094650056 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.087961044 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120697128 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.090221613 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.118967843 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.097125703 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.094350906 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.120431514 seconds)
  done (took 13.825179232 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.231195256 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213720042 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.186818271 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.262403194 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.131106881 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114198716 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.207727145 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.154906681 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.089399488 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.155944589 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.169246567 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.179444579 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.168056066 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.177199917 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.168888424 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.095103134 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142076446 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.133253558 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.211496463 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.292820867 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.108321 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.126154346 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.126480867 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.155451954 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.131077077 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.097870002 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.134186964 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.100832689 seconds)
  done (took 5.591711175 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.104763935 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150324073 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.09326914 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.140112226 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.115249438 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.117404566 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.092766216 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.119006402 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.101407471 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132269773 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.088344544 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122064715 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.095603418 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.096592295 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.118158284 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.097521024 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.126942012 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.089258985 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.120297652 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.092386248 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.098397126 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136031403 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.091539727 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.116638264 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.096460822 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.11667118 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08966796 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138681292 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.088316354 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.140590307 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.085029602 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.125913786 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.101238355 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.118517516 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.087627717 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.089318175 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.119945197 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.090043859 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.118355982 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.087241621 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.086242455 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.10864269 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.087644834 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132893194 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.094089094 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.112155226 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.095050221 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.122282424 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.089316021 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.085252472 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.12039109 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.091914249 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.11959394 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.097074543 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.089801203 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.119362447 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.091494827 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116760238 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.094535214 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.090716017 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.116100553 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.086275527 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.121588879 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.092428757 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.125420549 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.092942227 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.085532206 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.119889725 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.092356375 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.124534766 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.090892238 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.094373677 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.115479479 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.08947448 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.120208268 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.093548424 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.090742262 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.11638017 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.087025792 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.118577327 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.077357148 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.08752119 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.106010789 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.090787891 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.11606588 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.087910407 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.089399999 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.12438511 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.133597808 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.089634787 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.095380903 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.118732811 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.087784 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.120409152 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.085662643 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.090780616 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.133857087 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.136996628 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.087721184 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.085428591 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.132397395 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.090625582 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.115935996 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.078349492 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.097032654 seconds)
  done (took 12.160604748 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.121898522 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.148255608 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.08996039 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.13574367 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.121763937 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.151798565 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.094684327 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.125219429 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.090041882 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.136438846 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.088414072 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.096884425 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.118703304 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.102324308 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.151981898 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.098298166 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.119776553 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.102444565 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.121799087 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.13552327 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.136532546 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.106808876 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.135373786 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.092264026 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.123732765 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.10537362 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.155239925 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103429995 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.130929512 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.107699987 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.103753087 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.154658365 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.138300203 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.095819387 seconds)
  done (took 5.177336241 seconds)
done (took 47.196168041 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.199784596 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.425977407 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.198843304 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.128119827 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.226260576 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.201236445 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.230049335 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.200726705 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.301325149 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.199253667 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.468145232 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.851908746 seconds)
done (took 58.760246271 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.294604641 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.361952719 seconds)
    (2/2) benchmarking "String"...
    done (took 1.491160285 seconds)
  done (took 3.987901714 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.692478823 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.173221949 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.457828357 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.198688454 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.19879027 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.49052569 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.876555899 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.592335845 seconds)
  done (took 28.112961742 seconds)
done (took 42.212880971 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.219343646 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.231794162 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.240306669 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.178682745 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.327489684 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.227891371 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.410730067 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.318407366 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.214297985 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.184710809 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.220784123 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.210360954 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.213490912 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.412046437 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.196035864 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.199828717 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.296418966 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.941405469 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.616833657 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.20992671 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.210896232 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.211463412 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.231617449 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.202933825 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.209006985 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.19874347 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.186229396 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.196685374 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.811214094 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.200508422 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.209284012 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.673369565 seconds)
  done (took 190.739298823 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.198260155 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.27317214 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.345448852 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.252985232 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.833433905 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.394980587 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.349045413 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.908524342 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.210563383 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.209694164 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.522570147 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.197870839 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.597171024 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.164941876 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.233056428 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.259785314 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.555022743 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.574990617 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.230333946 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.359425385 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.210858845 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.586372433 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.555498257 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.445990747 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.225958758 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.23102641 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.233623601 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.202499983 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.386471495 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.495425933 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.239146823 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.216423092 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.820150965 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.05420871 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.203739998 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.202112655 seconds)
  done (took 151.105439541 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.201823409 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.202339935 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201944418 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.234464668 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.202048854 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.772124075 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.784296825 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.769281398 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.315665082 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.644175872 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.471302779 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.197343167 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298491833 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.21019249 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.203165707 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.202519979 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.218942486 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.231593587 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199342002 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.204336345 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.790962912 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.21723281 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.278032963 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.381295059 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.213848104 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238509193 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.602269869 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.19583822 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237231446 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.538591502 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.245993317 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197877913 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.619169471 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.336094013 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31284047 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201590765 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237522449 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.205863196 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.48753852 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198547748 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.206038664 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.208716995 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.203757296 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.206026371 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.774944849 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.199078925 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.167760518 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.916877054 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.205211431 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.205850352 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.495319326 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.937421142 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.206647294 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.205619732 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.20847156 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.205198542 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.206782518 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.237075156 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.691109813 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.306112789 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.207198824 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.20826078 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.239529224 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.205575907 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.641060052 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206414197 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.536087865 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.261024898 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.312628828 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.793630579 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.2078363 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306603962 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324210752 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.201396921 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.206916542 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206672764 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.206174107 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.320256404 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.20250597 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.634871447 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.378942022 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.218726554 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.675802559 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.306513281 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.20039459 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.649408721 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.207666824 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.204566163 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.971173617 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.29833803 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.201607305 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.207984046 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.208015565 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.641938909 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.794309293 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.503955462 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.208357469 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.837354822 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.208214566 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.208489115 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.648194988 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.769589197 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.910363431 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.209822147 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321944528 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.381153608 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.215127984 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.207757826 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.666387123 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.209927089 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.266440393 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.209818391 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.208671381 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.60743734 seconds)
  done (took 367.024022837 seconds)
done (took 709.997271406 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.827744187 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.820979157 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.929361404 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.810270615 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.774922235 seconds)
  done (took 10.297611184 seconds)
done (took 11.432634287 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.40672014 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.40632444 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273326274 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.407141885 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.243340058 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.424833987 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.382114676 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.231309956 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.315487227 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.294703171 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.313944332 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.263661838 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.245622906 seconds)
  done (took 18.343699757 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.549665487 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.571371059 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275566528 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.548855237 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251778858 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.553811247 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.412780334 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.432781684 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.434440281 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.228047261 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225214474 seconds)
  done (took 16.618191487 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.542312298 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.547233839 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275863328 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.544406567 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253798597 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.549888966 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.440115898 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.431471859 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.412981311 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.226725862 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22399319 seconds)
  done (took 16.586613543 seconds)
done (took 52.684798181 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.221895582 seconds)
  done (took 2.357756827 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.258348101 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.423329628 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.237102682 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.229192399 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.224404678 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.222944151 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.228813313 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.222467768 seconds)
  done (took 11.183153944 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.21777981 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.219010335 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.217328542 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.222266155 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.218312191 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.21781817 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.219089722 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.218646547 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.221127468 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.218786704 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.220665487 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.219765891 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.219299821 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.222292885 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.221633091 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.22246005 seconds)
  done (took 20.654955401 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.221295452 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.218373784 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.21806801 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.220765562 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.219586455 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.220508651 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.22022462 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.219648474 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.219490902 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.220001091 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.221644434 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.219330271 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.220931369 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.220897235 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.220801441 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.221290725 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.219084836 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.220277543 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.223885291 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.221143683 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.221507146 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.221962358 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.220684194 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.221464307 seconds)
  done (took 30.433748304 seconds)
done (took 65.767505167 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.857654033 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.919184822 seconds)
  done (took 6.915692893 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.282841207 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.283843613 seconds)
  done (took 3.710314923 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.223575614 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.222039355 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.223209931 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.223688247 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.223888605 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.223460561 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.224914404 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.224020515 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.22347324 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.224989908 seconds)
  done (took 13.377305901 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.224717804 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.223860733 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.221055864 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.225024863 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.224592939 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.221088283 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.224603455 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.223631704 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.223241329 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.222627358 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.223911222 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.224058248 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.224378434 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.222305483 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.226080966 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.2232034 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.220890126 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.223543698 seconds)
  done (took 23.164163167 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.237398522 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.246173903 seconds)
  done (took 3.625169783 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.352197983 seconds)
    (2/7) benchmarking "second"...
    done (took 1.263393449 seconds)
    (3/7) benchmarking "month"...
    done (took 1.332903551 seconds)
    (4/7) benchmarking "year"...
    done (took 1.320320399 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.263689035 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.244918211 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.278464166 seconds)
  done (took 10.198115964 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.225737723 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.41176273 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.522159318 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.822823065 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.226656057 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.23101703 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.081328751 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.229460992 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.23418111 seconds)
  done (took 14.127447172 seconds)
done (took 76.260398232 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.264759482 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.218055245 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.540350916 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.227154651 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.235513989 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.517934995 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.24831148 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.341332629 seconds)
done (took 37.738598292 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.2222056 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.211162511 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.080219432 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.237973177 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.323475396 seconds)
  done (took 18.992457765 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.29874068 seconds)
    (2/2) benchmarking "read"...
    done (took 1.55648072 seconds)
  done (took 4.998728303 seconds)
done (took 31.35740431 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227893114 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.2271599 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.224035641 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.228654628 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.224771261 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.224301446 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.225484559 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.226595042 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.223379402 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.228400384 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.22744775 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.228353747 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.229299719 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229108339 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222236572 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225551774 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227613402 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.223832328 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22551534 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.227444326 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227212995 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226653224 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.226259211 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.224520378 seconds)
  done (took 30.576008987 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.230023102 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.225379021 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.230258621 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.226572186 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.227217888 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.229093391 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.229559533 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.226968818 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.229179599 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.228923133 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227353033 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.227368097 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.230659888 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.22850543 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230993016 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.227683309 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.229718278 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227478737 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227369114 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.228856684 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.230772974 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227555808 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.22732652 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230141218 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.227349952 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22653614 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.230941021 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.229243493 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232441461 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.228547916 seconds)
  done (took 38.004305854 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.23586841 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.239330195 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.230847877 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.231218112 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.225663718 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.230719616 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.231397378 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.232194151 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.238676798 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.231237726 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.231910228 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.230277439 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.232679468 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.233057135 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.233288889 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.233198919 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.232261831 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.232269889 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.231949168 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.229443483 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.230246493 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.232412904 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.228566774 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.2308608 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.232876745 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.230913535 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.233492819 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.231000273 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.233150968 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.232263458 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.232730168 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.231823626 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.233486804 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.231291087 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.231869223 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.233556459 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.234869796 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.243270236 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.235002758 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.232990555 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.233589941 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.233907843 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.233208415 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.233550396 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.233764782 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.232838826 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.23098732 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.233640697 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.234321581 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.233930157 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.23544871 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.233361809 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.23343222 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.23486698 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.233232891 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.231884056 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.233422322 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.233464531 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.234600441 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.235060405 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.234008695 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.234946842 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.234843263 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.233694238 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.235098731 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.235224066 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.235020529 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.233295388 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.232862414 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.23539439 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.233952916 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.235873618 seconds)
  done (took 89.940295389 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.235244231 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.234190994 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.233262098 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.233107152 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23379262 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.236687764 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.234795962 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235405423 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233376438 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.236269241 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234009115 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.234455098 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232983682 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.235549205 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234905798 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.234832596 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.234476248 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232340659 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.236716093 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.237312865 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23594884 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.23483273 seconds)
  done (took 28.316988544 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235991363 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.2406965 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.233434127 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.238285072 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.234325974 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.235205625 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.236306605 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.239034129 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236026433 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234880837 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234157146 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23674176 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.23671314 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234050891 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231804514 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.236389077 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235639658 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.237051778 seconds)
  done (took 23.394452435 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.231514144 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.235855978 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.235532243 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.233240068 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.23408586 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.237967987 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235540375 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.239002643 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.236150365 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.232157174 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.235671189 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238508349 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.236484537 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236439811 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239159141 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.23401353 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.239623078 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232999099 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238215097 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.235595001 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.233866284 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.235136131 seconds)
  done (took 28.339390586 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238543736 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.235291903 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.234269107 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.235681366 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.236033293 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.236117849 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.23566398 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.234695924 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.240584291 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.238849619 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232831811 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.705232488 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.235370928 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.235690603 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.232250123 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232073855 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.234970292 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.235507351 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236474384 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.233256606 seconds)
  done (took 26.332475088 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.238304835 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.240334062 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.244476474 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.240020535 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239899807 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.242673018 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241529618 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.245074706 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.243965713 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.243061164 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.244031646 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.238380841 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.242877566 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.243678795 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.241732139 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240069738 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.244260136 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.24403458 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.244513713 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241899648 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.245267994 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.244619771 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.245019293 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.244943325 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.243578902 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.246776288 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24277676 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.244421778 seconds)
  done (took 35.95516188 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241487347 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.240243052 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.237415059 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.238843845 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.237078183 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.235017339 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.236922905 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.238755757 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.239233409 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.239403198 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.241978525 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.241654239 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.242768824 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.24089988 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.23959066 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.244579874 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242416937 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.240647797 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237739243 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238483264 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.240642599 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245134166 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.240895357 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.237554243 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239582336 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.242472227 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238502463 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.241023808 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242039159 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.239163406 seconds)
  done (took 38.356390883 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.286392035 seconds)
    (2/2) benchmarking "in"...
    done (took 1.284615677 seconds)
  done (took 3.72500114 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.238619444 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.243640877 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.240555392 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.24265044 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.239809907 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.244277894 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.245374911 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238416233 seconds)
  done (took 11.091243094 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.242674116 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.242927629 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.246754632 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.245321185 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.249088168 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.245336319 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25207891 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.25887661 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.243794525 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.24440209 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.253617211 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.255718737 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.246542212 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24509543 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.246719858 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.245084621 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.247297742 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.246734357 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.249069024 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.246473895 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.248500076 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248959221 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246767161 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.243723451 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.246949684 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.255632677 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.246882665 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.247599209 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.246380741 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.247493621 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.243834008 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.242777448 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.250539297 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.246776966 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.247610287 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.252801626 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255581154 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.266610833 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.249735497 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245994791 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246691074 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.245786883 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.247376125 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.249442575 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250183785 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.246115547 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.248593798 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.245060043 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.245065942 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.249414428 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.25720397 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248968049 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.245941712 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253640036 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.247405408 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250856037 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.26618996 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.252960963 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.260250815 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.255352376 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.258884434 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.25763337 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249427713 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.249899319 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258019804 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.278269212 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256454996 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.260558924 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.242960533 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.251427468 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.254315955 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258893706 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.268460033 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.25034025 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255220741 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.250589067 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252758641 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250690509 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258570527 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.271394244 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.251149284 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.253571176 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259105876 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275073701 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.248798973 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.255002211 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.253613798 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.25352341 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.252157688 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260737287 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.274403573 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.253587632 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.251405062 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.250567874 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.247470059 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.254720881 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.251117295 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.252077126 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.248017001 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.252107929 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253642982 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254945701 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.262229947 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254348461 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251451492 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.257253948 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.252149789 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.247187907 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.256171371 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.250994998 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252751539 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.254788577 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.256596957 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.249255868 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255364879 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.262881472 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.255420166 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.252059789 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.254503497 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.253658111 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260226526 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.28144527 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.248519614 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.253349799 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.25739017 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.267657514 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25774389 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.255728083 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.253339697 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.252002829 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.248743292 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.253065098 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.25451331 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.254388191 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.256716271 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254401248 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.253295886 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.25600453 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.257226832 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.255134503 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.256824731 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.255246417 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.25249524 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.255185138 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.256588998 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.253293986 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.259150252 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.254182023 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.256336839 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.253108368 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.253980907 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252280812 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.254649171 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.253577014 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.25606011 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258815502 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.255729036 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.259430675 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.256239502 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.253117449 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255363951 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.257284731 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259658604 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.258838282 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.25866121 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.252822756 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.252577254 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.25448411 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.255182255 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.252599642 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.256154795 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.251903906 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.259920661 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.269777805 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.25677455 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.254908156 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.257699246 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254614341 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259782361 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25641737 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.258240368 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.260505068 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.25890021 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.262711264 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.255848218 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.259685767 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.253617193 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.257247688 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.252903135 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257424194 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.258986219 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.264853659 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269892065 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.279557375 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.258454623 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.260126691 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.257885561 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.264034688 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.259083302 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.257923417 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.255859587 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.261247732 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25427447 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257680623 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.256587043 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.256363231 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.255845777 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.256597422 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.260962329 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.262583113 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258559022 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.255491947 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258595092 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.256453936 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260029533 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259399058 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.252391622 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.25584733 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.256130198 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.255426509 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.259968113 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.260570898 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.265632947 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.250383842 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257058019 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257421066 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.255808485 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.25295105 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.258859157 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260192763 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.252178706 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264726838 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.266868131 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.259031077 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260716627 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.272277485 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.257914514 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.262539612 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.259197614 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.255222948 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.261145177 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.267233366 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.260096915 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.262803066 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.264874923 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258825145 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254355769 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.264505541 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.253907366 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.257616896 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.25464035 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.258067396 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.258727713 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.258231796 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.258876652 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.25628272 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.259544846 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255357232 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.263372437 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258954157 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.259047381 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.261699888 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.261939943 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261504469 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.270992404 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.265138886 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.254119798 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.255340833 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.258420417 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.26533856 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.260256123 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.263992802 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.263420346 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.268511175 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.28199631 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266220453 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.256684143 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.262591242 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259344347 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.253907631 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.264189368 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256890512 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261384359 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.25769474 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.251606739 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.256020407 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263633096 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.257194214 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260822008 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.26094441 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.263197006 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.260002694 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.260403731 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.265331169 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.262858138 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.25895744 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.259787286 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.259653945 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.263339207 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262294723 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.257146253 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.259749438 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262972374 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270002152 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.25525914 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.25837483 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.2611771 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.255406382 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.255166404 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.262987818 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.261600684 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.274744222 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.26233335 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.266112295 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.260814221 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.269535465 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.261765093 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.26425871 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.27448325 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.256304429 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.259466615 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.256008623 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.264060692 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265977587 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.278063104 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.26060499 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.265355892 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.264210808 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.26306492 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.265052079 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.26140393 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261247621 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.26465714 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270763631 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.278694465 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.258121971 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261390873 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.261336844 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.264509768 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.263288049 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.256067115 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264916579 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.264399741 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.26160664 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.26268697 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.25764774 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.257752919 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.263471202 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.259971164 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.259858384 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.262499003 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.267851087 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.27501508 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267841594 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.263824457 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.266783751 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263072624 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268169133 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.277447279 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.263100159 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.267347497 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.265471431 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.267261087 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.263168116 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.261427213 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.26895273 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.265696364 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.265764761 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.268250909 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.268894013 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.265749058 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.2683755 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.265741513 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272146355 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289933242 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.265392673 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.265740594 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.26369124 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.262632193 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.267702046 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.263882516 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.262837766 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.259524761 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271447074 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.27042616 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.264159873 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.265796165 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267711224 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.26764477 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.265707675 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.267250158 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.267418963 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.265336747 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.270635636 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.270979957 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266967974 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.265329369 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.267213312 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.2677691 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.271315077 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.275867194 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.268848401 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.269208365 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265431997 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.262587116 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.263915936 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.265114236 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.271493943 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265351457 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264846657 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.265305804 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274515034 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.270370963 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.265864304 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.264681505 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.264233952 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.262865931 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.259833073 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263918905 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.265501707 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269949502 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.26618318 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.268613189 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.266131938 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.263119403 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.26195157 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.261749928 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267273518 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271108549 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.270917513 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267013389 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.261758453 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.267334204 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267838566 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.267102533 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.266024173 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.2726063 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262587555 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.273790196 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.274754436 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.271518147 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.260152849 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265568151 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.274310994 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.265088479 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.2634825 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.270570553 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.265396324 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.267360274 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.266653097 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267957409 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.276530482 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.26568584 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.26093471 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271606756 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.284829539 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268113457 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.265134117 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.273652396 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.262332369 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.26435474 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.264852251 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.263286923 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273749381 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.283478486 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.270108147 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267056668 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.263167736 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.267057963 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.273218905 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269146078 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.2656369 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.262509376 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.26784774 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269357566 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266701896 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.267093244 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.264970446 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.264357375 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.268129954 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.274221994 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.264435718 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272389464 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.265304008 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.268577303 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26682959 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.262947144 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.262292891 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.264323435 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.26704217 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269525692 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.267311553 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.267927614 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.269069884 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.267113817 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.26718255 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273234587 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27355004 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.279309874 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.275676789 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.269939661 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.268828871 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.270870605 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.271338031 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26640655 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.270026233 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272867489 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.274363042 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.271741744 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269770997 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.271439529 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.271835347 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285601684 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.293208537 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27055169 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.271121439 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268763619 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.26823697 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.26920349 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.271243361 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.274359127 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.275385275 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.281243352 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.272918704 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275882247 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.285802749 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.269389354 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.275179799 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.274346255 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.278888775 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.271288958 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270796336 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.273581532 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.277315632 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.290861272 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269491078 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.285977001 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.307972127 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.290022472 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.273554113 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.274536362 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.272826565 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.27395806 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.27554134 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.273113204 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.269785437 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27065198 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.273480915 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.274858895 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275490631 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.267828157 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.275289308 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.271441047 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.269005688 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.270474157 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.268213581 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.273400884 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.272805824 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.274310132 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.275955054 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.274012097 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.271603806 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282666487 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.29733259 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.276046061 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.274161501 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.272359169 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.272109583 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.27320385 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28671432 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.281673871 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.274687264 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.2761355 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.275860349 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.27023194 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.271285728 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.275002206 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.269438514 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.270188211 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.273221561 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.285179163 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283525093 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.277378675 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.268882186 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.277006696 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.278993605 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272345996 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274510175 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278604588 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.2769493 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.276696627 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284509333 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.273993609 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.280822912 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.278821167 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.286423268 seconds)
  done (took 753.739696726 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.271664646 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274620619 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.272639763 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.273389409 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272520989 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271271131 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271029605 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.272070258 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276133877 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.273343024 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.274971963 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275134984 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276388503 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275947497 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273586758 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.27407688 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273729857 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.273613492 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.27619807 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272724514 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.271112542 seconds)
  done (took 27.932835006 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.278874611 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.27164804 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273736162 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.279945718 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276391586 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.276689744 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.275615157 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275784134 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.278254328 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270032309 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.275778887 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27738804 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.2785641 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.277166329 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274045821 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279904776 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.278360568 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281360114 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.27576579 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.272871276 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276010668 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.276253723 seconds)
  done (took 29.273557269 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.280256065 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.28357658 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.279705108 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.275050398 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.279087064 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.278722149 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.282632945 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.280272034 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.278023037 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.279466322 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.273933887 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.278277512 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.288620097 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.289822026 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.280993046 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.281410386 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.421513129 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.280484589 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.28266181 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.279647631 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.276466528 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.284125691 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.275210335 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.279959325 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.276612973 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.283412093 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.281333662 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.280463389 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.280441664 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.281599212 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.286880166 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.28017154 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.27849806 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.282341563 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.276708102 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.282092849 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.286441075 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.283158795 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.279711314 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.280222704 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.290275307 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.306650108 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.28535303 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.290174094 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.281419832 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.286409924 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.289782793 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.292218716 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.281596129 seconds)
  done (took 64.17077268 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.280556482 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.282970987 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.27898841 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.28228258 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.281568252 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.280768265 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.283743094 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.281708387 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.280105121 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.284810263 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.287070702 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.285469979 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.279082641 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.284262843 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.283976146 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.279630372 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.280522317 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.280162253 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.278117352 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.27975059 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.27681792 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.285443237 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.285334319 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.278529252 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282952533 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.283025332 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.278904749 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.286963816 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.285166388 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.2797749 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.283041027 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.281407282 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.280823921 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.278703347 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.280783782 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.288113678 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.284130253 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.285069879 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.285948609 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.285761368 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.282897125 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.281529434 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.29162345 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.284654567 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.28123619 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.278802568 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.28078302 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.283564468 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.288572319 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.284317499 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.285366799 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.279326998 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.286517306 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.278455077 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283043381 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.284861223 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.282936525 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.280394964 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.285324113 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.282968569 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.284246848 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.288478714 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.280904641 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.283316173 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.289457204 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.283248747 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.282609368 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.288237261 seconds)
  done (took 88.44102763 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286627392 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.289164163 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286411441 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287625199 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.286465724 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.289905834 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.288944455 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.287029936 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.290174198 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.287304283 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288449575 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286881718 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.287256419 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.284132381 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286406807 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.29056709 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.288858744 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.293159529 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.286825979 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291140388 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.292617551 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.292980569 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.288955077 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.287137435 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.288574777 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.292567627 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.289602268 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.287888775 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290250882 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.289941038 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286419969 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.28878711 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.291707571 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.291703979 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.289407661 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.290166392 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.289669628 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292554672 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.292884445 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.29041773 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.290462492 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.293174722 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.293070648 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.29137388 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292444093 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.29199898 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.290991092 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.290766267 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.287660422 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.288051285 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.292092842 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.29312712 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.294941755 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.294299083 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.290117151 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.289756656 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289301665 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29540287 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29419911 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.291625792 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.291766602 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.28633347 seconds)
  done (took 81.182204464 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288543529 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.290317787 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.288707316 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.287777096 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.290223001 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.287005972 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.290365517 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.290854971 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.287856676 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.286398885 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29132622 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28233888 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293097152 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289774775 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.283368984 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288513985 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2853211 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.286903207 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292155036 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.287693096 seconds)
  done (took 26.969172867 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.287208541 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.28909958 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.289395189 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.28940027 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.290228694 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.287715664 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.291438588 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293418569 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289342192 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291419838 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.290834493 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293955654 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289681108 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.290300828 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.288526136 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.288887825 seconds)
  done (took 21.847240003 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.286292409 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.289130359 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.294413103 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.293145361 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.287167408 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.287346219 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.292887037 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.29109735 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.291176909 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.292153048 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.294253947 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.290618015 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.293218913 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.294468071 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.290649467 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.289738004 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.286871752 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.288190214 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.291493232 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.297300986 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.292095338 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.290792478 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.290846081 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.290789 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.293081857 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.292695967 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.290871501 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.292020164 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.288988205 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.291902308 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.289355634 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.289376772 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.289220981 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.290162356 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.295701412 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.288313411 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.293743178 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.290991983 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.293229931 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.293932194 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.293605647 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.288906659 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.294386825 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.293077698 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.289670881 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.296351039 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.29113972 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.291121597 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.291134093 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.288727928 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.292741806 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.295225403 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.295212629 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.292557702 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.294325688 seconds)
  done (took 72.246649765 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294880879 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.296225737 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.291184613 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.292615432 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.291702939 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.291866032 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.29401487 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295640447 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290789128 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.292739532 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291048011 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.295464258 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290811442 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.294391724 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291769398 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29428129 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.290747805 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.292150615 seconds)
  done (took 24.486544707 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.290942239 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.290498787 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.295548145 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.291909675 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.290956554 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.293944805 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291955332 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.297134895 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293103642 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.2943365 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291171196 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.295177656 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294298254 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.295089299 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.293970914 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295083369 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.29796082 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293719498 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.296759323 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.293650379 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.296586192 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.2931057 seconds)
  done (took 29.681172956 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.294576173 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.293478402 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.294681342 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.310647539 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.311535117 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.317917989 seconds)
  done (took 9.037713152 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302851146 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296274059 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.297430998 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296420508 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295034019 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29536038 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295859584 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297049476 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299927746 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293806161 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292881452 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298691999 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29923493 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297012496 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29971162 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296421734 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29513003 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294222482 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297716482 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300620555 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294069051 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298148941 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293437098 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300591703 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298827247 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297348518 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300715496 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297147439 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294691137 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301690065 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296754271 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291395297 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296822941 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29558678 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297100511 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298417845 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295247837 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294909083 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298328263 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296472775 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.299363985 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29921311 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296475854 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294731297 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29858901 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296628839 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298171055 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29878619 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299765038 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301120789 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300005254 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296718364 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299061932 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29776866 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297854896 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302905985 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298560466 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298605815 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298654931 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296904081 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298765755 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302132957 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297270651 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297783858 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299365022 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297633672 seconds)
  done (took 86.884036594 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300001594 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301436646 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29763595 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298152581 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300437551 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299745764 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300136936 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299068244 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298921404 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298421943 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302878292 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298510547 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301327538 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29931138 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29685249 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299791717 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300506876 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297971873 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297541593 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302568215 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299641037 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303788657 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300439126 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299414397 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303319395 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302929045 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299976214 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29806838 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29777495 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299702495 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299889844 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298332142 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298454801 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29799405 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299717795 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29946501 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30102469 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298774211 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300478456 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302772858 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298956095 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30137718 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299559295 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29941642 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300220538 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301344311 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301944484 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299398741 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300380678 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300418869 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299230026 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298345188 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302721334 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300467641 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300888964 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299601422 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301317671 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301715657 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302857046 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302969927 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301883075 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302462498 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304145189 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301781383 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301120388 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306241929 seconds)
  done (took 87.046819044 seconds)
done (took 1758.114746224 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.46652961 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.418804797 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.300328724 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.313993681 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.302129229 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.299842901 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.317655127 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.303841064 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.304430573 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.302583805 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.301491203 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.493015427 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.308785414 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.300652269 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.301460784 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.395878324 seconds)
  done (took 42.658602719 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.332566782 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.313516168 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.434216348 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.332866026 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.33070354 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.505451532 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.371398032 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.314214557 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.49841902 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.359126813 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.996951997 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.331597849 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.306254952 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.506517066 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.326334832 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.511691969 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.575729103 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.007042004 seconds)
  done (took 30.576848577 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.809282492 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.350572737 seconds)
  done (took 9.383173222 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.334392613 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.311581835 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.307940235 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.30534251 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.303229063 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.298009244 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.305223368 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.316944617 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.351804797 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.450142601 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.307977826 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.315702047 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.328976103 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.3063589 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.304884695 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.345401971 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.463818546 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.306089889 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.303712349 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.313097443 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.309268877 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.419053656 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.35228589 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.305931211 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.445057808 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.380630024 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.315570496 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.316281374 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.457809111 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.308137822 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.308063757 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.310761015 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.309633483 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.933681227 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.759182841 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.322425656 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.336483696 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.318844416 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.31045811 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.476991017 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.311844678 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.316044838 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.31095325 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.758048512 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.46470854 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.435956249 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.670071986 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.320293175 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.313191534 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.375935414 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.31068649 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.313202362 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.345426489 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.143563818 seconds)
  done (took 111.2005221 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.340069555 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.697869749 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.476663426 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.335063149 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.087224224 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.055205049 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.328193636 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.627497789 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.371685483 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.301587753 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.641310019 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.871611336 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.332107888 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.330446999 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.637570638 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.320313405 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.305601813 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.21573593 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.3276429 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.307114711 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.831209276 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315462792 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.320662864 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.455885054 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.343241776 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.808043876 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.809240494 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.896107057 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.331398969 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.305572339 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.823612947 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.334370566 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.396190971 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.304980015 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.586110521 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.712770494 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.698291956 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.317958834 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.350168211 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.305454145 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.324058511 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.805236044 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.707322312 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.318456718 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.314352654 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.828384406 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.314795802 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.313533561 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.318860791 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.522150239 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.131839061 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.316403967 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.88900835 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.313581491 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.745058147 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.399426709 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.363291203 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.846507958 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314756459 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.515692962 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.370747071 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.309699695 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.306205025 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.310907468 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.310161187 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.701616955 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.438082872 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.313588717 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.702525994 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.827392359 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.334134119 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.876859025 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.265433777 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.321771523 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.414165494 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.315616561 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.989867274 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.856082567 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.340065274 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.309077863 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.690117206 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.319563979 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.640452848 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.327909768 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.307872555 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.853849885 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.323188489 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.327594447 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.319610498 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.330202352 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.037466259 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.315100117 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.598288846 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.377434551 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.306924181 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.316335091 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.320027462 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.308259659 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.315308935 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.3113703 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.873503165 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.341953147 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.307190291 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.337021655 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.316615963 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.318769059 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.311994836 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.312647243 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.541651689 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.779048474 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.316113949 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.314756944 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.309880201 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.321541788 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.470902476 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.308768522 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.664236617 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.32073361 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320085995 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.311530818 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.06977867 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.350687739 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31095755 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.31934729 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.228677407 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.52606912 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.338280394 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.313782306 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.316189166 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.316689606 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.686991983 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.331684692 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.384536424 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.316404174 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.055196284 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.367172661 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.345537516 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.788306168 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.314657285 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.310576907 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.31007337 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.313688351 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.617541961 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.598469474 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.363167299 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.313897095 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.319960134 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.046577563 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.360215015 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.452800128 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.339751005 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.354470436 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.514213164 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.71180975 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.314335112 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.964651346 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.314920323 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.538621466 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.316722545 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.623292519 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.861583435 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.334871873 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.315987779 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.070392785 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.037599585 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.967006459 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.317169862 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.652260897 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.308352882 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.792801749 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.313068679 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.312162701 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.848747794 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.314512445 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.314345144 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.318779751 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.315285618 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.369678745 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.493198568 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.545367851 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.322241533 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.815552446 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.364062147 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315956412 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.324564989 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.325346989 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.663273591 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.380611127 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.318691621 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.318297963 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.31292977 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.324243361 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.834798739 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.238733202 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.324049422 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.474201593 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.988583871 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.339349078 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.316636441 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.920240938 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.96685504 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.87744393 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.332674804 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.671226194 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.326300517 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.356809837 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.026661114 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.392502662 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.836001577 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.3257398 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.316482677 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.971212775 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.340558394 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.661880056 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.316400238 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.315807843 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.916424103 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.340777441 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.320432443 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.705008689 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.345200814 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.582258905 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.31840413 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.332795661 seconds)
  done (took 1109.957593619 seconds)
done (took 1305.002304861 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.317346104 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.325537833 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.311784383 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.323749204 seconds)
  done (took 26.516340709 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.327489012 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.322395849 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.327570493 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.323822901 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.325728558 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.324888095 seconds)
  done (took 9.191319733 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.678853972 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.326233887 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.329144685 seconds)
  done (took 19.576638078 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.557946995 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.697272701 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.686018953 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.699129775 seconds)
  done (took 10.88420621 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.332571674 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.330501738 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.33121303 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.329505069 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.330420186 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.330786085 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.331422914 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.329710995 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.329384351 seconds)
  done (took 13.216425556 seconds)
done (took 80.621740278 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.368242014 seconds)
    (2/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.338368724 seconds)
    (3/286) benchmarking ("sort", Int8, false)...
    done (took 4.442481496 seconds)
    (4/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.558576857 seconds)
    (5/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.336743157 seconds)
    (6/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.352699321 seconds)
    (7/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.312342389 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.758037372 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.622557671 seconds)
    (10/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.388491745 seconds)
    (11/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.314179122 seconds)
    (12/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.989280093 seconds)
    (13/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.044604868 seconds)
    (14/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.327102163 seconds)
    (15/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.416139421 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.362644932 seconds)
    (17/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.308304562 seconds)
    (18/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.321389817 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.163600642 seconds)
    (20/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.152736544 seconds)
    (21/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.368749671 seconds)
    (22/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.609727217 seconds)
    (23/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.342060016 seconds)
    (24/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.365784813 seconds)
    (25/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.314458042 seconds)
    (26/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.309832079 seconds)
    (27/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.307269045 seconds)
    (28/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.432964993 seconds)
    (29/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.309956601 seconds)
    (30/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.426368639 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.748470036 seconds)
    (32/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.04143262 seconds)
    (33/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.406923565 seconds)
    (34/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.390469958 seconds)
    (35/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.337885334 seconds)
    (36/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.433675282 seconds)
    (37/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.049696606 seconds)
    (38/286) benchmarking ("sort", Int64, true)...
    done (took 6.337520095 seconds)
    (39/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.310282284 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.313028734 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.429509792 seconds)
    (42/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.334443598 seconds)
    (43/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.323030393 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.271249372 seconds)
    (45/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.090783321 seconds)
    (46/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.447329663 seconds)
    (47/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.403604308 seconds)
    (48/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.402872403 seconds)
    (49/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.620893286 seconds)
    (50/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.337259447 seconds)
    (51/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.322933532 seconds)
    (52/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.798817275 seconds)
    (53/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.86440599 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.434576275 seconds)
    (55/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.72725477 seconds)
    (56/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.593775258 seconds)
    (57/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.35258453 seconds)
    (58/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.416391613 seconds)
    (59/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.409376422 seconds)
    (60/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.896575372 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.382447115 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.327191299 seconds)
    (63/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.349951356 seconds)
    (64/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.311755336 seconds)
    (65/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.087013691 seconds)
    (66/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.878139149 seconds)
    (67/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.35716106 seconds)
    (68/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.090181671 seconds)
    (69/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.368605955 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.69187772 seconds)
    (71/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.448657104 seconds)
    (72/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.395214775 seconds)
    (73/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.028882858 seconds)
    (74/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.360160807 seconds)
    (75/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.201930847 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.337810485 seconds)
    (77/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.833587665 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 5.638172637 seconds)
    (79/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.338554717 seconds)
    (80/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.61074379 seconds)
    (81/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.435898097 seconds)
    (82/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.314339946 seconds)
    (83/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.550463084 seconds)
    (84/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.966825335 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.950215784 seconds)
    (86/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.325970682 seconds)
    (87/286) benchmarking ("sort", Int8, true)...
    done (took 6.345211565 seconds)
    (88/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.476997163 seconds)
    (89/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.353476775 seconds)
    (90/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.314864233 seconds)
    (91/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.206422821 seconds)
    (92/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.354300106 seconds)
    (93/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.333763442 seconds)
    (94/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.420664132 seconds)
    (95/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.416609511 seconds)
    (96/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.319557671 seconds)
    (97/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.3283648 seconds)
    (98/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.843877438 seconds)
    (99/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.454319475 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.545269148 seconds)
    (101/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.325576708 seconds)
    (102/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.410029491 seconds)
    (103/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.526012041 seconds)
    (104/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.689724996 seconds)
    (105/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.81983504 seconds)
    (106/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.532689649 seconds)
    (107/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.33913942 seconds)
    (108/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.418139643 seconds)
    (109/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.239665521 seconds)
    (110/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.420807237 seconds)
    (111/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.322157485 seconds)
    (112/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.623533843 seconds)
    (113/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.374206929 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 1.847910598 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.351577823 seconds)
    (116/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.330613354 seconds)
    (117/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.719975942 seconds)
    (118/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.277235053 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.617572572 seconds)
    (120/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.586064776 seconds)
    (121/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.75556571 seconds)
    (122/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.119422453 seconds)
    (123/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.203972309 seconds)
    (124/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.597228529 seconds)
    (125/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.392479926 seconds)
    (126/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.195668078 seconds)
    (127/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.446546665 seconds)
    (128/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.136704004 seconds)
    (129/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.456835018 seconds)
    (130/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.734586227 seconds)
    (131/286) benchmarking ("sort", BigInt, false)...
    done (took 6.336335586 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.750448558 seconds)
    (133/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.357514204 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.221763955 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.364917072 seconds)
    (136/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.418296238 seconds)
    (137/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.352731836 seconds)
    (138/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.31711607 seconds)
    (139/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.923522468 seconds)
    (140/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.354694544 seconds)
    (141/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.985902868 seconds)
    (142/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.364138732 seconds)
    (143/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.339168697 seconds)
    (144/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.352170341 seconds)
    (145/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.215256958 seconds)
    (146/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.175481035 seconds)
    (147/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.36959481 seconds)
    (148/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.434311399 seconds)
    (149/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.0241661 seconds)
    (150/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.878013328 seconds)
    (151/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.027640881 seconds)
    (152/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.204435129 seconds)
    (153/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.873693197 seconds)
    (154/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.303889437 seconds)
    (155/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.526866662 seconds)
    (156/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.443971218 seconds)
    (157/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.041864059 seconds)
    (158/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.318282909 seconds)
    (159/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.318869913 seconds)
    (160/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.82643318 seconds)
    (161/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.606547858 seconds)
    (162/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.319145154 seconds)
    (163/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.358199378 seconds)
    (164/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.328625405 seconds)
    (165/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.287938127 seconds)
    (166/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.396012934 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.027185625 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.335913951 seconds)
    (169/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.800699982 seconds)
    (170/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.316680843 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.373393277 seconds)
    (172/286) benchmarking ("sort", Float64, false)...
    done (took 5.651267204 seconds)
    (173/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.33538643 seconds)
    (174/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.079390968 seconds)
    (175/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.358320337 seconds)
    (176/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.458662274 seconds)
    (177/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.341485709 seconds)
    (178/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.123605213 seconds)
    (179/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.440672624 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.763366866 seconds)
    (181/286) benchmarking ("sort", Float32, false)...
    done (took 5.39678344 seconds)
    (182/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.357780135 seconds)
    (183/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.434825192 seconds)
    (184/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.436619104 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.011879758 seconds)
    (186/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.067761859 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 5.399507159 seconds)
    (188/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.77905615 seconds)
    (189/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.398026912 seconds)
    (190/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.255862 seconds)
    (191/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.273844131 seconds)
    (192/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.33830233 seconds)
    (193/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.423805926 seconds)
    (194/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.363029106 seconds)
    (195/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.77224373 seconds)
    (196/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.3203598 seconds)
    (197/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.329018554 seconds)
    (198/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.383136838 seconds)
    (199/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.122298178 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.379236154 seconds)
    (201/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.568977881 seconds)
    (202/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.31997365 seconds)
    (203/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.910611667 seconds)
    (204/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.349366289 seconds)
    (205/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.399065669 seconds)
    (206/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.319276049 seconds)
    (207/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.661221324 seconds)
    (208/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.340061084 seconds)
    (209/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.365043688 seconds)
    (210/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.350641066 seconds)
    (211/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.327288581 seconds)
    (212/286) benchmarking ("sort", Float32, true)...
    done (took 6.337369771 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.374050576 seconds)
    (214/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.359751155 seconds)
    (215/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.333898508 seconds)
    (216/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.240934235 seconds)
    (217/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.365122079 seconds)
    (218/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.937542932 seconds)
    (219/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.319916398 seconds)
    (220/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.323072526 seconds)
    (221/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.891303861 seconds)
    (222/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.361347349 seconds)
    (223/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.493361511 seconds)
    (224/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.888731956 seconds)
    (225/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.428515508 seconds)
    (226/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.451503898 seconds)
    (227/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.884027106 seconds)
    (228/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.330718265 seconds)
    (229/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.338596765 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.103171142 seconds)
    (231/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.533553782 seconds)
    (232/286) benchmarking ("sort", BigInt, true)...
    done (took 6.335701531 seconds)
    (233/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.330148016 seconds)
    (234/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.371888067 seconds)
    (235/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.865258163 seconds)
    (236/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.915504037 seconds)
    (237/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.367520436 seconds)
    (238/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.75807021 seconds)
    (239/286) benchmarking ("sort", Float64, true)...
    done (took 6.34257569 seconds)
    (240/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.357916843 seconds)
    (241/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.354986228 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.580309773 seconds)
    (243/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.36616195 seconds)
    (244/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.272286345 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.371200533 seconds)
    (246/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.365453459 seconds)
    (247/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.323935874 seconds)
    (248/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.428170582 seconds)
    (249/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.429147015 seconds)
    (250/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.327309252 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.715442833 seconds)
    (252/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.733931623 seconds)
    (253/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.345641241 seconds)
    (254/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.382548651 seconds)
    (255/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.399695001 seconds)
    (256/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.36128981 seconds)
    (257/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.905075759 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.294776043 seconds)
    (259/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.917586106 seconds)
    (260/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.152746654 seconds)
    (261/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.671781672 seconds)
    (262/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.019267303 seconds)
    (263/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.356230016 seconds)
    (264/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.324025399 seconds)
    (265/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.26790164 seconds)
    (266/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.33396501 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.441713492 seconds)
    (268/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.325638709 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.429610102 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.468495358 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.159813043 seconds)
    (272/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.177629772 seconds)
    (273/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.984256212 seconds)
    (274/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.345760219 seconds)
    (275/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.396279331 seconds)
    (276/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.333001394 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.415860661 seconds)
    (278/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.333561621 seconds)
    (279/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.842409469 seconds)
    (280/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.634902417 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.369076811 seconds)
    (282/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.378736496 seconds)
    (283/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.405117367 seconds)
    (284/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.031640093 seconds)
    (285/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.454447373 seconds)
    (286/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.325383506 seconds)
  done (took 952.358998931 seconds)
done (took 953.602862511 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.369927378 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366043997 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.347535447 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.369215431 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.459312523 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.531622216 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.359470385 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.352175007 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.396467373 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.398411169 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.348730126 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.529359808 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.351858193 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.348778186 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.348630907 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363423353 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.484935363 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.351232116 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.365049307 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.35727113 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.364475976 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.347619677 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.399628412 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.528830708 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.352875536 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.354391302 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.35288102 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.368307461 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.461069747 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.351382948 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.350938588 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.36163863 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.488260785 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.34957602 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.345012324 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.369507888 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.360541919 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.359569346 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.353832353 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.381462458 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.937093854 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.349798047 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.352331935 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.350658284 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.353436276 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.355162611 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.353172417 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.356176627 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367051617 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367014168 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.929275264 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.367702984 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.35476983 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.353953433 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.362142314 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.352981088 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.35654832 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.368403 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.369993486 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.369512943 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.475612383 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.354931648 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.352619577 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.369528864 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.359058707 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.966807982 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.348396535 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.354978316 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.94268494 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.357433756 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.967124778 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.360592964 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.354779295 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.366139326 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.385386548 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.491028121 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.347958366 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.35175123 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.362074492 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.350314568 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.362241628 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36755994 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.355990169 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.35304683 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367894453 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.535254645 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.364074969 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.354253787 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.362904581 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.372244884 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.360583686 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.362479115 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.358083405 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.346897871 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.362429525 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.357850701 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.357110521 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.356374536 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.361598044 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.369281538 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.94303737 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.373882334 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.351700845 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.351017055 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.353676703 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.368339259 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.94591694 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.356856315 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.377194223 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.406642952 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.358226829 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.484719596 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.35907499 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372818825 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.364791741 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.359801873 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.352204259 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.48783452 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.935462762 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.372079686 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.359050038 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.35464957 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.373101941 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.356242792 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.350951031 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.505278058 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.358422979 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372766215 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.478614302 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.365517056 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.389208389 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.354699983 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.360172932 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.392737223 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.3740059 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.387015397 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.360567341 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.3745853 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.37242474 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.354260064 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.366035688 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.366080675 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.357071476 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.361469544 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.350178592 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.393362617 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.370489626 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.371450044 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.37899822 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.477979436 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.353487651 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.528718441 seconds)
done (took 231.148727596 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.417490183 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.353034619 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.449015138 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.355170218 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.45840827 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.459954953 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.353304226 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.353241642 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.35158926 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.736290825 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.35496003 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.353516353 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.352790117 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.352868298 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.439529084 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.355927818 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.352621773 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.697903593 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.35787023 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.424701886 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.350671764 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.352230732 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.355405749 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.735451266 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.35697721 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.355899889 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.424780423 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.355394057 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.700364747 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.348901058 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.348205507 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.699876492 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.444716085 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.382564795 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.368535051 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.362188536 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.460488098 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.37709971 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.438519286 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.438299928 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.451779546 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.388830657 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.35060024 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.358464291 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.360415914 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.360921417 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.355250305 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.384231897 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.348201922 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.355356538 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.700627862 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.367294785 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.355874266 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.356176831 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.356861132 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.39195235 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.358225621 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.362403133 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.44859117 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.361280444 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.419240197 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.738870746 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.739210315 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.358739098 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.352463392 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.356165849 seconds)
  done (took 149.996889782 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.424200637 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.431942619 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.478055853 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.36021073 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.408898925 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.481496282 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.361271267 seconds)
  done (took 11.219281848 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.364705674 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.359321433 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.40860051 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.41051782 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.362705433 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.536615175 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.360426745 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.36998018 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.358173521 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.412166094 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.360209485 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.360016367 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.36728133 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.359031868 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.414906041 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.370250836 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.474455767 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.359319779 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.364344459 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.518298056 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.35828676 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.368839846 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.410831935 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.37116708 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.361799089 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.364827719 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.171976175 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.363255948 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.359477533 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.361379245 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359891676 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.439323527 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.361354326 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.361820744 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.360952579 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.477497362 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.363930219 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.360425542 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.363476332 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.361704634 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.366662148 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.362689122 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.362402747 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.360177521 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.362086832 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.386625952 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.362238547 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.362360772 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.363138249 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.364099324 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.413156197 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.362249711 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.359968534 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.361937029 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.418612515 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.367667816 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.367273173 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.359283991 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.363650162 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359394264 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.519201482 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.409682203 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.362885923 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.410319112 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.365253366 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.363559549 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.364044649 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.361803124 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.417128489 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.363981571 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.410283518 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.360659494 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.553414158 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.385832052 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.3642457 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.365809024 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.365371211 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366627232 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.360556461 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.368809196 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.361180954 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.364346615 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.369203334 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.363087333 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.362885037 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.529665972 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.472438861 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.361309363 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.377018019 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.370984418 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.362512787 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.416100742 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.364998747 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.361366197 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.415518419 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.47798447 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.417939372 seconds)
  done (took 156.44593049 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.368268413 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.373092208 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.367920419 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.388118845 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.365345609 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.367245283 seconds)
  done (took 9.50831083 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.36893773 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.368447096 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.367594739 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.365056271 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.369335684 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.366263038 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.369882394 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.368596865 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.372664364 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.365452321 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.367986319 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.37815597 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.366593362 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.372498002 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.370505405 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.366708399 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.370946752 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.363481701 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.368226621 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.369509139 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.472364027 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.36998802 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.368292419 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.367523579 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.374076976 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.368057323 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.373724501 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.367935809 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.367187305 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.374961359 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.374331428 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.372877052 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.370208005 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.376003604 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.379323012 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.372404243 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373153766 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.380225682 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.365928971 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.369687428 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.378662132 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.372778335 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.368044975 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.377744711 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.371370812 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.374388458 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.383353177 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.377085885 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.371190024 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.380036192 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.380450028 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.368614058 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.370577574 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.379519318 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.370297833 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.393426091 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.384538323 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.372699491 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.370581705 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.371113053 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.372591459 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.368965733 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.372559937 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.37730072 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.36850221 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.380016297 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.370255338 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.377358515 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373051867 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.372307731 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.380929979 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.368342426 seconds)
  done (took 101.196107559 seconds)
done (took 429.638203114 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.585961714 seconds)
  done (took 7.871011544 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.544558397 seconds)
  done (took 7.834477427 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.119795208 seconds)
  done (took 25.407725208 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.427270574 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 8.448090775 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.398680379 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.371351253 seconds)
  done (took 28.934844916 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.526163464 seconds)
  done (took 7.809693354 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.375340808 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.364271839 seconds)
  done (took 14.024271548 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.615207785 seconds)
  done (took 7.902240117 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.389048375 seconds)
  done (took 7.680024744 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.365969175 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.401868198 seconds)
  done (took 14.065127024 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.352059556 seconds)
  done (took 7.637933218 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.067582779 seconds)
  done (took 12.355405471 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.365827538 seconds)
  done (took 7.653983144 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.428351061 seconds)
  done (took 7.714310502 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.459656792 seconds)
  done (took 10.743758449 seconds)
done (took 168.919433899 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.362646588 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.366009182 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.367478167 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.365437574 seconds)
  done (took 26.747952219 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.406153634 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.406657279 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.40995849 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.414742566 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.40865684 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.406159179 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.398061726 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.398742658 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.417225395 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.408652001 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.412232553 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.412860784 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.411712583 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.402816105 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.413190041 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.410979487 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.420497417 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.408347719 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.398427573 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.410092668 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.374462018 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.418324111 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.409723163 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.372385525 seconds)
  done (took 35.03646152 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.89148117 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.44316583 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.527410799 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.426360514 seconds)
  done (took 7.574056694 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.425499828 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.426528476 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.439587432 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.477531669 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.513227487 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.438578444 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.400957448 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.395834201 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.383002813 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.42758255 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.50109377 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.445408682 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.53684978 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.373706918 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.574662616 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.375804227 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.374292728 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.425967412 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.477168146 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.508551658 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.375149192 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.424895464 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.431261291 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.444012976 seconds)
  done (took 35.883209966 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.373498097 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.392119841 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.374610577 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.375575857 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.382387272 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.375874903 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.375942804 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.374458785 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.373795389 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.380199499 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.375653411 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.386983011 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.375620485 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.375974481 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.380868651 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.376363849 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.382411108 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.375818583 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.375069542 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.383248233 seconds)
  done (took 28.854263426 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.368362231 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.274581466 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.720983591 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.6267649 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.370140681 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.376801479 seconds)
  done (took 29.029003753 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.457112113 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.619034201 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.38289815 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.784034506 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.858247403 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.378565213 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.378007075 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.661153656 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.044354578 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.022364234 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.446911576 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.461931837 seconds)
  done (took 20.790050545 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.378014211 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.370519344 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.387337098 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.387164816 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.438320348 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.381838094 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.383532286 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.370898063 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.449684259 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.453777547 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.388544495 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.442432165 seconds)
  done (took 38.12667339 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459505661 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.422925322 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.434220549 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.479446702 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.107421984 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58517746 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.427194216 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.154724458 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.377920451 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646959693 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383802578 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472076665 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.63159053 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382635494 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.383466131 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.511520847 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607403896 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894729191 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376818576 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.9326585 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409155189 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.385349916 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.958801934 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.655241843 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595271509 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.358192596 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.635821951 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.149185193 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.70531133 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396843439 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388251732 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375498382 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649410616 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101596746 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478898035 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.622873103 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385902632 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.925467139 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.370259143 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.955191891 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385649544 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.386731994 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386649027 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37549154 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.311704782 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378401945 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148946756 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.38145889 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.087635272 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.378321287 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.679211767 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479687322 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.379760308 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.950239512 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394630234 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.392624878 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.383225419 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476385222 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958837836 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.440399084 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38602522 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.320501717 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378717121 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.954986774 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059296923 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.385446993 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.380917287 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.382656603 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313933764 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.940844339 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.401651526 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51728943 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.404729449 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.041279353 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145014872 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.382132717 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.319253773 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961588797 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396998601 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.320747467 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609968437 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.156958876 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319168334 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.324358269 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.311206943 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166856662 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395468746 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.934220013 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409868143 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.140920821 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.629047435 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408061429 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404253804 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.604194702 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.265647568 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3809387 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.397241523 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505148942 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400463464 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.136898753 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315855817 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.385563619 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640326099 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.594296945 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381268684 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.529528567 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91451691 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394539288 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.402261914 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.393177311 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.636944778 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.031210054 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398175535 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.485037288 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401541817 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.16224313 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180120058 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39476934 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.395380478 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.400060202 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673580908 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.246460359 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.264850044 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449059243 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388631421 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387932119 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.970807575 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.241908276 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.285986698 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.625396175 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427059313 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.401168676 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.388959887 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343138086 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.37933897 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382297106 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.172842959 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.612297994 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39405628 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667749486 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316035581 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523009516 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.398948522 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.607146935 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.77498411 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.397606001 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648367734 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386176514 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.405154728 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.40371749 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404992107 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48426888 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409008397 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.396791286 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.651837211 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.390608692 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.39148047 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.973062763 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.173464058 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394781259 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.391081427 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391739996 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03465767 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357685973 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396186422 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.280145898 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.402668213 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453387502 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394471618 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.632397171 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.496660373 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410850982 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.390664332 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.390750394 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609595947 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396472903 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.877501292 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477852961 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.949083558 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045959347 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399433715 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.321422465 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.095849313 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.080553902 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386903717 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.578294417 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.389279609 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.63427998 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408191648 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392064721 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.032449867 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386661425 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.882776032 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.400891811 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39898801 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.394159764 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385790392 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.490401226 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.476558543 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400580035 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.406466352 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531361476 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.401829096 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.322383357 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.904769451 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393590435 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390784517 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.164852184 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421824462 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.893103619 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263179751 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651537639 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393576123 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690602586 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.075878118 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.431923724 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.395244481 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388118068 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400046399 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.397005919 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406087311 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.402341 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.949972402 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.844782874 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957367695 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184702199 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975270303 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.794981783 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.396956148 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.292065692 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.154855287 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322259052 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.047567314 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611798017 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.228192596 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352504649 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958397021 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.786826124 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.258788573 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.695701476 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628531014 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.89386718 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.408820666 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.705213848 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614597433 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426428348 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.392032361 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.348149967 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.677725927 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999951396 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3919828 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477148282 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16067723 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408699319 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.179954558 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.465301233 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.208354951 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866561029 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.029535562 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.785616239 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.402193387 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.406633394 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274928976 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.400454873 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.924206665 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067900852 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.395676928 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.928321433 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333721326 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.643256349 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.412079329 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.396364901 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.93895262 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.401937041 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.649736698 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.70024301 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33399353 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392313457 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986288926 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.252387686 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.39843312 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393381661 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180839049 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409490185 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.733946943 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.402356305 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.431985984 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404241087 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.329084774 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328547365 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.085710007 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404528868 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364813892 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916173557 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.400426232 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393727038 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417309945 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250401553 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.654170621 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.409319027 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.041554146 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623600461 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398279073 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41722463 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.398433367 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403522418 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.392372509 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.288174787 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.63250821 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.460016248 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.628442223 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.492547336 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.307096776 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.459425923 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.640312498 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.277319964 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396482739 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.705285644 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.112778938 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.41612036 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2008146 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42314575 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401963329 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.42346698 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.411802429 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417644964 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477162343 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647611182 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.41516368 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.412413626 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873892758 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408140643 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408379481 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.413314654 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497670683 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.314475606 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.437377039 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.169609566 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052417045 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202172041 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.062433525 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.703620057 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408869004 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399378371 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33894843 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547402368 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.925898462 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669994709 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522267404 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.421695845 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428099033 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416615452 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421722066 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616223643 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672512573 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.27295915 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413814574 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.063600012 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.278260176 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412370075 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.615725691 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928685659 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992040189 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.78817971 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402169399 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.173690579 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674977568 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.489988916 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399935758 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.997193377 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.406055565 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.258111281 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.405549937 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414672512 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556700634 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.702998929 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146672454 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.419706406 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.567476051 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.177133201 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.958936334 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.663322736 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.939824184 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.656227527 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084510139 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.2070291 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673674518 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47001478 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655407073 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.518256628 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549210803 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.412451322 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.297596518 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400304133 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247534238 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.111488295 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.411984887 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062921615 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665653244 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.404490122 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.40158264 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425431056 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.410422102 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.628339276 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17350168 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.627833487 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.416408621 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.409996793 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.981885381 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067936385 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.711802202 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346207615 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.407324375 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.686163918 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.648008844 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430351273 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.854657817 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.116077412 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998016473 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.380248234 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425876441 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405993443 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.23039538 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072159101 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.458366131 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930446348 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.064762119 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408105044 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68473403 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.408573374 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.414413588 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687731704 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.407148594 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.416786847 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663956655 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.099173753 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.276184087 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.406095851 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.062726942 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.34969355 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.632427874 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414748121 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350763 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40735098 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.90909948 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.436793287 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529144448 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417688446 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.418728476 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407403811 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.144793644 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.689990054 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.412611932 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.414849583 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.414917202 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.427956026 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514055493 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034893391 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410056928 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.079875665 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.757472243 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.664155714 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.41606948 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.403042423 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.414658083 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408258027 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.131511436 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.384497099 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.408339239 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004031851 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.424770306 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.425410601 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.410904855 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.624056614 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619946393 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.419967475 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671617996 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416422591 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.451112534 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.311980803 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.181529803 seconds)
  done (took 1682.904010475 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.454444633 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.43027968 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.423879437 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.462504895 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.429442481 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.468637075 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.434100712 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.490408479 seconds)
  done (took 52.917787522 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.409323088 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.577296988 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.442284389 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.409507157 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.425508959 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.408956056 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.923338723 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.416563768 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.419175257 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.419240583 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.413703212 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.415987717 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.173675471 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.426868701 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.41667418 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.408976979 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.416824697 seconds)
  done (took 66.858827336 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 54.552264117 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.603607327 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.071401958 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.456972571 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.974146303 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.421251601 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.0459713 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.471929506 seconds)
  done (took 103.92702237 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.427432233 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.419612191 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.421546856 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.419315837 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.421607474 seconds)
  done (took 8.436469445 seconds)
done (took 2138.375033884 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.415794588 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.418429475 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.414140524 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.418863197 seconds)
  done (took 6.992093891 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.398981893 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.151153157 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.398415764 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.413287833 seconds)
  done (took 18.689859533 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.414788419 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.420448674 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.258266619 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.149112268 seconds)
  done (took 5.735492868 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.163373902 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.177254965 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.1573757 seconds)
  done (took 7.824215821 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.40907044 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.416574383 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.418928561 seconds)
  done (took 20.572321885 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.725743642 seconds)
  done (took 3.054765467 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.556710612 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.610641675 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.773386925 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.752478334 seconds)
  done (took 8.024182908 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.808643142 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.783655253 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.599672158 seconds)
  done (took 6.519800823 seconds)
done (took 91.576711885 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.700464162 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.436783822 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.617887163 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.672559329 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.646778386 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.61813111 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.932740438 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.642266597 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.184931829 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.172894706 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.681409513 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.644449767 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.662626715 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.435394001 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.662702116 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.436972739 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.646612272 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.74735863 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.409372607 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.413256701 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.937645186 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.319149595 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.508804937 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.3319923 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.650314342 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.565203236 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.89471155 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.437855808 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.424260454 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.910044298 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.564257066 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.421941587 seconds)
  done (took 199.665858505 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.414078243 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.412714797 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.413828778 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.415196271 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.41859624 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.414727488 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.413857696 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.414605555 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.424671367 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.412988335 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.437316776 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.415052959 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.413241079 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.44668358 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.414286764 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.429783029 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.419927161 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.414983558 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.434760493 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.415540063 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.416575388 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.431460864 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.426591929 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.417250506 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.422587773 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.414727285 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.41499427 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.444113965 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.415915925 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.416226591 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.414756029 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.42354722 seconds)
  done (took 206.788294892 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.416129452 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.415240013 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.416817232 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.421740012 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.421167453 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.416589068 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.41687752 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.416417993 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.414531049 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.414865176 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.41422698 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.415377049 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.415433587 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.415828042 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.416306367 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.417988887 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.434031293 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.435299341 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.451007024 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.433165986 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.417081175 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.425129551 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.427437468 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.415488286 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.435747916 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.456291009 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.416831869 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.420727946 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.416694392 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.427705752 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.416634666 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.437703608 seconds)
  done (took 206.866441326 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.616128877 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.426069654 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.42441958 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.38053779 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.424753838 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.423153339 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.419927301 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.621294 seconds)
  done (took 15.070027838 seconds)
done (took 629.721692567 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.011629674 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.695865742 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.643273104 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.444681633 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.308377768 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.470676675 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.446025404 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.637873351 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.398359511 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.648439176 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.775920781 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.444934191 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.923865359 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.444896349 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.723259908 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.555640364 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.401509828 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.551497343 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.813508227 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.116666764 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.741790711 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.033330563 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.641755627 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.423549174 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.953849304 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.022520102 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.265213237 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.393579087 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.447567786 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.812696192 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.391248572 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.576846661 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.495779984 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.502793421 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.566635827 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.556621476 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.521442744 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.520503796 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.644276386 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.785273826 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.12397153 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.243488599 seconds)
  done (took 98.460642623 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.419439154 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.418277615 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.416855749 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.418833418 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.419601434 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.417325195 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.417178106 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.416987883 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.418872475 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.418315609 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.417577669 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.418914195 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.418209363 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.420833774 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.418467424 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.419550998 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.41858039 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.419966329 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.41569745 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.416664323 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.418341382 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.418311165 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.416914233 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.417495635 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.416130292 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.418258526 seconds)
  done (took 38.212972605 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.428584149 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.692850473 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.88038244 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.437030244 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.428826943 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.432312501 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.523223025 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.43985843 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.432969098 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.433064294 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.599123594 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.432422095 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.470294727 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.911035693 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.432062188 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.430747946 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.431949029 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.43305063 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.710898405 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.450387695 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.548885977 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.439650855 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.523743101 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.447382762 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.458854801 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.431690124 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.43509346 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.00754811 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.432328066 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.595448593 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.363806461 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.526836606 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.965249962 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.896924198 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.364594149 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.442732119 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.434246177 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.600310465 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.434635719 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.431997265 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.52632896 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.438989839 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.89278119 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.138858111 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.45498157 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.432961426 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.032165004 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.604992107 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.730788364 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.452619001 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.920936797 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.437405939 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.435484134 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.436050866 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.715752125 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.442396625 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.433840539 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.075229709 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.462840912 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.533403923 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.445476937 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.432825887 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.725182646 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.443917489 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.709488184 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.444295545 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.445062441 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.458721741 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.897797352 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.43859044 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.157749041 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.456730234 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.435529638 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.604766265 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.717343982 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.086203652 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.441834059 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.730036442 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.996776522 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.537203374 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.448361174 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.017117016 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.533830028 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.448341545 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.440398006 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.439799575 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.438021767 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.492250457 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.528224864 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.112855876 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.166071272 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.114376372 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.553244111 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.4553072 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.439848863 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.080920056 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.460927352 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.439242871 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.894068904 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.164448154 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.45836058 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.449717352 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.179936996 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.458881321 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.531321772 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.449884991 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.903745108 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.438384048 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.485349174 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.438931049 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.446343415 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.464608461 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.538988383 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.443941174 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.4392996 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.134436664 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.630796658 seconds)
  done (took 190.320804256 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.439674888 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.430320404 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.438691653 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.433091927 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.433730977 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.44319098 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.431455277 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.431994039 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.445493552 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.431291102 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.435599314 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.433413898 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.435228474 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.448921681 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.44296132 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.440553265 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.050699566 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.435135599 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.442087722 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.43345263 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.268315541 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.442944216 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.443026001 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.431269636 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.434427419 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.437079161 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.43725023 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.460211453 seconds)
  done (took 155.061767778 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.44460733 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.113618146 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.453630358 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.599272397 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.469075274 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.439253161 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.596900097 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.519094063 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.446235484 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.442189228 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.439335305 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.788597899 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.443550531 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.035955536 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.672222032 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.608756491 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.040766604 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.463980755 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.443907283 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.441085376 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.601977381 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.461523003 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.787724536 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.09075728 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.445041142 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.089160454 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.431931447 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.442554627 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.439326488 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.098277477 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.441530046 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.789455133 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.534144744 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.522543762 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.100129136 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.035957001 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.05913923 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.613175086 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.442325078 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.440908883 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.440301771 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.432927486 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.094376548 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.4462545 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.443136458 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.092224384 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.464252986 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.442993282 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.448539602 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.4413297 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.514714949 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.525153728 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.802778855 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.100943116 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.536445077 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.464546179 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.593549663 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.853528853 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.45190303 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.03558154 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.433288259 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.104275028 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.467436125 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.435723651 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.446522182 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.447728034 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.624746419 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.605661852 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.039468637 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.466327017 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.035662725 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.645774522 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.451459248 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.446732325 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.44682676 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.10051209 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.040291368 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.647125897 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.602223643 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.67673239 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.445330986 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.44284899 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.443233768 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.536075434 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.444843565 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.101266321 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.06150931 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.465318726 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.444938181 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.453335656 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.449067662 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.65935886 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.110046979 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.534782769 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.040592796 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.817662166 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.799634115 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.446462588 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.519480964 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.470673247 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.804341288 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.44821004 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.514111948 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.920951135 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.799589869 seconds)
  done (took 174.087445213 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.718030425 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.826503058 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.555186169 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.614945553 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.099599465 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.050423013 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.857703456 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.59504388 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.569408278 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.732860778 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.724629377 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.533337172 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.682780525 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.53576176 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.242747893 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.521727137 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.54616791 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.603757038 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.598550235 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.525644221 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.170107748 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.756256211 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.656940572 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.551196684 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.55798587 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.306809279 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.049100924 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.034529431 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.635379013 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.900481276 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.04207657 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.640869176 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.495163505 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.190174065 seconds)
  done (took 70.477683213 seconds)
done (took 727.959164116 seconds)
SAVING RESULT...
DONE!
