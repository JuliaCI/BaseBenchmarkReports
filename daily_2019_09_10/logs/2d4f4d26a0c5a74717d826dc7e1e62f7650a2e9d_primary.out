cset: moving following pidspec: 6539
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.359920156 seconds)
loading group "string"... done (took 0.563281124 seconds)
loading group "linalg"... done (took 7.131126358 seconds)
loading group "parallel"... done (took 0.159680636 seconds)
loading group "find"... done (took 1.120824969 seconds)
loading group "tuple"... done (took 1.799216413 seconds)
loading group "dates"... done (took 1.277950238 seconds)
loading group "micro"... done (took 0.226476613 seconds)
loading group "io"... done (took 0.919323178 seconds)
loading group "scalar"... done (took 37.639665505 seconds)
loading group "sparse"... done (took 11.762737208 seconds)
loading group "broadcast"... done (took 0.906820517 seconds)
loading group "union"... done (took 12.361052611 seconds)
loading group "simd"... done (took 4.294376936 seconds)
loading group "random"... done (took 8.481316018 seconds)
loading group "problem"... done (took 1.861422395 seconds)
loading group "array"... done (took 19.843048036 seconds)
loading group "misc"... done (took 1.767564719 seconds)
loading group "sort"... done (took 3.143002461 seconds)
loading group "collection"... done (took 16.444053237 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.481230738 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12088458 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.112600651 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.116636824 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.130933859 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114057304 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122221555 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082875452 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.782660264 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143367382 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117143837 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.41073013 seconds)
done (took 5.050406952 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173934796 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085357973 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083430907 seconds)
  done (took 1.31098447 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066199855 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123182617 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067500897 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06788456 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065962969 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065965694 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065436592 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065354389 seconds)
  done (took 1.663005157 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074980372 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069631577 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068779498 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067579202 seconds)
  done (took 1.416200695 seconds)
done (took 5.780194843 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.760103843 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200364803 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182016493 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.397766327 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127789529 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.154127526 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.641684421 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.337778399 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183993174 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081713259 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103879897 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316149217 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106249141 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.62355827 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076632076 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089243552 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136959916 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.414301639 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066950658 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082539883 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088477461 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127594678 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088010684 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07431507 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143575685 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067607777 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129718891 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08028098 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066478549 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207495485 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171895685 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.651215171 seconds)
  done (took 10.156515339 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097133648 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097437542 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068342754 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136093762 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097495341 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069065956 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070481174 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066822947 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086343077 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127969437 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088103788 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100883937 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065045527 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068619548 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084434277 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203807311 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079252415 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080692413 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070045643 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074905361 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116137174 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077385631 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077533581 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077339619 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127598235 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179797942 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095549136 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096713468 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067931565 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080267462 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114658702 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127966449 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066963365 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067464011 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126724115 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095888825 seconds)
  done (took 4.599234376 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.92770202 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143063543 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090288007 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.130798445 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064192273 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106477639 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065537278 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080470127 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.202259332 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.300446508 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.571688668 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110592795 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103637533 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067070374 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068102458 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066933058 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.350040661 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108165718 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103527549 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080935942 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070498233 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069058277 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.34194097 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067492644 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063876756 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068019281 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057895755 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122367741 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067570264 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.016440341 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.0713622 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126244288 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065799288 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.107474566 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099584717 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086429155 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.273279183 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068321584 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064771433 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063868049 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150058307 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.0694853 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06918264 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083669352 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103079181 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113275486 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065750163 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066802101 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16171112 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064553107 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07841123 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.996602389 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153964927 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075968163 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06409733 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.245015488 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085971725 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069215689 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064278122 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.180277023 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135689368 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066900649 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066105608 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067712097 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069256905 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.356256649 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067476657 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.851695767 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069809973 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076680547 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068890987 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068974314 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072499009 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072566433 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085186835 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065518754 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074724307 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065842525 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065440627 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06631045 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08416999 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063668812 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.358883328 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066549835 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067995644 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064415588 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085736927 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096347453 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066624886 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064300245 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099369515 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067314907 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069566201 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.103887957 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065817195 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062597573 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083325334 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068002452 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114765994 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065482241 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.098842541 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066496651 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095701725 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.068671288 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097770126 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.07871218 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06629607 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.385733326 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063354065 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063494092 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066919093 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064013534 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066547881 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.064535268 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.077018851 seconds)
  done (took 20.840916442 seconds)
done (took 37.659286311 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.273955777 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075019756 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075321237 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075417702 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075996746 seconds)
  done (took 1.810523805 seconds)
done (took 3.051176854 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118731713 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099262442 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064086205 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094957554 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063992605 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100049884 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09877555 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080614516 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098679805 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064554117 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095643828 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063620702 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063660722 seconds)
  done (took 2.339270636 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085179089 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083269484 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069440721 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082018268 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063450156 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082925177 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080445942 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087856231 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080723444 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072150591 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063780543 seconds)
  done (took 2.060245546 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083524436 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083091454 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069359999 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081576582 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063764293 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081394727 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08057575 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085100245 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080757198 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072845687 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063334049 seconds)
  done (took 2.05059646 seconds)
done (took 7.650433999 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079359472 seconds)
  done (took 1.274226099 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.588029795 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.061908884 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08138771 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11239216 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183693772 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119529201 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.277645585 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086504697 seconds)
  done (took 8.890596876 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.087654293 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067695409 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.080625005 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071065622 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069616914 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071702146 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071952563 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067897754 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070746474 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071335184 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069025555 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069119236 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069030522 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068993614 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070604696 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071302077 seconds)
  done (took 2.421928406 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091911263 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090378914 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074045246 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074448183 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07195678 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071547321 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073978998 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073374862 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070864778 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071701255 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07482204 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073436154 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071657854 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065197332 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074244679 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075168114 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070991745 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074102936 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074699324 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074693986 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074192399 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064163972 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07107248 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07430165 seconds)
  done (took 3.084858912 seconds)
done (took 16.876549551 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113236056 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07130679 seconds)
  done (took 1.386765653 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083352615 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081872372 seconds)
  done (took 1.37678194 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08434816 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065104077 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090073375 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077412642 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065946875 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066032601 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086842815 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066135233 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065954041 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065901772 seconds)
  done (took 1.94689526 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070928676 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078015655 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070425334 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08070336 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073456332 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06390681 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072808161 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06756367 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077451392 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06261921 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071061178 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081846205 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071077852 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083787005 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072321224 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067947606 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070673803 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067042559 seconds)
  done (took 2.515088961 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.0680959 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068001196 seconds)
  done (took 1.349680528 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068977132 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064405207 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066476915 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066019324 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063233168 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062558736 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062990192 seconds)
  done (took 1.665577157 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.38975758 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111046924 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.29452188 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070997561 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081697118 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.25016658 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065430141 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070335311 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070727668 seconds)
  done (took 2.660329505 seconds)
done (took 14.119526757 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081213494 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085075301 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094668941 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.363881219 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091629436 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065657083 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113793858 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189557544 seconds)
done (took 2.313130923 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213316824 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.61574229 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.3811916 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.195199431 seconds)
  done (took 2.40769226 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33010593 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086122607 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058411903 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066294642 seconds)
  done (took 1.769285891 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068316808 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06815459 seconds)
  done (took 1.361985006 seconds)
done (took 6.97594185 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068070823 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085020662 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066086113 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062868756 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065798559 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063057088 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063057178 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065425809 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065653323 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.0654151 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.068413784 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065990482 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06424344 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063153338 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06309683 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065470429 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063553913 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063553286 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063263777 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065908888 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06573504 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065487192 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063347599 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063071326 seconds)
  done (took 2.834184434 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085218795 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06645926 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071349526 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071237629 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069615658 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071003541 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070874635 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066132971 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070794329 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068171526 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069336772 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069449727 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067768657 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069835744 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067838253 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069931255 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070606977 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066123246 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067657826 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069661132 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070588024 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066230323 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069407069 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0705895 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06913888 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069166378 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067654928 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066170179 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070859776 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069366089 seconds)
  done (took 3.32414502 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07162248 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062869606 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064226867 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07053619 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063468 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06559467 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06355801 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063667527 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064175989 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06379031 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064755927 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063437 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063395638 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064444665 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06453222 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067400868 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078683152 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063759067 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063332312 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063870035 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066330363 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06334999 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063579427 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06322014 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062860077 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063130674 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063451396 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063399545 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064124721 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063145665 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066230398 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067197069 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063299757 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069774904 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067093958 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063094216 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067041102 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063129725 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.175593226 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063004764 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062653877 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062901793 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063040455 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.06999944 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063349045 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06485996 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06371096 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064191392 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06383402 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065478207 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062870177 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062784825 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065514115 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064522376 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066775684 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063050709 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063863138 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062817125 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064250452 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062895313 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062612152 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062747807 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065439276 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064057621 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077339031 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070136843 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063068613 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064688767 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064046691 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065403203 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064905631 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075736651 seconds)
  done (took 6.031469703 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089033448 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087093277 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064852266 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064837775 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061589385 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064225223 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067200137 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063796574 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064927558 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069545443 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064158509 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065017803 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065137954 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077055916 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064636544 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065468655 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069541178 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06161242 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063853545 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066941472 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06398853 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06720912 seconds)
  done (took 2.741539706 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.158268154 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070407931 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104955299 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072747682 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067491566 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072590298 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069475764 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069895364 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069993744 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067783615 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067949735 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069911154 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067513767 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067753436 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068056323 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067897079 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069306016 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067969613 seconds)
  done (took 2.611637724 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078586202 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06611266 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086227768 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066055799 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06540494 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068589256 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070519814 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074397484 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067832598 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065723984 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074067974 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068147126 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068429509 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065504817 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067655859 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065801312 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067903618 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06565021 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073887442 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070420364 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070225013 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074053802 seconds)
  done (took 2.783010966 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081377187 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067867613 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082121373 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067882597 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061613993 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064398343 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069758565 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06569606 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069841485 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067536718 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065605904 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063846678 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068847338 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06561119 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068950826 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065770092 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066861488 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06593448 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066883999 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061402859 seconds)
  done (took 2.602024531 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08797305 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066820702 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068054941 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074949081 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06705892 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067062796 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075253514 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066819577 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067294641 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087452396 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067187902 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06665145 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074581408 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071675725 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066599536 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074478795 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074414402 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074686283 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067144686 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067129511 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087270453 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067048379 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074720436 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066778462 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066978179 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06719053 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066975327 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071319322 seconds)
  done (took 3.247989516 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068374104 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065542284 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063186121 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063659091 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063681793 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064056705 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063362869 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063161401 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066056334 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06346562 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065586671 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066016968 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065785169 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065520482 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065620783 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065962569 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066029513 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063830342 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063405311 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06351956 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065890106 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06580789 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065749728 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063393944 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063451041 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065151539 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063238006 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06316004 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065368563 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063117717 seconds)
  done (took 3.188475321 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077167202 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072537664 seconds)
  done (took 1.398905495 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064842897 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079599009 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063014715 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069898845 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069391807 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06644427 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073467217 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069439531 seconds)
  done (took 1.799627581 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082196679 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077531219 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067423795 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079719858 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076186669 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082736319 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13252959 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066921359 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.0725628 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063749502 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079798805 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065236905 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071852431 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066250013 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071982393 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072240994 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064148488 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072072687 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068721961 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064928546 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066768059 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074583476 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068191802 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061568838 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066842637 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087367413 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077156856 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065426103 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069202135 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073204535 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071672563 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060197691 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065419451 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066135402 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063575052 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075025599 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080744807 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068653878 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074501391 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066706718 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076537858 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061036778 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07031479 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07225993 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076139201 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066082569 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066316592 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061360908 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063891873 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067789626 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061392143 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065904878 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060675125 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075024952 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069284785 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076487286 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064321908 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067483043 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068165203 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069119579 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071956796 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067855844 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068250599 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065625843 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072511165 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070286844 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075214037 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061438478 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060538298 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06418255 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075790298 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088547841 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072266744 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067314674 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067116611 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064092329 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069378338 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06735575 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072194954 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072451631 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06618048 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07117738 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073409891 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066726223 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068502693 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073920346 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064227998 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068765116 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064131898 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082005008 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064675167 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063965238 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06395113 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079164972 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068487768 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065009978 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063755837 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072349761 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059709823 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065920411 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066458264 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066141541 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075034638 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069251638 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069614208 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073030401 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071995016 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065129032 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067540061 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061912386 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065867927 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063792508 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071717375 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059069129 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067699624 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066206913 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065116009 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.19781067 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065481122 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066351664 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074662879 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071831092 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065018519 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062779819 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069150207 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066721062 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06907943 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073781784 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064797872 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06153514 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061983818 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.06933626 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065607876 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071005158 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07077907 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069693629 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06052133 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064203913 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071106967 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07545876 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066448556 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067196593 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072097541 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068154526 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065666231 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072822704 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071757735 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065219185 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07192159 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067048159 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061649723 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069177639 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069277038 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064675141 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.06959048 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069269384 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068744495 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066767651 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065131902 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074185586 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067552197 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06488917 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066615385 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064819729 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076613853 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068020068 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061285277 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063810237 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075733718 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064251241 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066577939 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064850186 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069126933 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068020762 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.0649751 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065467726 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067542973 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076945651 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070006337 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067261699 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071154938 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076736925 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065487047 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068464219 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.0662678 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067404281 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067256466 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075383745 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071605104 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070757612 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068797855 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062953137 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071702871 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073753433 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065461944 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064015861 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065476939 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07030204 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071578387 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070040087 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066674076 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064335918 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066822937 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069090525 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068779818 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065103378 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065104881 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072227896 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064380196 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072819875 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067013266 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075771898 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068780394 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060905663 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068746277 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06399991 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07221736 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061250466 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063556114 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064776224 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066541234 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064597752 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068255338 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.05991637 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071800207 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07253855 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065254124 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064152672 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064668825 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071348291 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066402595 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068616506 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068462601 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070701766 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074839278 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064587389 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067899283 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074811496 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064978801 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.188079971 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072047716 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065140252 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065787369 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065617299 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064945747 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070435993 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075848908 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073674194 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060311146 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069200465 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064706122 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06601416 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062262429 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071078613 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069954214 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067250102 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073637301 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068443333 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066883242 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070446499 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065767037 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067644004 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067926732 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069620651 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067009026 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068848496 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066128991 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069495218 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065204101 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064204068 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068793345 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066505719 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067015743 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071934497 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06589072 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066626858 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068406164 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067044253 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067007147 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067573344 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06574402 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069458594 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067169637 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066554657 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068721002 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061641889 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073107271 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065693576 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073029183 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066898783 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063773076 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073886006 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068773853 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072215859 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067038802 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067654309 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067580936 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066446897 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069058379 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073010125 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064430236 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076766867 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074483477 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066797077 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068809782 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06684663 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067592192 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065138361 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067292689 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066712104 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066755386 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065517845 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070664933 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068726332 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.0664848 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067187049 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066570802 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066467087 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066899816 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060456376 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064984585 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065396238 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065500289 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075247778 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066662156 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065666771 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064601233 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066893168 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065192356 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062433313 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074151173 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075084971 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066644807 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072935362 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065219741 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067600579 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076044449 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059977235 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064175093 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063554313 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063754847 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072575208 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065995793 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074537384 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065399836 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064773475 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062791731 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066295294 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064279249 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06015602 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063548411 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068677521 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064031081 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06386739 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064831345 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066906562 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065404663 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07377532 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063571315 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065706563 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064835754 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062059106 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064090448 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064200161 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.198885176 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067439262 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064681981 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063145078 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065569627 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068061433 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067701464 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065990155 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067972318 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075137786 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065616398 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069406472 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069759136 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061795775 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069602248 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066511384 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065586531 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066562448 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069499169 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070911186 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067217664 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075260699 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065925953 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06725039 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066516248 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064730595 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065991004 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066678157 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066435139 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065320473 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067362981 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074988194 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064577969 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.06873964 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065679404 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066778899 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072688744 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067710557 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069833117 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072798181 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066531665 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.0690301 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074708994 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071191624 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069798502 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068139226 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067591176 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072398273 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065902541 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073115855 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066400251 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066629791 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068584541 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063889992 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065772584 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06628435 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064858114 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071906485 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067312372 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065414356 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06530444 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064278103 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067149557 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069978126 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074051078 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068684427 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069794639 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061493779 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062797356 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067538986 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064312914 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067662575 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06877398 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07165057 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068155175 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065874563 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065068029 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075058805 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071619144 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069559905 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064011035 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069239432 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066283392 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068130804 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066871695 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066371642 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067142612 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070281086 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067956628 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065473157 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072783175 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069204187 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066786052 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067403728 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067102618 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065896581 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06109625 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066476046 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06790248 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071354643 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068321303 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066493455 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076734284 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063606471 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066327719 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069398579 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065015087 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070333165 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061199546 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067687121 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067083003 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066769723 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061384614 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065013172 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063673079 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067529514 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064398977 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060265917 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075002959 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073718787 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06789072 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064148895 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064143282 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060499703 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060140266 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.197080461 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068229058 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06948167 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076704156 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066129767 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065408956 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062692015 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066894674 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069432896 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069545985 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063549474 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061420718 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066372865 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069242777 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071682741 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064734915 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066461997 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069525015 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069039198 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064496715 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069532093 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062990315 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070336885 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079282886 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067685704 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06708567 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07301339 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073854019 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067545598 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062125192 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067680448 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068852393 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067201564 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067721093 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068112729 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080564398 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069326479 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06548108 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065010745 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069830377 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066418694 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073839167 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066577883 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067401014 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07120053 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069066342 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075832419 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069127936 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074105182 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07040095 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.0685468 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065005987 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067044304 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06468462 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064879119 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066857361 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067216755 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072100949 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075065139 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065639781 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076298712 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075016544 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067703094 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062527152 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065044525 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066023708 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061407739 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066849267 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06460827 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06404709 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064561406 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064878708 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066844523 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071214287 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066676455 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066600683 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065835391 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06057902 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068333241 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068163644 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066924302 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062866136 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065878416 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066512239 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069864055 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069341881 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063789777 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067372262 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067377204 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066635376 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061098082 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072221527 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064860743 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067782403 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065256578 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065968914 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066604113 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069571015 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07150207 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066647059 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068439076 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069876533 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068133941 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063510122 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062889822 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070829858 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063723202 seconds)
  done (took 42.362349686 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101410147 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062982634 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061949033 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061461475 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073466825 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06268246 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062030276 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062688069 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062967081 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065100343 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062084132 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061655315 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070672462 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077565238 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073462162 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066327061 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061629343 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062927824 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061558238 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062782432 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070445859 seconds)
  done (took 2.746981508 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075783643 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069618455 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073134014 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076083256 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066762489 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070267727 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071880749 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070262791 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076062216 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066794717 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075577143 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070027806 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066507224 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066685959 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066619281 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070298023 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075505463 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067006763 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070316377 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080654522 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071268543 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072429524 seconds)
  done (took 2.88568666 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068838951 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065452203 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067732639 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061675404 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065369408 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06065383 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06965444 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063745458 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068644793 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06530927 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064689363 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064458959 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067153663 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060636877 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065222306 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063482058 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107864799 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06881967 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065019492 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066310271 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061114334 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067435638 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060991236 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061899593 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064678465 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068970243 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06580296 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063217212 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065555767 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064433491 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065348434 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063143425 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066869915 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06627129 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064384588 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064669067 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065258753 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065146565 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06130514 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063777889 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066017955 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061764617 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066120088 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066752009 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063914218 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063205086 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067491544 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065301021 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060941887 seconds)
  done (took 4.535767541 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082311253 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108743736 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067705729 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088065141 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079624375 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075534871 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068684176 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088621953 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063376172 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064137012 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081376404 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079397137 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065536605 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070310637 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068650158 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065458143 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066584132 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064205484 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069177588 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065044706 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070018955 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072243169 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079941948 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07879248 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069303622 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064607708 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064917994 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069332062 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077691863 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069754748 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070074384 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070691614 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080787227 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067250286 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.0651118 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067642571 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081513772 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065380956 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067602715 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063178318 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067024175 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06958894 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071455786 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080806109 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065138168 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070016659 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065290488 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062601169 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077769056 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067098663 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072546462 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079612253 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069805966 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06566832 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069252006 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079767738 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064902943 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063777997 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067993432 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077309823 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062643557 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068907175 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078622424 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066895586 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071798205 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07915257 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070089188 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068845565 seconds)
  done (took 6.324416611 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076454515 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072962757 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079823582 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07933993 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071587128 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071965322 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071919704 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07210636 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071936223 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076756984 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072195412 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092767636 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067188915 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074451092 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072199867 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072229405 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072001204 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071964527 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071976573 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072071508 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072169615 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079547195 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07209019 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079470104 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097757665 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06740164 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071613989 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072288301 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079742231 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071917111 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078683089 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072248096 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07200824 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079842985 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079137622 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071529113 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.0646805 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07123726 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07170074 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071609935 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067335726 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07981037 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071379007 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06676128 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071479247 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071400305 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079218008 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078679591 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073964499 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076278361 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071925339 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079453532 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071774433 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071609502 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079509478 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104049553 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079416526 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079563578 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07135561 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079129997 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079375352 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085364313 seconds)
  done (took 6.008507532 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083794093 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07398216 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076492268 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060869038 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063923111 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069828868 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063831004 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063678665 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074226524 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073916102 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076365805 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069573269 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072534886 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076651518 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069600005 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072072117 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069469438 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069037111 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074036994 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069454056 seconds)
  done (took 2.765759647 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076028233 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08309816 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066613239 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071482647 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068805244 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071144212 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067858286 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068711088 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066622833 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0688061 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075593603 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075475789 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066510972 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070938237 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075111003 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070984173 seconds)
  done (took 2.478031284 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076337724 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072202675 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079553399 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065653937 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063561017 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062452753 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065506193 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061178309 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062182362 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077438506 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065437926 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.06802482 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06567459 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063978065 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062439564 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068141964 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062170955 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063160951 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065018257 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077548182 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076429236 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064026008 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066009269 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065024972 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065682251 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070189254 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064591795 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063420541 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062942951 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065478253 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065941236 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068891576 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062763897 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063420863 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06399586 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062918681 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064921652 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065407917 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068179652 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06498748 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063646313 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065327874 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065114186 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066105065 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061611659 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065603047 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061420598 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067145586 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063539015 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065415156 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065190663 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067504344 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065683935 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071631114 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067853279 seconds)
  done (took 4.981546269 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080891792 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069431883 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062276993 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063768377 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068331667 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066761759 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068881939 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067595854 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067424714 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063642899 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067313112 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068485403 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067127264 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06884439 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067189066 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069017878 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061771356 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067273355 seconds)
  done (took 2.561783534 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072159095 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065070749 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071843705 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065338408 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065153206 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067686382 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06164197 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063961206 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064105488 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065676401 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065540647 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067622672 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063934358 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06727162 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065566204 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065160543 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06744714 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064309671 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065183392 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061351822 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067756299 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064012621 seconds)
  done (took 2.786389718 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073670075 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091039871 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.138062648 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.083231468 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080441235 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077971693 seconds)
  done (took 1.882292835 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09167734 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078263369 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066144102 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087780157 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073077261 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067035358 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066780464 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066969042 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075564704 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075515354 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066877878 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075526813 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075457246 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074514427 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072975425 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072511031 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066907323 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06689181 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066079224 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083430122 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067211307 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075022253 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066859696 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06692464 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066923741 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074829486 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075718708 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075698104 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066774352 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075657079 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072690303 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06713831 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076211395 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075957467 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068580839 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075534924 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067207964 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083841677 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072507646 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074797895 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068557454 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072701975 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075654973 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071954341 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075738863 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067244758 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072272833 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067216393 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067547015 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085465683 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072617019 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074841468 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072562155 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075848515 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075296049 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0852451 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07571333 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076832624 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073249481 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077904343 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074675576 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072324925 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074471483 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0756202 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072543478 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074858523 seconds)
  done (took 6.185202505 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084071405 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086549818 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06788061 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07549515 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075254443 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067196952 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066997841 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066982705 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067089231 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066666868 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107625855 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067607893 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075031545 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075028183 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067331639 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06687057 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067137557 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074506639 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066810267 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085586413 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067134076 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074907639 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075318885 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07472375 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075611124 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072770386 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067069566 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067226971 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067203508 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067224738 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071744594 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067286437 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074917386 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066466989 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074684728 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067132119 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067079302 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071534571 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067082308 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072529722 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074765894 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083349642 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06681142 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067497935 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076040081 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067017707 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066941743 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066481773 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066882326 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066792142 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075878692 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075718141 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075853608 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07533388 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067640556 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067804405 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067343188 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067421623 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067314746 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072779699 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074584411 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066989721 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085529642 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067093932 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067219865 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075056408 seconds)
  done (took 6.094518454 seconds)
done (took 128.3837531 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18521462 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169301437 seconds)
  done (took 1.684682832 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071217671 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096976081 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076552233 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128187148 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066610698 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099784181 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099109687 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077294663 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065691055 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066024795 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065738915 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067939282 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130797294 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065962894 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065845967 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068675283 seconds)
  done (took 2.659402904 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097893642 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156926194 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098634416 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064543071 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097458787 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072653471 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064813501 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074613044 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070287101 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064768015 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073010544 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070367453 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064282045 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070358999 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070880942 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072409712 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064277953 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072551464 seconds)
  done (took 2.768979457 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102934487 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090839361 seconds)
  done (took 1.544009276 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156731156 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104439595 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149148345 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.344316082 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166743391 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.22790396 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.131986152 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127517718 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115743015 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122499376 seconds)
  done (took 2.991758793 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099268173 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.150884507 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.25406279 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114476886 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071835114 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094129788 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115955399 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077703531 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080187613 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080183337 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079831437 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.0757632 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098233504 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073571326 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072893924 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075948423 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101579986 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071806762 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073605048 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076195654 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098414245 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065512122 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073552665 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07186828 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07679121 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077199542 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065316909 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064963413 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076165776 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07404765 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076696381 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093559146 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077122048 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106611455 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070219834 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107320537 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076297714 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07369826 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073859731 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073578088 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078457567 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078584478 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071664467 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075512147 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06512017 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075947338 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064872834 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065511937 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077457268 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06625504 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077390244 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07644851 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106637937 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066337699 seconds)
  done (took 5.936119514 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104248101 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104656909 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070987315 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108415736 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0970867 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070946349 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102315786 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09083306 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102120314 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092704846 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088757557 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070640669 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08174372 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082974313 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109058865 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102228813 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094986065 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070890474 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101526351 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101922374 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068406304 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094906562 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090650695 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10152437 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067081384 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070374428 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068062886 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070249718 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076782472 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078250225 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06977334 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.101400254 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08385463 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07942365 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066821851 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067659379 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068276958 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078803994 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097265258 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078629909 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078231231 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067763621 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067897748 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069744408 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090803329 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067848211 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078744748 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080497664 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079047222 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069464786 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06999885 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06815638 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069720244 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079933457 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077459894 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080432823 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079549832 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068333043 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068249839 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071906777 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080496883 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078842346 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078786064 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092064977 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078814388 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067945167 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079678065 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084387636 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06788963 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069376511 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068211389 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069677517 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069389948 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077804347 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077895234 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069975155 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06986647 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06848314 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079921405 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078278338 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068295498 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076722665 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066816773 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068164115 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069901136 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069492662 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076918869 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078770604 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069464222 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067277897 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068512646 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067972548 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066327796 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075342977 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078319243 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077570412 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077217732 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068882869 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077643311 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077422898 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069163862 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077524079 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.195625682 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070933721 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06999382 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078711206 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077859713 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079938058 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070335097 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068834021 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078819853 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080920176 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068919643 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078689251 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081639648 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079200756 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068330864 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081770312 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068873072 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080024569 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070279294 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080236621 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069111194 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079011992 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06850728 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068139957 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069566295 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078883515 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070490563 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068780573 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070131574 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070022172 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079293587 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082841282 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070829661 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080809759 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078352061 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070482533 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079382944 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068889902 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079728889 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069810539 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070505358 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067434062 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082257118 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069020724 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068820366 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070145432 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080819541 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067937137 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080371064 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077555561 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067800577 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081480514 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079650974 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077238683 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08008625 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070482829 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068813894 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068550179 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069278775 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078040899 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080794469 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070771382 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068825726 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077985348 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080437904 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06716299 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077872271 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078125865 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078184464 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068592197 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069982242 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080856219 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080281159 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077970488 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077656626 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078259815 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068389555 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077330605 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077567046 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068071238 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084400346 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068008256 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081844333 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079870123 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076692824 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078513918 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080177805 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080042621 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080120425 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081921759 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067422193 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067371225 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078480289 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067443989 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068734712 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077281606 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068648021 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068694001 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081417707 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06704112 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077920844 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066253768 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077016342 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066092661 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06875559 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.213096602 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068507425 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07047194 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079798527 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06977512 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07817886 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08105931 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079993546 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068499122 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069944933 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080930267 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079334317 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069374083 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068359602 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071566344 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078813438 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077407218 seconds)
  done (took 18.736893359 seconds)
done (took 37.677630084 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209769867 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149633591 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179461097 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117845509 seconds)
  done (took 2.104128031 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123736697 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100289654 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094659498 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064777006 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101588492 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064474893 seconds)
  done (took 1.932963465 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312821736 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211036853 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181707552 seconds)
  done (took 2.088639905 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197148376 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186389787 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.393106395 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.251154281 seconds)
  done (took 2.516162144 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142519666 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089430588 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066654013 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083021826 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13393491 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160883571 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10094577 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125441129 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077234156 seconds)
  done (took 2.414893573 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146537354 seconds)
done (took 12.585052149 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.255627879 seconds)
    (2/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.093616119 seconds)
    (3/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.082045485 seconds)
    (4/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.111308009 seconds)
    (5/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07361554 seconds)
    (6/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.141451269 seconds)
    (7/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.217640262 seconds)
    (8/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07506002 seconds)
    (9/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.193750898 seconds)
    (10/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.20721953 seconds)
    (11/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069265157 seconds)
    (12/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.220112305 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070952146 seconds)
    (14/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.081308211 seconds)
    (15/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072910244 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.082279314 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.137895069 seconds)
    (18/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052320803 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076320618 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.095426259 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072313831 seconds)
    (22/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.189219903 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.112297831 seconds)
    (24/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.159098693 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.10599811 seconds)
    (26/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.087570269 seconds)
    (27/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.108228513 seconds)
    (28/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079532671 seconds)
    (29/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078822612 seconds)
    (30/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.090407776 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10249957 seconds)
    (32/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.153922035 seconds)
    (33/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075003936 seconds)
    (34/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071398094 seconds)
    (35/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072242134 seconds)
    (36/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.178380397 seconds)
    (37/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052609791 seconds)
    (38/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078411691 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17089711 seconds)
    (40/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.193839802 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071280789 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064987009 seconds)
    (43/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07224589 seconds)
    (44/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.180470737 seconds)
    (45/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.173548345 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088623438 seconds)
    (47/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073700702 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.118390956 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.168062808 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120132614 seconds)
    (51/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.061967753 seconds)
    (52/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.169607964 seconds)
    (53/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075912429 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071864778 seconds)
    (55/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.156468066 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071494739 seconds)
    (57/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.171782717 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.094745425 seconds)
    (59/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071658206 seconds)
    (60/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074281271 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091545409 seconds)
    (62/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081082193 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142164661 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142634837 seconds)
    (65/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051951397 seconds)
    (66/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.202689509 seconds)
    (67/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.150811673 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06627912 seconds)
    (69/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.156195847 seconds)
    (70/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.064677775 seconds)
    (71/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173351681 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168014329 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089265376 seconds)
    (74/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.146958547 seconds)
    (75/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.17585041 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.108212229 seconds)
    (77/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.076799939 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110444396 seconds)
    (79/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106781995 seconds)
    (80/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099344664 seconds)
    (81/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.10087981 seconds)
    (82/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.220668974 seconds)
    (83/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.053087404 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129236155 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171452018 seconds)
    (86/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080320147 seconds)
    (87/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.141015881 seconds)
    (88/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.111746378 seconds)
    (89/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095571989 seconds)
    (90/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.148274456 seconds)
    (91/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073024357 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.150390962 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 0.065695391 seconds)
    (94/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069284929 seconds)
    (95/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.108612091 seconds)
    (96/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051675752 seconds)
    (97/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137528632 seconds)
    (98/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052354856 seconds)
    (99/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072497967 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065480298 seconds)
    (101/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062298396 seconds)
    (102/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063643795 seconds)
    (103/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.108118889 seconds)
    (104/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050944474 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.094455753 seconds)
    (106/309) benchmarking ("sort", Float32, false)...
    done (took 0.126965002 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.310009631 seconds)
    (108/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061877092 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090645898 seconds)
    (110/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.15670937 seconds)
    (111/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08786175 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087475394 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142153285 seconds)
    (114/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.140816102 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072863155 seconds)
    (116/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051123195 seconds)
    (117/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081966177 seconds)
    (118/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076229761 seconds)
    (119/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051362026 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086283423 seconds)
    (121/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072385986 seconds)
    (122/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108364676 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.137928938 seconds)
    (124/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064493623 seconds)
    (125/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.203805077 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.136799886 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071086431 seconds)
    (128/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.108407744 seconds)
    (129/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.05096881 seconds)
    (130/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066041783 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064658858 seconds)
    (132/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076554087 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.132810567 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073462321 seconds)
    (135/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.147551982 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071566942 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069903726 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070975423 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064437249 seconds)
    (140/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065098426 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064719054 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064239721 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135000977 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.118220225 seconds)
    (145/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.147688963 seconds)
    (146/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063739631 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070947054 seconds)
    (148/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.182383264 seconds)
    (149/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06820746 seconds)
    (150/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.182472822 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135171678 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088291731 seconds)
    (153/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064502468 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064526756 seconds)
    (155/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066868542 seconds)
    (156/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050719835 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071432073 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064602576 seconds)
    (159/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060321778 seconds)
    (160/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.157954261 seconds)
    (161/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.173927165 seconds)
    (162/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065538914 seconds)
    (163/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050871308 seconds)
    (164/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065166313 seconds)
    (165/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051356069 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072731876 seconds)
    (167/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053518402 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066060596 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088436862 seconds)
    (170/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079278153 seconds)
    (171/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.07729216 seconds)
    (172/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074309225 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064524739 seconds)
    (174/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.053013365 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064361383 seconds)
    (176/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070634854 seconds)
    (177/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.146260656 seconds)
    (178/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066088456 seconds)
    (179/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072736177 seconds)
    (180/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.097200666 seconds)
    (181/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051223836 seconds)
    (182/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053307514 seconds)
    (183/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067226778 seconds)
    (184/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052404894 seconds)
    (185/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.097446774 seconds)
    (186/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.104176163 seconds)
    (187/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074589229 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064246061 seconds)
    (189/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052388871 seconds)
    (190/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087067998 seconds)
    (191/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068785147 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.252409879 seconds)
    (193/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06814229 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068704947 seconds)
    (195/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076600522 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089050906 seconds)
    (197/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067654684 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071882646 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09017194 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074177148 seconds)
    (201/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.097270664 seconds)
    (202/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068709141 seconds)
    (203/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051662633 seconds)
    (204/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051132454 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066988554 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06435706 seconds)
    (207/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070801374 seconds)
    (208/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07624454 seconds)
    (209/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072182739 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06579779 seconds)
    (211/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072292815 seconds)
    (212/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075217043 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073933743 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072714568 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086870927 seconds)
    (216/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066708582 seconds)
    (217/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052945164 seconds)
    (218/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052373519 seconds)
    (219/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.150994292 seconds)
    (220/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051257215 seconds)
    (221/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06733925 seconds)
    (222/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06967673 seconds)
    (223/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051300091 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070628609 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088312171 seconds)
    (226/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.0871955 seconds)
    (227/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065763227 seconds)
    (228/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052186118 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063541418 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065667339 seconds)
    (231/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.1500696 seconds)
    (232/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05196773 seconds)
    (233/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071932494 seconds)
    (234/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052314593 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065287017 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086078352 seconds)
    (237/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06274907 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135812366 seconds)
    (239/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051915689 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051534403 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.117751009 seconds)
    (242/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065142019 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.094915037 seconds)
    (244/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052858578 seconds)
    (245/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052721098 seconds)
    (246/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064721243 seconds)
    (247/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065497331 seconds)
    (248/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07023576 seconds)
    (249/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.184869238 seconds)
    (250/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050999649 seconds)
    (251/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051180095 seconds)
    (252/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.173448407 seconds)
    (253/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051735281 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064810105 seconds)
    (255/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072608512 seconds)
    (256/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070004603 seconds)
    (257/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060201579 seconds)
    (258/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050761276 seconds)
    (259/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060651557 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089064818 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071611951 seconds)
    (262/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072647774 seconds)
    (263/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.05128842 seconds)
    (264/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051075899 seconds)
    (265/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051144975 seconds)
    (266/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066883489 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.071946703 seconds)
    (268/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051883333 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176283316 seconds)
    (270/309) benchmarking ("sort", Int8, false)...
    done (took 0.138357119 seconds)
    (271/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066098637 seconds)
    (272/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.069208958 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092807748 seconds)
    (274/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.0614289 seconds)
    (275/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074391965 seconds)
    (276/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052257676 seconds)
    (277/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087357718 seconds)
    (278/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052283708 seconds)
    (279/309) benchmarking ("sort", Float64, false)...
    done (took 0.124860548 seconds)
    (280/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051374469 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06486011 seconds)
    (282/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072577739 seconds)
    (283/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060358655 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073292843 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063669154 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063689862 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072230508 seconds)
    (288/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052465762 seconds)
    (289/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050950898 seconds)
    (290/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053924279 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066152406 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069848803 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.177514335 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051441326 seconds)
    (295/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07079483 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06531197 seconds)
    (297/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084700724 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088141924 seconds)
    (299/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072638748 seconds)
    (300/309) benchmarking ("sort", BigInt, false)...
    done (took 0.182859642 seconds)
    (301/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065784304 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085440399 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069891628 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.110801514 seconds)
    (305/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063436148 seconds)
    (306/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052318823 seconds)
    (307/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.0513661 seconds)
    (308/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051313262 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094066726 seconds)
  done (took 30.332937544 seconds)
done (took 31.724855073 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087278567 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093978098 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.0758125 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093127537 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081220164 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076719642 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072650167 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078510617 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080292657 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081835825 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078715964 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055403805 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074540621 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07404034 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075110753 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091647698 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078578802 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072480184 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.0728951 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064860877 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072860971 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06592654 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06752478 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054603475 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077699625 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072036469 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072549071 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074435187 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066010745 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065964835 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069142654 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073360838 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065524826 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078004923 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072196644 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072994333 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074869949 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07669541 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067422039 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066154032 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074017756 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066082174 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072514736 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073413175 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071928597 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071177436 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073008418 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077711675 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091211152 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068162382 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074252469 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076014778 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076536819 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07243957 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069097245 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07272295 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070784759 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091161332 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074021887 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068068924 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07388012 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073988873 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070806365 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073227769 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072778753 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07496784 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075147697 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070990337 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07442206 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071215032 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065668411 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072567538 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06896271 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065478231 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075346847 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076954464 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064530208 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070601366 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072156382 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070908121 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06442472 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067232122 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066893918 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071389363 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067082026 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054293233 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068702355 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071362412 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064720103 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073030099 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071146402 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071837282 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066946306 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075322111 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064413077 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070351109 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06551501 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065991179 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066907306 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068933092 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065006133 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067198869 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073988149 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067054916 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071557567 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078751658 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065243605 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071663099 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064985729 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064532596 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07857364 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074222704 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065408034 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067419316 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064071829 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071563642 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063875795 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064758326 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064677565 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065009235 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070127696 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06450195 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06634487 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071572169 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076531938 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064293286 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067519344 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066122337 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063965396 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069259019 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063967555 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064027253 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.199676923 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062891058 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068233219 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066594677 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073068925 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068578459 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073284862 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067261657 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073198767 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069971442 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071159783 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070666675 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064761515 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.05885587 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068794707 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06818232 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067585567 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066362566 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067198548 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066080573 seconds)
done (took 12.433165066 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068721124 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14394827 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100031079 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095350803 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086158359 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066708573 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.0757979 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102431875 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067764563 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102699571 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087708774 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08516084 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112577748 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064936507 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065439253 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069561305 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067400486 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081525875 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100617591 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086051419 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115642606 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065046024 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094105027 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090243999 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086860575 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101198971 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067532102 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070215134 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069513326 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091301599 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086144541 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069859643 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067050147 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100297129 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092329485 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083120013 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06643697 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082156677 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066755195 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066225799 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068035172 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098064211 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079892368 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080263815 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070179271 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069227084 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067560947 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083926724 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089134716 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078316826 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086446803 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102827735 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068806168 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065453808 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064694731 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085004328 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065250339 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068534193 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066083326 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068351506 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066235556 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068633224 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081244223 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081684384 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069528886 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080089424 seconds)
  done (took 6.786437228 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085490862 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089628091 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083304763 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083851832 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065674826 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06625531 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066816944 seconds)
  done (took 2.029204578 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069194019 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087384748 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088435498 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088054177 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08356947 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087441365 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075816489 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066260976 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.08108998 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067884434 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08800701 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102073125 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067118678 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072496536 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090667054 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066902106 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089996633 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066408143 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069410513 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089848244 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068648964 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.0824193 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069969662 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066935848 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080632878 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066547995 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111461499 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070512279 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067986719 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069878577 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064261994 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106606343 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079983865 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.0753923 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066606187 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080837397 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081102403 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064539017 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08285987 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071573828 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080198476 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066643551 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067072189 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064296065 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070357859 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076214672 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066991604 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067049809 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068686203 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085338156 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066974925 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079545416 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069376715 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068897427 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067697484 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070062068 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07551754 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067115956 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085466094 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067480262 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08233565 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082219937 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079532659 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08234363 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068563426 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079797911 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079935585 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068550105 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067915376 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069663651 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082464058 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065085043 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068164127 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077146396 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068101825 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08939844 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.08968858 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068196722 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075340211 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06686805 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066220814 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066517148 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088695444 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068704457 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06599507 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070550534 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069221971 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.0647183 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065089189 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069705621 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064552554 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067884367 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069348292 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069529639 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069320786 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082960806 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068390201 seconds)
  done (took 8.733025767 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071052368 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068179159 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069217 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068200265 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067917814 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067601677 seconds)
  done (took 1.924646808 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09538427 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068605797 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080853211 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073090443 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104484476 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08659013 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086965488 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078674057 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083842729 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078910712 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086829591 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08834844 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093373064 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072779609 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086392297 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07167675 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087207919 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075741308 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078359525 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073267566 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086791134 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073054681 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073296965 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081971462 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075497111 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072244007 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067417003 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078673147 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078227599 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079355812 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072341421 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076292254 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070483885 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07872496 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086840004 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070451982 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071788382 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077237444 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072357997 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075510177 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087827263 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07304657 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074624593 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077132457 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078518154 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07078976 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076757011 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075764482 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085834407 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076890783 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076914613 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071716129 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075306841 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077493268 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07067046 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078204851 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076989673 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086404718 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072240482 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069985119 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068923457 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075482529 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077641896 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07508106 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078899521 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076538443 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070204483 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072148148 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072338797 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071306902 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076483507 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068647941 seconds)
  done (took 7.077186629 seconds)
done (took 28.023586415 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.547967698 seconds)
  done (took 2.025948124 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.604195332 seconds)
  done (took 2.106864086 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.603386196 seconds)
  done (took 8.104632314 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.393560813 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.474487224 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.688529882 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130678025 seconds)
  done (took 3.227219576 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.672234582 seconds)
  done (took 2.179074298 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.213533652 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196731771 seconds)
  done (took 1.927301964 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.378770007 seconds)
  done (took 1.875941865 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.0971684 seconds)
  done (took 2.596391643 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.264270309 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163148777 seconds)
  done (took 1.933918874 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.461902167 seconds)
  done (took 1.964651726 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.85824819 seconds)
  done (took 6.365417484 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.208014984 seconds)
  done (took 1.764416408 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240992782 seconds)
  done (took 1.747904157 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.690772747 seconds)
  done (took 3.197697231 seconds)
done (took 42.525129107 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081499853 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080894801 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080334731 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077950028 seconds)
  done (took 1.811494443 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077949137 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072749396 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076166074 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071495898 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076833462 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071466881 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07359293 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076129288 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071688367 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07224597 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072215111 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07211479 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074014741 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073615941 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070505984 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074596459 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075404724 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072402466 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074963171 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07209741 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070611954 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074313513 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074445417 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071059093 seconds)
  done (took 3.270012566 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078702356 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073044993 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075592731 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071092981 seconds)
  done (took 1.813281387 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078344192 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091440231 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088886744 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076556724 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091420409 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085780658 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068741004 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068248673 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072333937 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076241735 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067584768 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095378908 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087153785 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076295407 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078678331 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065677318 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067868256 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086550517 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077307175 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077082207 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069512912 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076293983 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067550917 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087408506 seconds)
  done (took 3.387725774 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079055749 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103217815 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077654981 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087272809 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088785304 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064826061 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073824569 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088417539 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121927765 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064874453 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069511152 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064879297 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071748857 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064560803 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075570273 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10356424 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107433853 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067724765 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095359428 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064865154 seconds)
  done (took 3.154164674 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074794071 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069331355 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065432143 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067618766 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076969807 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072720716 seconds)
  done (took 1.946803187 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069851388 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067336537 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067090567 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066038249 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070820675 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066377318 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065997116 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066352019 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06636635 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066190755 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06579628 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065492418 seconds)
  done (took 2.321636201 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.424313664 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068134543 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068638643 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065213092 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070093069 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066007896 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079248251 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067472999 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089690876 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065633066 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066521302 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067844661 seconds)
  done (took 2.717021635 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207310485 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075506099 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236974721 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135683683 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111044726 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115300983 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103535105 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11225117 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.1433246 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101965326 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166775108 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165543092 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106049998 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136502969 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088246579 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097184672 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154688436 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161598834 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103267242 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165010554 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14386783 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124645074 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146437639 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100538222 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105405111 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12163004 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070482664 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07939324 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169418387 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130541057 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145825311 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110156461 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093039657 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175951536 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17004116 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140627865 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133670413 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083120531 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101245167 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132094016 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197735829 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087368341 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161838786 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244257243 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081044073 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133283691 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120114175 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118672981 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106761222 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08968858 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14503645 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18269865 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138973349 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086747398 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111513992 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113878356 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116919008 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103313068 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179594188 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160261284 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126835735 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070306818 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098947065 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152533472 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131570026 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10807189 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125856956 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093045937 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132617244 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154497183 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117532648 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143012532 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127921553 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087914962 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118687049 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139580143 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127805646 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169233058 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124055931 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071900336 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12525291 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103016418 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080666504 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.1404532 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07427586 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173854762 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097744403 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105233972 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112292978 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10813115 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108218473 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160797704 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1416728 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242225012 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065981766 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103916459 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120625746 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148170516 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088001749 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107847922 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115732307 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077471253 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139516916 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074877638 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122347622 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07522168 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125352722 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132478167 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075419992 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120889286 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10005124 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099358787 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133658922 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159271533 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088991392 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081946374 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167106911 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122110479 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103596878 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143998666 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155295627 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098430827 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101985026 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148390859 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17941907 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088653157 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162129235 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107136545 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082995064 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08700389 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123186376 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112076715 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121575759 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081477175 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118019635 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168019668 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07446088 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094680671 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13265603 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077985797 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080011566 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102415232 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099898853 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094283107 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099239042 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103275273 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136867185 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122433107 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103862736 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268348321 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098851818 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169430197 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088827155 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100552292 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103607126 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069994068 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136001603 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157523112 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079401086 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164476683 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123900514 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104581585 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118112147 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082576847 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140102948 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077953487 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069844697 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145264882 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111016139 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110040604 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150466732 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104531431 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128356063 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118763653 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134608695 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132475162 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128943554 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105124895 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087394302 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112153027 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125650294 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072516562 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091198224 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079649993 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103570568 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095294033 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083049726 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142678785 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124649114 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100162485 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111434026 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096558486 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147077543 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07614397 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128240827 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118218293 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09361609 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150733596 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151917514 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130463051 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098777719 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143620208 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069357633 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073482429 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.229938902 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124817995 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082597067 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083295523 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117989321 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147433812 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129532457 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139280906 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111812101 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121092933 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155257049 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069465178 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114159269 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146594573 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120991504 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103430328 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089361001 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098746302 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141934524 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107286589 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182803996 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113409143 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125688616 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152523597 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098707025 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080154462 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106819586 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135131391 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104265211 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144584577 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098259212 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087364094 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11026517 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073558164 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099604348 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126607523 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119172519 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135463121 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113860153 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132887231 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076839319 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116591976 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119471133 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121335608 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063370086 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118902627 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159946087 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093120336 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118047336 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152340401 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078427019 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123669105 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320200787 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145721767 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084788075 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109706009 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119135519 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12723089 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119552516 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141105415 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107578582 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135221297 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108715799 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084710022 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087314727 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097064176 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103328075 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09500853 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109303465 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114712624 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09423196 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130994189 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10228865 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109065834 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116738375 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096190251 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088110904 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096652756 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174182684 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119014487 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172194189 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098422907 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144779806 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163031457 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074161966 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078541653 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079830241 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139682697 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083230303 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130282302 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097346361 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104794977 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123548823 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141502908 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094631084 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067967723 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108127901 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13429253 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111576066 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097664621 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106137005 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161897893 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099664289 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078423789 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112820995 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103933446 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10163505 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169371119 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060457443 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095852304 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074314839 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079165607 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12440981 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146570687 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.078057721 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10128587 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116016963 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106983801 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123930863 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097740284 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096640058 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111891631 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144176972 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12445281 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087208896 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108655317 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123728443 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145778012 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099401262 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.090695595 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159261988 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142896438 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.14987647 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084319129 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125017879 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108124234 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102634602 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131280152 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080045792 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153980625 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077420133 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127711669 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098168885 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085085998 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120859031 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.093932088 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083848763 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138597675 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110162778 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079218385 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07358294 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110267278 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112930197 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100105545 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.071784472 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130729405 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.069709823 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123035644 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157719207 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077454502 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09859913 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.348530054 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081193405 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109799216 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104340604 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090510807 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098050703 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174779277 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089316401 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152737783 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143358335 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114435702 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138262141 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101017173 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636790293 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078460571 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152601358 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116829814 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17233495 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09747985 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117658122 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108579679 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123373548 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143663704 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105447314 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177693202 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131611136 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115903661 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079193836 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10244509 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102577668 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088588219 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104872739 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113340064 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115384425 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093351936 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115577877 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123334072 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081426361 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094486756 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155097558 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116743205 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143841044 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139672174 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084484277 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116586944 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136770443 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079644243 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122148697 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151758396 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105880318 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097151434 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079487831 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.248241627 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169348585 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073457735 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161876075 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118814686 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10816795 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112346058 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11346178 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129958228 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107106136 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120836674 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092966156 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109883558 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112259907 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081002655 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076518632 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103798955 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111371228 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096613876 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097784455 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096825413 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150813719 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071161674 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095209158 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10275168 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144931372 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173327378 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087218251 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082534057 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118396626 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112461523 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112738927 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120360008 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078826323 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081631331 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081564819 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076367003 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107937683 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111625316 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103546552 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110945421 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163317409 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082440322 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223651192 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094508695 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105075764 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069293798 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078073684 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095017257 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096834737 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107811558 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099716248 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16768598 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093659995 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089382359 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092081545 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072543011 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081592566 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273380298 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1104941 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119742497 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097193785 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062158118 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108904664 seconds)
  done (took 58.350886025 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110920865 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081727862 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097317775 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150451091 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122988662 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.21231139 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158118669 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19978362 seconds)
  done (took 2.795183539 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071235467 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094479712 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099775932 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082842018 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067150696 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069136015 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225421619 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081745782 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066975788 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.08878396 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.08071792 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.07220245 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.423283006 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066200298 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069175268 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064549353 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067528098 seconds)
  done (took 3.431031198 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.371963119 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.367672882 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.373247213 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073422527 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.82024103 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089633469 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.079979006 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096980293 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071802669 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.282270871 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.707098866 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.095055243 seconds)
  done (took 14.080513444 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079711698 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071054261 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083971076 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084132131 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07299315 seconds)
  done (took 2.034538652 seconds)
done (took 102.652512282 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084486397 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.39552179 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054247541 seconds)
  done (took 2.122150072 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087023224 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085371895 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08393041 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083475384 seconds)
  done (took 1.997381729 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07755541 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076310545 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084762749 seconds)
  done (took 1.88970499 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.224314291 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139687614 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087238739 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085653214 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078094951 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079076276 seconds)
  done (took 1.896737938 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074833808 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075505771 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072955203 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076143739 seconds)
  done (took 1.949524316 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079233485 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052619433 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055142664 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055642361 seconds)
  done (took 1.892428979 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091007602 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079055029 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078447389 seconds)
  done (took 1.898258522 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110723215 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084951732 seconds)
  done (took 1.846667939 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084230372 seconds)
  done (took 1.734245399 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102669053 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113734116 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.12858516 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109438638 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136928046 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108993179 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086237119 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086885877 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077207485 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087054701 seconds)
  done (took 2.687358332 seconds)
done (took 22.089702142 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081930011 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366777554 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361315821 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090919741 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669100777 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358278168 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.99988296 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092033697 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113998534 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067770787 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084199178 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649684715 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.988003264 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323796792 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.976650516 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318444932 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650029757 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068725718 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068770279 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067756243 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.986087609 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067775661 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067878616 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068568083 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.64958328 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371585635 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068092114 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319706715 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067786237 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069751958 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355555129 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068157797 seconds)
  done (took 16.192140393 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073608661 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118052687 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073648575 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084024601 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071196874 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070194691 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072030099 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069032876 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119566465 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068527506 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084673436 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067975906 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072019231 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068801895 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08744304 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068317014 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068578961 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068460516 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06840468 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068747749 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086539047 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068301066 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068746937 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068517282 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068454805 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07977328 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068307955 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068364356 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068449097 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07020931 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071564638 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069524388 seconds)
  done (took 4.065982779 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118219778 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125177278 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074456112 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103539882 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113006748 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070233976 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143572903 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092637622 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127516563 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06846354 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08485362 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068080963 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101297323 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069004468 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087700914 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068920683 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069629558 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069042618 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068752438 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068605136 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087633978 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068245123 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06876084 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069534856 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068818822 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081882789 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068749516 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068911357 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068552312 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07050201 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072025642 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06930008 seconds)
  done (took 4.323189332 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075232303 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075649674 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082494748 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084213548 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070338748 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071592715 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072882433 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070395834 seconds)
  done (took 2.274475256 seconds)
done (took 28.510537048 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081847015 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070472431 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073269651 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080719354 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073049933 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078996131 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067400381 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074746817 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072245266 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073217762 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075063659 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067798088 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071007282 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067333172 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073850738 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068326753 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079597996 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071935945 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079400569 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080005836 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.0703861 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072997401 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074398072 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079314678 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080462746 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079303101 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077923584 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073012656 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06939893 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07097445 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077517052 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084636085 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069096424 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.07977089 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068498476 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068138786 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071708272 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068039748 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079322539 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077175582 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070056956 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076137865 seconds)
  done (took 4.764177606 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092093603 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091490655 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08555576 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062259575 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066973195 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065649522 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088776351 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059744155 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059799476 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088313655 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055979085 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059678739 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062520932 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054127694 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059441753 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057152522 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061771795 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05608085 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059363568 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059591738 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058227719 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054809626 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060255119 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065201699 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056550735 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062120835 seconds)
  done (took 3.387907677 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077760516 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083684106 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087717278 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126971035 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10402679 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077016725 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077968007 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09263961 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085709997 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067015837 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071266788 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094338431 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088883811 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07436145 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068234409 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084782168 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082885717 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069422781 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073801365 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091340456 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084786944 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08416506 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093163812 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081587958 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067306902 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07022177 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071855877 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081676324 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072494767 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077105285 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071771747 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071247674 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069935454 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079509365 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071555177 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069547036 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091137445 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077320116 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078036462 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06824848 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.0708515 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068915987 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.10087113 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123896421 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067251229 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074409221 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075721563 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077105004 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067601055 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086379337 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078654463 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06783195 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070914996 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067235737 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067761745 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080564302 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06994912 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070178248 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076877397 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070651513 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086132818 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071546961 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082746587 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06703112 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075459996 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06677008 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06836037 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066806715 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092778248 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069335032 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108575292 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068978398 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068170114 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076053419 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075421515 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073706346 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067738298 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082999445 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077457172 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070790957 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076172684 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070947716 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070711213 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087985407 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069686157 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069485827 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068921451 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073756417 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070254564 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068997052 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08083208 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067655857 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070651428 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084802952 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067463197 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069176486 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074192602 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073123057 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06725762 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078501875 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072301207 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068453439 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076775175 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067746388 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070734023 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077976289 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074052915 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066971172 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072175323 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073909928 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068328316 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069123063 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070538995 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069225229 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075677139 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073834408 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071950124 seconds)
  done (took 10.628948142 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163874334 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154919872 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070863792 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145078735 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076363382 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079537467 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148487728 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094994779 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068283093 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068638945 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069064639 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110294237 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105855943 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.118027177 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078862815 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067817483 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083435399 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113763799 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149356323 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143408788 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083865914 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076943044 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069974779 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069002882 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071186524 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079053134 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085649041 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076659137 seconds)
  done (took 4.434300018 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083515117 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097792789 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073872159 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088918868 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091505122 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067975749 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070298438 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069630295 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080863152 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079082005 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067817292 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073579286 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074717833 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071352549 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069055078 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074785027 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075301763 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069295658 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070943432 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073041997 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077718124 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081580737 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071994581 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06752952 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07486914 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067241972 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064720494 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084872981 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06863668 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090071278 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065916607 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075373749 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081611053 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068537764 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068005702 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067732753 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067395974 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067563272 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069769489 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066812986 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066460794 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057779843 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066724657 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079582495 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073832104 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05716812 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072810721 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072780029 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073277605 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065578547 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070747657 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070352856 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070939498 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075065788 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072326364 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07285242 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068868856 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065884905 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075720544 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067905697 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064832552 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066199443 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07237899 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066208326 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075634475 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071961681 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066365916 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067344811 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069323124 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073606787 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067479406 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070959646 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065141109 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069437194 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072443634 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069332025 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068731421 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066087704 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067136698 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067877778 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056056969 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067676052 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05392304 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070591201 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065762457 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066205275 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067529499 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072532636 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079777334 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069182536 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073655091 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068806135 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066540507 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070674001 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060606835 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070318947 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083070013 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082783356 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06765499 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065678173 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081910694 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072133134 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067053317 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056345563 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075125474 seconds)
  done (took 9.177937085 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098900254 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088754327 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070181454 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08374238 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.091267704 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086354909 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074907982 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076642443 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069772762 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.08273952 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073853276 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077075749 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06864334 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077583668 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.094087432 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077313107 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070283518 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07752995 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072160028 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100842998 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083214567 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082615869 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.075289493 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068742432 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075883627 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080274302 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090087809 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080369813 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078805082 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.07580734 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080140946 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089220086 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074315942 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072281614 seconds)
  done (took 4.440801035 seconds)
done (took 38.494479156 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.743636726 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.920529549 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.743580307 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.127214585 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.818955289 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.95846595 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.803700913 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.75017351 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.845106797 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.773359088 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.999880116 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.799438435 seconds)
done (took 64.963310558 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.776330351 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.878238395 seconds)
    (2/2) benchmarking "String"...
    done (took 2.013239514 seconds)
  done (took 5.570093012 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.059023917 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.338019563 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.978285663 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.73497783 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.733400737 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.021102258 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.530114166 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.251669315 seconds)
  done (took 30.263647162 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.909489495 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.928877094 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.380919232 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.417114792 seconds)
  done (took 15.356297945 seconds)
done (took 62.880353055 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.733684772 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.758821518 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.769076106 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.711774581 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.78625565 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.745961844 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.001093739 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.022411276 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.727903703 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.717062425 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.729697155 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.149915776 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.734811266 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.188909227 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.727927552 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.735813103 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.76922251 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.321158204 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.881621611 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.743843628 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.736208567 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.761472953 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.728771413 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.732054994 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.729983235 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.725829803 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.153822306 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.733022702 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.337919793 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.728155142 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.753167934 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.261498745 seconds)
  done (took 204.009074318 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.724970118 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.580206461 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.629547461 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.732262589 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.082361932 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.920509174 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.856807935 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.138757472 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.726145489 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.74994702 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.883525654 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.725775484 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.907292243 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.719113145 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.729146236 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.729256636 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.897050901 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.935271309 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.724924803 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.991458122 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.729665491 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.735377219 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.717167636 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.880759822 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.725195189 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.736445463 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.729904775 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.734138508 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.914660406 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.872457639 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.730156739 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.742107385 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.849802737 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.592904417 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.727142325 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.727697048 seconds)
  done (took 167.198450914 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.034074965 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.730161835 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.729965277 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.728845476 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.742252407 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.726110563 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.910097727 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.850598721 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.202411443 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.29682463 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.780683381 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.574617682 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.727581388 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.795567624 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.739049863 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.729810453 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.743803111 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.754955882 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.727571845 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.730346008 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.85296012 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.741119131 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.832669331 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.734529102 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.730483205 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.734875378 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.09807133 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.729772034 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.734680273 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.086858844 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.998975019 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.728410192 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.729603189 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.727736633 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.626961232 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.816664496 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.729974057 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.735299178 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.72766623 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.730427912 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.951318 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.728388339 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.731000153 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.734427833 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.903061382 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.730186626 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.853557011 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.729286724 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.239715162 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.72723499 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.732816208 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.489039126 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.42992844 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.728911285 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.730371048 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.733783498 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.731752922 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.731193094 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.737062273 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.424385721 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.806447931 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.73332167 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.733264513 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.736182747 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.729674268 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.872563837 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.731567412 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.978177875 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.792205948 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.861389709 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.849364526 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.733482044 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.801180684 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.824067874 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.728797029 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.731015154 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.733260583 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.732651819 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.814644423 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.731623715 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.860581366 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.731145463 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.740294081 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.732721819 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.783545871 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.801108185 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.730327435 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.639533506 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.732419627 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.732451792 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.046856559 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.799866858 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.731132983 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.73081541 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.732151794 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.731563428 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.864540257 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.849682163 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.512398828 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.732836753 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.571155661 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.732423453 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.87408637 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.73075509 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.93893285 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.735001589 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.815899409 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.736515163 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.735296549 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.734241581 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.764117528 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.735742489 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.79205914 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.732486445 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.102136264 seconds)
  done (took 398.130238982 seconds)
done (took 773.097029715 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.418105444 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.376739583 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.495499257 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.404938757 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.381306386 seconds)
  done (took 13.750241201 seconds)
done (took 15.422179289 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.821984212 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.825162659 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.758093213 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.82350253 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.755283461 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.822786135 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.803903583 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.75996382 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.791024011 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.758890505 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.79125097 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.757971006 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.744650059 seconds)
  done (took 24.887865401 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.964689943 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.969512969 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.802992737 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.973391112 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.776658538 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.961427053 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.896990382 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.883702575 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.886484599 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.748746248 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.748261032 seconds)
  done (took 22.28896122 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.971216156 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.974223482 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.806348778 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.978541824 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.779709683 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.972405202 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.896877503 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.886466164 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.88594708 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.753344461 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.748367623 seconds)
  done (took 22.329524845 seconds)
done (took 71.179932875 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.741695112 seconds)
  done (took 3.417044527 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.765713452 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.902954288 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.751647943 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.748041629 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.742535445 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.74465005 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.747319724 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.743346823 seconds)
  done (took 15.825257401 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.739621584 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.74063744 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.742389382 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.742714391 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.739467824 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.742093314 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.743325766 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.738945328 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.743856518 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.742834102 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.739982743 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.74281218 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.74096767 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.740264649 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.743677779 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.744499415 seconds)
  done (took 29.542593753 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.741094901 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.740817015 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.744221302 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.741902468 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.739700253 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.739752853 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.743216251 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.741220531 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.741997239 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.741528989 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.741442595 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.739635916 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.742065393 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.740311738 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.742372833 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.743432484 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.74210872 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.742869109 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.746721737 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.743156721 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.744508803 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.741967683 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.742237656 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.743423964 seconds)
  done (took 43.492657764 seconds)
done (took 93.955223569 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.439274788 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.179953711 seconds)
  done (took 8.298946132 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.746488581 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.745408274 seconds)
  done (took 5.210093082 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.74539661 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.7445969 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.745312448 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.747916729 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.746793917 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.745924553 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.745195445 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.746684948 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.744515345 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.746968159 seconds)
  done (took 19.138186239 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.746359641 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.74523106 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.742940684 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.745055465 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.746812504 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.744226356 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.745155939 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.746228354 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.745054776 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.744361916 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.74547017 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.743571572 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.747883099 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.744051931 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.746629099 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.744422434 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.74384107 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.742913018 seconds)
  done (took 33.089911565 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.74775462 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.745611878 seconds)
  done (took 5.174584133 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.743976264 seconds)
    (2/7) benchmarking "second"...
    done (took 1.744174585 seconds)
    (3/7) benchmarking "month"...
    done (took 1.743991188 seconds)
    (4/7) benchmarking "year"...
    done (took 1.746889024 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.743407645 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.745164143 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.745400752 seconds)
  done (took 13.895265349 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.747717382 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.902864899 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.973281826 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.428826676 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.74992738 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.74964811 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.721583602 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.752210424 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.750685216 seconds)
  done (took 19.457595355 seconds)
done (took 105.94150565 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.569222475 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.742159709 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.136466947 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.832472547 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.758448474 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.040958887 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.769828262 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.964712135 seconds)
done (took 42.493872004 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.834042199 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.275696937 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.310675776 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.224130738 seconds)
  done (took 12.492467449 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.727767828 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.25910616 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.779923003 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.346144755 seconds)
  done (took 19.814963367 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.113169906 seconds)
    (2/2) benchmarking "read"...
    done (took 2.106300005 seconds)
  done (took 5.906822134 seconds)
done (took 46.730132162 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.748506937 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.747621677 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.748400173 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.746826257 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.749074347 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.74536552 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.745944553 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.749872548 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.75159393 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.749825057 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.749362369 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.746412887 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.747256586 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.747298425 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.750071597 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746702435 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.74788161 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.746635886 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.746270062 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.749650341 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.749655025 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.751939861 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.748026348 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.746209341 seconds)
  done (took 43.639916661 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.754966644 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.749409167 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.750923252 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.75014008 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.750075766 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.749702475 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.756265006 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.747698111 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.750720047 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.749240713 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.747372206 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.747327022 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.751047967 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.747090818 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.75025148 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.747906886 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.750115009 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749827449 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750185819 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.748962937 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.749634898 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.748357434 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.748224415 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.752409149 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.746720463 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.74630929 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.751128522 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.749382328 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.751353524 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.751892021 seconds)
  done (took 54.178955286 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.755677366 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.757258854 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.751384036 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.750685415 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.754049827 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.750337753 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.750922268 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.751831162 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.750932727 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.754265485 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.750706793 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.750194492 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.752152912 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.751121297 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.750925333 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.758241515 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.750347444 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.75149679 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.752679726 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.751474516 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.752596165 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.754244173 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.753083685 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.752246474 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.752611146 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.750927354 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.753910302 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.752857185 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.753737575 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.752189958 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.75286815 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.752511655 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.751655721 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.753612661 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.753903324 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.751990548 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.757112054 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.762537672 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.756588082 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.751718978 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.753479374 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.754295572 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.75315602 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.758634449 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.752876078 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.752946393 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.754191678 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.756010769 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.755669238 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.76208391 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.75379162 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.753566682 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.753718917 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.751921235 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.75304264 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.753836585 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.754481178 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.753164949 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.752991133 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.753731445 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.755252831 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.754798738 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.75363061 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.755458592 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.753545666 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.754849843 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.756518075 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.755089435 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.752637236 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.755023259 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.756985652 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.755888439 seconds)
  done (took 127.9553021 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.754110236 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.75214004 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.752910202 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.753064379 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.75110364 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.75835305 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.753615971 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.75586068 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.753235048 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.756312174 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.757794896 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.754044631 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.753382264 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.756305878 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.755912551 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.752307604 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.757930284 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.753562775 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.755724012 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.755711125 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.756535217 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.75335238 seconds)
  done (took 40.296903298 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.756496564 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.75575179 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.75386373 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.754365308 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.753619295 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.756593832 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.755879482 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.754746991 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.755879184 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.753957209 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.754874809 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755746881 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.753444487 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754731533 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.754088376 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.754998133 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.760027086 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.753652276 seconds)
  done (took 33.2838253 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.754420832 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.756474757 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.75788455 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.753677958 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.757324891 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.755841846 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.756530933 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.758598786 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.76033733 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.756192206 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.757950304 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757115005 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.759669283 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755589702 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.757828953 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.75473698 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.757922676 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754785927 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.757696612 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.755340196 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.756969775 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.758752885 seconds)
  done (took 40.34327809 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.759941623 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.758558253 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.760909525 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.757389854 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.756239298 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.758247288 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.757910374 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.754941612 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.759207694 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.758554763 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.755981738 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.759438712 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.75518464 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.758025122 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.756679079 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.755582617 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.759240337 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.755306621 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.757938714 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.756418442 seconds)
  done (took 36.84390395 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.759029892 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.759098025 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.759329485 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.760599018 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.763873207 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.760911077 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.761175479 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.761734982 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.761117795 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.760514595 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.763486236 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.760773864 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.76050119 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.761198737 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.761539267 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.76123805 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.762832313 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.760316356 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.762024938 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.760214791 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.763727051 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.761713685 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.758841274 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.761426107 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.762491481 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.760365017 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.761900006 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.76279475 seconds)
  done (took 51.008252619 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.761593923 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.760930674 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.758686436 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.758743967 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.760508468 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.759144884 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.759129833 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.758834677 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.760624222 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.758672487 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.759891913 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.760549955 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.760930801 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.760432878 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.761137335 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.761848821 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761447429 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.757882233 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.758040574 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759292335 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.759639422 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762392237 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.761104232 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.758456966 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.758919941 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.760138089 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.766801526 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.759178545 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.761300249 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.759459694 seconds)
  done (took 54.501400944 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.778019332 seconds)
    (2/2) benchmarking "in"...
    done (took 1.782844632 seconds)
  done (took 5.254275403 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.758087408 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.760185908 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.762489159 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.757090576 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.760856243 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.761838315 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.762803111 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.758800163 seconds)
  done (took 15.776501837 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.763142464 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.763263399 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.762536643 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.762494285 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.764203494 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.763730142 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.773038128 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.760615396 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.765197943 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.765304396 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.769216925 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.772567633 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.772841312 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.763733823 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.763806935 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.764901158 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.760980887 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.763012293 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.765000734 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.76286275 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.763623541 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.76605776 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.765293173 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.763056614 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.764562601 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.777726343 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.768478316 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.763027371 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.762904016 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.773264502 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.763569081 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.758038703 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.762372028 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.762117993 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.76218544 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.765484131 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.773850189 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.764243777 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.77141671 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.762886707 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.765842185 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.759038226 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.766029071 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.767091113 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.763468417 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.762796655 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.766754828 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.758708754 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.765395903 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.766594524 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.766989473 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.76321355 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.762510595 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.774805979 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.768621182 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.772659349 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.765238867 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.770623928 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.774318953 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.77789059 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.781307211 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.773844145 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.767949833 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.766794778 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.776916245 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.79130906 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.773287338 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.762104001 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.768999135 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.76618918 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.775247541 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.78018575 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.775384822 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.763788091 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.76922253 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.764119668 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.768591868 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.765158636 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.774854184 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.768205187 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.768234784 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.765658031 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.77592033 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.78884673 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.766886767 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.765282719 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.765683153 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.76544984 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.767245398 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.77841537 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.767840828 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.765508817 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.764608816 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.768281792 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.771234673 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.768384237 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.767293333 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.770161774 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.764531011 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.764227997 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.768213636 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.772267931 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.778401582 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.767604026 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.765876446 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.775975403 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.766755791 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.767531576 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.778701853 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.767213133 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.767018857 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.769679662 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.77715032 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.762523645 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.770787402 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.77806123 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.769510567 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.772717617 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.766874101 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.767500555 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.777040909 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.795200605 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.768073655 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.766238107 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.775537051 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.782678395 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.767424627 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.773729606 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.767362097 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.76302637 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.765486834 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.771735129 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.768070667 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.769542437 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.769552198 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.772088852 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.768157008 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.768084458 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.769507923 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.770921715 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.77229478 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.771015381 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.773998943 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.773813631 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.767047019 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.771645943 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.779784861 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.770452072 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.771463823 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.771586746 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.765333728 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.769709175 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.771234229 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.768977392 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.770929514 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.768623192 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.769861984 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.769523762 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.766903353 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.769813738 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.768860453 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.770536175 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.774069383 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.769103095 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.773848431 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.768758467 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.766348609 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.768350437 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.769613174 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.771307722 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.771750403 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.767800509 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.774725417 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.777154469 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.769083552 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.770555416 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.777365403 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.771262098 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.771738924 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.771898972 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.774190053 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.785828441 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.770510798 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.778524402 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.771324519 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.770925692 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.768921116 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.773108554 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.772690226 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.771008501 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.775400921 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.777945278 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.78692419 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.785456726 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.771669337 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.772703694 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.772798658 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.775919139 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.77873713 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.771169912 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.770341056 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.771682083 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.772605181 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.771525829 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.775806607 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.769811491 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.770177683 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.770128023 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.771383729 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.76919342 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.769507203 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.772654431 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.773574658 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.767494397 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.769824889 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.77147417 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.76888098 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.767115996 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.771720682 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.771735899 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.770949267 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.770859575 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.782306297 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.771126047 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.773672221 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.772708259 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.772672195 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.772182116 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.770503455 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.775712903 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.774667124 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.780278212 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.77484309 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.773743633 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.779562379 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.772931507 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.772349398 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.776132112 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.771233149 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.770230901 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.775213546 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.778949451 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.771462324 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.772779174 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.772945076 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.774017623 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.773765213 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.779851862 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.769191012 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.774020455 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.771462657 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.777513569 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.770078898 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.775406651 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.775543787 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.773890335 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.778364954 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.772066302 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.773032376 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.775583054 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.772452768 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.771749642 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.773575128 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.777444256 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.781112685 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.779927401 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.775417029 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.778500442 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.774888674 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.775303929 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.775691965 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.773776351 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.773962536 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.788907507 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.781274492 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.782185978 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.778319271 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.773015293 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.782862181 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.776850508 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.77999188 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.775684168 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.777719636 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.776224965 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.77626675 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.77127781 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.777198038 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.775474786 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.777787387 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.77829144 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.777446125 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.776329617 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.774384677 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.774212801 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.775629419 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.77503349 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.777203972 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.774794922 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.780788769 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.778590927 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.77592963 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.77753412 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.784442044 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.776284015 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.779767119 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.777941185 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.778265911 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.777376997 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.780638404 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.776198455 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.780802505 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.782962065 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.780317036 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.790312234 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.777707051 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.78955716 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.776311384 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.780448204 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.783661248 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.773081728 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.777710543 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.779088876 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.775543188 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.785984925 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.777880797 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.778463447 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.780947594 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.776704027 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.77779584 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.776470808 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.778047627 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.777966334 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.776725611 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.78835791 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.78124269 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.78300933 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.781102981 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.775098469 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.777247066 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.777831705 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.77621333 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.786016902 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.777885996 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.780790543 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.780355059 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.778917006 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.778577197 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.780439104 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.77685094 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.774051433 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.777604344 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.787092338 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.780390127 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.78200857 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.777971232 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.791378509 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.777832355 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.788167495 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.77854362 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.780445707 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.777364324 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.777725661 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.782758489 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.779596875 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.781355023 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.778946316 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.781074765 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.781518089 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.77915144 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.783779096 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.781080762 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.780681963 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.78123225 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.790101937 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.802827585 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.782362114 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.783557395 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.774085658 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.782540824 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.783806454 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.779792172 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.778888038 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.782674787 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.790811355 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.78679082 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.780395246 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.780121263 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.780335055 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.778931831 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.77783609 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.779194704 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.779514444 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.781420337 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.782451634 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.780528052 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.786588793 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.778535522 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.783656218 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.78353999 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.782718934 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.795263878 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.780885117 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.78260461 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.781106073 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.779926881 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.783162796 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.784319773 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.781538702 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.782775238 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.780029847 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.783624324 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.788928091 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.790324996 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.785417434 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.783081432 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.780507262 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.783046623 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.783417243 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.781547249 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.781212364 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.780636016 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.783619959 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.780984968 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.784328565 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.780001453 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.779381847 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.784647768 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.780807841 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.786271746 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.791273313 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.783765654 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.779070326 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.783277139 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.780775957 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.78362187 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.785943265 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.794116763 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.785993873 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.796630911 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.79359713 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.78780884 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.785498318 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.785752052 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.794696879 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.782255427 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.784577579 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.781155597 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.788824663 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.785022394 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.789018991 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.781920917 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.790944312 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.785843031 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.7864739 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.794945965 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.786447495 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.785043723 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.785671056 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.790512645 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.786349031 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.779299189 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.781558229 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.783436798 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.794466676 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.788919511 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.783620317 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.789270076 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.783300162 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.78595461 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.789212478 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.783517999 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.784704402 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.779363225 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.78627625 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.783334418 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.782653561 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.781695859 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.786285881 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.786909557 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.788677256 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.792525929 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.781536464 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.787945581 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.787138393 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.786811248 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.786056933 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.783281129 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.781848845 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.782189518 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.786895007 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.786754155 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.787305214 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.788756039 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.786470252 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.786027965 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.786309815 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.786595947 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.788400078 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.796355521 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.790867611 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.782908483 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.785607012 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.786217167 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.790532782 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.786779997 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.786284683 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.788521615 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.789833792 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.78347928 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.783136125 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.785864102 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.78907218 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.805652096 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.784446533 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.788127414 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.788420082 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.792820926 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.785744906 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.78289401 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.785533836 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.791801407 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.788706414 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.795427569 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.78808871 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.793167893 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.786777949 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.787109193 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.789126206 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.791269772 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.795999448 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.791794556 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.786173344 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.786514289 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.792885306 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.809269662 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.788063941 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.798724948 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.819813902 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.787950716 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.790790968 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.787575374 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.78743183 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.787911073 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.791485103 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.786783274 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.787213489 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.78664115 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.787358105 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.791006128 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.795065381 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.790356181 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.787591254 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.787366531 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.788915713 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.794244873 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.784361856 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.788927489 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.786615152 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.788847858 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.789659126 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.78852134 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.792108596 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.80468485 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.801938031 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.78765865 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.788805797 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.78799069 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.79431335 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.793039989 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.800543338 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.796736838 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.790121938 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.790901938 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.792445161 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.790475006 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.786664784 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.792380289 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.791702341 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.78936805 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.785738226 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.806363084 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.797419526 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.795776449 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.794741736 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.789639555 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.790698936 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.791672852 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.790393743 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.79019603 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.793866062 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.791996713 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.793535022 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.790672102 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.789219697 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.794136565 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.79730583 seconds)
  done (took 1061.687805048 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.78660125 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.788280097 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.786928693 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.787400538 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787498578 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.788249069 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.786231847 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.786692073 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.789351195 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.786445108 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.78672328 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.785915034 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.786730266 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.790339112 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.78851677 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.787729449 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.789252795 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.788344133 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.788004993 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.788552009 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.78831127 seconds)
  done (took 39.264265183 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.790114609 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.788051762 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.786405989 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.789518 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.789887887 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.791234321 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.790288811 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791900339 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.791021013 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789983635 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.791930875 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789790161 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.787144078 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.787411632 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788279298 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.792037567 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.789263846 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.789168197 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.791588384 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.789513532 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.791477929 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.788326442 seconds)
  done (took 41.097390085 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.791712856 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.795023815 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.79520237 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.787089442 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.790947912 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.789495547 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.791852556 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.792728864 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.792229028 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.795431302 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.792807814 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.794079287 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.801255964 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.799633606 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.797022971 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.79376728 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.938607475 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.792958845 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.793116818 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.793415072 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.789759329 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.801790903 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.789549159 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.789333062 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.794453126 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.795117761 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.794499401 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.793071061 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.793932423 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.796675995 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.800046989 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.794369994 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.794505926 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.798088891 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.793176787 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.794661222 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.800512104 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.795575169 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.791871853 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.79293937 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.806239856 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.814384635 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.796414865 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.805354984 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.793614345 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.794688168 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.800126526 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.80222823 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.793251054 seconds)
  done (took 89.844405181 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.79461392 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.79396285 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.792991657 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.795903641 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.79527292 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.795730118 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.79369675 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.795059534 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.79539486 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.791831176 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.793541106 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.793246226 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.792636375 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.794152087 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.794680165 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.792306081 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.79209183 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.795243014 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.793147343 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.794867688 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.791694167 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.793643336 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.796756399 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.793561659 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.7966778 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.791536574 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.793701206 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.795057567 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.792218911 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.792769625 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.794989749 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.795937333 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.796217811 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.794133233 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.794153149 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.79664027 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.79620641 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.796341604 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.79679251 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.797814876 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.796625381 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.797222944 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.79775132 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.797765437 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.7950012 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.794328741 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.795152636 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.793609934 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.793803377 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.795395583 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.798709601 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.794527239 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.798848851 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.796468125 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.798011261 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.797222898 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.794455758 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.794470954 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.797816304 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.795057483 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.796717993 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.799692312 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.794509 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.798263699 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.798154141 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.794603002 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.795029027 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.797060981 seconds)
  done (took 123.802562306 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.797189468 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.800818401 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797346686 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.802089702 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.800244222 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.798915428 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.797626705 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.799507941 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.799243442 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.798154296 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.798948087 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.796235982 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.798413787 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.798779188 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.799904633 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.79919289 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.79903381 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.801288683 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.801252214 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.800254752 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.798290248 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.800885626 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.799536042 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.801392185 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.800039901 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.799567204 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.799994951 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.801516902 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.803125369 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.800505913 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.799573936 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.800686232 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.800865319 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.799705902 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.80283104 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.799592345 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.800349325 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.799567215 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.800552388 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.801024748 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.802235153 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.800665975 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.802070354 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.800759477 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.800168124 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.801139254 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.801443707 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.802136368 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.802468843 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.800834679 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.79961483 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.800301909 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.801223456 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.801254139 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.801633929 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.800111344 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.802121025 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.803117665 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.800881044 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.800187613 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.801158675 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.800728584 seconds)
  done (took 113.353569528 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.80374883 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.800961751 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.799082945 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.799047771 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.801541171 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.798042109 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.802819881 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.801593023 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.802699636 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.800756415 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802805304 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.799429351 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798491849 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803008886 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.79891431 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801863391 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.801111782 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.801446526 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.800539641 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.799523891 seconds)
  done (took 37.750380896 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.801102626 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.803480142 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.800045784 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.800926246 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.803129388 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.800906444 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.802374462 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804117099 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799065833 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803977793 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.802623224 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.803700839 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801599225 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.800865993 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.804103534 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.801248626 seconds)
  done (took 30.569454869 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.800428561 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.801963341 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.804752074 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.804526927 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.800822366 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.801694923 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.804490749 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.801234951 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.800692123 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.804180146 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.804552962 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.803890442 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.802364154 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.805859338 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.799514592 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.803271741 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.801069446 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.802209549 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.803389824 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.806021368 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.802588057 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.801768012 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.802641627 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.804544149 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.801673041 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.80330041 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.80261974 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.801936398 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.800792599 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.804074539 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.801789141 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.801744693 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.803513049 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.80149776 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.805704378 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.805365726 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.807243834 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.803794049 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.804530468 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.804672651 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.805208887 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.80504334 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.804436739 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.804848478 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.803149245 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.806217486 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.803848729 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.804073424 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.803909409 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.804381093 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.806115384 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.807299354 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.806502843 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.807641471 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.804525201 seconds)
  done (took 100.93803558 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.80554242 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.804166198 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.802994376 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.806993799 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.805302297 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.805120581 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.805442589 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.802567174 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.803812788 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.808151275 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.80456779 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.806554883 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.804646199 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.806209521 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.804690439 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.80673075 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.803487747 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.803943984 seconds)
  done (took 34.229601245 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.80476935 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.804272104 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.806212134 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.80522493 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.805191713 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.809631099 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.805292376 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.807708979 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807273334 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.806544862 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805730329 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.808343877 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808754736 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.808531751 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.807295249 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805072628 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.8090351 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.808892764 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.806104127 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.806992092 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.809332799 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.807389585 seconds)
  done (took 41.493960096 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.808978987 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.810098606 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.828442801 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.856845012 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.844268259 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.808729765 seconds)
  done (took 12.699445243 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80751006 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810649792 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.807043363 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811651575 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810081391 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806448689 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806207568 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806464547 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811006322 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806988338 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807903462 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809502674 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80902637 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806384297 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81133706 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80920279 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806059036 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80733429 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808103067 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812274704 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806859263 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80934611 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807030376 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807271849 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806759314 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806757615 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811326036 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807826813 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807309214 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810071594 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810419425 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807752287 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808401878 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8102609 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812474474 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812335202 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808347397 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810184056 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811414293 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807142148 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.811504252 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810900943 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.812058732 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808009971 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809944443 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809304279 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8095662 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80826343 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808491884 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813708472 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810962213 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80908377 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811438729 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811730919 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809727677 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813518651 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81119184 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809219022 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813478087 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80966316 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809087557 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811021062 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809684705 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808951684 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809946006 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808909888 seconds)
  done (took 121.163919908 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807573939 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.808546386 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807889197 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809934608 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808813239 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811368573 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81033221 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810515812 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810208325 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810386353 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813621553 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809959171 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809319203 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809864664 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810020062 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810913557 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.812389058 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810665335 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810670178 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81314506 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810024389 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810010556 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811717736 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812224509 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811576983 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813995831 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812016492 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811668248 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813339471 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811784268 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811205134 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811132431 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812593897 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.814175272 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811094905 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811486007 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809628509 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811458698 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810116294 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812581811 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812864958 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8131673 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811360434 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812348878 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811115187 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811532499 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812067232 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81202338 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811926647 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81211873 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813341848 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812796923 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814731723 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813521734 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81233331 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813017141 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812622459 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812685817 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814157539 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815370723 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.812210732 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814922131 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814183015 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813423423 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812731392 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813437628 seconds)
  done (took 121.322293689 seconds)
done (took 2473.980794603 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.894927664 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.094862865 seconds)
  done (took 15.736750589 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.980913272 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.932028282 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.818769104 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.86367158 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.813491292 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.841962162 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.838386724 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.815340343 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.818089866 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.818691027 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.819364887 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.004336139 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.825000721 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.81713656 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.818162134 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.913133505 seconds)
  done (took 51.491293915 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.822299718 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.821866376 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.833674213 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.825699009 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.821288187 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.842312952 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.856747298 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.826068503 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.885247947 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.832818244 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.948784332 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.830230253 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.822982506 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.879843034 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.833448712 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.836605501 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.908702009 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.895553698 seconds)
  done (took 35.076643382 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.899942516 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.825759001 seconds)
  done (took 10.485459487 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.831212876 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.818761357 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.840226707 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.81714141 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.836041805 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.814818657 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.856277509 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.819119885 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.854523678 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.82865287 seconds)
  done (took 70.071910758 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.828799943 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.823397717 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.823461306 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.820830749 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.815654189 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.816922017 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.822567672 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.815763631 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.515945106 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.856038943 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.825649115 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.827654403 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.826497768 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.826082921 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.819436835 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.846309674 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.934721746 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.820751287 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.818281102 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.828425211 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.823471067 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.912583328 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.838527257 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.823008084 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.852202724 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.51449872 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.829883943 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.82788005 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.961184499 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.819208976 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.822731036 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.823084786 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.825741849 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.214017099 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.100486742 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.821565435 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.830198058 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.829611936 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.819892945 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.993413899 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.823309771 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.828565919 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.815675139 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.082169249 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.904195744 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.863379102 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.188467079 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.826233235 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.825900664 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.8558068 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.82675808 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.82542363 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.83712681 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.33564537 seconds)
  done (took 130.190390337 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.821720936 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.402912386 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.982926035 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.820715254 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.102105824 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.062131725 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.819772633 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.870341257 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.821062959 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.072319603 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.998024923 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.939225443 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.819634776 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.821842023 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.817833306 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.815229426 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.978306745 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.893091467 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.820655941 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.816628455 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.856525152 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.090431355 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.948126048 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.823991583 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.841342693 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.049255895 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.952962858 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.940708326 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.345563446 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.820443847 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.891261861 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.820097112 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.818541158 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.818216216 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.988039284 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.930504161 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920374148 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.821343012 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.820796776 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.818957089 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.485605413 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.046592981 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.930911325 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.961570524 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.070585517 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.050716774 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.470743033 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.819250335 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.458060223 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.017107066 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.029771702 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.081089221 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.949871146 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.825609691 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.077329301 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.818977691 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.818943635 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.08342459 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.048922831 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.93669738 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.821964356 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.822799615 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.81772662 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.138923218 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.826703119 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.929511123 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.827980722 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.819620594 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.935958899 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.937906425 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.051075723 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.067794043 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.849400082 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.741859298 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.334200421 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.10955233 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.894632468 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.086662117 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.821607083 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.820574897 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.918615698 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.575241407 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.997525835 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.140603311 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.089176234 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861793028 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.425522163 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.82309451 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.07290249 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.074641459 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.049987433 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.069681579 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.995102982 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.147608467 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.821331815 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.823138147 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.041942757 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.955800806 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.824566375 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.186582955 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.07126518 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.555651889 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.854599125 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.13212902 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.964281949 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.826898215 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.45149777 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.823334256 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.024580337 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.867700264 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.823748644 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.826929509 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.068904609 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.694833476 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.823571525 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.610513538 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.892474394 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.826204334 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.089335701 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.822609383 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.066095389 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.825522818 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.140228889 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.349281284 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.86861568 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.017473215 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.071325053 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.619017269 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.094517865 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.140214324 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.948655623 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.086155567 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.652559903 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.823291449 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.110875541 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.823662565 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.824727674 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.994779861 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.826716019 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.98163415 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.82781221 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.089965787 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.849314805 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998532006 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.825873053 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.099661057 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.869754047 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.87888055 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.824964679 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.942913088 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.828645641 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.873333063 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.010458222 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.82949973 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.821888771 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.393911895 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.824277198 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.975409875 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.125988727 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.849122299 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.898595101 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.354089217 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.825075215 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.922238992 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.854547464 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.433205713 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.82648403 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.002154892 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.82722979 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.775583957 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.827009486 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.142090923 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.048696953 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.830798419 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.827541449 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.623500157 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.513857214 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.828406301 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.007072099 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.064525696 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.48245819 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.049195561 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.829115283 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.959419674 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.830778426 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.906704878 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.178218524 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.826048472 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.828080232 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.828319953 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.829455533 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.827329497 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.071928023 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.857882567 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.512532271 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.967183285 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.076711701 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.137823993 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.097989917 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.875192242 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.832356432 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.094948814 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.828793961 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.897133888 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.830716069 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.853642846 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.078959081 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.828548844 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.062957886 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.120418055 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.88078371 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.881784554 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.832257521 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.831214395 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.828627557 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.979130863 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.931414339 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.828485723 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.827945135 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.947770177 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.959457052 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.016848338 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.424628723 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.011475411 seconds)
  done (took 894.187711087 seconds)
done (took 1208.986660797 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.828047756 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.830027415 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.816444129 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.835270164 seconds)
  done (took 29.074530879 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.841346725 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.842093996 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.842243362 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.841809356 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.841286439 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.841018496 seconds)
  done (took 12.818455689 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.869505725 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.832770079 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.832404063 seconds)
  done (took 21.303591303 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.909139941 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.250980196 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.945199624 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.286171298 seconds)
  done (took 10.160714774 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.840453313 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.840869313 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.840478456 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.841492471 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.843154506 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.843385606 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.84146012 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.841177227 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.845500159 seconds)
  done (took 18.348321875 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.944509041 seconds)
done (took 97.415673934 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.830539299 seconds)
    (2/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.936978036 seconds)
    (3/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.235966987 seconds)
    (4/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.745529784 seconds)
    (5/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.918946941 seconds)
    (6/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.837783803 seconds)
    (7/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.416246379 seconds)
    (8/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.011243228 seconds)
    (9/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.926243631 seconds)
    (10/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.224899294 seconds)
    (11/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.905684086 seconds)
    (12/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.11970264 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.966634464 seconds)
    (14/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.052304677 seconds)
    (15/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.087872243 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.256123585 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.430766193 seconds)
    (18/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.436824807 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.874513276 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.219259278 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.861364221 seconds)
    (22/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.928555799 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.854689024 seconds)
    (24/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.882243042 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.075413492 seconds)
    (26/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.847216916 seconds)
    (27/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.235420898 seconds)
    (28/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.744981686 seconds)
    (29/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.515173725 seconds)
    (30/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.35800431 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.839833013 seconds)
    (32/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.092854665 seconds)
    (33/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.833925107 seconds)
    (34/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.230887703 seconds)
    (35/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.846540281 seconds)
    (36/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.372581781 seconds)
    (37/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.13700516 seconds)
    (38/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.985685886 seconds)
    (39/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.838831887 seconds)
    (40/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.195135134 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.969272833 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.17709291 seconds)
    (43/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.862871911 seconds)
    (44/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.939306844 seconds)
    (45/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.017903552 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.750861676 seconds)
    (47/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.930409523 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.88563288 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.71878371 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.824031388 seconds)
    (51/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.296061251 seconds)
    (52/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.073180539 seconds)
    (53/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.925551131 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.948373858 seconds)
    (55/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.03565303 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.094181183 seconds)
    (57/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.009008531 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.170513937 seconds)
    (59/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.864487112 seconds)
    (60/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.838865004 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.655931131 seconds)
    (62/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.355904645 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.957659099 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.84044653 seconds)
    (65/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.061938751 seconds)
    (66/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.826689132 seconds)
    (67/309) benchmarking ("map", identity, Float32, false)...
    done (took 3.461222212 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.901311158 seconds)
    (69/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.037780421 seconds)
    (70/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.82291604 seconds)
    (71/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.912511867 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.838084816 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.095122572 seconds)
    (74/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.14494356 seconds)
    (75/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.348039342 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.923129916 seconds)
    (77/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.176267666 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.91746671 seconds)
    (79/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.032908879 seconds)
    (80/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.177817264 seconds)
    (81/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.824377709 seconds)
    (82/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 3.539173316 seconds)
    (83/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.214005176 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.954191239 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.791921835 seconds)
    (86/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.520449557 seconds)
    (87/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.987622557 seconds)
    (88/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.008193926 seconds)
    (89/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.828365154 seconds)
    (90/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.025923209 seconds)
    (91/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.870805962 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.861085945 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 5.542506847 seconds)
    (94/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.857723603 seconds)
    (95/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.970658023 seconds)
    (96/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.933531951 seconds)
    (97/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.840746477 seconds)
    (98/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.201568625 seconds)
    (99/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.870553912 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.060125325 seconds)
    (101/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.05133496 seconds)
    (102/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.318444112 seconds)
    (103/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.224024171 seconds)
    (104/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.445690394 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.136271294 seconds)
    (106/309) benchmarking ("sort", Float32, false)...
    done (took 5.6159163 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.185255462 seconds)
    (108/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.129597217 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.492197803 seconds)
    (110/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.42710549 seconds)
    (111/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.855652014 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.741931541 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.844704698 seconds)
    (114/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.828862508 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.119455732 seconds)
    (116/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.033507065 seconds)
    (117/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.681969642 seconds)
    (118/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.84622534 seconds)
    (119/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.05980852 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.830287508 seconds)
    (121/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.877237265 seconds)
    (122/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.120284213 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.842659569 seconds)
    (124/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.767522858 seconds)
    (125/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.825358071 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 3.566694167 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.983606907 seconds)
    (128/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.055674851 seconds)
    (129/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.221340232 seconds)
    (130/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.196109533 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.577025803 seconds)
    (132/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.842112149 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 2.309722685 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.866666012 seconds)
    (135/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.826039808 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.133077947 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.059045825 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.111163416 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.230132124 seconds)
    (140/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.05098087 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.242613425 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.500894407 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.84423211 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.308456974 seconds)
    (145/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.039836188 seconds)
    (146/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.971352231 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.944333703 seconds)
    (148/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.472607993 seconds)
    (149/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.011300361 seconds)
    (150/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.192179101 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.84649118 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.886396157 seconds)
    (153/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.101789647 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.091100516 seconds)
    (155/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.970404043 seconds)
    (156/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.152887997 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.867904364 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.063891981 seconds)
    (159/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.341009406 seconds)
    (160/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.066693214 seconds)
    (161/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.0126954 seconds)
    (162/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.851051431 seconds)
    (163/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.945482883 seconds)
    (164/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.848676764 seconds)
    (165/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.160244851 seconds)
    (166/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.874808658 seconds)
    (167/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.828383131 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 8.370142663 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.646437738 seconds)
    (170/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.443046061 seconds)
    (171/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.942670235 seconds)
    (172/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.928982137 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.148863664 seconds)
    (174/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.996718163 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.124025 seconds)
    (176/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.986859015 seconds)
    (177/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.359670519 seconds)
    (178/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.903065147 seconds)
    (179/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.867783631 seconds)
    (180/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.845270359 seconds)
    (181/309) benchmarking ("map", identity, Int64, false)...
    done (took 3.196286221 seconds)
    (182/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.831619278 seconds)
    (183/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.917286556 seconds)
    (184/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.832493167 seconds)
    (185/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 3.404266945 seconds)
    (186/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.020211289 seconds)
    (187/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.860107196 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.141661801 seconds)
    (189/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.832685899 seconds)
    (190/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 8.16576669 seconds)
    (191/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.977521806 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.920488774 seconds)
    (193/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.926436532 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.844987779 seconds)
    (195/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 3.078622041 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.536198409 seconds)
    (197/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.833219738 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.997292226 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.495537893 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.895642842 seconds)
    (201/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.977219163 seconds)
    (202/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.913253419 seconds)
    (203/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.741193057 seconds)
    (204/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.915078555 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.850833465 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.904244396 seconds)
    (207/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.990205805 seconds)
    (208/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.847222708 seconds)
    (209/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.930914391 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.205705381 seconds)
    (211/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.87258825 seconds)
    (212/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.947110868 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.474140185 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.062630857 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.75902415 seconds)
    (216/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.962784413 seconds)
    (217/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.294463702 seconds)
    (218/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.443133704 seconds)
    (219/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.080109702 seconds)
    (220/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.149750926 seconds)
    (221/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.911015985 seconds)
    (222/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.973626534 seconds)
    (223/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.144112693 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.868752832 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.118740352 seconds)
    (226/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.930412386 seconds)
    (227/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.848609868 seconds)
    (228/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.977444274 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.891904755 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.22257551 seconds)
    (231/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.466858 seconds)
    (232/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.003754888 seconds)
    (233/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.877060475 seconds)
    (234/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.353849217 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.229614745 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.765186235 seconds)
    (237/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.872150325 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.745036993 seconds)
    (239/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.983905723 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.149342318 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.877975161 seconds)
    (242/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.258365983 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.437384212 seconds)
    (244/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.955335595 seconds)
    (245/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.837224224 seconds)
    (246/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.960318661 seconds)
    (247/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.850394229 seconds)
    (248/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.913386051 seconds)
    (249/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.833615845 seconds)
    (250/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.955114046 seconds)
    (251/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.453532331 seconds)
    (252/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.228857755 seconds)
    (253/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.983285181 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.955423575 seconds)
    (255/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.875632012 seconds)
    (256/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.875344959 seconds)
    (257/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.031655989 seconds)
    (258/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.230036439 seconds)
    (259/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.362283728 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.240362777 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.874457682 seconds)
    (262/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.966566824 seconds)
    (263/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.131861773 seconds)
    (264/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.031938196 seconds)
    (265/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.86639518 seconds)
    (266/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.958960208 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.224901622 seconds)
    (268/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.255184987 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.847182184 seconds)
    (270/309) benchmarking ("sort", Int8, false)...
    done (took 4.846433228 seconds)
    (271/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.956742228 seconds)
    (272/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.727183273 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.895092367 seconds)
    (274/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.156209674 seconds)
    (275/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.970013201 seconds)
    (276/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.213597079 seconds)
    (277/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.883272962 seconds)
    (278/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.084048551 seconds)
    (279/309) benchmarking ("sort", Float64, false)...
    done (took 5.660135204 seconds)
    (280/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.141105324 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.019647565 seconds)
    (282/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.206473789 seconds)
    (283/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.122671415 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.935911769 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.930201751 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.964105825 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.023291689 seconds)
    (288/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.831249145 seconds)
    (289/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.51324362 seconds)
    (290/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.911211695 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.850532128 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 3.20870292 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.848800064 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.221274951 seconds)
    (295/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.934554332 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.174407467 seconds)
    (297/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.867860795 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.012733755 seconds)
    (299/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.862281886 seconds)
    (300/309) benchmarking ("sort", BigInt, false)...
    done (took 6.849417097 seconds)
    (301/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.354682652 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.919287817 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.882507685 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.969869687 seconds)
    (305/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.931419332 seconds)
    (306/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.715760258 seconds)
    (307/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.991881937 seconds)
    (308/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.837636657 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.901893101 seconds)
  done (took 1015.731255125 seconds)
done (took 1017.514169713 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.885095969 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.87643431 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.863569237 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.882453763 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.972676195 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.889720237 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.870170634 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.863460173 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.909983087 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.909898022 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.858836661 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.889094768 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.862679954 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.861732062 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.861313878 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.875360154 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.171976127 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.888638568 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.878910135 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.872106004 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.879076718 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.861186621 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.911490375 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.890117326 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.865636489 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.864465625 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.86559466 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.883042669 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.974907152 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.866442045 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.864789266 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.875229588 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.171861191 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.889227166 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.856112855 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.882832379 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.873555376 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.871284135 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.866027603 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.892639575 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.314909525 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.86664664 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.864520527 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.86385378 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.867251698 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.867304177 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.865085655 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.870574599 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.877799588 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.8763052 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.31054476 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.882519195 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.865220449 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.861899893 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.872941004 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.863495579 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.867561523 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.879719103 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.882943319 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.879058285 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.164302735 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.896289548 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.866464517 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.881876208 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.870961152 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.35004896 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.862967889 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.86926152 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.311937993 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.874912279 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.349564904 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.877798754 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.865267288 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.877806496 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.897023937 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.17320014 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.884503904 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.864875717 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.871747005 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.863288775 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.874954778 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.878922659 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.870965725 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.866051085 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.879786961 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.893618894 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.875142942 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.86707751 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.873376864 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.884996562 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.873244085 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.876247917 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.868406792 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.860529661 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.874918603 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.869567557 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.868596313 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.870027585 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.871457795 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.875409085 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.316304875 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.886329456 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.865470699 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.862563057 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.866363592 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.878214312 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.316250171 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.871531586 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.886742698 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.913520221 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.868141318 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.164982577 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.896797383 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.882657052 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.875294173 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.868588647 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.861532895 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.167522334 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.342779598 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.885682074 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.867911838 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.866649749 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.882639283 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.870181613 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.864508525 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.177452099 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.895885776 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.880139752 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.990547659 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.879073315 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.899274008 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.865084742 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.869739941 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.900339581 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.883620535 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.898817273 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.871920158 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.883402084 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.886671507 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.865548498 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.880118898 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.87979609 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.869464573 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.87330095 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.862836777 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.897009692 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.880275316 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.880973348 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.889349824 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.989173378 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.86758622 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.167135976 seconds)
done (took 293.3135839 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.933625203 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.856291633 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.968436439 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.864254603 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.949464407 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.949451774 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.861606347 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.862402015 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.863634266 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.244975757 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.860525214 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.872500962 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.861690095 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.862524134 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.947279277 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.864308171 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.862253611 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.207625667 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.864901515 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.936211713 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.867310827 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.863145908 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.86362969 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.246256259 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.860919561 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.85730043 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.936473409 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.863740948 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.211659422 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.862180049 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.858787716 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.211904631 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.954833935 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.892319504 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.874522635 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.873029724 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.95229594 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.868198208 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.945760443 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.947792445 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.96994085 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.90506833 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.86686049 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.865927311 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.867352524 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.868246659 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.863972711 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.892337391 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.860552775 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.873525678 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.211202969 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.868667575 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.875313754 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.864572565 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.862390609 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.896486134 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.863408498 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.868787356 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.956206054 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.868648107 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.931379151 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.250692879 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.245694004 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.866456155 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.865512341 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.865715746 seconds)
  done (took 184.094105399 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.934688723 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.944542257 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.936432594 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.870343897 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.919870879 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.943634779 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.870966811 seconds)
  done (took 15.2153467 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.875284551 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.86835442 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.919410977 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.920018848 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.867320747 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.019716004 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.868050611 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.880993841 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.864668452 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.924002024 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.870712457 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.86824752 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.875101253 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.868555641 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.918768298 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.882041358 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.984615035 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.874574628 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.868890099 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.026046545 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.86487561 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.875525208 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.924239088 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.882431116 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.870333996 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.875415785 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.452996756 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.872034664 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.866552105 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.870563947 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.866734109 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.91298736 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.86935402 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.86834993 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.866606049 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.986604877 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.868157142 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.866778097 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.869215376 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.865031743 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.868645991 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.869560033 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.868820022 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.865385939 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.868910196 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.895506296 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.869336445 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.868829646 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.868535395 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.870775684 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.9246181 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.872346192 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.86841934 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.868541777 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.924954997 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.878043002 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.872012272 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.868652574 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.870021003 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.867906082 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.029935936 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.918843626 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.870760805 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.919501874 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.870948129 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.870871118 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.869808739 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.869880094 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.927606979 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.872033352 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.919047956 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.868059585 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.031351671 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.341858985 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.870425296 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.876078566 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.876468613 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.873704133 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.874763713 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.878154521 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.869215801 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.875234208 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.878293513 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.868130254 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.870231297 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.985118648 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.98240614 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.868547918 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.886869069 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.880610219 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.868746773 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.927672206 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.871060423 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.868248824 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.925954065 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.989248125 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.928560163 seconds)
  done (took 206.343263391 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.878298622 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.880055558 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.874027712 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.888165693 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.872544966 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.872617862 seconds)
  done (took 13.066904374 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.876095192 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.873251775 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.871941949 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.872236413 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.872258175 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.875459079 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.873204937 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.877368242 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.878913784 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.874977836 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.877890015 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.876510084 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.8749673 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.876772044 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.875347153 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.876273507 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.875945181 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.873084277 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.876863547 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.874566436 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.028425565 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.875435452 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.877563638 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.87767349 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.880503245 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.874821331 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.88463121 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.875998601 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.874413114 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.882166743 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.88117216 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.877030611 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.876579768 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.883219559 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.881737874 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.877781623 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.880578968 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.877834516 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.872071678 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.876704566 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.877826524 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.877446481 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.874583937 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.878753867 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.882308491 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.882154518 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.882494142 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.885873014 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.877906241 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.87682501 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.877754423 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.877389522 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.876929388 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.878137702 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.883557704 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.884442011 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.883308939 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.877024689 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.878645393 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.882221858 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.878485405 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.878723919 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.880359825 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.882626998 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.875838653 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.880223154 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.880274323 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.884757384 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.879307675 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.877272952 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.880788796 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.873763078 seconds)
  done (took 138.172262429 seconds)
done (took 558.699499158 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.143622854 seconds)
  done (took 8.948533372 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.968399206 seconds)
  done (took 8.855943975 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.54163325 seconds)
  done (took 10.347008581 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.875508926 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.882159327 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.876976554 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.877235585 seconds)
  done (took 29.328766592 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.874244918 seconds)
  done (took 8.680243969 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.883655234 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.865129867 seconds)
  done (took 15.58938423 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.959363257 seconds)
  done (took 8.76620158 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.010109778 seconds)
  done (took 8.823352442 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.883944025 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.878196215 seconds)
  done (took 15.582839553 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.858439095 seconds)
  done (took 8.664519902 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.562483694 seconds)
  done (took 11.378233748 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.884010068 seconds)
  done (took 8.707447046 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.942609383 seconds)
  done (took 8.7500421 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.078659672 seconds)
  done (took 9.884707614 seconds)
done (took 164.111429128 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.876750108 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.871565024 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.869067874 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.869554728 seconds)
  done (took 29.292234458 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.911562562 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.912432533 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.913061011 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.92237294 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.914984125 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.912008957 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.905472666 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.906269382 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.924692794 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.915078262 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.913397475 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.916905421 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.91432176 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.905997973 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.914568102 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.913314747 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.923467601 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.912876802 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.905627475 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.916797175 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.879713554 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.925154042 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.914242642 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.879164686 seconds)
  done (took 47.682219683 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.073993677 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.95158894 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.034311393 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.936037419 seconds)
  done (took 9.801901304 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.929142665 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.932112008 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.943578464 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.982876565 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.010064831 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.940596065 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.903077884 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.901143061 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.886940924 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.933078556 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.006242226 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.94911557 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.016834249 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.881226143 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.064698203 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.880465019 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.881800392 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.9310787 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.984917414 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.997014544 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.882175147 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.932989517 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.935878837 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.948735885 seconds)
  done (took 48.463844173 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.879859441 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.887659337 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.885728146 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.880080985 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.879020391 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.88071077 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.885741924 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.882635986 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.900751471 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.879880351 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.879116331 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.878915116 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.879181907 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.881134842 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.879310994 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.893414425 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.893298577 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.878757481 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.883816462 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.885244178 seconds)
  done (took 39.482979306 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.873444725 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.731278216 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.224726443 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.132105701 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.876251714 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.87745405 seconds)
  done (took 31.52533019 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.894430225 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.945109492 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.889738029 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.940554339 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.018619886 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.889837574 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.883091641 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.951466373 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.995933949 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.955136844 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.902964688 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.90905718 seconds)
  done (took 24.987528305 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.895630818 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.876740635 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.880416303 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.89449538 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.896810055 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.88792666 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.891679473 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.877504634 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.89714878 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.899834383 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.890139309 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.895621584 seconds)
  done (took 44.500078254 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9670035 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.92657679 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.883994109 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.559055249 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.256239519 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.087219435 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.566183829 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.210732998 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.880557203 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149400464 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.90721898 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981737523 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.133733718 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.445267088 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.91203846 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.341853364 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.171219969 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080841675 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902185061 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.524495182 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939667742 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.125224914 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.646491532 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.93587046 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.088685991 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.008048261 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.139246959 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.880304798 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010396743 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914744538 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890363593 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.879229163 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153327989 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255037566 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981946313 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89118786 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.497923955 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.592590211 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.921212659 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.530531355 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.553140305 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.994253388 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890682743 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88156089 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.813170582 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.103714321 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258251637 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.884979515 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.591886935 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.880086103 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891088291 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975894884 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.883711048 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.697013601 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804275136 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.880860837 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.878305146 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888231657 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.454549027 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.959522667 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.125367109 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.857207538 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.975262112 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.601633959 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260735543 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.02383251 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.88357707 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.885965012 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815721216 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.527647603 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934304437 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209961061 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.898432965 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.53351831 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182510366 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.945734313 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.824628691 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140365482 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.480430085 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.858078863 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109280054 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880750633 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816132042 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.825044707 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.816405813 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134292407 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916984983 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.660661001 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922206693 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.210104845 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.891152886 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902711404 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904811537 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.106182045 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.768629659 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882913209 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.676806397 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.025868196 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900752817 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.210559045 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815842429 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.884438564 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140205275 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.093680369 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.021771397 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.378677844 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037454717 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.5065835 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.937652084 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.105978157 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.933793307 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.144692481 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937112105 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.962847826 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933224232 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.883239021 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16963358 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.536704163 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.02193757 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.92944729 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.011061611 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.200890599 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907433807 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966350997 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.884345365 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.882404443 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.635735741 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.437178187 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.885432363 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.887027713 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.023511012 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.932349542 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.885279708 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828350088 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.509603551 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.903700494 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.89798054 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.107635726 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.518440415 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.198236545 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819090204 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.218332566 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.975181021 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.106343344 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.522285202 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.946783461 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.145799418 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.027003854 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.061754038 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934283116 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904093165 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983158543 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906852334 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.098168964 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.180852874 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.889602045 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.889488068 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.634536099 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.919812972 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892719339 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.888834788 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.642772307 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149903842 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.90700877 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.892531674 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.777002694 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.902036022 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951191191 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.891350668 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.895751157 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.422272136 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.615277277 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.89248566 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.477130614 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108457531 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896901835 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.538880495 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.002339217 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.970166595 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.152152805 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943797511 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.82163928 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.598810342 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.579330928 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8870846 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.822240528 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.88984716 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896968296 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897646449 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.086477832 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.155339021 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926384969 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.540658244 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.929402488 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900697503 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.893795194 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889425762 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.404133719 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.974564978 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.146054651 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.936347886 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032109524 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.902862635 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.823200928 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.894606465 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.894198085 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.88910746 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.889834966 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922411583 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.546272317 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270904539 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150279877 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.54558386 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905397867 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.597295203 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.943939247 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.889535875 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.693092388 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.119072791 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.925642451 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918306383 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.901583917 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.555229864 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.58548735 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.45413607 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198821646 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.180426603 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310771304 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.16536193 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.91902744 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.226064519 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824853296 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.448995038 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.951407339 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.233875569 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835431959 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970702247 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.529108516 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224348221 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904692717 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117582106 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.264944717 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.617935652 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053331628 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.102394804 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926168425 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.113146757 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.855594871 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.194552819 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034298121 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.545450394 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093822283 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227202656 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.561609657 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.00890047 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.89140816 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.562077813 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972181445 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.603590414 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.064721194 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.139066902 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.811203816 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365661828 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.90081305 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.11847779 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23269109 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.122364032 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.016149061 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.82765724 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.903147081 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.904495254 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.89336318 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.895171835 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.770737955 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.143234175 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905052177 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827412451 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.069846873 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.174723804 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.790559317 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.898289518 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894401542 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178946091 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.493955289 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062185052 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.058693765 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.424795646 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900239129 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.826447287 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.826514049 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.588253483 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.90204663 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.868466374 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093764091 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.997458802 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.84405482 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.037342591 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.978011704 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.152382512 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.908436241 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.156232945 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.166620228 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.596384312 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920228615 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.995190132 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.551640093 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.996215684 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.895021073 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.132787781 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.65233972 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.120853699 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.903985591 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.844793787 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.894070394 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.108939572 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.896306259 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.750266621 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120436061 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.617068556 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.905005528 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204800422 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966111098 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.758311832 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.935926649 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.988179692 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906838757 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97459784 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906035599 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.906306983 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.905836589 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943214632 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.775263956 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.013673248 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.910922078 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990498271 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.982249158 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.429062158 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.89979481 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162803254 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248869785 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.20925887 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952792033 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.897049882 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896671032 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829026242 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042248165 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.121785195 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1707372 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.027971118 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.013555738 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922457685 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.564115424 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.171532043 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141499521 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172131297 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.793379766 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.470767633 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.939758439 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.89874484 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909306015 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.109750261 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101272874 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189414809 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.043732477 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.045178928 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.259090425 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172577662 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.898836798 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.897008835 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.490737335 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.904595902 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.578348106 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.938834656 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.770938861 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167957449 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908968318 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275528455 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.919982916 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.055612775 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.672730022 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.654186458 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.19055966 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.879080698 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.952411215 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162153809 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.265202526 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208359162 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965514493 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912388795 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.009882525 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047594491 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.779576408 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.897690798 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.900253766 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.950385983 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.610088408 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.909037042 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167272468 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206991447 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.899168575 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.788341685 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923118227 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.910961638 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.125305464 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155022216 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.151345896 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909472144 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.909635358 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.717589875 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.166526548 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957077793 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836336982 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.902540294 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001654514 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.14898837 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922608725 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.353460106 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.612231286 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165169007 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.902412517 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922707479 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.128795668 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.259325952 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211716938 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.44038035 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099321937 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.489521945 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.563896993 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204348794 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.906718394 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.122849266 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20728856 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.904806232 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.04777943 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942085513 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.162160246 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210404426 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.912630154 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.564985517 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.871693275 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.243621071 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.464189609 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842095296 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.911099334 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.963150937 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.903971919 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.033611316 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912582777 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.795592017 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.119577942 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.685593761 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.187192402 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.905470435 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.896037966 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.642580859 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.246573435 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939584193 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061152413 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910597599 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.577594407 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.256149363 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.160306301 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.049793687 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.911892996 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.907642057 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906924704 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.892460402 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.101495443 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.099187994 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171501328 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.075615912 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.940904338 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.908807583 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.123391154 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115567261 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.748157865 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03376562 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.052762185 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948280197 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.812217778 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.407871476 seconds)
  done (took 1685.206490624 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.930263807 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.936565716 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.951999949 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.965917886 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.937484937 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.978242542 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.949707015 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.971532928 seconds)
  done (took 57.461772966 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.914850918 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.122728184 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.91234937 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.90581476 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.913582186 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.907075349 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.072185316 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.914534178 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.913855478 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.91636485 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.907787995 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.905600954 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.213679235 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.928726681 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.908158928 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.893350305 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.914135412 seconds)
  done (took 75.021595742 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.909846357 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.937513504 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.925831856 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.920776378 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.941715943 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.912698917 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.730954967 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.931601862 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.90712869 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.052193147 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.539859851 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.917408397 seconds)
  done (took 87.46921552 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.9161407 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.915386011 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.915978872 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.914530389 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.915191314 seconds)
  done (took 11.422492633 seconds)
done (took 2194.153214178 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.159941497 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.125149569 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.143026304 seconds)
  done (took 6.109421689 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.057591956 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.10478152 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.222812505 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.243849834 seconds)
  done (took 10.471855798 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.195090977 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.293701495 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.123167315 seconds)
  done (took 8.449069927 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.315239919 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.908929478 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.020516835 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.903730334 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.905869088 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.905723028 seconds)
  done (took 22.556465849 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.908097723 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.914869555 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.91099605 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.912958827 seconds)
  done (took 9.488555763 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.893015005 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.705581179 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.891813376 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.9027138 seconds)
  done (took 21.23291776 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.659629554 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.672118481 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.65445614 seconds)
  done (took 9.826045747 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.458279349 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.814373298 seconds)
  done (took 9.11175704 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.173782156 seconds)
  done (took 4.013695474 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.039421936 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.173086323 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.374170125 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.40527177 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.459812765 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.796643216 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.226483327 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.161090453 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.299183245 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.347329479 seconds)
  done (took 25.125084335 seconds)
done (took 141.628034598 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.291187257 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.143514702 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.112120868 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.248421008 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.146964221 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.111807222 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.130866029 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.231524375 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.756531834 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.753972968 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.249273162 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.129357899 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.07307313 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.145712801 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.075858643 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.147368137 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.12936866 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.304879203 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.942805052 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.151266891 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.130603858 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.88463318 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.089913966 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.90192002 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.130305922 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.063584615 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.48159795 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.148339985 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.098662549 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.48888892 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.07064682 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.30898689 seconds)
  done (took 173.914188267 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.672391881 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.908273366 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.907322714 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.909383807 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.35066707 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.907558643 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.909896505 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.908286627 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.088512459 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.081403748 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.912071596 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.357800037 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.916689294 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.908751857 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.917448708 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.911141809 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.247616621 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.770296012 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.927633855 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.926755543 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.928358226 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.287214811 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.927477778 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.30806771 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.261991787 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.927225599 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.909410585 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.926752818 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.913138727 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.920778124 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.927417359 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.910649803 seconds)
  done (took 209.434283498 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.912260423 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.91016605 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.914401872 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.913593484 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.928889531 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.919131226 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.915513124 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.912108335 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.697044162 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.686135674 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.920601475 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.933229891 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.922246065 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.91077128 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.912604152 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.912703989 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.915817196 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.917065196 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.91780059 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.919321424 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.925270004 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.63005358 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.911417858 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.62591814 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.943054296 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.91912425 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.910104131 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.918395506 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.920878413 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.921634902 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.922499753 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.910920186 seconds)
  done (took 222.214527012 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.106337676 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.918632824 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.921668845 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.854132011 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.922513423 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.919869566 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.915408122 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.107367748 seconds)
  done (took 19.527952961 seconds)
done (took 626.944247486 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.392528721 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.222274636 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.093689751 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.947289125 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.186207024 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.974784318 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.939704178 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.003447804 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.662614774 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.003792722 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.629513721 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.956114797 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.719633564 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.962631532 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.066205574 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.995865536 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.4785969 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.568110927 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.122535846 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.000899351 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.108349314 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.903286702 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.013920897 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.697721795 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.744964736 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.948998435 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.129968894 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.486901214 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.950011056 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.107419248 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.698729761 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.344139912 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.950895705 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.938092889 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.993929164 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.974320855 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.301680948 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.949987373 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.063442151 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.709941069 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.000729787 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.546103154 seconds)
  done (took 105.336000691 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.911579584 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.911222344 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.909611601 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.911062687 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.909900852 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.91020532 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.912271389 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.911248553 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.909612209 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.911122052 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.909452294 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.911948732 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.91092785 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.914881376 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.910885916 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.911826545 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.911665961 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.915140606 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.908256466 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.908673065 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.911173472 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.910579706 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.912638343 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.908604947 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.911415259 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.911730326 seconds)
  done (took 51.548143363 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.924017205 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.064011834 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.153846629 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.942870616 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.926680458 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.928816166 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.9451608 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.931007417 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.925824849 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.925514999 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.014672366 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.928653298 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.944786377 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.14848177 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.937446712 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.923363086 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.926772297 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.924573635 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.072906487 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.941434925 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.945053477 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.929121184 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.945494374 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.937227297 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.926771124 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.926707237 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.930684528 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.356777947 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.935141638 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.015299052 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.967192814 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.946541326 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.319028727 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.156134237 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.977606363 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.927517246 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.92398881 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.019878505 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.931733794 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.926059741 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.944861821 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.928585189 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.161723025 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.422582393 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.939973048 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.924182394 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.367778143 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.030176817 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.964537602 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.934214156 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.152353949 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.939735152 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.927831051 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.926228317 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.964530462 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.934334394 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.926176906 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.233338744 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.938611136 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.944552806 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.931514386 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.926645276 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.080020004 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.936869527 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.068558441 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.936311793 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.934574853 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.928274321 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.152593732 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.94295173 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.424370494 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.940076515 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.926685346 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.017942668 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.074490107 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.393474702 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.940086489 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.084035549 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.332584367 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.952126549 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.935571755 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.347686804 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.955298625 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.937352409 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.928419364 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.92818182 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.928376921 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.970692831 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.943811928 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.367591099 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.43304638 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.243938674 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.953200679 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.941928062 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.930286024 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.234246343 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.936429988 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.928477745 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.146214107 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.439788536 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.940980161 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.937737712 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.412996539 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.941923577 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.948447658 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.936045035 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.15618518 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.941678099 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.971632206 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.927582995 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.936784735 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.933713769 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.949765503 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.935634799 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.929391181 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.403187906 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.033109182 seconds)
  done (took 238.327696675 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.923941522 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.923118881 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.924040519 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.922373137 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.922904107 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.929993571 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.923660931 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.922727715 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.930246625 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.922289663 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.922191355 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.927078308 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.92562488 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.927763644 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.3925708 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.933334179 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.536569006 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.925489377 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.926388621 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.924216309 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.610127578 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.93120223 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.928237231 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.932012957 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.924904173 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.926181526 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.932701276 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.958895573 seconds)
  done (took 169.591410144 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.931996879 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.114299514 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.947718361 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.967883868 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.936717051 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.928867081 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.955743478 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.951424814 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.938704688 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.930542049 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.929132777 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.994290859 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.941245008 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.06429061 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.962805225 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.96233472 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.037747452 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.938471641 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.930543635 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.929583788 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.960273129 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.925596667 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.99512333 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.05931295 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.947862936 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.050828884 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.938468127 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.933459412 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.933375535 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.051448777 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.946084971 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.993301487 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.960042503 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.952528506 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.059543598 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.052838933 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.039355814 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.962721212 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.934343216 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.93057691 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.931527008 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.922717072 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.050314865 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.950983475 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.936080679 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.042922167 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.955393063 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.933987225 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.941846826 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.931017615 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.948137915 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.953767732 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.001440309 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.069353149 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.969986716 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.960362691 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.960170366 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.220744391 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.943415781 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.034995081 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.927392803 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.054666766 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.954055155 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.923734733 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.933212647 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.940436136 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.963214561 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.96481967 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.039019328 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.941577851 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.03958773 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.966828814 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.942389129 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.932721431 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.939008827 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.057328125 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.056505033 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.97072547 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.973520537 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.968008765 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.930859432 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.935462142 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.926615164 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.95336053 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.938786051 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.054929313 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.055370632 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.94263917 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.935972096 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.937652778 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.935356592 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.9626033 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.06224493 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.974293931 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.036458319 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.002459959 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.010940465 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.9505224 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.948310339 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.937456092 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.00161364 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.950526891 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.94629999 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.271687899 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.008975131 seconds)
  done (took 209.542154049 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.031474522 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.406083386 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.9894734 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.990608101 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.22546404 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.362466044 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.728342284 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.986705846 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.986172008 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.011745444 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.150160409 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.04687082 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.99863292 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.973761723 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.395806034 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.975023009 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.984615234 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.006440263 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.989781341 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.569530147 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.291365164 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.106572141 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.981688166 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.12276386 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.968777381 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.271908519 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.311922463 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.362846901 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.022391616 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.335388891 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.314450297 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.664686665 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.193839218 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.231654354 seconds)
  done (took 76.862294638 seconds)
done (took 853.054664257 seconds)
SAVING RESULT...
DONE!
