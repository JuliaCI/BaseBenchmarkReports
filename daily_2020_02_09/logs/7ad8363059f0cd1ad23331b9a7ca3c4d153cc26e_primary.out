cset: moving following pidspec: 23275
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.427071301 seconds)
loading group "string"... done (took 0.602785166 seconds)
loading group "linalg"... done (took 7.884916613 seconds)
loading group "parallel"... done (took 0.180085142 seconds)
loading group "find"... done (took 1.201842461 seconds)
loading group "tuple"... done (took 1.994601662 seconds)
loading group "dates"... done (took 1.30709034 seconds)
loading group "micro"... done (took 0.231271574 seconds)
loading group "io"... done (took 0.97636073 seconds)
loading group "scalar"... done (took 40.323920737 seconds)
loading group "sparse"... done (took 12.349440229 seconds)
loading group "broadcast"... done (took 0.988196051 seconds)
loading group "union"... done (took 12.611565646 seconds)
loading group "simd"... done (took 4.658418061 seconds)
loading group "random"... done (took 9.378222064 seconds)
loading group "problem"... done (took 1.853898372 seconds)
loading group "array"... done (took 21.560669141 seconds)
loading group "misc"... done (took 1.706472856 seconds)
loading group "sort"... done (took 3.446040002 seconds)
loading group "collection"... done (took 17.954511373 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.528766464 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130988588 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132803502 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124612086 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152421807 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118829495 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.132160759 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090808208 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.843226091 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154381635 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123291955 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.44221476 seconds)
done (took 5.288343186 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.178074792 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086905402 seconds)
    (2/2) benchmarking "String"...
    done (took 0.086948627 seconds)
  done (took 1.303763906 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069057674 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130234388 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070811404 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070158858 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070269605 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070027953 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069729563 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069606143 seconds)
  done (took 1.682154279 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076872033 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072879377 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069645824 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.072001123 seconds)
  done (took 1.422002196 seconds)
done (took 5.794199574 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.814058807 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.216746745 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193080942 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.429688333 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133617452 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.164269438 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.683103885 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.341740287 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194136029 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08480224 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11356328 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.353137478 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113633217 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.643180516 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078361115 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094700002 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141507003 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.431576893 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.070879426 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085692748 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092737964 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132013374 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.090352223 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078107456 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.153200094 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071927689 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.140948415 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084083617 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071047396 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.223804082 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.176391003 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.668093325 seconds)
  done (took 10.533895718 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103886105 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.105454463 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072897671 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130462188 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104600575 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073265675 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079339226 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071183079 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094494399 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.135557128 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09645385 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107334032 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.070447055 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07273872 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.089353066 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210024026 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08413368 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08617682 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07436398 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083349533 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112733738 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082593746 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08450377 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084955251 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132716744 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183405105 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102378975 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.101428513 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070922139 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087340949 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118319972 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131947731 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070053081 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.069681957 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.131342706 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098278499 seconds)
  done (took 4.774763686 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.047950199 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150194174 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094424907 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140291277 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068782807 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113788305 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.11625978 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069341616 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085310813 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.217459008 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.349251105 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.641118615 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115408173 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111090326 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071131639 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07243947 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.073513152 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.581909889 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101988327 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111634559 seconds)
    (20/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.068401305 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085671228 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074326535 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073229568 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072196618 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068350051 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072068524 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.114725086 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.302968402 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12985115 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071881844 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.981333576 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168165999 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071083985 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105233859 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.299767118 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094525122 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.148619786 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073249149 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069264013 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162611496 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074879516 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070622333 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089607545 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107616151 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123876699 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069788518 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073631463 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169518366 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068691872 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084276325 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.119775632 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.159088588 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.082110097 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068621048 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.264789181 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093268966 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07387314 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.069137126 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.202344207 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134635013 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.072152914 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07096061 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072134992 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073345201 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.365133667 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069925309 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.08104036 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.074659358 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079491976 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073249596 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073690066 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067802648 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076756594 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075839399 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092331769 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069624541 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079050495 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069503414 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069562479 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070842271 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086951404 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.405340587 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.071466587 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071669493 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068726451 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093249766 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099112213 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.172067165 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069895664 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10304794 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068457256 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072144836 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070635792 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.112083133 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070604189 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086849343 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073572001 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116515815 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071289143 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.100602674 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071582554 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100234869 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074539012 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102653253 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084685161 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072273642 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.449998115 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06969304 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.069656248 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072154493 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068792582 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070899507 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071560943 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082578736 seconds)
  done (took 22.425591107 seconds)
done (took 39.910223308 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.2697119 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077726366 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077541955 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077621591 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077441331 seconds)
  done (took 1.80423672 seconds)
done (took 3.006637289 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.127624912 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104865198 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067982803 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102136258 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068524711 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106142041 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105459168 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081442221 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105304656 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067786851 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102785004 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06812036 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068037957 seconds)
  done (took 2.400534158 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088116508 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089471438 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074200498 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08742384 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067132139 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088283415 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08612309 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094029819 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08666021 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076570205 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06749209 seconds)
  done (took 2.101944768 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08712426 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089094272 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074624658 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086453912 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067896377 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086450953 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086400261 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090523625 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086594695 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078176795 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067619279 seconds)
  done (took 2.092944614 seconds)
done (took 7.78502428 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081978336 seconds)
  done (took 1.268856429 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.604408801 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.124854388 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.086116312 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.116164502 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.198505242 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123084714 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.27605358 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.091159574 seconds)
  done (took 8.994188623 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.107244583 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072412915 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075749034 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073558607 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073424724 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074522471 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.075870692 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07220249 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072525504 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.076030952 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074972631 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.075327698 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07326194 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.076518248 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072695932 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071947085 seconds)
  done (took 2.480550607 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097301605 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.0955283 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076949254 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079045651 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075450799 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075658113 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077812476 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076867347 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074274254 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076254422 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077870735 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076924868 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075067949 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067793956 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077854824 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078628612 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07435698 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077342931 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078495051 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07918368 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07891215 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06838549 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074834211 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077960114 seconds)
  done (took 3.166504808 seconds)
done (took 17.103753762 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109869076 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07107378 seconds)
  done (took 1.376514679 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084323633 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087336795 seconds)
  done (took 1.371321785 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08655864 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.068948596 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09334085 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.08126072 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070222826 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069118677 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091966567 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070167471 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069835757 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069790429 seconds)
  done (took 1.971036305 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071798158 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080341607 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073895903 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085571201 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07696666 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067803728 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075528351 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.07133809 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08117687 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066165562 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07501711 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086719367 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075346381 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088722674 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075830118 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072246099 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074524842 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071557602 seconds)
  done (took 2.575484036 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069300903 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070749356 seconds)
  done (took 1.349399334 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.071231216 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066741694 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070145566 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069956982 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066520469 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06600744 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066652941 seconds)
  done (took 1.682397361 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.392040824 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120953611 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.324942268 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075655489 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085645765 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.268873085 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069533468 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074519328 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07452754 seconds)
  done (took 2.738098831 seconds)
done (took 14.272303526 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.084541852 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091105021 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.101570774 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.393522876 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095375837 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070148553 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117270813 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192052177 seconds)
done (took 2.361324116 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216642191 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.721933228 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.44628905 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219549011 seconds)
  done (took 2.599273674 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.356647217 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093059033 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.061985118 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070627823 seconds)
  done (took 1.801930144 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069641224 seconds)
    (2/2) benchmarking "read"...
    done (took 0.073096359 seconds)
  done (took 1.359019056 seconds)
done (took 7.193322217 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070542778 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070030394 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090273198 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.067765216 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069352887 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.070140812 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.067197575 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06748858 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.070328798 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06992803 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.069946124 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.06942469 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069444184 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066920392 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067279618 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0696476 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066740643 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067403828 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067156529 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.068585395 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066967416 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069300543 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066715536 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066796808 seconds)
  done (took 2.918449137 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.089360333 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069370135 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075112439 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075156885 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072911721 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074626654 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074348417 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06939458 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074840281 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071689983 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072723787 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07251829 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071844279 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072855107 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071475819 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07299531 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07448118 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069716288 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071688727 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072995926 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.18832309 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069391694 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072764497 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07411985 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072590109 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072504939 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072123801 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069595269 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074403125 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072882734 seconds)
  done (took 3.532581894 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074013169 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067269044 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.067378102 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074082916 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06701696 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068204386 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066644798 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067387191 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067804783 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066879237 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068400435 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066965852 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067131764 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067755565 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067494892 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.07114703 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083288807 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067798893 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066721817 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067505128 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070364439 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066933365 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066993894 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066576393 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066942126 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06711345 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067188008 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067453827 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067768849 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067334869 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070760847 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.071068791 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066755161 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.075107235 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.07150529 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067546416 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071195481 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066992387 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067934975 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066490712 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067365783 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067080555 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067521772 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074962521 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067564383 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069062034 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067682116 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06821028 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06813476 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069581125 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066844921 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06754687 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069443247 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068238583 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071085915 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066786228 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068028152 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06636763 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.067717416 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067270124 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066914784 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066665409 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.070011897 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068313272 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082466453 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074456567 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06733274 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068984957 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067798046 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070741589 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069247704 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081478412 seconds)
  done (took 6.197322446 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093223968 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091707542 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069338044 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068894888 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065326818 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067523296 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073264516 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068196268 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068797971 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085557989 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067822692 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068561008 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069176224 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07089294 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067948193 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068850134 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075791473 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065451009 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067870278 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071141936 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067618203 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072789005 seconds)
  done (took 2.824581832 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.160316223 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07441831 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110571866 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079693731 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073823441 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078948919 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073380451 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074270797 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074021627 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071254839 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071096314 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074805871 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073554506 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071642091 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071322833 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071164289 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073268684 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070927982 seconds)
  done (took 2.682724294 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08073971 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069382847 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.091115566 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069597019 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069633168 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072270133 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073812918 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077920443 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071836349 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06982834 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077513182 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072091403 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.07220705 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069413907 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071887992 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069400872 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072155369 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069405589 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077826643 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073474711 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074107457 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077753333 seconds)
  done (took 2.857851955 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083145608 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07272112 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084895186 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071358531 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065095724 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067894341 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073866579 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069401323 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073548579 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072016629 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068986041 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067674864 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072475603 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069182833 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072311747 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069112521 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071885195 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070022313 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071941529 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065075289 seconds)
  done (took 2.669028171 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090111008 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072293789 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072428738 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079739569 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071457919 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071517487 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078897001 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071275046 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071574123 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092370007 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071110591 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07180843 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078532484 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076196764 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071009283 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078782728 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078537159 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078699188 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071030946 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07201199 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092916562 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071205274 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078418899 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071282789 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071488349 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071915567 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071413864 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076078357 seconds)
  done (took 3.362187809 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070063602 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070229898 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067024861 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067422757 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066967059 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067491965 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066900319 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066961711 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069938358 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067349638 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069962222 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06993314 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069890941 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.070573352 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069806977 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069387428 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069937076 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067166391 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067012174 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067237878 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069928193 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0691661 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069486468 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067270952 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067764118 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069897899 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067291182 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066880388 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069783135 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067287287 seconds)
  done (took 3.296929534 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078481436 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077590657 seconds)
  done (took 1.398518591 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065709213 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084273118 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.066660986 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073973579 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072665319 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071337316 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077107518 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072847747 seconds)
  done (took 1.823036848 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085554617 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081708037 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071456943 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083192376 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081551882 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087519341 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.140603467 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070427733 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077044185 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067840126 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.085890648 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069103749 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076621313 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070148913 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075894252 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076178514 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067577986 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075812416 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07238241 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068295525 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070898866 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079036595 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072700043 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065526278 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071787323 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093436793 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08181315 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069344397 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073258919 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07780904 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076497998 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064093967 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070072677 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070323024 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068448204 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.081169245 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085259399 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073490292 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078982611 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070914884 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079412933 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064756524 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074625551 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077026367 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080986173 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070245353 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070698857 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065228132 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067880086 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07454481 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065052647 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070447107 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065143779 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077673199 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07376893 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081065241 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069194135 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071332738 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073074565 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073244599 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076675875 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072202311 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073472168 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070188713 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080581867 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075277882 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079302606 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065088292 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064477523 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067930153 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080051129 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093911252 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077473492 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071609481 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071475427 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067832155 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07378808 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071200501 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075857587 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077072023 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070738433 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075902389 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07792947 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070503943 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073149443 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07811095 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068918961 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073129878 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068046303 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087806832 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068998795 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068379714 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068439238 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080164615 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073593736 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.070196618 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068038215 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077341281 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063816477 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069778156 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070906503 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071329907 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079412929 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074130046 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07356883 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078012232 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076831832 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069553965 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072306734 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066225918 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07004046 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068366598 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076637605 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063132741 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071923018 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.195899475 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.072169651 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079900333 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069395142 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071873576 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078042866 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076444446 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069968781 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.068639291 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073499775 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.071032052 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073953232 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078928511 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069224762 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065292101 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06545308 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074350406 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070271605 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074808303 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074118946 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074185584 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064598315 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068950278 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075786734 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079299701 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070788051 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072772445 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076643691 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072613321 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069580724 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077051373 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073054975 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069467329 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076817002 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071279129 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06635217 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073445641 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073318345 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069147633 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073878917 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073744903 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.07298702 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071072246 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069315224 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077103739 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070897228 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.070012724 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070210061 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.068612117 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081570556 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071568001 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064986309 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066890868 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.079827621 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068319707 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069314356 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.070519473 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072581345 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070959829 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.069191129 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070438621 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072227798 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080545005 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073831274 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070395042 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075591699 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08274931 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070238612 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072891513 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069402497 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070344386 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070994545 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079584063 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076136809 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074416043 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072923405 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066741634 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07545855 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07809305 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06916624 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067698452 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069124087 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074552512 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075820121 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074757049 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070809085 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068959433 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071485304 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073348428 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07314286 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070289232 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069446507 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.076155753 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068544253 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076479473 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071112783 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081003101 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073020987 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065273712 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072199175 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068429269 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076373185 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064361669 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067587565 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068487472 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069481742 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068593304 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071453688 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063154765 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076701039 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076469012 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06914067 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068416227 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06925648 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075820984 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070318814 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072427031 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072928052 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.202326609 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082221532 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.069864436 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073941103 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081651968 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070719779 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065095188 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076225933 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06925581 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.070148653 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069608699 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069167136 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073906469 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078012966 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077115865 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064442816 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073140862 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06895002 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069396204 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065629358 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075558598 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07323122 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.07214159 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077117579 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071378596 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071222762 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074461629 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069839999 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071260628 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071322949 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073140285 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.07114091 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071980405 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070114259 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073525503 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069104498 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068566035 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072583769 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070736567 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071598507 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075694091 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070448065 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07082435 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072806059 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071580185 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070727321 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.07093674 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069867716 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073637601 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071625618 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070630684 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072540074 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064971138 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078056733 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069673171 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078850719 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070820445 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066585929 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076407308 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.0725765 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075956538 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071636008 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070763688 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071763674 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069450785 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073494618 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077695044 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068288764 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081644017 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077905286 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071345363 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073302079 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070607412 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071949234 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069343365 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070930022 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071685021 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070568144 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070191979 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074853496 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07297133 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070756095 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071905616 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070815427 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071505213 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071299673 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064576042 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069898002 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070633212 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.073131799 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080066871 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070860955 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06971507 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069659028 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071052609 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069437978 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06675397 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077737064 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078599653 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.07151082 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076719059 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06916138 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071431173 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080482234 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064298582 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068605129 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067482951 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06728447 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076880943 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070480285 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078603942 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068969761 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068397256 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067046353 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069870642 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068095729 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063374739 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066745948 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072139247 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068512638 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068165431 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.198332322 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07469339 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071671664 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080380083 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.07043173 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.071352519 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070486302 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068505314 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069919986 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070413001 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073192766 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071464287 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068339131 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068533109 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069982666 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071621705 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072401284 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070259288 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071960422 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077040718 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070670079 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072800892 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073685314 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06568323 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073924131 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070191822 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070399423 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069796251 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073745169 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073825217 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071141452 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079445976 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070780715 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071179568 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070855173 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068654001 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069388202 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.07004922 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.0696624 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06971246 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.072239521 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078279583 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06768104 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073230503 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070874857 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070874444 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077185466 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071367769 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073393914 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076724547 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.071523384 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072521971 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078865204 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07421506 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074518405 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071097474 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072323407 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076355641 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068990527 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076705296 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071027938 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070948141 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072391383 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.069023962 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069614429 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069885366 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069371024 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076890785 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070708775 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070129534 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069550575 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067830674 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071790558 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073230563 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078396641 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072628768 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073139423 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064987614 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066900394 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070715486 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06791624 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072198539 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072750586 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075992876 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072364436 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070637557 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06950592 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079481117 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076135143 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073685118 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.0680883 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074308281 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070981969 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072371049 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071256624 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070713373 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072440943 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074286267 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071969545 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069431502 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077121726 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074068629 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070473065 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071369259 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070634978 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070199268 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065303497 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.07004961 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071936181 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074700996 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072511176 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069367814 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08058856 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067636727 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069560738 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071905555 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068544156 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073837428 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064000351 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070661983 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069883368 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069390108 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.193818494 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.070080706 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069030056 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073876899 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.069895891 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06531699 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081288635 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.0797009 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.073812202 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069793993 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069339479 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065813965 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065684839 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069991108 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07167595 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072200329 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080674246 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.070128237 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069883104 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065618393 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070107084 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073332406 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073425335 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067313341 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065008423 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069391957 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073717982 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076328772 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069229199 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070106522 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073745122 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072838932 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068044908 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074229575 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066907421 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073967279 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083263232 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071411965 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070919029 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077070797 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077538673 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070307796 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06537716 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.07093458 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072838923 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070313601 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071463174 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071466065 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084922885 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073020652 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069194833 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068718158 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072967091 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068983239 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079182236 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071799521 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070185083 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07510218 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072379616 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078165346 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073187669 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078190516 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072837658 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07269387 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069494954 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07141849 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068694546 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069681179 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070728673 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.0704456 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074866506 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077667543 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069595218 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080694057 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079281462 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071882354 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066990292 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069389586 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069672534 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065128855 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071331375 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068614582 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068477845 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068514969 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.070022728 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071529732 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075476557 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071350767 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070724859 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070842064 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064785367 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072564872 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073043125 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071345115 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067124263 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.07092569 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.071454007 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074652976 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073617118 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068669509 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071897597 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071608261 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070457247 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06484048 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076387745 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06894138 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071697988 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069407486 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070040336 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070576694 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073260848 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073974877 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070348748 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071529577 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072809532 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070743662 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066419342 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066608458 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075123384 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066699243 seconds)
  done (took 44.853068785 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106067002 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067778316 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06532767 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065793603 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077366691 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066817537 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065793945 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066050453 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066698103 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068055313 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065162419 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064900861 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073787782 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080404767 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076356415 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069222128 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064863903 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067028907 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065237183 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066227121 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074351137 seconds)
  done (took 2.830642765 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077443796 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081344167 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078480108 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085575791 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074540515 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073258089 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078419713 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074234234 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082196886 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076098049 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082131509 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073770131 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075509507 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075226153 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075704531 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07383215 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08399852 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073936857 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073886 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078265262 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073705607 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078458848 seconds)
  done (took 3.01661339 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071052147 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06957893 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071293561 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064283563 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069319706 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.064473879 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07235994 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067168885 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072154815 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068717111 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068713256 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068852275 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070996101 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064674627 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069757129 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066942453 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110987941 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072544013 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.069516968 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070441893 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064513635 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071242472 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064925434 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065512511 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069151084 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.0725619 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069977 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067472 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069043697 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06860357 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069456427 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06742622 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071557123 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069786352 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068736502 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068863594 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069136752 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069186608 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064692595 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067353523 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06973437 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064813817 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069446575 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070519947 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068085175 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067069739 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070987738 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.07067271 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064354674 seconds)
  done (took 4.72787359 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08234109 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113494126 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070604632 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093357621 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083056905 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075572781 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072867134 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093762476 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066589137 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067077414 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084858911 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082088451 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069065537 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073150332 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073614381 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068513693 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069785559 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068000778 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072206009 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068140696 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072232758 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075928477 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082942101 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080959156 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072369789 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067743774 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067884551 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073135485 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080603766 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072986995 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073421524 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073510452 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08399233 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074681584 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068304187 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071687393 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084299934 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068714016 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070944281 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06667887 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071302141 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073492679 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075430073 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084541606 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06948763 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073844451 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068709942 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066483992 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080681654 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.07205403 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076517911 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082376395 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072633811 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068752147 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072844264 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084221528 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068805582 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066940105 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071747594 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080569946 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066676925 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072551497 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082048549 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071066882 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075760335 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082905627 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074197187 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072520592 seconds)
  done (took 6.575735953 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080114446 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09998858 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086289737 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087573592 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078787477 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079215811 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080197446 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079109884 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078978031 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083413047 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078841265 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120591746 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.074362528 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08113556 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079439192 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079064717 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079000196 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079604883 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078683663 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078673386 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.078777323 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085861252 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079353595 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086069646 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090649553 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.074544375 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079041046 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079328369 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08703451 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078792098 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082625984 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.078806779 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079746326 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086230859 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.082678261 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079556942 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06907932 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079412968 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079658522 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.078967331 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074483349 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087133695 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079304433 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.074698901 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078730958 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07891494 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086702027 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.082888295 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081048328 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083575593 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.078808319 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086760454 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078823964 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078937422 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086366539 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08890408 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086167837 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086480049 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079192462 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086665579 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086555644 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089422909 seconds)
  done (took 6.442424377 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086897216 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077498093 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085372967 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065012827 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067637925 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075264257 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06744929 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06761249 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077541647 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077128259 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080618636 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075410375 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077562638 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079501863 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074940123 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077983498 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075593231 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075251457 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076907822 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074764372 seconds)
  done (took 2.86017219 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078073194 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086377748 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.07084406 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074812137 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072567335 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07461443 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.071678966 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073256766 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070222779 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072791289 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079361948 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079412006 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070486467 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074876117 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.078959467 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074489994 seconds)
  done (took 2.539882925 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087573811 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076290012 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084280947 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.07039147 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070193318 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066694526 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069339257 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064958741 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065614446 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082093649 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069511194 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.080154622 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069488948 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067769168 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066049014 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.074707344 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06538037 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066780057 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069420863 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081668521 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072939667 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068480075 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073070136 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069274949 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.07193067 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073789693 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068143947 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069603564 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066411722 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069096386 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072054336 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07249431 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066161035 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067114873 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068111779 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066548034 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068984682 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069469808 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074685575 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069317052 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06728148 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070955698 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069506011 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070228305 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065352697 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069497798 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066123105 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071075366 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066663679 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.07220372 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068763014 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.071782014 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069699642 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076101664 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071888107 seconds)
  done (took 5.231732193 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082551807 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073181978 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065314117 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067826878 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.072904564 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070788859 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072745402 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.0704167 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071023293 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067462161 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070723104 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07187771 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070619468 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073716734 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070493274 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072964321 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065429508 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071073385 seconds)
  done (took 2.630349914 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075160356 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069134918 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.076689078 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069796509 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068773933 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071871467 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06540088 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068322339 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0679105 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069174382 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069736587 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071448902 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070679228 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.07226713 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069246938 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069492732 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072390281 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068185929 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069668752 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065149125 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071712191 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068005697 seconds)
  done (took 2.883513253 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097574995 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.087004075 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.145181567 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082056407 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088782747 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075394825 seconds)
  done (took 1.920572683 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094711432 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105421433 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070102026 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07381124 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079451181 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073334922 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073602865 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07362423 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082055918 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079160707 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073267388 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081995695 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081641423 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081616193 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079239259 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079484693 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074090022 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073534328 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069713775 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087570482 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073631201 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081713729 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073448848 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073329189 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073154091 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080686739 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082260213 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078884036 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073234177 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081653688 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078985037 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073710015 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081701991 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079597508 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073018388 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081416276 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073775947 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086716855 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079352176 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081203324 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073372808 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079029638 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081875769 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077727455 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081953725 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073369537 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078010314 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073337104 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073728075 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088966582 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079187285 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080973952 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079010975 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081665512 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081585571 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088828378 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079715122 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081122873 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07966761 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079094659 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081106316 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079609818 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080795112 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079706483 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079258088 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080878878 seconds)
  done (took 6.571252505 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109525163 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070494829 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074009132 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079604026 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080335404 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07345342 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073741902 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073527913 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074402495 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070343665 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112356556 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074340279 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081218687 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080814405 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073807876 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073385701 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073363918 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081048305 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07074335 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088835143 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072968237 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080782649 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080806055 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081137657 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079413473 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078992076 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073455095 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073570544 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073117188 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073333196 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07797159 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073498001 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080378593 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070162592 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080628162 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074132238 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073250505 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078781457 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073804342 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078846842 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080934902 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086721179 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073175827 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072980807 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07934145 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073879978 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073529808 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070224707 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073665664 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070710356 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078955301 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079333772 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078631604 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081061447 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073587192 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073245665 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073072804 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073636325 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073625386 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07918416 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081154682 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073719318 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088779162 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07404237 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073598708 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080841676 seconds)
  done (took 6.471420117 seconds)
done (took 134.330442389 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.192235682 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.172268536 seconds)
  done (took 1.704701402 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072748238 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.102277172 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081120641 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132729643 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069751305 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104229321 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103201579 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082683119 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069265342 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069461315 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069755348 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072102317 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134340877 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070399218 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069654736 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072492565 seconds)
  done (took 2.729542878 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10307024 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.168484593 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107672748 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069122636 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103164704 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075946743 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067974269 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078926132 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074163925 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068513291 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076722285 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073614799 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068306831 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07395597 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075399493 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075664544 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068589172 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075717197 seconds)
  done (took 2.860769383 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102632258 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09502605 seconds)
  done (took 1.554725944 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157533122 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.136831427 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207575414 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.356978514 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164505301 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.151692251 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.147055965 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.145690508 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116726273 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142595212 seconds)
  done (took 3.080626921 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104314676 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.159108882 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.279143436 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.12254522 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076710324 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096581472 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.123861985 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082361242 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083962662 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083634573 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084225858 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080222482 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104138319 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076489777 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07744479 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.0796636 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107736183 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076540014 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078176794 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07861495 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105449775 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068880287 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076471773 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076796443 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080834157 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080881314 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069358858 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070350411 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07909224 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07837777 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079950412 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09577678 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080964695 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110111118 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074576821 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.111018262 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080533965 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076692831 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078794429 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076507096 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081343611 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.08193277 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077035955 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.08052579 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069443653 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080349159 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069470234 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069357172 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080422959 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070792927 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081019797 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079869654 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.110597568 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071139469 seconds)
  done (took 6.188869943 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109296462 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.113134102 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075059464 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.118971481 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108816043 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076062764 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109678922 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10160362 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110098758 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073645868 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071947987 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073793186 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085602831 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086120288 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120365795 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113530306 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07702338 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074341022 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112384696 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111159023 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071810965 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103924974 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097121431 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109045792 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071465193 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073674485 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071775424 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07431388 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.08024496 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081328289 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073718749 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083906962 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08864616 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082179604 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070900435 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071328859 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071511692 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.083188125 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08276852 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082381369 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081018568 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071323799 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071933565 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073232879 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073622113 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071651758 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082008316 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.083564124 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082852714 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07379127 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074510843 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.074647733 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074001179 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0833753 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.08102419 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.084685738 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083214525 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073093395 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072262923 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076374398 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083896327 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082602634 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083179289 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07299844 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083351996 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072252639 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084068149 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087867859 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072843285 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073865778 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072303806 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072982557 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073234416 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081329598 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.08125066 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07344261 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07337541 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072027417 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083177715 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081725693 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072451884 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080323082 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070988641 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072077964 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073017712 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073131733 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080305965 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082517265 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072923858 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071739044 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072985788 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071227463 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070676569 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078857724 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081839687 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080996072 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.08048072 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072129087 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080863943 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081222337 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072295052 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080676056 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.198465178 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074153701 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07415248 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082787272 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.082040363 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083737636 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074360919 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072668419 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.082282439 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085794608 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072753573 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.082201939 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084120751 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.083067487 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071798703 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084969551 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072848763 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083391569 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074741856 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084147085 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072730721 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083508681 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072860987 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071962851 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072460737 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.083035656 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073665581 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072760425 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073683565 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074199725 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.083329016 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085761651 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074026112 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081007326 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.082239553 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073367913 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082680875 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072957075 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082872018 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073394244 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074060681 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071297447 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085883307 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072878394 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072542448 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073063042 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083625935 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07199783 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083768573 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081503699 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071775003 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084883763 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084365235 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.08140918 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084319886 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073166759 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072532586 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072493434 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073769934 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082022203 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083397531 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075059517 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072186558 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.082306348 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082911155 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070744698 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.082425456 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080887365 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082231842 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07214019 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073417183 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083463331 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.084053828 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081662596 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.082033364 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082421194 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072807645 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080866438 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081528207 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07210764 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088533924 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072468426 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.086312251 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082486722 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080279529 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081978795 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.084135339 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.083446464 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.083615788 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.085807503 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071764359 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071128182 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.082047378 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071214635 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072705641 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.080262015 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072116351 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07269687 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086156757 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071088145 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.081394326 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070567914 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080373695 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070257661 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072480207 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.217009564 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072755188 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073794716 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083596705 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073756927 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082287915 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085017092 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08242962 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072332437 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074374218 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084168089 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.083771766 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072303389 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072943202 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074572201 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.082421993 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080336511 seconds)
  done (took 19.507358653 seconds)
done (took 38.988004437 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.214445648 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.159005985 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.17961696 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.123756095 seconds)
  done (took 2.139679292 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120654292 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105994809 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096181211 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069291803 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103656121 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069846959 seconds)
  done (took 1.962806689 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.318022369 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215950198 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.196570139 seconds)
  done (took 2.126106561 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.215736709 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.199830162 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.460143892 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.283254831 seconds)
  done (took 2.669124444 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.157521511 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093378992 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071489714 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088578016 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137780894 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165488663 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.105017619 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.130223052 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083648241 seconds)
  done (took 2.483631022 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.153459931 seconds)
done (took 12.934339526 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.127326746 seconds)
    (2/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.099410525 seconds)
    (3/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.277287553 seconds)
    (4/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.086979674 seconds)
    (5/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.081415544 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.117720455 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.082867311 seconds)
    (8/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079271578 seconds)
    (9/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.248825247 seconds)
    (10/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.140821386 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.077382564 seconds)
    (12/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.193477616 seconds)
    (13/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.108959128 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.144085669 seconds)
    (15/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06952385 seconds)
    (16/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.185337525 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.153433225 seconds)
    (18/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.078427017 seconds)
    (19/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.229755163 seconds)
    (20/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.24308657 seconds)
    (21/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.170750655 seconds)
    (22/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.186808557 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076705303 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13764108 seconds)
    (25/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.117641392 seconds)
    (26/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.192402848 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076261701 seconds)
    (28/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.214822673 seconds)
    (29/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.111028141 seconds)
    (30/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.103344669 seconds)
    (31/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.112790655 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.105551017 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.154844821 seconds)
    (34/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.054244599 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.095391091 seconds)
    (36/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.212459871 seconds)
    (37/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.093759086 seconds)
    (38/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.078852006 seconds)
    (39/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.122410271 seconds)
    (40/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.21052201 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077709622 seconds)
    (42/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.220283041 seconds)
    (43/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090087281 seconds)
    (44/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.076806778 seconds)
    (45/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070911664 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.100985419 seconds)
    (47/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.196176438 seconds)
    (48/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.207476216 seconds)
    (49/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.163267775 seconds)
    (50/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.086090023 seconds)
    (51/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07369022 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072101413 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.150342744 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.097750671 seconds)
    (55/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.085264343 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069717117 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.192447428 seconds)
    (58/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.191262595 seconds)
    (59/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.076756132 seconds)
    (60/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.129508372 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.320674958 seconds)
    (62/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.120436637 seconds)
    (63/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.083817626 seconds)
    (64/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083066892 seconds)
    (65/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.09247213 seconds)
    (66/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077399816 seconds)
    (67/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.077579596 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.181091335 seconds)
    (69/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.16898937 seconds)
    (70/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.075143248 seconds)
    (71/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077566076 seconds)
    (72/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.079456372 seconds)
    (73/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.10603488 seconds)
    (74/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.177476904 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 0.06987411 seconds)
    (76/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075391402 seconds)
    (77/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.081063471 seconds)
    (78/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07970872 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.10878573 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.122003866 seconds)
    (81/309) benchmarking ("sort", Float64, false)...
    done (took 0.137812551 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.093304657 seconds)
    (83/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.219708033 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070464777 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.192113793 seconds)
    (86/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.081432673 seconds)
    (87/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.202633579 seconds)
    (88/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.163748707 seconds)
    (89/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.056307935 seconds)
    (90/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.158669168 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.1328942 seconds)
    (92/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096060391 seconds)
    (93/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.085381585 seconds)
    (94/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.084043733 seconds)
    (95/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.079440904 seconds)
    (96/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.214282662 seconds)
    (97/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.067110193 seconds)
    (98/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.077279347 seconds)
    (99/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.05582658 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.146098272 seconds)
    (101/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.079958076 seconds)
    (102/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.174355928 seconds)
    (103/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056734431 seconds)
    (104/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076680336 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077853352 seconds)
    (106/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.072941563 seconds)
    (107/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.094414355 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.193933593 seconds)
    (109/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078573253 seconds)
    (110/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.188483064 seconds)
    (111/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.106249282 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.202132339 seconds)
    (113/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.067345525 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.151916225 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.095434517 seconds)
    (116/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077760109 seconds)
    (117/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.114034829 seconds)
    (118/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.088843402 seconds)
    (119/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.072833344 seconds)
    (120/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.105972719 seconds)
    (121/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094939134 seconds)
    (122/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.054767788 seconds)
    (123/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068152139 seconds)
    (124/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.081865698 seconds)
    (125/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.168332766 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.145519697 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078198695 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077235114 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069084999 seconds)
    (130/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055747799 seconds)
    (131/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069569696 seconds)
    (132/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.119353906 seconds)
    (133/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.054001567 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075816489 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.089738561 seconds)
    (136/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.082067943 seconds)
    (137/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076747442 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.080498435 seconds)
    (139/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055203654 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069296069 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076853072 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116295132 seconds)
    (143/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.068146014 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.075938907 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.09181726 seconds)
    (146/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05427895 seconds)
    (147/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055461834 seconds)
    (148/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.147955246 seconds)
    (149/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077734926 seconds)
    (150/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.172229103 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095069952 seconds)
    (152/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.056299719 seconds)
    (153/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070606484 seconds)
    (154/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.05444761 seconds)
    (155/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.054580303 seconds)
    (156/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.191375711 seconds)
    (157/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054900946 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.096380935 seconds)
    (159/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.054243905 seconds)
    (160/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05405693 seconds)
    (161/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.078088543 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06993964 seconds)
    (163/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078213313 seconds)
    (164/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.085534651 seconds)
    (165/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055870086 seconds)
    (166/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076982261 seconds)
    (167/309) benchmarking ("sort", Float32, false)...
    done (took 0.139037998 seconds)
    (168/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077605208 seconds)
    (169/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074854479 seconds)
    (170/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.080973737 seconds)
    (171/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.114344514 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.071141262 seconds)
    (173/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082694285 seconds)
    (174/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078427108 seconds)
    (175/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069041856 seconds)
    (176/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055536738 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.102056786 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092485629 seconds)
    (179/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070685449 seconds)
    (180/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054073311 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090981725 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.15392731 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.075089742 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094201654 seconds)
    (185/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073509992 seconds)
    (186/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067408816 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08003256 seconds)
    (188/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055175758 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.117754057 seconds)
    (190/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.079953848 seconds)
    (191/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055063642 seconds)
    (192/309) benchmarking ("sort", Int8, false)...
    done (took 0.148417771 seconds)
    (193/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076285355 seconds)
    (194/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078031292 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.229557408 seconds)
    (196/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.070914019 seconds)
    (197/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072580956 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054904197 seconds)
    (199/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054903599 seconds)
    (200/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06952971 seconds)
    (201/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077850339 seconds)
    (202/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.190247162 seconds)
    (203/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082430524 seconds)
    (204/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.057467191 seconds)
    (205/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.070118396 seconds)
    (206/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054459027 seconds)
    (207/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076631773 seconds)
    (208/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.183560839 seconds)
    (209/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.096890554 seconds)
    (210/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.054359047 seconds)
    (211/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055939428 seconds)
    (212/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068387591 seconds)
    (213/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.066974379 seconds)
    (214/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054215351 seconds)
    (215/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073890014 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095104786 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095854624 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069197724 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093993289 seconds)
    (220/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.081588717 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.146213389 seconds)
    (222/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.054175662 seconds)
    (223/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.076403443 seconds)
    (224/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.205011111 seconds)
    (225/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.067578248 seconds)
    (226/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.117638851 seconds)
    (227/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054734542 seconds)
    (228/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.116700093 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.071382082 seconds)
    (230/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.162964259 seconds)
    (231/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055474484 seconds)
    (232/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.161696287 seconds)
    (233/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07632507 seconds)
    (234/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075362721 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097713315 seconds)
    (236/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054281711 seconds)
    (237/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069283837 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099733184 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.099537238 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094832745 seconds)
    (241/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06926952 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.116118968 seconds)
    (243/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.053737025 seconds)
    (244/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072916307 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.093838139 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055654848 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068866646 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069170494 seconds)
    (249/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070516346 seconds)
    (250/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076402231 seconds)
    (251/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.115535194 seconds)
    (252/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077909536 seconds)
    (253/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056540038 seconds)
    (254/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.067043756 seconds)
    (255/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078085769 seconds)
    (256/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.084926791 seconds)
    (257/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054838974 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096780414 seconds)
    (259/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06644594 seconds)
    (260/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.055359335 seconds)
    (261/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.071520163 seconds)
    (262/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.069532697 seconds)
    (263/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.152809678 seconds)
    (264/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.201659451 seconds)
    (265/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.055152887 seconds)
    (266/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.0542648 seconds)
    (267/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068798986 seconds)
    (268/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070383931 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.181401746 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069069405 seconds)
    (271/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072281479 seconds)
    (272/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054175241 seconds)
    (273/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076723309 seconds)
    (274/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054186062 seconds)
    (275/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.055176269 seconds)
    (276/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070410999 seconds)
    (277/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.054709477 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077651797 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131341965 seconds)
    (280/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077849745 seconds)
    (281/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.054746093 seconds)
    (282/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.05772377 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067977722 seconds)
    (284/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068956602 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.069437354 seconds)
    (286/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054329318 seconds)
    (287/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074251014 seconds)
    (288/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.056107521 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067551727 seconds)
    (290/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.071939679 seconds)
    (291/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055493591 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.069655489 seconds)
    (293/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071224467 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077472889 seconds)
    (295/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.055355036 seconds)
    (296/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.05509938 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.143697049 seconds)
    (298/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.055356973 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075521366 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.182077738 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068951348 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091533588 seconds)
    (303/309) benchmarking ("sort", BigInt, false)...
    done (took 0.200061445 seconds)
    (304/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067858832 seconds)
    (305/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076446767 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074858762 seconds)
    (307/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054638394 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068539092 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068480684 seconds)
  done (took 32.554492404 seconds)
done (took 33.961313598 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.090507966 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098291616 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.08064207 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.098780132 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085557716 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.081089383 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078056527 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082964019 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084903166 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08705014 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082338027 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058450758 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078846417 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078969288 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079814675 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095868219 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083215696 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077976982 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077761845 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068852531 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078120851 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.070122756 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071310709 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05881634 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.083826393 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076375061 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076948015 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077920467 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069662044 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069741647 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073172576 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.078136026 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068978259 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082936416 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076553851 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077003455 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079722187 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081008707 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071079218 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069417565 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079234085 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06947174 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077070106 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077675287 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075961651 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074787522 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076736855 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.08141561 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094843797 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071337463 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078238208 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080005871 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079463242 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.077264535 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073780884 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077074179 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074657579 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094714136 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077144575 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070999712 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078443947 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078543805 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075330399 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077074105 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077052134 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079503183 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080243662 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075079955 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078897724 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075868237 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069289938 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07713745 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073205322 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069310924 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080581255 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.08217014 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068340342 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075471966 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076773443 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075005868 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06863038 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071486038 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.073348765 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076160888 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071125034 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057948999 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073417604 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07650712 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068889527 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077440316 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07631544 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.077966495 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071584268 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080846214 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068481215 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074737252 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069809142 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069436566 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071693806 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07375615 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068705281 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070875033 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.079464373 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070797017 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076464665 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082705935 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069503534 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075957296 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067959475 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068534038 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082888201 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078946923 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068724958 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071209662 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067893008 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076117406 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068010426 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069284825 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068541307 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.069211342 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074947048 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068799729 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07054934 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075924402 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081730655 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067736673 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071941425 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070431919 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068056951 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074365861 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.203936644 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.071482283 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071941362 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066663378 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071856278 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.07022854 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077447239 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071951563 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.077203533 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071464648 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078439232 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.074289996 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07565545 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074696639 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067925027 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062998305 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071597305 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070749531 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071682482 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069529484 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.07137666 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069646463 seconds)
done (took 13.093144656 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070272431 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144012617 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.10059346 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100661323 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089555755 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070280321 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079869707 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103850614 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071857625 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.105027414 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092884588 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090401581 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.118784505 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068577601 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069749595 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073378643 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070945244 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085221453 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103933451 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.09129777 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119101005 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069011591 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096783725 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093719094 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092334708 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.107148044 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.07047474 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073703006 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073901799 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.097736516 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093751137 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073948703 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070815772 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102126759 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.098022643 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087719148 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06995286 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087480978 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070193747 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069797224 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071158362 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.104132691 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08424294 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08476901 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074886688 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.081228951 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071455394 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087724756 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094032306 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082882385 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.090207013 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105553024 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073144203 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088529337 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068313893 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.090568887 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081204405 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072355679 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070264779 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078759777 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069738198 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073267455 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085020381 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084626759 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074010933 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.089351534 seconds)
  done (took 7.119930902 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088574986 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097022868 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087602818 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088851099 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069046755 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070245044 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070024662 seconds)
  done (took 2.07350402 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070839074 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092762103 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093678457 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093849868 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085965424 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092090702 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079933005 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070318259 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092553633 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071071061 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09288094 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105546418 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074113203 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077963027 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094859869 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070263286 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095624939 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070398207 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074115205 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095570372 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07274668 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.1013537 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074173919 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070551794 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08519712 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070667816 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119425582 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075125522 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0723113 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073801536 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068427798 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.11226487 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084602284 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078957136 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070754511 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08575482 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085697254 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069291532 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087670812 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079236073 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085064543 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.07116828 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.07175448 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068336826 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075462137 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081135565 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.07231024 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071230812 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073910079 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090850652 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071080404 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084582039 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073667784 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07690164 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073058917 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076937156 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08220482 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071868521 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091249996 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072091443 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087505792 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086792995 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084833144 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08686036 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072988033 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084465958 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.086246761 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073288434 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072460708 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074963825 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086917181 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068955262 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072266181 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081367842 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07255046 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09475356 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094863029 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071942422 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084563877 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071216654 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070895489 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070534404 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094028631 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076023252 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070471147 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07461561 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073543936 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068545023 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069327043 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.075101831 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068356842 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072560763 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073631747 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073908043 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073474374 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.088299985 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072846246 seconds)
  done (took 9.233726711 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072485717 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071981432 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.073350161 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071515095 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071733955 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071561345 seconds)
  done (took 1.958153394 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097625042 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.073303931 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084258849 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075871926 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.109350133 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.091166786 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091241455 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081447441 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08820981 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082866682 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.091160768 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092250508 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096520521 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.075890488 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091156839 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075057731 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.092194599 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078817134 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08304724 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076463267 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090130806 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07631401 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076480899 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086016206 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079465755 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076079338 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082116937 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.0827545 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082240328 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082572814 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07574943 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079697323 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073987968 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081736481 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091428386 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074310032 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075575772 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.080947223 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07550079 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079598771 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.09191299 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076815285 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078139458 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081048174 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081842283 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074090278 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081720347 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083006856 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090792852 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.080337123 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.080765153 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075722713 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079145056 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.080925844 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074508735 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081480066 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.08128489 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091483385 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075849206 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074584465 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.07298682 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080090375 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081266144 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.081185828 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084735741 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081253484 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074886877 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076264258 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07662024 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075420628 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080859755 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073149837 seconds)
  done (took 7.389197798 seconds)
done (took 29.262415324 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.559456741 seconds)
  done (took 2.052994478 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.641545878 seconds)
  done (took 2.157598386 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.538197028 seconds)
  done (took 8.051257412 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.403343201 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.511851732 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.75430504 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138999415 seconds)
  done (took 3.36068394 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.727591785 seconds)
  done (took 2.249439943 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234831212 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22200641 seconds)
  done (took 1.987827769 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.386410225 seconds)
  done (took 1.900603518 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.172597164 seconds)
  done (took 2.689336758 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.267783563 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184155958 seconds)
  done (took 1.971981324 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.492788203 seconds)
  done (took 2.011130152 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.897393259 seconds)
  done (took 6.418159458 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.227874973 seconds)
  done (took 1.788806094 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244146622 seconds)
  done (took 1.766219393 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.760360926 seconds)
  done (took 3.282054474 seconds)
done (took 43.206987428 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088516187 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.089988679 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089771908 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086011469 seconds)
  done (took 1.862867589 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081970282 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077778289 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.080104962 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076407508 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081091751 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077309279 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078788297 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080318214 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076976279 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077407192 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077479077 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076829569 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079492648 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078408564 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075526204 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079276236 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080811346 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077331285 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080018458 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077502831 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075522118 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078939792 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079866279 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07663905 seconds)
  done (took 3.404742478 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083238479 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077433833 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.079626514 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076947373 seconds)
  done (took 1.844700687 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082531665 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.097235622 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093596829 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082781424 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096691644 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091093554 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073568934 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073313302 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075105003 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.082314474 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072660835 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101017828 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.093363086 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082939887 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.085041022 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.07079105 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072944796 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092073508 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083064443 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.083849303 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074887439 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082679968 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072206029 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093542353 seconds)
  done (took 3.532774588 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.090784623 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.11031688 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085762737 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094540339 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096468221 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069317134 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.092943855 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095597957 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.132388032 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069707975 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.075277646 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.0698939 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077854274 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069297425 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085609853 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113252041 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11737833 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073150747 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102343335 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070298677 seconds)
  done (took 3.324437236 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077573826 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074564704 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07165398 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070215131 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081551244 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07798546 seconds)
  done (took 1.988212335 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072359931 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.07198876 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071553397 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072053512 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076914478 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072211277 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069598308 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072004528 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072459763 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071374315 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070880422 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070117105 seconds)
  done (took 2.393775205 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.207806375 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072634898 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073387703 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.0700138 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07452157 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.070906706 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086053055 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072163526 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097643592 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071161807 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.07107743 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073274113 seconds)
  done (took 2.575560639 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213219894 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081180514 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244858988 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158074828 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116118563 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120808594 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117734845 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118203144 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.147288986 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105305064 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172594461 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172912979 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112990663 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142863798 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094294008 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103853787 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160059855 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1703187 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111028206 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171269962 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156605581 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131991424 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152703054 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107407064 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11128714 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127366188 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076489923 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085141439 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176324268 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139481176 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149782074 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116096902 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097383341 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182719414 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177836835 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145111312 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152777448 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089338623 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.108013195 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.137981865 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207033365 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092560732 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165977917 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255009479 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085784769 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138982032 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125074392 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.125717737 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.110498002 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095997629 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151699861 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191459755 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.142806428 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091640394 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130296855 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119313968 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.120031631 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119231185 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187065829 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168407731 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133248824 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076510378 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113791139 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158116631 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138702038 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114011513 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.129629076 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097183416 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140130258 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16050059 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128216617 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149684325 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.123811816 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093695401 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123333677 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145047779 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132582289 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166915472 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129375794 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077723665 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128259162 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106386662 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085316346 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.153575892 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079995645 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179133117 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103458833 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110476764 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130333932 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113350977 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113926426 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163781413 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146541602 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.249247224 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.071361394 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110961014 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.126494732 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152101768 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092732509 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113945868 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121623943 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081583449 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142963112 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079943454 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128488642 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079363448 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129073007 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135721944 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082589883 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12846366 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10992838 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.105674311 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137429012 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164183407 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094083411 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0869389 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174788945 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126340903 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.108010244 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149871926 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162091288 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10486742 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105849911 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156150392 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184668688 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094393979 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167789362 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111511692 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088379027 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092847785 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128385549 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116471708 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12938787 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086101862 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122871391 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173765277 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.080000701 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10060695 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1392 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083060854 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085025421 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109476405 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109165665 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100268246 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.104169683 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.106856985 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140628171 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127831721 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109346031 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126628892 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248985912 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17790486 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093847196 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.107395035 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110517526 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075012803 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.141285133 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161208401 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085559841 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16830903 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.129070255 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122350604 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123475669 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08964501 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145420519 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084432694 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075524419 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150646518 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114644322 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116341355 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.156079532 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121713627 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.130594786 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.126414467 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138627797 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136302514 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.134610771 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110758373 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092545315 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115974394 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131947324 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07874273 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095387375 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084729264 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110644782 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100739613 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088397629 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146511531 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128779684 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115036548 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116465312 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10212457 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152557777 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.081002587 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133410021 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.123767391 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100229715 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.156278675 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155822391 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136112656 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103398868 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141640339 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074456862 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078211357 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091327524 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.270022283 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088438128 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089229385 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121081471 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15338157 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134950463 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14110369 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130487601 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125362131 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160936958 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074857224 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.126121975 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152827806 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127351276 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.109575709 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095099272 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.104354496 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147444165 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112489476 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188247711 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11746056 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127573138 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157373064 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.10597633 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084030406 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107658715 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140065225 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108869896 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149306145 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10476021 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093590369 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114324713 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079162915 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103317496 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1320878 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123535836 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139015333 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.1199467 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13823596 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082112099 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120531232 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126455435 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126668106 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068328293 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123768223 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164196124 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099241955 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121721574 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15677412 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083455847 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.139421199 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177754528 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.296818635 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090943305 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114961771 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125361666 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133594926 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125505571 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146016831 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112740708 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142273518 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115262754 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.091343275 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093475054 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102762947 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109357834 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099997714 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.111178744 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.119375296 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.101267622 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13729679 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108759873 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115263558 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122106692 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.10433917 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097196821 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102435824 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181431269 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124324833 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176843801 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104450165 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.148511975 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168808962 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079232084 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083872762 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.0838075 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145551622 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089041283 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134946223 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.11282779 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122846822 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128929471 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14767913 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100452808 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072755042 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115432932 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138994551 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130958763 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103061267 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107665127 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166566894 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.103798285 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083184872 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117830836 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121105467 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107562341 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172980904 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064754346 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108160766 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225854207 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086726352 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133392588 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158949308 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085866259 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.108695671 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124169294 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117471195 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132803728 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105384598 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114449106 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132160675 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156436026 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133666148 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09571627 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117652436 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132531941 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161136298 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110904981 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.10186878 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179104542 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15629788 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.164294357 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.09209686 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118181621 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117553951 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112767957 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141777569 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087896243 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167308811 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086645621 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141719728 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107905026 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093088443 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134132868 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113723682 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093167864 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152801276 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122799648 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087198058 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081996485 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123331371 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127195388 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110265626 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079351726 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142906653 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07773849 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136013659 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164267819 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084670648 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108754967 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099600958 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082498719 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107383942 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103740544 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089600048 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.101084492 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170287651 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087972277 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149159721 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134072916 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11362217 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134723696 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104336746 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.64181156 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080291332 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148286473 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114695084 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167225428 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100570987 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11510621 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109132902 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119521321 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140689042 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102080554 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.185152663 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128963331 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114001118 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080784476 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101120995 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102352331 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087623137 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107495776 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112430592 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113187844 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092120579 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11535307 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120612946 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083918337 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096366117 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152936585 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114360135 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139896491 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138257287 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086323339 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116271018 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131882362 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080782234 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118522637 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147094899 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105400352 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100042325 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082614258 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.099323748 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.419437434 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.080200951 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168196709 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127968435 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117673544 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121043952 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.119017869 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139422295 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115189043 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129870116 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099303758 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.115172812 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120980111 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087770387 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.083022823 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114117421 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118292749 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.103993027 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104832485 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.102769784 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159445195 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077972307 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105761902 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122388569 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150644309 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18067427 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.09440935 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088565383 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125475634 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120611057 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.119191881 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127614972 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084248496 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087865431 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.0845283 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.083409583 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11427181 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119125048 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12039159 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1158743 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170184859 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.089700334 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.246999659 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100781044 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110397939 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074769036 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.083589785 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101234872 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103418224 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112878849 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115114679 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164425402 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09926789 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.09372719 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095209109 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07853781 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087662408 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133007896 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114049763 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274389335 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107059972 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067471773 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113824146 seconds)
  done (took 61.213343872 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111937122 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087287505 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101167191 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150283771 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.127843438 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206267376 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158538776 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194671596 seconds)
  done (took 2.807735459 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073299487 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.100767496 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108440927 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087594633 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070894127 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073585716 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.237549 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086722393 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070687402 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101168155 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.083155366 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.073014746 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.444366555 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070767012 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072371377 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066090952 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071599964 seconds)
  done (took 3.554675926 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.414002216 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.621526675 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.365306689 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.080778349 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.942867766 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.096836832 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.153894199 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140187154 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081993716 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.542643298 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.413485832 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135735098 seconds)
  done (took 18.663264198 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086854681 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.080301551 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093957514 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.094769081 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.082081346 seconds)
  done (took 2.112230434 seconds)
done (took 110.85260633 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.086412596 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.618112501 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057455336 seconds)
  done (took 2.37832286 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087579832 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090248481 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090854676 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087863042 seconds)
  done (took 2.040440572 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079052846 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.08222193 seconds)
  done (took 1.839349905 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.242001297 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.174002518 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.102006362 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087599641 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.084226609 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.083877797 seconds)
  done (took 1.933078404 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076934395 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079133017 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077728402 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080574951 seconds)
  done (took 1.986941815 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080998486 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056169483 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058134306 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.061429846 seconds)
  done (took 1.930440331 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092026458 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084043571 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083766976 seconds)
  done (took 1.935229635 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107871938 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090886545 seconds)
  done (took 1.87337705 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.087034968 seconds)
  done (took 1.762108819 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100225103 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.105984957 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.138118464 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115873359 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.145339572 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.114880242 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089611445 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090505808 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.081191044 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.091068862 seconds)
  done (took 2.747865616 seconds)
done (took 22.7014441 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083920547 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.380160002 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364579254 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.096181175 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672844 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361453857 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.990314757 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098161683 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121150544 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071797242 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089659778 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653460326 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.9819247 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.33036003 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.972433954 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328522561 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653193199 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073086503 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07242532 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072758318 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.974663149 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072181811 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07153703 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072426293 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651541833 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37671263 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072169755 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.334006849 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072737048 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074636887 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360165924 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072972522 seconds)
  done (took 16.336019952 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075304118 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127022026 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077603239 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090092052 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075336815 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07411176 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075337781 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073138749 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144785935 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072662671 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089859765 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072344352 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.076149273 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073325645 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092505025 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072483183 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072922902 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07279635 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072348231 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072568462 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092265985 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071888047 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072883047 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072696779 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072565329 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085550977 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073138314 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072603508 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072588898 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.0744136 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07549029 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073196568 seconds)
  done (took 4.251196393 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120615234 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.130388949 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077752586 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109827321 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117241992 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074185565 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149784619 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099171222 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133743442 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072548717 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090127171 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072727421 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108160178 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073186203 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093185144 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072814154 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073996531 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073849013 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072470669 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072783285 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093199706 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073064948 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073991906 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073165885 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072862707 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087242315 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073416801 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073194845 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073473331 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074459737 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076269931 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073555317 seconds)
  done (took 4.498183623 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07713029 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079505788 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.088567831 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089991583 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074741187 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.077939035 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078656586 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074139877 seconds)
  done (took 2.336077299 seconds)
done (took 29.100611246 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084573403 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073467443 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.077951037 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086622516 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07734939 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.08268962 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070983801 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.080346751 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077592888 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.078295326 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079784829 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071518239 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.076397757 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071512037 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.078685 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.072070304 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084097544 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076390613 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083414859 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.085191821 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074982529 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078371282 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079934693 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084358955 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083514808 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084551601 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08232313 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077149874 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072631663 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074737217 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082644242 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089372933 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072738283 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083616017 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.07143835 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071583112 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.076122959 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072398065 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083435989 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.08138382 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073794159 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080961232 seconds)
  done (took 4.978553063 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.0928043 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09859881 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089547503 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066021932 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.071470178 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.069997718 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094606584 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064319037 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064252925 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093627115 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059720716 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063451623 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.067732274 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057739333 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.064799469 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060655091 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.066483418 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059377311 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.064597526 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.064089733 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094401817 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057710458 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08251746 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.068370904 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059852348 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065778871 seconds)
  done (took 3.567166885 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079213497 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089932891 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095599379 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136289714 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110532585 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084013837 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083937686 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.100812516 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.093998893 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.07107286 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075803158 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.097997326 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095343043 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07978741 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.073222416 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.091847912 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.088556916 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073590728 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077604921 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.0996002 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092066579 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.091114124 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.101177457 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08826645 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071700409 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074670562 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075824769 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086242927 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075598208 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081667273 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075633758 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075970837 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074418746 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084139479 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075419403 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073644238 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.100363542 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082896062 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08405178 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072719136 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080450868 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.0732063 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.098501126 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133311157 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071354506 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07849679 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076074547 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082440033 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072028352 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09262835 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08380627 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071808531 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075147549 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070898519 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071736828 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074698018 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073823082 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073855556 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080887297 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077896661 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.096814551 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076489472 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08817093 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071145769 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079822565 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070906686 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072790268 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070907947 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101155411 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073316586 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116571384 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07253926 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072943136 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081120177 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079947415 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.078368198 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071811452 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088407054 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082599488 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.077352214 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080435951 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075718768 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075207289 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.095882969 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074433202 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073701062 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.072865448 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078245369 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075037721 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072952632 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085795891 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071200558 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075338645 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089519054 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.072018146 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073110581 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077451383 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.077354475 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.071610008 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083316202 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07613454 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073460916 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082811944 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071815115 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074998269 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084644031 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078796548 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071412703 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075971364 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.078059396 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072797644 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073668928 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074125587 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073784552 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.08187619 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078830862 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076656255 seconds)
  done (took 11.230255752 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.171647565 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.16427189 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075761565 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.156259671 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081405973 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084145798 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.1578646 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100646311 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072252242 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073445735 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072847774 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.116068522 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.112413342 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.122144771 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.08386102 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072885743 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.089415289 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.120493461 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.159275519 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.154409904 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.089405651 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.082276328 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074194608 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073327181 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075454451 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083025641 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090442317 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.084232041 seconds)
  done (took 4.62851027 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084322161 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.111580397 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079740836 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.097100102 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096083238 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072544185 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.074884992 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074576368 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087263652 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083833721 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.0725083 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077803362 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07979342 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075746515 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073227696 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079815579 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079505557 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.073803924 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075912766 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07802207 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083405636 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.098032658 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076294911 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.07252866 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077830978 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071728992 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067374636 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.089005587 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072855551 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.100673463 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070073616 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077413741 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087453697 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073039602 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071730295 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071854538 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072154252 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072280134 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073959082 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070542308 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071236535 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061703172 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071206192 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083533232 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.079267203 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060681817 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077032518 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07760339 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.077342491 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069483161 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075244853 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075249447 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075305147 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079757828 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076304193 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.077775887 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073958829 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.078992719 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081804792 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071742074 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069741703 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070492706 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076825145 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069902484 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08155406 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.076950513 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070290694 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071846543 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074190599 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078967442 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071997332 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076873725 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069929992 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.074153973 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077063876 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074252257 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073917262 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070651034 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071794131 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.0723948 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059147456 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.07214098 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057108294 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075541515 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070680018 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070702642 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072467504 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077407398 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084058842 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.074119223 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078554255 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073418477 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071519817 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075113009 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064440798 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07588375 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083759284 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.087550157 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072552426 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069991546 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086970045 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.077207278 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071262508 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059831997 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076657977 seconds)
  done (took 9.712713469 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096020954 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07573164 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089101472 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.097067544 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092201118 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079473818 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082618236 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073814243 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088886292 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.079519325 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082548421 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073320351 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083328919 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082254074 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.074475469 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083083484 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076813695 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089648671 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087841355 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.072474517 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.082175754 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085815267 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.095789329 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086913531 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085658593 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087638605 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.096127142 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082441394 seconds)
  done (took 4.107058743 seconds)
done (took 39.914729725 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.776128205 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.947431557 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.77663991 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.113397172 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.848480153 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.982540639 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.972120175 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.77280316 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.965304685 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.808865968 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.001949554 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.979163373 seconds)
done (took 65.65554746 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.790993351 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.912962466 seconds)
    (2/2) benchmarking "String"...
    done (took 2.019744549 seconds)
  done (took 5.644546591 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.062487333 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.341464352 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.020818079 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.772858458 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.779042074 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.089724614 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.58268282 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.288080726 seconds)
  done (took 30.58605941 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.972954805 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.996385951 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.49181388 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.52361942 seconds)
  done (took 15.749530139 seconds)
done (took 63.629541194 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.772014448 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.775420735 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.81154578 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.758640597 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.833420291 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.783240544 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.195093309 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.833731122 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.771936602 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.75843101 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.774910019 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.255074617 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.788522615 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.208939592 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.772474041 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.786709439 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.806426978 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.351285704 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.932862755 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.788169533 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.792284435 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.8274594 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.773529677 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.784700267 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.817449914 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.772808406 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.176042429 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.776252534 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.403215433 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.776561867 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.803103522 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.373330433 seconds)
  done (took 204.545744234 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.774497552 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.847120579 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.919678841 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.790424002 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.235869028 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.95733784 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.879775615 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.290362772 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.781295327 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.788159634 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.890640856 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.775607975 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.905267423 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.749715554 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.80488671 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.85464782 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.014876905 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.933641763 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.812313543 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.929855827 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.799047121 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.714607303 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.685270313 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.889520207 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.819313383 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.873803415 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.941674806 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.782874357 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.971797791 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.993339806 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.788876963 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.807707917 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.998805348 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.650390957 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.784333243 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.80804943 seconds)
  done (took 169.958019172 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.954507917 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.776504512 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.775209002 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.775996083 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.788975892 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.776239874 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.776305908 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.897482627 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.905352961 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.412985401 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.114201961 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.830769152 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.573435043 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.776352856 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.844313536 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.78871317 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.777043557 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.795893532 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.805537562 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.782635601 seconds)
    (20/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.779509185 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.779705566 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.906674266 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.79374812 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.788966969 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.781068796 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.786381755 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.153179757 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.962191422 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.782978925 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.786528476 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.038570904 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.78164457 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.780460372 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.624536121 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.839615222 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.869481436 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.783215496 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.786206937 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.780726779 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.998272019 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.782000357 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.782275574 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.784986518 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.920374099 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.781011663 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.90655124 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.781271707 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.268658318 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.782164131 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.781262521 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.446202034 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.370561723 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.78247618 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.781696418 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.784966918 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.781581302 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.782587193 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.788020343 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.422047528 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.856687604 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.784106777 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.785500262 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.787965767 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.783573374 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.786581534 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.782635999 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.352371381 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.844388712 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.903539437 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.90467074 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.786202673 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.781725593 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.848779612 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.875237656 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.783488788 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.783305675 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.783219 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.782540042 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.863562646 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.783699204 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.912918993 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.79274173 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.784193288 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.834669669 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.851825388 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.783496686 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.623069882 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.784913958 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.78310639 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.051989951 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.783021773 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.848348299 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.783631833 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.783860237 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.782754572 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.912215519 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.90677831 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.504150334 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.787113824 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.491578465 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.787563749 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.930523071 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.784931941 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.911354761 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.785264308 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.865830493 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.78847956 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.785748033 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.784504176 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.816763041 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.785716391 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.838070516 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.784491066 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.159520605 seconds)
  done (took 403.035458761 seconds)
done (took 781.259044155 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.435746861 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.401711996 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.502160604 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.421847004 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.398910894 seconds)
  done (took 13.882224556 seconds)
done (took 15.602699399 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.872867044 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.880035257 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.80938235 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.878112534 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.807328294 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.878024813 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.860416946 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.811251574 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.845335715 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.809936837 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.846510923 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.811141365 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.797783459 seconds)
  done (took 25.630411315 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.01534814 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.013392601 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.856418947 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.015674463 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.833123252 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.014242068 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.947605118 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.940182454 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.9375353 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.804037538 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.799719591 seconds)
  done (took 22.901468041 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.013430316 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.026465826 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.86514921 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.0148987 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.836840956 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.021028338 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.951300996 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.939012281 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.941448966 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.804671996 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.79957486 seconds)
  done (took 22.937546633 seconds)
done (took 73.189888471 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.79547155 seconds)
  done (took 3.519725627 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.822919757 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.992779075 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.801808876 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.798953205 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.795141567 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.79611124 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.798650224 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.795582328 seconds)
  done (took 16.32686426 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.794628661 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.792084272 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.795864033 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.792723682 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.792709198 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.795487335 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.795211113 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.79167038 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.792572971 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.794918151 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.79471157 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.795189735 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.79395153 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.794914095 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.792497516 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.793380832 seconds)
  done (took 30.428020366 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.794243521 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.792958314 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.793464454 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.795008605 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.7932421 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.79419631 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.794378068 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.793528944 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.793380393 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.792403242 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.794527875 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.79459003 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.793633282 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.79336456 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.794276891 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.794778508 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.793446115 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.793618922 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.798571086 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.794101483 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.794535164 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.794014152 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.794783187 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.795073509 seconds)
  done (took 44.787983183 seconds)
done (took 96.784727257 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.593158076 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.504353929 seconds)
  done (took 9.824343832 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.79809047 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.797288364 seconds)
  done (took 5.378955744 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.79658451 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.799324979 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.797110439 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.796908769 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.797085046 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.797093599 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.796106117 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.796870099 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.796281846 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.798555327 seconds)
  done (took 19.698814845 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.800742655 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.79807883 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.795352049 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.798250036 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.798603253 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.795055163 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.798905022 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.805072829 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.797699465 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.79635504 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.797872715 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.796695039 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.79843753 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.795249078 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.797947177 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.796072869 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.796104387 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.795332362 seconds)
  done (took 34.087152114 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.798688431 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.798511764 seconds)
  done (took 5.325389916 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.796612306 seconds)
    (2/7) benchmarking "second"...
    done (took 1.795534324 seconds)
    (3/7) benchmarking "month"...
    done (took 1.79578358 seconds)
    (4/7) benchmarking "year"...
    done (took 1.796372035 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.796162424 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.796017669 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.796633933 seconds)
  done (took 14.301986317 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.800093677 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.970157231 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.028884567 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.455140164 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.800958206 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.802491785 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.757602347 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.803478066 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.805117438 seconds)
  done (took 19.952212986 seconds)
done (took 110.29400617 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.609556863 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.797620087 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.021809681 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.849374588 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.85910541 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.137295583 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.820593126 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.102721528 seconds)
done (took 42.927030113 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.805212314 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.115974229 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.096799187 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.81956895 seconds)
  done (took 16.762322387 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.781367959 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.331753247 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.83316213 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.383904052 seconds)
  done (took 20.091688723 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.164645651 seconds)
    (2/2) benchmarking "read"...
    done (took 2.141886763 seconds)
  done (took 6.042161136 seconds)
done (took 51.430325932 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.801575179 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.80020823 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.801211606 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.798026237 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.8021684 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.800812491 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.797823724 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.79831134 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.800739526 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.801338357 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.800529663 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.801637925 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801481564 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.799093528 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798527066 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801394889 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.799421196 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.799343786 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798347182 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.800402605 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.799227024 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.80183873 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.79852313 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.799243283 seconds)
  done (took 44.932926859 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.801668951 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.800164379 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.802911401 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.803229422 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.799711821 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.802162846 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.802688214 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.799515652 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.801993888 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.802632655 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.799712123 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.799508465 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.802302106 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.800786758 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804125346 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.800411713 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.803412237 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799744184 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802893207 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.801308752 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.803313826 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800901658 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.800343412 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.803048838 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.80101442 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.80078337 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.80321151 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.80064497 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.803286484 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.801444977 seconds)
  done (took 55.781334334 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.809164967 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.812738598 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.804654402 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.803906255 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.804048002 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.804101016 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.803665213 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.804282987 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.804574097 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.803970487 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.804703193 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.804514825 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.803332967 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.804369055 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.804300309 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.804261544 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.804886047 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.805083019 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.804115894 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.804662916 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.804967683 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.805105925 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.804818094 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.804370042 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.806033245 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.804424428 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.805431532 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.804675298 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.805358337 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.805300061 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.804780999 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.806086592 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.805726226 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.806384802 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.806015033 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.806072297 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.811127908 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.813357177 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.805302262 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.805863469 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.806108527 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.805754615 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.80665346 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.80625443 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.8063882 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.80595466 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.806154475 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.806289744 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.807230697 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.807020979 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.80627481 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.806693387 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.806797211 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.806818407 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.806708389 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.806491112 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.807632032 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.807835708 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.806362082 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.806452658 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.80707025 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.807359095 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.806075172 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.808245615 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.807217858 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.806599058 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.808497869 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.807380877 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.807506002 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.807465181 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.807858817 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.806994181 seconds)
  done (took 131.775509379 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.807524908 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.805338111 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.804177003 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.805316718 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.805009191 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.807924596 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.805294294 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808193573 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804740624 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.808167988 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80835311 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.804980063 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805963161 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.809370978 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.808640511 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.804612824 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.808719374 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.805959735 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.808346625 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.809074704 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.808719806 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.805542335 seconds)
  done (took 41.487641152 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.809087704 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.809786663 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.80730929 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.809229394 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.807329628 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.809084846 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.80947451 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.809192782 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810539291 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.806074088 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806291782 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.809490376 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.807155656 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805869651 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.806922845 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.806699769 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.809189421 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.806795212 seconds)
  done (took 34.284000169 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.806966694 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.807107849 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.810330107 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.806837649 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.807154064 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.809637363 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.806546533 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.811009914 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.809633571 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.807185439 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.810615477 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.81046363 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.810222366 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808225674 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810242532 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.807637976 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.8104334 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807515359 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.810823389 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.807939839 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.807735245 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.811255274 seconds)
  done (took 41.535038767 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.811635715 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.810804171 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.808421247 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.808641938 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.809575978 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.811265568 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.811565451 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.808203713 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.810484418 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.811578133 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.808007017 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.812122462 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.808840863 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.809347016 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.808827547 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.808206061 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.81114875 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.809113758 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.811502928 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.81130059 seconds)
  done (took 37.940862504 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.812620806 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.813131157 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.81420824 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.813369941 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.812835685 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.812453098 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813512184 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.813934103 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.813562047 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.813474631 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.813735129 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.813598293 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.813109196 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.814298857 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.813440785 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814807023 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.814149016 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.813993891 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.813954629 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.813713666 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.813954987 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.814464776 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.813767504 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.81437958 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.814725691 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.813569141 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.815205418 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.814857208 seconds)
  done (took 52.529174739 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.813296815 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.812074676 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.810940894 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.811323157 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.810945098 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.810526527 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.81078977 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.811810593 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.813916556 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.810703163 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.813665302 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.814217781 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.814843064 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.814879157 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.814696632 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.814291246 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815956898 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.811981208 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.812499458 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814832092 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.813899913 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.815349075 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.814593771 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.811982635 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.811080914 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.815305139 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.81164682 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.811882872 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.817473672 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.813470601 seconds)
  done (took 56.137546276 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.83285516 seconds)
    (2/2) benchmarking "in"...
    done (took 1.832910214 seconds)
  done (took 5.409026838 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.811757549 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.814598102 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.815331164 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.812646959 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.812860206 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.81506008 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.81570492 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.811952467 seconds)
  done (took 16.254377261 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.815236723 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.815505954 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.81609326 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.814783013 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.816081486 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.815807395 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.821338237 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.814979734 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.81741299 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.817782664 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.823127787 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.825144757 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.818834881 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.816256389 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.81620932 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.817681714 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.816134572 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.817206439 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.816210913 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.818053153 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.817203801 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.818765865 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.818290837 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.814370137 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.818138999 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.826880814 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.82300509 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.81716899 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.817482177 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.820720608 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.816740826 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.814447607 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.818172749 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.81791777 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.817584825 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.818273321 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.82439306 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.818561718 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.822279555 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.817861663 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.818268846 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.814889575 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.818494903 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.81985752 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.81954779 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.818972188 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.817473062 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.815562461 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.816937338 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.82327365 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.823649162 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.817521679 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.816130508 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.82307859 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.820181973 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.824495148 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.819625582 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.822143917 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.828441473 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.828216623 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.831740657 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.826724779 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.820886196 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.819186249 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.828579608 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.843480236 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.824586498 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.816411291 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.816575767 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.819544606 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.825062974 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.832276374 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.829169293 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.820069804 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.820137558 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.820238573 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.821508402 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.820016036 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.825815275 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.822542713 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.820773624 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.819870784 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.829730327 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.842808795 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.819483412 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.82158812 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.820298035 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.821526392 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.821029442 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.830185335 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.821194854 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.821750389 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.821859498 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.819966021 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.821497146 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.821962094 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.819476827 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.821676449 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.817513139 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.82172176 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.821436441 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.825136128 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.831769719 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.822167722 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.82322597 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.827497637 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.821609602 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.821483667 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.829524201 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.822468263 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.823000796 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.823279028 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.8280528 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.818308212 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.82440338 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.830433856 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.821570961 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.822968426 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.822459718 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.821669716 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.831563519 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.848773226 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.822563352 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.82185061 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.826636236 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.834603827 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.822824354 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.825231637 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.822862445 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.819892236 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.819320864 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.823886785 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.822270945 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.823915687 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.822905903 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.825503573 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.819593301 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.822257636 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.823003106 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.824182992 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.823849147 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.823652339 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.825149726 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.8259956 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.824233926 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.825315386 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.828830397 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.823128893 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.824931542 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.825221774 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.819944727 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.824733587 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.825102122 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.824177823 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.824588888 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.824460105 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.823343983 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.824948601 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.824255147 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.823647526 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.824800273 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.825274263 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.828239442 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.824761127 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.828545776 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.824370514 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.821443336 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.824314515 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.82407068 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.825548841 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.82441032 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.82432848 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.82747144 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.833403408 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.825578628 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.825972294 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.826907501 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.825141734 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.825951947 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.825389901 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.827601652 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.833944359 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.825433496 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.830133729 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.827084978 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.825959851 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.826096024 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.82566968 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.826051958 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.826160651 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.830459646 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.83416187 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.837588002 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.834949863 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.826928608 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.829210293 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.828252511 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.830863765 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.830198533 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.826925727 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.827259296 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.826600859 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.825536597 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.826848666 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.828453577 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.827560931 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.826821534 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.827180142 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.82731919 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.827556356 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.827188048 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.829519727 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.827365132 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.824650795 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.827921028 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.828323826 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.82714243 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.827339011 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.826649111 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.82886587 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.828377647 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.828441716 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.833359336 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.824138832 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.829055854 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.828999398 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.827850013 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.826447965 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.826944551 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.829895765 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.828179165 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.83329201 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.827618844 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.829247542 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.834265819 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.828786439 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.827964729 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.832141018 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.829054896 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.825961555 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.83411109 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.842284238 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.828297872 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.829243282 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.828069102 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.828550985 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.828346009 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.83393373 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.825784479 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.828114146 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.828903858 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.829977811 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.826137996 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.831311209 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.831028357 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.830397222 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.831238276 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.830916129 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.829970968 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.83167126 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.829893519 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.831107602 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.829631238 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.833760022 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.838048784 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.834907862 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.831638747 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.832324693 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.831073605 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.834158081 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.830849698 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.830883543 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.829309607 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.844036098 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.839543219 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.835789361 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.831917845 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.830681016 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.834146024 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.831954406 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.835213645 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.830583633 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.830845874 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.830346961 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.82961379 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.828533176 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.831639494 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.831150369 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.831809294 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.832459157 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.835543627 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.831226093 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.830699189 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.831252084 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.831145291 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.831619917 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.83076967 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.831350711 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.833882052 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.832616687 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.830266755 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.83139635 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.837647035 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.831668127 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.832737868 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.831617642 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.832818619 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.831340012 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.833979623 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.832860749 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.83628705 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.840179111 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.835192049 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.842498341 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.834953262 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.841632106 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.833794858 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.836213194 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.841544714 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.829978747 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.83195354 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.833932027 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.833900132 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.839217436 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.834678013 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.834233629 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.837485192 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.835352759 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.833870975 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.832273462 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.834497781 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.832147502 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.834317008 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.840537377 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.835293642 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.83729112 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.834405306 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.830896762 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.834061701 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.833577856 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.832834588 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.838218532 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.834225172 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.834204064 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.833619706 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.834013085 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.833670618 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.834698202 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.835350037 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.83049955 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.83444891 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.840006313 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.835040109 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.83885198 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.834729968 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.84144463 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.835562402 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.840636515 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.835339099 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.834817671 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.834750755 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.835299933 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.836702027 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.834985878 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.836949075 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.835618944 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.835954616 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.838829487 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.835682083 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.837734477 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.836162492 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.836823495 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.835998622 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.844687905 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.860722583 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.837209645 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.840339352 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.83274673 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.837436297 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.841121458 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.836373596 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.835716426 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.83873334 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.846228397 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.844080031 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.836156109 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.837103752 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.837936902 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.837235756 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.83640601 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.835599048 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.837014674 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.836620422 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.836490779 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.837440779 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.839937558 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.836010449 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.837640264 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.838919957 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.838889069 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.846425345 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.837842075 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.838633884 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.8374602 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.837924655 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.838788126 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.837024499 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.83812549 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.837637908 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.837959069 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.838428277 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.845153725 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.844333642 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.841459308 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.837120778 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.837841588 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.838339064 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.83820681 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.839278608 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.838980004 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.838602999 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.839404968 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.838148759 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.838334416 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.836465925 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.837602212 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.838754655 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.838244262 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.841720961 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.847333359 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.840737257 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.835129469 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.838335847 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.838456594 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.837147982 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.839668538 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.845400323 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.842266221 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.849626708 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.847525713 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.843734063 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.839510315 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.842204137 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.847282557 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.838371902 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.840234244 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.839624422 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.841735701 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.841083813 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.844249947 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.840174955 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.846718899 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.839255877 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.839495507 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.847153754 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.841149571 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.840216291 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.841264566 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.845627796 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.839155628 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.836800273 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.84141981 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.839383987 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.846329608 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.841896537 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.841266508 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.842642744 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.83918592 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.842316504 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.844799052 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.841432095 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.841171012 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.838061531 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.841298601 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.841153216 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.841915519 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.837596447 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.840461074 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.841472998 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.844735815 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.848433323 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.838312481 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.843828597 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.841752462 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.842385006 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.842702275 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.842029916 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.839319799 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.838757564 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.841705049 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.842442284 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.842791124 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.844083731 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.841453104 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.842811724 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.843114082 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.843985501 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.845361605 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.853560107 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.850427509 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.838659865 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.841838766 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.84340096 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.845864803 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.842325744 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.843242889 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.843470828 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.844562914 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.84241494 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.843001094 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.841950617 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.846352317 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.858661952 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.842560923 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.843423129 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.842960343 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.846113465 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.842956067 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.840513277 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.844211998 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.844847274 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.846103201 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.852918004 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.844870681 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.849200806 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.843791179 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.844184081 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.848173083 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.84747771 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.853434621 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.846163657 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.845076488 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.844106045 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.849182443 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.860306443 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.845114265 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.854902228 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.873178317 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.844887216 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.847142908 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.84496023 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.843747403 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.844167622 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.846576982 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.845092387 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.84430599 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.844499286 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.845573851 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.845744104 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.850225834 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.845798162 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.84424291 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.845068386 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.843941165 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.846333422 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.841845792 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.84643496 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.844982944 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.846124497 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.846927749 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.845822115 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.846378946 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.858865706 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.856174144 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.845258182 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.846205923 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.842826506 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.848498721 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.848600752 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.857559407 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.854200712 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.846642237 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.846103422 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.847134908 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.846283987 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.842903277 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.847022681 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.848277203 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.846220959 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.843389642 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.859377406 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.855443703 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.849965623 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.84707752 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.848030128 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.847198699 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.847600614 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.846898891 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.847857704 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.84864271 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.847581878 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.851680041 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.847259285 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.847782366 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.850590654 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.855286766 seconds)
  done (took 1094.542031047 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.844486359 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845188796 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.844726092 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.845080513 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845226535 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.845087599 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.845323415 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.845506805 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.844270445 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.845133856 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.844894455 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.844712907 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.844923478 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.845961794 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.844657733 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.84554282 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.84486125 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.844326655 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.845228604 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.84565328 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.84587995 seconds)
  done (took 40.523035991 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.848234422 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.845401451 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.84567957 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.848296337 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.845655887 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.848899606 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.845363356 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.848670604 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.848442189 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.845709178 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.849494692 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847362541 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.84575995 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.845155652 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845863785 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.849150098 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.850018493 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.846410014 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.850393085 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.84687361 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.850163616 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.846813108 seconds)
  done (took 42.420637045 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.850923476 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.850207679 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.850248167 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.846601351 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.850272777 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.846954687 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.851156744 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.850543388 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.851070718 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.85103338 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.849716658 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.851150719 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.857921485 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.855635068 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.851991833 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.85005782 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.99342278 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.851929807 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.852029018 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.851409377 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.847299918 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.856411396 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.847573868 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.847653387 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.850629607 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.850873846 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.851299962 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.850185793 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.851162438 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.851917786 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.856003392 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.85091579 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.851710778 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.853342298 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.851067459 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.851911641 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.855628026 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.852795842 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.847989178 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.851490706 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.862479965 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.873263861 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.852511699 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.857966585 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.853113693 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.852281428 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.855435621 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.860736808 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.848176485 seconds)
  done (took 92.687720747 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.851551652 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.852045632 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.849448852 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.852902984 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.851781116 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.852157535 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.854224564 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.853123186 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.84851398 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.849105943 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.852172536 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.848631207 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.848828314 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.851219608 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.85085795 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.848729478 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.849606571 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.849589535 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.848811761 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.848328756 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.848634346 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.851554196 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.852086817 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.849384134 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.851368993 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.849181405 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.849094798 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.851856117 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.849475588 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.849450897 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.851997313 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.852213187 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.852551925 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.848803941 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.848879887 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.852106491 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.852591358 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.849820948 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.852695757 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.850608486 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.854274847 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.853201595 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.853405007 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.852765559 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.849552823 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.849805687 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.849419609 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.850920642 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.851706682 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.852644003 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.853402672 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.850072427 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.854098147 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.850896176 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.854280324 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.854650799 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.8505484 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.851556008 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.853924718 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.851141609 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.851677624 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.855246129 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.851715838 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.854039387 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.854141733 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.851726334 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.85169921 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.85348214 seconds)
  done (took 127.674877145 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.854992981 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.855669392 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.856336925 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.855042901 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.855896779 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.855559296 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.855265739 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.855411383 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.855191059 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.855584203 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.856234571 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.855339145 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.856714688 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.856922181 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.856219146 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.857259955 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.856190284 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.855826808 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.856560045 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.857058896 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.856608259 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.85585389 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.857505431 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.857410323 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.855597842 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.856349137 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.856314504 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.857337573 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.857245373 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.856541576 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.857164805 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.856096084 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.857735428 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.857273439 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.856749818 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.858407368 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.857022859 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.858132626 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.858361738 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.85770617 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.858435935 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.857565557 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.857724426 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.858179154 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.857915466 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.857252008 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.857499078 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.858508848 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.857460871 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.857750117 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.857360989 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.857838245 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.857665783 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.858681495 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.858759578 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.857415591 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.858212859 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.857640806 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.857488577 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.858675172 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.858186042 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.857767721 seconds)
  done (took 116.919171301 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.857681374 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.857806097 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.855080944 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.855555654 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.858801168 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.855914177 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.857809767 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.85770538 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.858087946 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.857631983 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.858359695 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.855475199 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.857602436 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.858952924 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.855929196 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.85685261 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.856765702 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.855984922 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.859425738 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.856235478 seconds)
  done (took 38.929908639 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.855745523 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.859114048 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.856007342 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.855850475 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.858623793 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.856231677 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.858797963 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.859391358 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.855988987 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.861040072 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.860070903 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.859398002 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.85642369 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.856902523 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.860586968 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.858502525 seconds)
  done (took 31.516148345 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.858556713 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.860004097 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.859970728 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.8608892 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.857924973 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.858117903 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.860717325 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.858018222 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.858278956 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.860487056 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.860045915 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.860739252 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.859845752 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.860466951 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.858698446 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.860854362 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.857978683 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.858043044 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.859978904 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.861398753 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.858642763 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.858198926 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.860608121 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.860361322 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.859048178 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.859889069 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.858197126 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.858842692 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.858921913 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.861380226 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.858505959 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.859306533 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.858747091 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.85894561 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.862299812 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.858556081 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.861949462 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.861443249 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.862889087 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.861273655 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.862368871 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.859461596 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.862404578 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.861357597 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.859094405 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.861909705 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.858677803 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.859628188 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.859997209 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.85795268 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.860677595 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.861868739 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.861075608 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.862041148 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.861162849 seconds)
  done (took 104.08856963 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.861870684 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.861901459 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.858824997 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.861478976 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.860749455 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.85934769 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.861162545 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.859191226 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.85959345 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.860480755 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.858820933 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.860409298 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.857392729 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.860896895 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.858203277 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.85955446 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.85751932 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.857645762 seconds)
  done (took 35.264465611 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.858056689 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.858473786 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.861492861 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.857660293 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.858355767 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.860770315 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.85773032 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.861341448 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.861413412 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.858892321 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.857752948 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.859299513 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.858908731 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.859766126 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.860859969 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.856834928 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.857747238 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.853538267 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.850571598 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.851276099 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.855261312 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.856841082 seconds)
  done (took 42.661502816 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.851649961 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.851049484 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.868327217 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.874712059 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.87484683 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.888710966 seconds)
  done (took 12.988747091 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850139738 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852010666 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.849119293 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851270062 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852285411 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849956115 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846482712 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847382914 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849124899 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84724715 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846705366 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849603583 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849054937 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846304382 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849556421 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849017519 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846211483 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846079752 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847430611 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849269735 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846778279 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850126503 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846567714 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846320711 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847318288 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847066372 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849956915 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847646861 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847715338 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849188698 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849781285 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847602485 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849985148 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847318134 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849803184 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851724438 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847396117 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850207161 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849796317 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847582827 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.851707897 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849998978 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850042288 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846909287 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849557391 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847998526 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846873355 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84794894 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847238665 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850741726 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850304581 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849916038 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851176543 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850578713 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851390533 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851313106 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849372799 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847891862 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851298669 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847362178 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848788104 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851521517 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848522175 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848849669 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851504279 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848775024 seconds)
  done (took 123.812694802 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850529466 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.847286571 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847244877 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848035592 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84776904 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848517096 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847602675 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847632704 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846961615 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847249261 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850626712 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848464159 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847452374 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848078773 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848224836 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847567805 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848743113 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845842635 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846262486 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848984128 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846626376 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846636835 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845412353 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841366613 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842236603 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844726645 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841678555 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842986817 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840789509 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841837671 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842001543 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841572893 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842651075 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.841586534 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840788091 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84172944 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841636544 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84199401 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84243419 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841820626 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840614461 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843757431 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840292076 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840713778 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840714054 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840422395 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839601726 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840929029 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840898843 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841200533 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840513594 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840851026 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841119242 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841536165 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842111159 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841570799 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840621199 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840946524 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841578718 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843581535 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841170126 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841030714 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844284891 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841106937 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841345765 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841622727 seconds)
  done (took 123.466435478 seconds)
done (took 2547.292791672 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.825079699 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.015988391 seconds)
  done (took 15.61264047 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.00706218 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.959862203 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.842806248 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.853370857 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.843117941 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.862484808 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.8547352 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.84266819 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.843667579 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.842370532 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.842788012 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.031520514 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.840841354 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.841567589 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.841362062 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.935304944 seconds)
  done (took 51.861039001 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.844060118 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.845123859 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.855559602 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.847731441 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.845286787 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.859529905 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.879115029 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.846217227 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.904650936 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.858499177 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.966745002 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.854105818 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.841590035 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.910970065 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.856964982 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.859834387 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.93465901 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.920049939 seconds)
  done (took 35.502720563 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.922673559 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.84354002 seconds)
  done (took 10.542308437 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.85261954 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.868489673 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.876683485 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.845487869 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.849924394 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.832220029 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.850914476 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.860511686 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.850747323 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.855974455 seconds)
  done (took 70.312544165 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.842466705 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.837155156 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.837167353 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.83485644 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.828564599 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.832078077 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.834960012 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.828019154 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.513373048 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.872588895 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.842384711 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.841377873 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.834160904 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.836334409 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.833063181 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.857350286 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.927514949 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.832023683 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.831577278 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.840502724 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.83380317 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.883950785 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.847296766 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.836151248 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.864003313 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.510359967 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.84106978 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.839831504 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.925432852 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.83145688 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.834357988 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.834058173 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.835272137 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.221578934 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.103568091 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.834221399 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.848239819 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.841701071 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.830501316 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.926330746 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.833416437 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.839619706 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.511753641 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.081987502 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.942955872 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.874132364 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.144618716 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.851127963 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.832820348 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.859179699 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.835845194 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.833769665 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.844768014 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.312916687 seconds)
  done (took 130.229652206 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.826329813 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.178822225 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.998223746 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.826773091 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.117364781 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.039960482 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.827363185 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.877063748 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.829273099 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.058970143 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.085568017 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.937003135 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.826584699 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.827117727 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.827706997 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.822744774 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.985510427 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.900103423 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.827627839 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.82183425 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.857533874 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.071889961 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.951915562 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.824727481 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.855436576 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.039672564 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.95058216 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.933503528 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.619208833 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.822736525 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.891278344 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.828229112 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.823291256 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.821575091 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.98502651 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.921625129 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.913732271 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.824972594 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.823551597 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.821812844 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.497707846 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.027659348 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.923992985 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.967759382 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.024401419 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.036612406 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.612754491 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.822462473 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.56473975 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.990913203 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.058648937 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.057904138 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.951820571 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.826500855 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.15279633 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.82214445 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.822623265 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.077910859 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.972754094 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.930754195 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.829051522 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.824840651 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.825149118 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.074371005 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.827609725 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.925377976 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.829396709 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.82345389 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.926302688 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.931432452 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.967765662 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041676806 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.858805168 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.714086576 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.366181737 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.076879789 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.897016994 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.077985505 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.828902841 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.826103237 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.907807365 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.679769741 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.083751978 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.079549151 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.082041946 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.864529358 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.55407884 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.824353999 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.059672301 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.054997034 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.083352687 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.032422424 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.071490861 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.156730949 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.824762053 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.825700465 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.043432399 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.965996021 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.828292819 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.174458865 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.064447724 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.399111515 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.851789154 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.138805839 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.961978518 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.828409806 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.471963592 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.82544319 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.052802009 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.871172278 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.828187822 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.825159727 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.053998349 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.807280755 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.825204629 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.483641875 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.892388551 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.830862989 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.06623715 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.830910079 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.091766334 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.829112892 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.070254191 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.416984172 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.862850801 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.00412354 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.032510367 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.828519191 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.079145893 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.0770498 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.945925693 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.054151972 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.452933416 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.828320589 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.119399442 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.828797692 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.826437554 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.002161471 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.828868517 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.981713203 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.83138445 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.11607383 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.860110161 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.069002157 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.830774845 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.088642655 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.86625904 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.881727142 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.832078371 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.957905316 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.828878835 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.7622222 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.989374572 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.829086215 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.828870154 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.396287936 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.829359684 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.987090968 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.065313204 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.853559862 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.908917195 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.502687329 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.828412911 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.92250156 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.855604057 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.227661273 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.827146335 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.085669061 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.831477302 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.829205928 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.831036389 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.071599676 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.019322776 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.82857844 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.826624281 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.727956478 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.827707507 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.827409302 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.014213289 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.148515105 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.82620674 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.036912373 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.830480905 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.958891198 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.831333958 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.917318538 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.166822975 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.830223132 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.826820668 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.828850815 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.829627044 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.827897232 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.042705174 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.858435059 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.366074789 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.970158877 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.09882798 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.142996864 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.080098519 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.879047657 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.829977653 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.09467835 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.833083761 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.896200987 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.833726203 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.853203389 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.0655476 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.835764008 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.097590474 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.111498225 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.877869714 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.882170955 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.832388167 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.832308428 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.831743994 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.978054185 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.918927988 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.834312676 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.829928714 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.947882871 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.956933848 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.043436033 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.833848312 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.87083771 seconds)
  done (took 893.397165592 seconds)
done (took 1209.227742692 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.830681797 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.835448303 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.81999215 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.835047094 seconds)
  done (took 29.085395095 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.841675366 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.838667379 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.83997919 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.838305118 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.842614804 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.838292482 seconds)
  done (took 12.804834767 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.872130199 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.836815639 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.836048358 seconds)
  done (took 21.312737398 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.90747754 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.229676954 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.945571516 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.262243144 seconds)
  done (took 10.112719625 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.846817639 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.841273379 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.842072914 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.842587624 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.842365375 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.845252376 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.842438999 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.844772194 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.844184432 seconds)
  done (took 18.361542122 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.333236915 seconds)
done (took 97.776562269 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.775509797 seconds)
    (2/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.838226219 seconds)
    (3/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 8.139748965 seconds)
    (4/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.049454925 seconds)
    (5/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.841213005 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.114965449 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.970008724 seconds)
    (8/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.860770832 seconds)
    (9/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.25432303 seconds)
    (10/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.837552689 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.102373321 seconds)
    (12/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.044657214 seconds)
    (13/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.758361755 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.915030051 seconds)
    (15/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.168208164 seconds)
    (16/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.947246985 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.855494942 seconds)
    (18/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.834799188 seconds)
    (19/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.936922849 seconds)
    (20/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.313669459 seconds)
    (21/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.021861191 seconds)
    (22/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.992156755 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.090945049 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.933921929 seconds)
    (25/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.921052512 seconds)
    (26/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.929192616 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.938877147 seconds)
    (28/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.822232178 seconds)
    (29/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.088902847 seconds)
    (30/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.92014341 seconds)
    (31/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.018594082 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.216578199 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.939006184 seconds)
    (34/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.456018833 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.791908441 seconds)
    (36/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.042546812 seconds)
    (37/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.854676797 seconds)
    (38/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.922038441 seconds)
    (39/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.936224783 seconds)
    (40/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.841088459 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.985675791 seconds)
    (42/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.210318139 seconds)
    (43/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.091978492 seconds)
    (44/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.852463706 seconds)
    (45/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.837900418 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.949501356 seconds)
    (47/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.028358408 seconds)
    (48/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.148450117 seconds)
    (49/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.932932234 seconds)
    (50/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.724360476 seconds)
    (51/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.907152919 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.895818911 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.929898188 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.515693216 seconds)
    (55/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.979093195 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.224664959 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.841269792 seconds)
    (58/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.131799399 seconds)
    (59/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.936468451 seconds)
    (60/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.910201448 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.201479739 seconds)
    (62/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.0340508 seconds)
    (63/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.977734106 seconds)
    (64/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.510733617 seconds)
    (65/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.954293885 seconds)
    (66/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.863819542 seconds)
    (67/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.920726438 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.756155362 seconds)
    (69/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.938199768 seconds)
    (70/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.285212593 seconds)
    (71/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.926427984 seconds)
    (72/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.932767882 seconds)
    (73/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.919926214 seconds)
    (74/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.076239433 seconds)
    (75/309) benchmarking ("sort", Int64, false)...
    done (took 5.532768686 seconds)
    (76/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.00122641 seconds)
    (77/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.840646412 seconds)
    (78/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.029178134 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.912950107 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.927271893 seconds)
    (81/309) benchmarking ("sort", Float64, false)...
    done (took 5.595611884 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.181219252 seconds)
    (83/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.016115222 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.510763946 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.197466788 seconds)
    (86/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.828983317 seconds)
    (87/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.96720138 seconds)
    (88/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.908924339 seconds)
    (89/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.807063498 seconds)
    (90/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.911752823 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.82796507 seconds)
    (92/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 3.286214752 seconds)
    (93/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.367027051 seconds)
    (94/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.857775208 seconds)
    (95/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.937845874 seconds)
    (96/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.088184225 seconds)
    (97/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.455955897 seconds)
    (98/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.842490883 seconds)
    (99/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 8.806482971 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.961370035 seconds)
    (101/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.937281442 seconds)
    (102/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.262998736 seconds)
    (103/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.828800402 seconds)
    (104/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.019231458 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.041306994 seconds)
    (106/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.825491292 seconds)
    (107/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.533160039 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.840453879 seconds)
    (109/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.868861352 seconds)
    (110/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.153214362 seconds)
    (111/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.945608268 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.148714747 seconds)
    (113/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.074896087 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.844994231 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.231969855 seconds)
    (116/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.870215005 seconds)
    (117/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.826286168 seconds)
    (118/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.812029565 seconds)
    (119/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.008973906 seconds)
    (120/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.909274537 seconds)
    (121/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.882402133 seconds)
    (122/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.834130877 seconds)
    (123/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.962638768 seconds)
    (124/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.851173567 seconds)
    (125/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.970963478 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 2.068714419 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.864203028 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.094396316 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.170495436 seconds)
    (130/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.830825218 seconds)
    (131/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.043113069 seconds)
    (132/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.060247832 seconds)
    (133/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.412720088 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.06786862 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.095255862 seconds)
    (136/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.860478037 seconds)
    (137/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.935343504 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.134786817 seconds)
    (139/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.830384063 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.159318979 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.871733958 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.83114088 seconds)
    (143/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.171851008 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.023136875 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.798036794 seconds)
    (146/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.018564328 seconds)
    (147/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.248342032 seconds)
    (148/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.849566907 seconds)
    (149/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.867411607 seconds)
    (150/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.31411529 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.644537074 seconds)
    (152/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.134486628 seconds)
    (153/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.930106381 seconds)
    (154/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.070147107 seconds)
    (155/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.917957622 seconds)
    (156/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.20390159 seconds)
    (157/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.191215801 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.848482807 seconds)
    (159/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.260146104 seconds)
    (160/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.044346084 seconds)
    (161/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.854612199 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.530205342 seconds)
    (163/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.872200662 seconds)
    (164/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.408902759 seconds)
    (165/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.156491775 seconds)
    (166/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.874086642 seconds)
    (167/309) benchmarking ("sort", Float32, false)...
    done (took 5.557682068 seconds)
    (168/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.878027097 seconds)
    (169/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.861977396 seconds)
    (170/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.96157676 seconds)
    (171/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.773651677 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.03114091 seconds)
    (173/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.60182036 seconds)
    (174/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.884792735 seconds)
    (175/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.846611775 seconds)
    (176/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.42783534 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.882382967 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.800157229 seconds)
    (179/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.913424393 seconds)
    (180/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.033181424 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.999825511 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.849108338 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.07103518 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.486651809 seconds)
    (185/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.935882963 seconds)
    (186/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.903091787 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.140294259 seconds)
    (188/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.134853699 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.921463823 seconds)
    (190/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.847243681 seconds)
    (191/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.934882339 seconds)
    (192/309) benchmarking ("sort", Int8, false)...
    done (took 4.793114694 seconds)
    (193/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.044146934 seconds)
    (194/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.659154269 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.084354639 seconds)
    (196/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.933813561 seconds)
    (197/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.954184751 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.529851939 seconds)
    (199/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.150783489 seconds)
    (200/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.186540844 seconds)
    (201/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.867767043 seconds)
    (202/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.847977995 seconds)
    (203/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.850212232 seconds)
    (204/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.871207528 seconds)
    (205/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.158785712 seconds)
    (206/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.015755419 seconds)
    (207/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.873116129 seconds)
    (208/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.197250333 seconds)
    (209/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.849997049 seconds)
    (210/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.047110795 seconds)
    (211/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.271007005 seconds)
    (212/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.895115068 seconds)
    (213/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.093772313 seconds)
    (214/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.014468658 seconds)
    (215/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.919764105 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.533275037 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.662006057 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.983317563 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.007961243 seconds)
    (220/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.854367696 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.873920414 seconds)
    (222/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.088073619 seconds)
    (223/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.243436521 seconds)
    (224/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.835878351 seconds)
    (225/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.123812516 seconds)
    (226/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.302452354 seconds)
    (227/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.097564967 seconds)
    (228/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.301686841 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.852646048 seconds)
    (230/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.036927399 seconds)
    (231/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.335092613 seconds)
    (232/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.035275246 seconds)
    (233/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.880417818 seconds)
    (234/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.871289012 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.968160687 seconds)
    (236/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.754229074 seconds)
    (237/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.077843768 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.850576564 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.973958248 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.779332063 seconds)
    (241/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.946253194 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.838888586 seconds)
    (243/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.119477827 seconds)
    (244/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.923557029 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.803325614 seconds)
    (246/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.841431966 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.784309654 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.226494257 seconds)
    (249/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.852423907 seconds)
    (250/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.827216564 seconds)
    (251/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.991255659 seconds)
    (252/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.865125142 seconds)
    (253/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.834532546 seconds)
    (254/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.067917883 seconds)
    (255/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.186009222 seconds)
    (256/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.361050827 seconds)
    (257/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.163456144 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.496412338 seconds)
    (259/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.980939573 seconds)
    (260/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.959020306 seconds)
    (261/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.852981222 seconds)
    (262/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.688095817 seconds)
    (263/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.917044347 seconds)
    (264/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.291039329 seconds)
    (265/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.927485879 seconds)
    (266/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.769550719 seconds)
    (267/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.235288239 seconds)
    (268/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.851541076 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.932445779 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.146944335 seconds)
    (271/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.917553349 seconds)
    (272/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.437397585 seconds)
    (273/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.882440196 seconds)
    (274/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.116096645 seconds)
    (275/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.948072959 seconds)
    (276/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.938871156 seconds)
    (277/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.953059425 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.961795705 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.878981789 seconds)
    (280/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.876889779 seconds)
    (281/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.836140468 seconds)
    (282/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.954780284 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.228886629 seconds)
    (284/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.992713692 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.095840766 seconds)
    (286/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.209583947 seconds)
    (287/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.956609886 seconds)
    (288/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.16801316 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.024816095 seconds)
    (290/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.936605456 seconds)
    (291/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.376369048 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.181799247 seconds)
    (293/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.955076246 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.507207856 seconds)
    (295/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.178656682 seconds)
    (296/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.154757893 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.857228104 seconds)
    (298/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.194937568 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.889887151 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.852535017 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.098511195 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.790481219 seconds)
    (303/309) benchmarking ("sort", BigInt, false)...
    done (took 6.856382886 seconds)
    (304/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.840071138 seconds)
    (305/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.015723128 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.871955911 seconds)
    (307/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.920691237 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.471648758 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.178260023 seconds)
  done (took 999.316823344 seconds)
done (took 1001.148129537 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.891368417 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.880203653 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.86316317 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.886482082 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.975065744 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.892396197 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.874565896 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.86608523 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.911355586 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.912528457 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.863638 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.890261461 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.867207285 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.864777482 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.863597329 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.878980706 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.172602662 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.889996483 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.881729131 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.874403322 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.880855347 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.864402457 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.914209714 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.89102802 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.868538439 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.866822416 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.868762437 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.884417689 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.97744376 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.869921227 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.868706631 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.876447288 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.175256661 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.885861314 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.860950275 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.885141304 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.877365618 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.873839275 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.868891399 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.897585643 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.265025378 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.898240498 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.868053638 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.866416875 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.867412751 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.870434359 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.868011511 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.871899533 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.879177949 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.879428628 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.262568116 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.91302219 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.870385767 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.866713182 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.877111219 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.867281905 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.869808563 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.883952527 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.886383487 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.882125178 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.164724434 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.894437729 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.869443504 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.883326874 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.874692465 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.300322201 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.894981332 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.871482583 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.263916137 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.903569813 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.301253162 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.907368798 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.870355448 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.881895779 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.898161295 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.176121077 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.885696562 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.868050807 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.87514382 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.865824566 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.877660801 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.881217717 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.873602735 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.869537861 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.881534631 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.896892165 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.878361155 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.869909999 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.87895734 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.888541037 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.877781552 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.879459121 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.872147354 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.865158305 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.878025536 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.871895965 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.872018778 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.871623969 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.87398123 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.879422831 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.264539551 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.916962291 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.865234763 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.866162641 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.870734639 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.882890899 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.266499857 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.900379254 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.891582148 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.916529868 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.870717292 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.166784544 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.895941175 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.886466445 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.879344252 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.872784784 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.864925703 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.166839295 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.290094702 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.916530637 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.872158343 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.868397761 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.885597732 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.871750073 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.867125469 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.178946749 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.893793037 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.882978653 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.991477163 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.881260917 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.902278032 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.869616364 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.872872405 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.909803595 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.886761619 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.903451466 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.873047347 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.886969608 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.887463041 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.867143121 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.881004686 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.880385327 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.872671042 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.874871453 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.865566296 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.899369316 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.884146616 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.88392 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.892234713 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.992332195 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.868354252 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.171467674 seconds)
done (took 293.525393347 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.937665795 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.867199488 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.963650691 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.868292563 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.949074689 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.951940735 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.866320348 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.866376336 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.864687471 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.259523335 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.865945575 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.867245639 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.861079044 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.865775672 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.950316455 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.869719661 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.865896007 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.224581426 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.870406641 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.940100858 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.869675551 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.866460587 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.868717981 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.240254582 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.867307324 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.871041852 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.94075811 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.869672272 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.233768648 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.866957092 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.862123036 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.205904614 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.959933749 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.897522413 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.879956573 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.877603449 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.95072513 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.872463991 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.95123138 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.951979333 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.966518139 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.902543782 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.863848261 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.873234256 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.871946902 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.871183078 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.86787343 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.897272444 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.865985475 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.870185631 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.226703238 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.880173038 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.877805891 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.867840544 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.868974887 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.892564369 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.868315323 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.871572912 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.961660651 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.874416967 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.933213486 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.24124019 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.262584413 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.871918692 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.868894048 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.869898327 seconds)
  done (took 184.364585612 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.939278087 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.943752145 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.936638028 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.87318201 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.921674821 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.937687596 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.873960625 seconds)
  done (took 15.223699537 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.877198827 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.87179887 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.925108249 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.92265901 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.870959669 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.020014994 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.871371648 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.883018865 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.868645779 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.92373968 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.87175801 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.871240109 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.878028359 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.872113918 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.923258018 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.883419791 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.989582867 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.873964606 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.873432412 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.026205535 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.869059851 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.880271585 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.926712304 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.883661217 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.873225357 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.878065519 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.465969592 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.872800234 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.869688297 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.873045921 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.868899688 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.91432954 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.872854739 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.872873202 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.870251891 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.989301997 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.873572137 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.870789342 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.873302496 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.867627401 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.874247326 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.873421162 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.872957253 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.870431497 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.872960949 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.896218728 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.872063006 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.872802139 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.872874578 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.873901524 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.923186003 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.874482257 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.870493104 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.870427814 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.928374073 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.881400547 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.874541782 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.870572986 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.874731449 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.870770479 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.028344269 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.924107327 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.872744699 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.923422349 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.874219068 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.874900107 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.873609828 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.87376955 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.972015627 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.873098509 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.925273225 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.872356107 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.032368906 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.898318735 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.875508017 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.876733794 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.876901052 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.874747025 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.867778488 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.880983596 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.872399465 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.877246749 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.882019599 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.873262529 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.872413884 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.988410101 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.984920813 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.874189605 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.888851575 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.882633087 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.872767889 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.927654333 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.875752716 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.872946111 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.933381368 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.99486696 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.931583132 seconds)
  done (took 206.231742779 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.880811486 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.883970504 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.876301259 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.891970578 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.87827343 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.876534592 seconds)
  done (took 13.091170767 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.879042033 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.87788271 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.875973279 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.876260317 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.876057055 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.877648532 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.87775898 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.877573183 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.881013571 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.877198124 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.877711423 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.878151315 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.878308884 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.878765237 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.880441343 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.878071525 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.87874749 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.874640676 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.877466167 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.877871647 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.035845887 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.878184675 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.878978841 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.881372547 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.88374248 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.878232218 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.887200014 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.878231963 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.876828094 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.888127612 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.882460326 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.878958561 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.877539149 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.884419504 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.883030565 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.87915526 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.880878014 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.879363878 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.876326561 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.881149283 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.879287398 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.878701733 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.878234418 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.879505787 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.881442631 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.881315309 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.883138821 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.886228914 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.880217444 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.879305061 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.881843282 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.878365469 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.880413873 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.880246068 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.880902665 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.88520874 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.883644521 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.880402516 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.880412909 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.879771171 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.88094506 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.88056898 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.880938974 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.883916099 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.877362961 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.880742061 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.881311797 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.883312814 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.880273438 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.879671485 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.881145849 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.878545132 seconds)
  done (took 138.319268511 seconds)
done (took 559.035956588 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.007177867 seconds)
  done (took 8.813340743 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.890599286 seconds)
  done (took 8.739083516 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.15158762 seconds)
  done (took 9.961140157 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.902120467 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.898012724 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.88578093 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.878914075 seconds)
  done (took 29.389354913 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.000356163 seconds)
  done (took 8.807782945 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.893517167 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.873242127 seconds)
  done (took 15.605089387 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.031340978 seconds)
  done (took 8.838235209 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.070876814 seconds)
  done (took 8.899939362 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.874459282 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.904155341 seconds)
  done (took 15.598171539 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.861829627 seconds)
  done (took 8.669035782 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.479798815 seconds)
  done (took 11.388687743 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.896870396 seconds)
  done (took 8.805488973 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.920205314 seconds)
  done (took 8.726629177 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.906676289 seconds)
  done (took 9.713225948 seconds)
done (took 163.758916313 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.888949609 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.875505981 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.876704417 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.877046299 seconds)
  done (took 29.32446108 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.91381292 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.914665579 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.91594311 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.924744077 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.91694558 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.913353787 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.908049754 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.90700083 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.92537353 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.917605473 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.916924068 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.918043011 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.91397673 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.907151637 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.916486077 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.91727276 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.926878503 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.916166551 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.906916511 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.917038362 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.88241399 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.925659228 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.919713022 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.882513677 seconds)
  done (took 47.730427305 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.081587327 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.953678085 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.036987265 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.933297882 seconds)
  done (took 9.812744755 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.932945839 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.934412757 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.947915121 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.98624524 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.008578875 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.944823388 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.905154693 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.905382546 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.889812128 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.935452418 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.010146792 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.935719093 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.035277996 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.882949866 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.069165206 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.882396857 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.882894587 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.936052787 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.985626393 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.999616068 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.883911712 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.933954866 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.937807872 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.929068131 seconds)
  done (took 48.504806304 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.881876544 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.889473888 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.888180668 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.883244292 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.881843276 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.884017113 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.889512983 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.883603556 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.90431611 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.883346238 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.882364409 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.883690436 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.883052892 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.883234479 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.884386374 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.895192554 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.896607271 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.882645723 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.88651493 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.889351218 seconds)
  done (took 39.546236624 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.878832441 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.730910842 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.229462425 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.132380387 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.878948313 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.880240309 seconds)
  done (took 31.54078642 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.896057584 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.88798701 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.88476391 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.939299099 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.017724623 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.887814377 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.884211665 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.895220873 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.928288391 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.945146348 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.903072673 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.909956201 seconds)
  done (took 24.791004199 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.880024141 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.891625403 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.881039018 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.90679951 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.894247888 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.890498959 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.89125843 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.878166617 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.89758726 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.901920544 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.891384204 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.895272089 seconds)
  done (took 44.513040279 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968781582 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.768102714 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.937757886 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.60293958 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.414812958 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091943042 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.409576364 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.21949886 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.883446483 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153728865 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.906300229 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123702623 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.13482097 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897860684 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.880399924 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.333673017 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.179794678 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113379974 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907383759 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.617830171 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.273125109 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.838107729 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.652494512 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.017787899 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.104201607 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.025561148 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.153484351 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.844486722 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023715721 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929053012 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902801719 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.893856105 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166316472 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266868984 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006715739 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903236878 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.547682781 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.612508093 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.881158886 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.589674903 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.726795233 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.023832938 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90135989 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894029331 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.8281005 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.512448586 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233998467 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.899371149 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.59604502 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.894395282 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904674902 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984645925 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.897335642 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.710424811 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847791901 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.173551663 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.891055408 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900432283 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.463665435 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.936117295 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.601702076 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.833506994 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.988020103 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.617918392 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.366989738 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.041399309 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.898036688 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.898357687 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828912786 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.546262517 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015281983 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.0420819 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.914812314 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.546077886 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.21063822 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.940056054 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.97636391 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182619374 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.767307462 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.834084216 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125256484 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.852826162 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831279518 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.754797133 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.830138283 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154384877 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932647879 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.509756328 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934924221 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.233235828 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.906611968 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921103383 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904325879 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.120926673 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.780103615 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897027484 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.59413981 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.179124393 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918898784 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.239536394 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832232238 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.901029175 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152767004 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.109181189 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.096106482 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.445856666 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055456499 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898769692 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.986894525 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.77923724 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.023656969 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.168298816 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956045363 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.943910715 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025421256 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.864055742 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197674949 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924575124 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.071635484 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.862805899 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.160232946 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.205154668 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.151050589 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981549944 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.902354624 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.900288704 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.568874362 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.520805407 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.123828379 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.90040383 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347551947 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.024601976 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.901293683 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834641288 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.710333753 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.823266471 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.003098097 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.123384059 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.792471289 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.288946907 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833834427 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.045461819 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.015891582 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.122925355 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.542167566 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.974879157 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160498035 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355800572 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.211446262 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025867342 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920135654 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994851165 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922699134 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.297517554 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.270026509 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.905100644 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.906630775 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.623640867 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.960096513 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903415549 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.906563633 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.725079448 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180265507 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.924134998 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.911037252 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.789788787 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.915964249 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968678185 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.906937039 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.911611033 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.43848816 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.652715865 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.913165767 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.59447836 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134958775 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911489099 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.6327536 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.08954529 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.985153846 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.171902758 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95993545 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.836823134 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.604704284 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.604829609 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902068909 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.836345728 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.902815187 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91185332 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914690365 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.100010495 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.178394006 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.944567765 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.613685901 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.013308102 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913084356 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.907066419 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903607617 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.398452657 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.965601204 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.479184917 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.027974472 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040657152 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.916863889 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.837972999 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.908015333 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.909639209 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.903113581 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.8693564 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95691571 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.561409961 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358401134 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.165261732 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.550641381 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922289069 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.651453548 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.029362788 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.92896489 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.616246617 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942268581 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.011344814 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979162 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.915592182 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.637864642 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.671313152 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.475437674 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209812582 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.21217152 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340182515 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.358072988 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.241301664 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.245906846 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141294912 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.436873521 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.966255678 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.250592512 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850743456 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992656132 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.551658943 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.278535839 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921677375 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134053738 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288763431 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.729076879 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062807371 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11724098 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941945107 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.78538213 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.948060782 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.11336709 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060682608 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.606221776 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.132917909 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242311645 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.616262399 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.016866563 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.907028981 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.594998371 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989413753 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.620131683 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.268627641 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.510012716 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.900141287 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39586641 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.914268653 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.353452994 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25493206 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.310662179 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.993806899 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842909659 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.918435193 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.918148036 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.907537409 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.889598478 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.820566362 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.179880126 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919251306 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143542201 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.262038341 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161274094 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.809972342 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.913986686 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907847454 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208126554 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.718990208 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15149799 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.338119705 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.492342285 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919278116 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.842785509 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843365156 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.611162217 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.909419157 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.882661918 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131592089 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.019697131 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.86475382 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360578122 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23259196 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.164523492 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.923070051 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.181525909 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.182703431 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.645483126 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9390487 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.009201025 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.620989189 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.608633654 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.132666196 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.146138123 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708730076 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.140714635 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.956800108 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.873328658 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.908721005 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.124366424 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.132305775 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.912441574 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155129219 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.634340695 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.920078663 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279292872 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96596767 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.866802484 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.120846465 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.004788706 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920719491 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99197141 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920722338 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.922321172 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.923571582 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959481103 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.896174382 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.04157371 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.925089612 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002109466 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.964933085 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.489495064 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.922155843 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188697809 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262198899 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.23189823 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969539355 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.911267335 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917285696 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.846088069 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049579482 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.359197904 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185427647 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.041943868 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.053760735 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93743142 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.661179799 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.263618413 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23431482 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187180523 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.808450581 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913282796 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.023602595 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.13751701 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922937956 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.12429392 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145865829 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238181998 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.386639745 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.118721408 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.36255627 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187006869 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.282968785 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.91540274 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.508348545 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.920538434 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.671762851 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.953119302 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.861464595 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196848239 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924486041 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.288920818 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.934138998 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.11461244 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.430509732 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.638320997 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.274311469 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.897485798 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.972106347 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190847535 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.296479455 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226448059 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9818108 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925080318 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.612642391 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054590179 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.854827088 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.172546802 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.916705655 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127560368 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.626686161 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.924022777 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189251277 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223361712 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.911456984 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.880884634 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968991964 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.92479988 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.139159338 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.180638721 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.166957854 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925235299 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.916665808 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.732919041 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189953066 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972104505 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849600706 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.919362308 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012709363 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.165041496 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935614098 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.432315273 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.618508977 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211027276 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.837347744 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938072481 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383978888 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.360739437 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240656817 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.438770705 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142654202 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.475380265 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.830902582 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.300213983 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.923279613 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.383396188 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.303405932 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.921145393 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.478894667 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037766753 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.187990086 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.23939581 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.934286675 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.618530488 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.958168285 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140980982 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.513884685 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859849072 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.924284642 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.979541275 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.916953147 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.04893614 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928566065 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.907910687 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866511816 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.765000552 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.412014097 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.923027587 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.906685501 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.667115252 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.533038884 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034029409 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072894475 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923796239 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.630739703 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.213405439 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.173049247 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.481094192 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.996047476 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.922848583 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918815812 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.846353457 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.117400093 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.115566066 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23056402 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.33644811 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.038912399 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.92249882 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.135194588 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13057063 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.878889799 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074660387 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375832683 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.041116681 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.839925788 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.633621054 seconds)
  done (took 1705.012435468 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.942313743 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.943596758 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.938228788 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.948550879 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.928374367 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.930244696 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.983648722 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.013517578 seconds)
  done (took 57.479286845 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.919661462 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.133391145 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.929324441 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.920473807 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.945366403 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.92077877 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.129647636 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.93299895 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.965467796 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.930899016 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.922857627 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.938665527 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.311662955 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.947281771 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.92188423 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.911490375 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.948708857 seconds)
  done (took 75.490618554 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.922869423 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.106690391 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.958103932 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.941386149 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.799786872 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.935166948 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.89512055 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.94948242 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.927078829 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.092487093 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.257451055 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.931306143 seconds)
  done (took 90.569375712 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.936208474 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.928020035 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.928059317 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.929139456 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.928730107 seconds)
  done (took 11.510406457 seconds)
done (took 2217.717403504 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.310634625 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.143854699 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.166172082 seconds)
  done (took 6.162289645 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.073260901 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.120685172 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.240042349 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.245755343 seconds)
  done (took 10.537512924 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.21271824 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.295180395 seconds)
  done (took 6.362511262 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.251966292 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.945961804 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.305317864 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.923165969 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.924230344 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.92847588 seconds)
  done (took 22.636136554 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.928784439 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.931636658 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.929031941 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.932110592 seconds)
  done (took 9.576891379 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.909136247 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.640091898 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.910574158 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.921961279 seconds)
  done (took 21.237066459 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.676901451 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.326833806 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.671650294 seconds)
  done (took 9.530649532 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.429763043 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.589039876 seconds)
  done (took 9.874366854 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.191824688 seconds)
  done (took 4.049132822 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.959136434 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.200947894 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.468825844 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.494520691 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.587964943 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.174641346 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.279510979 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.169590504 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.378102909 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.417560179 seconds)
  done (took 25.989341758 seconds)
done (took 141.62114058 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.566696373 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.954736111 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.132296592 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.297270991 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.167033913 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.132323438 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.146999728 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.303319084 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.834975417 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.838370845 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.336758884 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.165803324 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.095421982 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.94867528 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.103477303 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.94780508 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.15967267 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.380679466 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.016006939 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.218468518 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.15884185 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.939670692 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.132728954 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.954146944 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.163453097 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.079609016 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.484047403 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.949571189 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.149197714 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.495996758 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.081186776 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.358459551 seconds)
  done (took 170.552919051 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.929180211 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.929467898 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.92980603 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.928621859 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.234961224 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.930233977 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.929497432 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.929599002 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.983032158 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.957807502 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.929942476 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.240266317 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.929378918 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.929004589 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.930324782 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.93030066 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.128945075 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.930437777 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.930723391 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.929603033 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.929903423 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.061538468 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.930365495 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.076536613 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.088555224 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.931857314 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.929274831 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.930180604 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.92869651 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.928482015 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.929465534 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.930237359 seconds)
  done (took 208.947523547 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.926815535 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.930165605 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.931928526 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.929734897 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.930727365 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.92787145 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.932191577 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.929735422 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.458355123 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.444503729 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.930358505 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.931219005 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.928834971 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.928427498 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.931086988 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.929341697 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.930588345 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.929693178 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.930586419 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.930757524 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.930800442 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.597795086 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.93766282 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.603704889 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.929933398 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.933792115 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.930454876 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.938201349 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.941169324 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.941640165 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.946708973 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.930322755 seconds)
  done (took 222.065083458 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.120218512 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.938426012 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.937782557 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.930979719 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.937496427 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.937021719 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.944194835 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.119941378 seconds)
  done (took 19.746585659 seconds)
done (took 623.176906995 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.423222578 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.266623204 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.120524191 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.964562601 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.217393538 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.998195252 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.958004484 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.029557728 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.693787708 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.034066177 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.649237513 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.980371504 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.743923061 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.989483493 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.079608232 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.018966101 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.548037042 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.643547551 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.138459389 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.018134682 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.136963688 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.931433693 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.045179569 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.730703757 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.766372333 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.981105895 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.140682497 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.558361463 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.971047875 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.123202123 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.762868827 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.378364245 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.973980536 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.957077749 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.015018517 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.99185959 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.310175383 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.972605287 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.081886865 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.732076946 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.037778096 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.57918311 seconds)
  done (took 106.556026768 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.928475952 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.926975294 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.925719449 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.926972853 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.927664127 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.926844793 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.925701591 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.925544167 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.926503833 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.926254051 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.925600059 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.926870688 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.926795129 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.92795233 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.925987587 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.92712483 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.927546147 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.928282173 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.927331619 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.926752896 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.92702535 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.92742175 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.941142752 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.926638804 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.927518898 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.928161634 seconds)
  done (took 51.990454583 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.940432544 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.09456446 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.182435021 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.962899761 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.940549514 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.944934327 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.960532557 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.947629554 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.943173728 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.942847028 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.051900705 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.947555149 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.961308745 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.17998596 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.960674305 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.942053401 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.943408592 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.942675667 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.102681293 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.959506392 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.962054433 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.946329145 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.962891829 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.957390625 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.944700993 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.94263421 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.945065821 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.443814852 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.95154648 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.049380344 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.00056913 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.969492497 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.359884671 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.189045504 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.000301201 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.955663619 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.941823239 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.052123985 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.949253431 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.94292631 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.960667279 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.946768013 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.177246789 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.430458787 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.956307707 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.942177438 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.455316512 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.061524086 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.981571232 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.953413828 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.180071041 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.960007556 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.942973123 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.943589601 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.977740276 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.946963064 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.941658318 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.292328801 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.953276625 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.959660993 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.946891255 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.942405531 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.106783142 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.951825993 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.095727025 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.953520328 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.950043081 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.945737239 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.179713516 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.960701392 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.428177195 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.960692002 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.945123545 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.050050487 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.101514688 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.485448884 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.958100506 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.110485491 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.378968776 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.970172442 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.952876859 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.437489186 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.973652661 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.954470143 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.946589687 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.946533848 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.946336951 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.991032182 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.961400562 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.371368557 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.438027956 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.315256193 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.97396117 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.961425663 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.946050249 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.294256468 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.956273385 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.946355316 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.175649439 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.444408013 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.959445596 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.951004451 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.418379458 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.963388191 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.967085136 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.955892661 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.186448369 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.965092895 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.992554294 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.947304614 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.952989753 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.950856407 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.965048076 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.954110423 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.946920237 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.412337283 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.073932126 seconds)
  done (took 241.07002708 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.943688024 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.945622612 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.94309017 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.96585584 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.941478087 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.94667976 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.940226058 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.940956131 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.946623072 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.941731512 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.941767662 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.944504553 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.942634719 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.045480219 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.963103982 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.950965788 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.551901214 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.943315006 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.943180253 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.959823985 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.698861399 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.951582764 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.944260968 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.961068142 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.945999751 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.945847599 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.058342303 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.956321126 seconds)
  done (took 169.979250784 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.951261726 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.066853253 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.972820247 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.979813481 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.960033744 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.948733513 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.975188798 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.969383673 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.957510838 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.949626402 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.948390993 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.012866938 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.962963342 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.052254886 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.983616871 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.983551554 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.056781275 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.959379197 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.948226647 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.948892176 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.981417134 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.946427048 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.012483628 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.079002848 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.971059106 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.06728358 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.959833629 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.953162165 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.951306408 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.070195752 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.968091796 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.012160043 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.98219926 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.969709494 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.075416326 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.071216424 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.059962602 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.982154399 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.956976128 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.950327187 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.95014026 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.939806649 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.069796406 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.97319953 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.954977215 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.060204154 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.972597322 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.953989107 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.961356949 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.951290873 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.965771143 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.971248331 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.021901328 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.086136848 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.988364052 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.977757106 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.978936814 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.246293304 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.965109799 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.055644098 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.947339932 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.072928094 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.974692611 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.940831258 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.954483238 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.95898792 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.983288604 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.987749321 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.060226124 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.96213302 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.055367323 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.989624022 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.960286039 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.953535067 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.956071097 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.072972298 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.074048492 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.989616116 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.992147476 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.985780162 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.94994923 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.954157867 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.943215927 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.971775483 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.957785403 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.07107049 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.074768718 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.963648736 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.955893491 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.956706683 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.955206069 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.980075547 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.082069947 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.991660098 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.051979072 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.023278722 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.032389711 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.972828544 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.967266124 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.958135065 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.018573682 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.972982326 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.966804489 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.295469452 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.027899911 seconds)
  done (took 211.499342534 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.404871474 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.011611591 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.013533998 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.289305291 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.385131079 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.826609997 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.00779759 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.006352116 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.02896813 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.193905218 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.080839548 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.024726795 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.99209696 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.978661427 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.004045012 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.027362688 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.019612857 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.346270223 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.140553548 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.111392139 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.986500848 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.292940952 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.32659041 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.39657665 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.040515811 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.345259953 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.692897359 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.148219937 seconds)
  done (took 64.009507079 seconds)
done (took 846.963652211 seconds)
SAVING RESULT...
DONE!
